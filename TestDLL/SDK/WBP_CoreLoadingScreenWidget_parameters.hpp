#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreLoadingScreenWidget

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.ExecuteUbergraph_WBP_CoreLoadingScreenWidget
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELoadingScreenType                            K2Node_Event_loadingScreenType;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_progress;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLoadingHintViewData                   K2Node_Event_loadingHintData;                      // 0x0038(0x0078)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_eventId;                              // 0x00B4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isKiller;                             // 0x00D9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget) == 0x000008, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget) == 0x0000F8, "Wrong size on WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, EntryPoint) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_bool_Variable) == 0x000004, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable) == 0x000008, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable_1) == 0x000010, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_bool_Variable_1) == 0x000018, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable_2) == 0x000020, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable_3) == 0x000028, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Event_loadingScreenType) == 0x000030, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Event_loadingScreenType' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Event_progress) == 0x000034, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Event_progress' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Event_loadingHintData) == 0x000038, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Event_loadingHintData' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Event_eventId) == 0x0000B4, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Event_eventId' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable_4) == 0x0000C0, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C8, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000C9, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_object_Variable_5) == 0x0000D0, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, Temp_bool_Variable_2) == 0x0000D8, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Event_isKiller) == 0x0000D9, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Event_isKiller' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Select_Default_1) == 0x0000E8, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget, K2Node_Select_Default_2) == 0x0000F0, "Member 'WBP_CoreLoadingScreenWidget_C_ExecuteUbergraph_WBP_CoreLoadingScreenWidget::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.SetLoadingHint
// 0x0078 (0x0078 - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_SetLoadingHint final
{
public:
	struct FLoadingHintViewData                   LoadingHintData;                                   // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_SetLoadingHint) == 0x000008, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_SetLoadingHint");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_SetLoadingHint) == 0x000078, "Wrong size on WBP_CoreLoadingScreenWidget_C_SetLoadingHint");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_SetLoadingHint, LoadingHintData) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_SetLoadingHint::LoadingHintData' has a wrong offset!");

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.SetLoadingScreenType
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType final
{
public:
	ELoadingScreenType                            LoadingScreenType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType) == 0x000001, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType) == 0x000001, "Wrong size on WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType, LoadingScreenType) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_SetLoadingScreenType::LoadingScreenType' has a wrong offset!");

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.SetSpecialEventLoadingScreen
// 0x000C (0x000C - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen) == 0x000004, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen) == 0x00000C, "Wrong size on WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen, EventID) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_SetSpecialEventLoadingScreen::EventID' has a wrong offset!");

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.ShowLoadingBannerImage
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage final
{
public:
	bool                                          IsKiller;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage) == 0x000001, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage) == 0x000001, "Wrong size on WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage, IsKiller) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_ShowLoadingBannerImage::IsKiller' has a wrong offset!");

// Function WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C.UpdateProgress
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreLoadingScreenWidget_C_UpdateProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLoadingScreenWidget_C_UpdateProgress) == 0x000004, "Wrong alignment on WBP_CoreLoadingScreenWidget_C_UpdateProgress");
static_assert(sizeof(WBP_CoreLoadingScreenWidget_C_UpdateProgress) == 0x000004, "Wrong size on WBP_CoreLoadingScreenWidget_C_UpdateProgress");
static_assert(offsetof(WBP_CoreLoadingScreenWidget_C_UpdateProgress, Progress) == 0x000000, "Member 'WBP_CoreLoadingScreenWidget_C_UpdateProgress::Progress' has a wrong offset!");

}

