#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K36_ItemSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.UpdateColors
// 0x0038 (0x0038 - 0x0000)
struct WBP_K36_ItemSlot_C_UpdateColors final
{
public:
	class UMaterialInterface*                     MaterialInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlotActive;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           IconColor;                                         // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_UpdateColors) == 0x000008, "Wrong alignment on WBP_K36_ItemSlot_C_UpdateColors");
static_assert(sizeof(WBP_K36_ItemSlot_C_UpdateColors) == 0x000038, "Wrong size on WBP_K36_ItemSlot_C_UpdateColors");
static_assert(offsetof(WBP_K36_ItemSlot_C_UpdateColors, MaterialInstance) == 0x000000, "Member 'WBP_K36_ItemSlot_C_UpdateColors::MaterialInstance' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_UpdateColors, IsSlotActive) == 0x000008, "Member 'WBP_K36_ItemSlot_C_UpdateColors::IsSlotActive' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_UpdateColors, IconColor) == 0x00000C, "Member 'WBP_K36_ItemSlot_C_UpdateColors::IconColor' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_UpdateColors, CallFunc_SelectColor_ReturnValue) == 0x00001C, "Member 'WBP_K36_ItemSlot_C_UpdateColors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_UpdateColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'WBP_K36_ItemSlot_C_UpdateColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.SetOnlyIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_K36_ItemSlot_C_SetOnlyIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_SetOnlyIcon) == 0x000008, "Wrong alignment on WBP_K36_ItemSlot_C_SetOnlyIcon");
static_assert(sizeof(WBP_K36_ItemSlot_C_SetOnlyIcon) == 0x000008, "Wrong size on WBP_K36_ItemSlot_C_SetOnlyIcon");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetOnlyIcon, Texture) == 0x000000, "Member 'WBP_K36_ItemSlot_C_SetOnlyIcon::Texture' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.SetInative
// 0x0010 (0x0010 - 0x0000)
struct WBP_K36_ItemSlot_C_SetInative final
{
public:
	bool                                          IsVecnaItem;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpellIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_SetInative) == 0x000008, "Wrong alignment on WBP_K36_ItemSlot_C_SetInative");
static_assert(sizeof(WBP_K36_ItemSlot_C_SetInative) == 0x000010, "Wrong size on WBP_K36_ItemSlot_C_SetInative");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetInative, IsVecnaItem) == 0x000000, "Member 'WBP_K36_ItemSlot_C_SetInative::IsVecnaItem' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetInative, SpellIndex) == 0x000004, "Member 'WBP_K36_ItemSlot_C_SetInative::SpellIndex' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetInative, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_K36_ItemSlot_C_SetInative::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.SetEmpty
// 0x0001 (0x0001 - 0x0000)
struct WBP_K36_ItemSlot_C_SetEmpty final
{
public:
	bool                                          IsVecnaItem;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_SetEmpty) == 0x000001, "Wrong alignment on WBP_K36_ItemSlot_C_SetEmpty");
static_assert(sizeof(WBP_K36_ItemSlot_C_SetEmpty) == 0x000001, "Wrong size on WBP_K36_ItemSlot_C_SetEmpty");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetEmpty, IsVecnaItem) == 0x000000, "Member 'WBP_K36_ItemSlot_C_SetEmpty::IsVecnaItem' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.SetDuoIcon
// 0x0010 (0x0010 - 0x0000)
struct WBP_K36_ItemSlot_C_SetDuoIcon final
{
public:
	class UTexture2D*                             MainIcon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Param_SecondaryIcon;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_SetDuoIcon) == 0x000008, "Wrong alignment on WBP_K36_ItemSlot_C_SetDuoIcon");
static_assert(sizeof(WBP_K36_ItemSlot_C_SetDuoIcon) == 0x000010, "Wrong size on WBP_K36_ItemSlot_C_SetDuoIcon");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetDuoIcon, MainIcon) == 0x000000, "Member 'WBP_K36_ItemSlot_C_SetDuoIcon::MainIcon' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetDuoIcon, Param_SecondaryIcon) == 0x000008, "Member 'WBP_K36_ItemSlot_C_SetDuoIcon::Param_SecondaryIcon' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.SetActive
// 0x0028 (0x0028 - 0x0000)
struct WBP_K36_ItemSlot_C_SetActive final
{
public:
	bool                                          IsKiller;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVecnaItem;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpellIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_SetActive) == 0x000008, "Wrong alignment on WBP_K36_ItemSlot_C_SetActive");
static_assert(sizeof(WBP_K36_ItemSlot_C_SetActive) == 0x000028, "Wrong size on WBP_K36_ItemSlot_C_SetActive");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, IsKiller) == 0x000000, "Member 'WBP_K36_ItemSlot_C_SetActive::IsKiller' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, IsVecnaItem) == 0x000001, "Member 'WBP_K36_ItemSlot_C_SetActive::IsVecnaItem' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, SpellIndex) == 0x000004, "Member 'WBP_K36_ItemSlot_C_SetActive::SpellIndex' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, Temp_object_Variable) == 0x000008, "Member 'WBP_K36_ItemSlot_C_SetActive::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_K36_ItemSlot_C_SetActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, Temp_bool_Variable) == 0x000018, "Member 'WBP_K36_ItemSlot_C_SetActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_SetActive, K2Node_Select_Default) == 0x000020, "Member 'WBP_K36_ItemSlot_C_SetActive::K2Node_Select_Default' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_K36_ItemSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_K36_ItemSlot_C_PreConstruct");
static_assert(sizeof(WBP_K36_ItemSlot_C_PreConstruct) == 0x000001, "Wrong size on WBP_K36_ItemSlot_C_PreConstruct");
static_assert(offsetof(WBP_K36_ItemSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_K36_ItemSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_K36_ItemSlot.WBP_K36_ItemSlot_C.ExecuteUbergraph_WBP_K36_ItemSlot
// 0x000C (0x000C - 0x0000)
struct WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot) == 0x000004, "Wrong alignment on WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot");
static_assert(sizeof(WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot) == 0x00000C, "Wrong size on WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot");
static_assert(offsetof(WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot, EntryPoint) == 0x000000, "Member 'WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000008, "Member 'WBP_K36_ItemSlot_C_ExecuteUbergraph_WBP_K36_ItemSlot::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

}

