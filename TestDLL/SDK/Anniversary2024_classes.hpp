#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anniversary2024

#include "Basic.hpp"

#include "DBDCompetence_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DBDAnimation_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDInteraction_classes.hpp"
#include "Anniversary_classes.hpp"


namespace SDK
{

// Class Anniversary2024.TryksCardEffect
// 0x0000 (0x0030 - 0x0030)
class UTryksCardEffect : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TryksCardEffect">();
	}
	static class UTryksCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTryksCardEffect>();
	}
};
static_assert(alignof(UTryksCardEffect) == 0x000008, "Wrong alignment on UTryksCardEffect");
static_assert(sizeof(UTryksCardEffect) == 0x000030, "Wrong size on UTryksCardEffect");

// Class Anniversary2024.AddInvitationChargesCardEffect
// 0x0018 (0x0048 - 0x0030)
class UAddInvitationChargesCardEffect final : public UTryksCardEffect
{
public:
	TArray<struct FGameplayTag>                   _playerPreventingStateTags;                        // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                         _invitationChargesToAdd;                           // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddInvitationChargesCardEffect">();
	}
	static class UAddInvitationChargesCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddInvitationChargesCardEffect>();
	}
};
static_assert(alignof(UAddInvitationChargesCardEffect) == 0x000008, "Wrong alignment on UAddInvitationChargesCardEffect");
static_assert(sizeof(UAddInvitationChargesCardEffect) == 0x000048, "Wrong size on UAddInvitationChargesCardEffect");
static_assert(offsetof(UAddInvitationChargesCardEffect, _playerPreventingStateTags) == 0x000030, "Member 'UAddInvitationChargesCardEffect::_playerPreventingStateTags' has a wrong offset!");
static_assert(offsetof(UAddInvitationChargesCardEffect, _invitationChargesToAdd) == 0x000040, "Member 'UAddInvitationChargesCardEffect::_invitationChargesToAdd' has a wrong offset!");

// Class Anniversary2024.Anniversary2024EventCheatComponent
// 0x0000 (0x00A8 - 0x00A8)
class UAnniversary2024EventCheatComponent final : public UActorComponent
{
public:
	void DBD_ActivateNextTryksCard();
	void Multicast_ActivateNextCard();

	void DBD_ForceTryksDraw(class FString* CardIds) const;
	void DBD_ForceTryksRedraw() const;
	void DBD_TriggerTryksEndGameEvent() const;
	void DBD_TriggerTryksNearby() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024EventCheatComponent">();
	}
	static class UAnniversary2024EventCheatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnniversary2024EventCheatComponent>();
	}
};
static_assert(alignof(UAnniversary2024EventCheatComponent) == 0x000008, "Wrong alignment on UAnniversary2024EventCheatComponent");
static_assert(sizeof(UAnniversary2024EventCheatComponent) == 0x0000A8, "Wrong size on UAnniversary2024EventCheatComponent");

// Class Anniversary2024.Anniversary2024EventComponent
// 0x0030 (0x00D8 - 0x00A8)
class UAnniversary2024EventComponent final : public UActorComponent
{
public:
	struct FGameplayTagContainer                  _endAnniversaryEventTags;                          // 0x00A8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C8[0x10];                                      // 0x00C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024EventComponent">();
	}
	static class UAnniversary2024EventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnniversary2024EventComponent>();
	}
};
static_assert(alignof(UAnniversary2024EventComponent) == 0x000008, "Wrong alignment on UAnniversary2024EventComponent");
static_assert(sizeof(UAnniversary2024EventComponent) == 0x0000D8, "Wrong size on UAnniversary2024EventComponent");
static_assert(offsetof(UAnniversary2024EventComponent, _endAnniversaryEventTags) == 0x0000A8, "Member 'UAnniversary2024EventComponent::_endAnniversaryEventTags' has a wrong offset!");

// Class Anniversary2024.Anniversary2024TryksBase
// 0x0068 (0x0308 - 0x02A0)
class AAnniversary2024TryksBase : public AActor
{
public:
	uint8                                         Pad_2A0[0x8];                                      // 0x02A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           _akComponent;                                      // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x58];                                     // 0x02B0(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_TryksHidden();
	void Cosmetic_TryksInitialized();
	void Cosmetic_TryksShown();
	bool HideTryks();
	bool SetNextTryksAudioFromGameEvent(const struct FGameplayTag& EventTag);
	bool ShowTryks();

	bool IsTryksAudioSet() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024TryksBase">();
	}
	static class AAnniversary2024TryksBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnniversary2024TryksBase>();
	}
};
static_assert(alignof(AAnniversary2024TryksBase) == 0x000008, "Wrong alignment on AAnniversary2024TryksBase");
static_assert(sizeof(AAnniversary2024TryksBase) == 0x000308, "Wrong size on AAnniversary2024TryksBase");
static_assert(offsetof(AAnniversary2024TryksBase, _akComponent) == 0x0002A8, "Member 'AAnniversary2024TryksBase::_akComponent' has a wrong offset!");

// Class Anniversary2024.Anniversary2024LobbyTryks
// 0x00C0 (0x03C8 - 0x0308)
class AAnniversary2024LobbyTryks final : public AAnniversary2024TryksBase
{
public:
	EDBDCameraViewType                            _tryksCameraViewType;                              // 0x0308(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _tryksAutoHideOnCameraTransition;                  // 0x0309(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _tryksProbabilityForAudioPlay;                     // 0x0310(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _tryksMinDelayBetweenPeeks;                        // 0x0338(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _tryksMaxDelayBetweenPeeks;                        // 0x0360(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x40];                                     // 0x0388(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_TryksPeek(const EDBDCameraViewType ViewType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024LobbyTryks">();
	}
	static class AAnniversary2024LobbyTryks* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnniversary2024LobbyTryks>();
	}
};
static_assert(alignof(AAnniversary2024LobbyTryks) == 0x000008, "Wrong alignment on AAnniversary2024LobbyTryks");
static_assert(sizeof(AAnniversary2024LobbyTryks) == 0x0003C8, "Wrong size on AAnniversary2024LobbyTryks");
static_assert(offsetof(AAnniversary2024LobbyTryks, _tryksCameraViewType) == 0x000308, "Member 'AAnniversary2024LobbyTryks::_tryksCameraViewType' has a wrong offset!");
static_assert(offsetof(AAnniversary2024LobbyTryks, _tryksAutoHideOnCameraTransition) == 0x000309, "Member 'AAnniversary2024LobbyTryks::_tryksAutoHideOnCameraTransition' has a wrong offset!");
static_assert(offsetof(AAnniversary2024LobbyTryks, _tryksProbabilityForAudioPlay) == 0x000310, "Member 'AAnniversary2024LobbyTryks::_tryksProbabilityForAudioPlay' has a wrong offset!");
static_assert(offsetof(AAnniversary2024LobbyTryks, _tryksMinDelayBetweenPeeks) == 0x000338, "Member 'AAnniversary2024LobbyTryks::_tryksMinDelayBetweenPeeks' has a wrong offset!");
static_assert(offsetof(AAnniversary2024LobbyTryks, _tryksMaxDelayBetweenPeeks) == 0x000360, "Member 'AAnniversary2024LobbyTryks::_tryksMaxDelayBetweenPeeks' has a wrong offset!");

// Class Anniversary2024.Anniversary2024Tryks
// 0x0058 (0x0360 - 0x0308)
class AAnniversary2024Tryks final : public AAnniversary2024TryksBase
{
public:
	struct FDBDTunableRowHandle                   _tryksMinVisibilityDuration;                       // 0x0308(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_330[0x30];                                     // 0x0330(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_SetupAnimationType(const class ADBDPlayer* Player, const bool EndGameVariant);
	void Cosmetic_TryksTookOverMarionette(const class AAnniversaryMarionette* Marionette);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024Tryks">();
	}
	static class AAnniversary2024Tryks* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnniversary2024Tryks>();
	}
};
static_assert(alignof(AAnniversary2024Tryks) == 0x000008, "Wrong alignment on AAnniversary2024Tryks");
static_assert(sizeof(AAnniversary2024Tryks) == 0x000360, "Wrong size on AAnniversary2024Tryks");
static_assert(offsetof(AAnniversary2024Tryks, _tryksMinVisibilityDuration) == 0x000308, "Member 'AAnniversary2024Tryks::_tryksMinVisibilityDuration' has a wrong offset!");

// Class Anniversary2024.Anniversary2024TryksAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UAnniversary2024TryksAnimInstance final : public UDynamicAccessoryAnimInstance
{
public:
	bool                                          _isPlaying;                                        // 0x0360(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AAnniversary2024Tryks>   _tryks;                                            // 0x0364(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anniversary2024TryksAnimInstance">();
	}
	static class UAnniversary2024TryksAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnniversary2024TryksAnimInstance>();
	}
};
static_assert(alignof(UAnniversary2024TryksAnimInstance) == 0x000010, "Wrong alignment on UAnniversary2024TryksAnimInstance");
static_assert(sizeof(UAnniversary2024TryksAnimInstance) == 0x000370, "Wrong size on UAnniversary2024TryksAnimInstance");
static_assert(offsetof(UAnniversary2024TryksAnimInstance, _isPlaying) == 0x000360, "Member 'UAnniversary2024TryksAnimInstance::_isPlaying' has a wrong offset!");
static_assert(offsetof(UAnniversary2024TryksAnimInstance, _tryks) == 0x000364, "Member 'UAnniversary2024TryksAnimInstance::_tryks' has a wrong offset!");

// Class Anniversary2024.InteractableCardEffectBase
// 0x0030 (0x0060 - 0x0030)
class UInteractableCardEffectBase : public UTryksCardEffect
{
public:
	struct FGameplayTag                           _playerInteractionPreventionTag;                   // 0x0030(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           _interactableActivatedStateTag;                    // 0x003C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _auraRevealRange;                                  // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x14];                                      // 0x004C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InteractableCardEffectBase">();
	}
	static class UInteractableCardEffectBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractableCardEffectBase>();
	}
};
static_assert(alignof(UInteractableCardEffectBase) == 0x000008, "Wrong alignment on UInteractableCardEffectBase");
static_assert(sizeof(UInteractableCardEffectBase) == 0x000060, "Wrong size on UInteractableCardEffectBase");
static_assert(offsetof(UInteractableCardEffectBase, _playerInteractionPreventionTag) == 0x000030, "Member 'UInteractableCardEffectBase::_playerInteractionPreventionTag' has a wrong offset!");
static_assert(offsetof(UInteractableCardEffectBase, _interactableActivatedStateTag) == 0x00003C, "Member 'UInteractableCardEffectBase::_interactableActivatedStateTag' has a wrong offset!");
static_assert(offsetof(UInteractableCardEffectBase, _auraRevealRange) == 0x000048, "Member 'UInteractableCardEffectBase::_auraRevealRange' has a wrong offset!");

// Class Anniversary2024.ChestCardEffect
// 0x0048 (0x00A8 - 0x0060)
class UChestCardEffect final : public UInteractableCardEffectBase
{
public:
	TArray<struct FStatusEffectSpawnData>         _effectsNearChestOnTrigger;                        // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         _effectNearChestLifetime;                          // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _screamRevealDuration;                             // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EStunType                                     _killerStunType;                                   // 0x0078(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOpenTryksChestInteraction> _openChestInteractionClass;                        // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInterruptionDefinition>    _openChestInterruptClass;                          // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USearchableItemStrategy*                _survivorOpenChestItemStrategy;                    // 0x0090(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USearchableItemStrategy*                _unopenedChestItemStrategy;                        // 0x0098(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ChestCardEffect">();
	}
	static class UChestCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChestCardEffect>();
	}
};
static_assert(alignof(UChestCardEffect) == 0x000008, "Wrong alignment on UChestCardEffect");
static_assert(sizeof(UChestCardEffect) == 0x0000A8, "Wrong size on UChestCardEffect");
static_assert(offsetof(UChestCardEffect, _effectsNearChestOnTrigger) == 0x000060, "Member 'UChestCardEffect::_effectsNearChestOnTrigger' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _effectNearChestLifetime) == 0x000070, "Member 'UChestCardEffect::_effectNearChestLifetime' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _screamRevealDuration) == 0x000074, "Member 'UChestCardEffect::_screamRevealDuration' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _killerStunType) == 0x000078, "Member 'UChestCardEffect::_killerStunType' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _openChestInteractionClass) == 0x000080, "Member 'UChestCardEffect::_openChestInteractionClass' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _openChestInterruptClass) == 0x000088, "Member 'UChestCardEffect::_openChestInterruptClass' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _survivorOpenChestItemStrategy) == 0x000090, "Member 'UChestCardEffect::_survivorOpenChestItemStrategy' has a wrong offset!");
static_assert(offsetof(UChestCardEffect, _unopenedChestItemStrategy) == 0x000098, "Member 'UChestCardEffect::_unopenedChestItemStrategy' has a wrong offset!");

// Class Anniversary2024.HealSurvivorCardEffect
// 0x0008 (0x0038 - 0x0030)
class UHealSurvivorCardEffect final : public UTryksCardEffect
{
public:
	int32                                         _healAmount;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HealSurvivorCardEffect">();
	}
	static class UHealSurvivorCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHealSurvivorCardEffect>();
	}
};
static_assert(alignof(UHealSurvivorCardEffect) == 0x000008, "Wrong alignment on UHealSurvivorCardEffect");
static_assert(sizeof(UHealSurvivorCardEffect) == 0x000038, "Wrong size on UHealSurvivorCardEffect");
static_assert(offsetof(UHealSurvivorCardEffect, _healAmount) == 0x000030, "Member 'UHealSurvivorCardEffect::_healAmount' has a wrong offset!");

// Class Anniversary2024.OpenTryksChestInteraction
// 0x00B0 (0x09B0 - 0x0900)
class UOpenTryksChestInteraction final : public UOpenChestInteraction
{
public:
	struct FGameplayTag                           _survivorOpenChestScoreEvent;                      // 0x0900(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  _tagsToTriggerInterruptScore;                      // 0x0910(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USearchableItemStrategy*                _authority_overridenItemStrategy;                  // 0x0930(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_938[0x78];                                     // 0x0938(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpenTryksChestInteraction">();
	}
	static class UOpenTryksChestInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpenTryksChestInteraction>();
	}
};
static_assert(alignof(UOpenTryksChestInteraction) == 0x000010, "Wrong alignment on UOpenTryksChestInteraction");
static_assert(sizeof(UOpenTryksChestInteraction) == 0x0009B0, "Wrong size on UOpenTryksChestInteraction");
static_assert(offsetof(UOpenTryksChestInteraction, _survivorOpenChestScoreEvent) == 0x000900, "Member 'UOpenTryksChestInteraction::_survivorOpenChestScoreEvent' has a wrong offset!");
static_assert(offsetof(UOpenTryksChestInteraction, _tagsToTriggerInterruptScore) == 0x000910, "Member 'UOpenTryksChestInteraction::_tagsToTriggerInterruptScore' has a wrong offset!");
static_assert(offsetof(UOpenTryksChestInteraction, _authority_overridenItemStrategy) == 0x000930, "Member 'UOpenTryksChestInteraction::_authority_overridenItemStrategy' has a wrong offset!");

// Class Anniversary2024.PlayerTryksPlacerComponent
// 0x00B0 (0x0158 - 0x00A8)
class UPlayerTryksPlacerComponent final : public UActorComponent
{
public:
	struct FDBDTunableRowHandle                   _maxDistanceForActiveMarionetteTakeover;           // 0x00A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FVector                                _spawnLocationOffset;                              // 0x00D0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETileSpawnPointType                           _tileSpawnType;                                    // 0x00E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _unprioritizeClosestSpawnPointsOnFirstGameEvent;   // 0x00E9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     _collisionChannelsToCheck;                         // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _collisionCapsuleHalfHeight;                       // 0x0100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _collisionCapsuleRadius;                           // 0x0104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _triggerTryksEvents;                               // 0x0108(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _endGameTriggerTryksEvents;                        // 0x0128(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_148[0x10];                                     // 0x0148(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerTryksPlacerComponent">();
	}
	static class UPlayerTryksPlacerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerTryksPlacerComponent>();
	}
};
static_assert(alignof(UPlayerTryksPlacerComponent) == 0x000008, "Wrong alignment on UPlayerTryksPlacerComponent");
static_assert(sizeof(UPlayerTryksPlacerComponent) == 0x000158, "Wrong size on UPlayerTryksPlacerComponent");
static_assert(offsetof(UPlayerTryksPlacerComponent, _maxDistanceForActiveMarionetteTakeover) == 0x0000A8, "Member 'UPlayerTryksPlacerComponent::_maxDistanceForActiveMarionetteTakeover' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _spawnLocationOffset) == 0x0000D0, "Member 'UPlayerTryksPlacerComponent::_spawnLocationOffset' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _tileSpawnType) == 0x0000E8, "Member 'UPlayerTryksPlacerComponent::_tileSpawnType' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _unprioritizeClosestSpawnPointsOnFirstGameEvent) == 0x0000E9, "Member 'UPlayerTryksPlacerComponent::_unprioritizeClosestSpawnPointsOnFirstGameEvent' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _collisionChannelsToCheck) == 0x0000F0, "Member 'UPlayerTryksPlacerComponent::_collisionChannelsToCheck' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _collisionCapsuleHalfHeight) == 0x000100, "Member 'UPlayerTryksPlacerComponent::_collisionCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _collisionCapsuleRadius) == 0x000104, "Member 'UPlayerTryksPlacerComponent::_collisionCapsuleRadius' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _triggerTryksEvents) == 0x000108, "Member 'UPlayerTryksPlacerComponent::_triggerTryksEvents' has a wrong offset!");
static_assert(offsetof(UPlayerTryksPlacerComponent, _endGameTriggerTryksEvents) == 0x000128, "Member 'UPlayerTryksPlacerComponent::_endGameTriggerTryksEvents' has a wrong offset!");

// Class Anniversary2024.QuietModeInteraction
// 0x0040 (0x0800 - 0x07C0)
class UQuietModeInteraction final : public UInvitationInteractionDefinition
{
public:
	TSubclassOf<class UStatusEffect>              _quietModeEffectClass;                             // 0x07B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C0[0x10];                                     // 0x07C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _duration;                                         // 0x07D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          _isQuietModeActive;                                // 0x07F8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnDamageStateChanged(ECamperDamageState OldDamageState, ECamperDamageState NewDamageState);
	void Cosmetic_Activated(class ACamperPlayer* ActivatingSurvivor);
	void Cosmetic_Deactivated(class ACamperPlayer* ActivatingSurvivor);
	void OnRep_IsQuietModeActive();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QuietModeInteraction">();
	}
	static class UQuietModeInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuietModeInteraction>();
	}
};
static_assert(alignof(UQuietModeInteraction) == 0x000010, "Wrong alignment on UQuietModeInteraction");
static_assert(sizeof(UQuietModeInteraction) == 0x000800, "Wrong size on UQuietModeInteraction");
static_assert(offsetof(UQuietModeInteraction, _quietModeEffectClass) == 0x0007B8, "Member 'UQuietModeInteraction::_quietModeEffectClass' has a wrong offset!");
static_assert(offsetof(UQuietModeInteraction, _duration) == 0x0007D0, "Member 'UQuietModeInteraction::_duration' has a wrong offset!");
static_assert(offsetof(UQuietModeInteraction, _isQuietModeActive) == 0x0007F8, "Member 'UQuietModeInteraction::_isQuietModeActive' has a wrong offset!");

// Class Anniversary2024.RemoteHookInteraction
// 0x00B0 (0x0870 - 0x07C0)
class URemoteHookInteraction final : public UInvitationInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _remoteHookAvailabilityDelay;                      // 0x07B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _minimumHookSurvivorDistance;                      // 0x07E0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_808[0x68];                                     // 0x0808(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_BeginRemoteHook(class ACamperPlayer* SurvivorBeingHooked);
	void Cosmetic_RemoteHookSurvivor(class ACamperPlayer* SurvivorBeingHooked);
	void Multicast_RemoteHook(class ACamperPlayer* SurvivorBeingHooked, class AMeatHook* SelectedHook);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoteHookInteraction">();
	}
	static class URemoteHookInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoteHookInteraction>();
	}
};
static_assert(alignof(URemoteHookInteraction) == 0x000010, "Wrong alignment on URemoteHookInteraction");
static_assert(sizeof(URemoteHookInteraction) == 0x000870, "Wrong size on URemoteHookInteraction");
static_assert(offsetof(URemoteHookInteraction, _remoteHookAvailabilityDelay) == 0x0007B8, "Member 'URemoteHookInteraction::_remoteHookAvailabilityDelay' has a wrong offset!");
static_assert(offsetof(URemoteHookInteraction, _minimumHookSurvivorDistance) == 0x0007E0, "Member 'URemoteHookInteraction::_minimumHookSurvivorDistance' has a wrong offset!");

// Class Anniversary2024.SpawnEffectOnPlayerCardEffect
// 0x0060 (0x0090 - 0x0030)
class USpawnEffectOnPlayerCardEffect final : public UTryksCardEffect
{
public:
	TArray<struct FStatusEffectSpawnData>         _effectsSpawnData;                                 // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpawnEffectOnPlayerCardEffect">();
	}
	static class USpawnEffectOnPlayerCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnEffectOnPlayerCardEffect>();
	}
};
static_assert(alignof(USpawnEffectOnPlayerCardEffect) == 0x000008, "Wrong alignment on USpawnEffectOnPlayerCardEffect");
static_assert(sizeof(USpawnEffectOnPlayerCardEffect) == 0x000090, "Wrong size on USpawnEffectOnPlayerCardEffect");
static_assert(offsetof(USpawnEffectOnPlayerCardEffect, _effectsSpawnData) == 0x000030, "Member 'USpawnEffectOnPlayerCardEffect::_effectsSpawnData' has a wrong offset!");

// Class Anniversary2024.TotemCardEffect
// 0x0010 (0x0070 - 0x0060)
class UTotemCardEffect final : public UInteractableCardEffectBase
{
public:
	TSubclassOf<class UInteractionDefinition>     _survivorTotemInteractionClass;                    // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInteractionDefinition>     _killerTotemInteractionClass;                      // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TotemCardEffect">();
	}
	static class UTotemCardEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTotemCardEffect>();
	}
};
static_assert(alignof(UTotemCardEffect) == 0x000008, "Wrong alignment on UTotemCardEffect");
static_assert(sizeof(UTotemCardEffect) == 0x000070, "Wrong size on UTotemCardEffect");
static_assert(offsetof(UTotemCardEffect, _survivorTotemInteractionClass) == 0x000060, "Member 'UTotemCardEffect::_survivorTotemInteractionClass' has a wrong offset!");
static_assert(offsetof(UTotemCardEffect, _killerTotemInteractionClass) == 0x000068, "Member 'UTotemCardEffect::_killerTotemInteractionClass' has a wrong offset!");

// Class Anniversary2024.TryksCard
// 0x0030 (0x0060 - 0x0030)
class UTryksCard final : public UObject
{
public:
	struct FDataTableRowHandle                    _effectCardRowHandle;                              // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<class UTryksCardEffect*>               _cardEffects;                                      // 0x0048(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnCardActivation();
	void Cosmetic_OnCardActivationNothingHappened();
	void Cosmetic_OnCardDeactivation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TryksCard">();
	}
	static class UTryksCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTryksCard>();
	}
};
static_assert(alignof(UTryksCard) == 0x000008, "Wrong alignment on UTryksCard");
static_assert(sizeof(UTryksCard) == 0x000060, "Wrong size on UTryksCard");
static_assert(offsetof(UTryksCard, _effectCardRowHandle) == 0x000030, "Member 'UTryksCard::_effectCardRowHandle' has a wrong offset!");
static_assert(offsetof(UTryksCard, _cardEffects) == 0x000048, "Member 'UTryksCard::_cardEffects' has a wrong offset!");

// Class Anniversary2024.TryksEffectCardsControllerComponent
// 0x0110 (0x01B8 - 0x00A8)
class UTryksEffectCardsControllerComponent final : public UActorComponent
{
public:
	TArray<TSubclassOf<class UTryksCard>>         _cardsTemplates;                                   // 0x00A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _numberOfPossibleCards;                            // 0x00B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _probabilityToPollSameCard;                        // 0x00E0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _probabilityToIncreaseForPrioritizedCards;         // 0x0108(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _incrementPointsEvents;                            // 0x0130(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                         _pointsNecessaryToActivateNextCard;                // 0x0150(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTryksCard*>                     _drawnCards;                                       // 0x0158(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_168[0x50];                                     // 0x0168(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnCardActivated(class UTryksCard* Card);
	void Cosmetic_OnCardDeactivated(class UTryksCard* Card);
	void Cosmetic_OnCardDeactivatedDueToNothingHappened(class UTryksCard* Card);
	void Cosmetic_OnCardEffectCompleted(class UTryksCard* Card);
	void Cosmetic_OnPointGained(const int32 CurrentPoints);
	void Multicast_CreateCards(const TArray<class FString>& DrawnCardsNames);
	void Multicast_RedrawCards(const TArray<class FString>& DrawnCardsNames);
	void OnIntroComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TryksEffectCardsControllerComponent">();
	}
	static class UTryksEffectCardsControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTryksEffectCardsControllerComponent>();
	}
};
static_assert(alignof(UTryksEffectCardsControllerComponent) == 0x000008, "Wrong alignment on UTryksEffectCardsControllerComponent");
static_assert(sizeof(UTryksEffectCardsControllerComponent) == 0x0001B8, "Wrong size on UTryksEffectCardsControllerComponent");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _cardsTemplates) == 0x0000A8, "Member 'UTryksEffectCardsControllerComponent::_cardsTemplates' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _numberOfPossibleCards) == 0x0000B8, "Member 'UTryksEffectCardsControllerComponent::_numberOfPossibleCards' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _probabilityToPollSameCard) == 0x0000E0, "Member 'UTryksEffectCardsControllerComponent::_probabilityToPollSameCard' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _probabilityToIncreaseForPrioritizedCards) == 0x000108, "Member 'UTryksEffectCardsControllerComponent::_probabilityToIncreaseForPrioritizedCards' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _incrementPointsEvents) == 0x000130, "Member 'UTryksEffectCardsControllerComponent::_incrementPointsEvents' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _pointsNecessaryToActivateNextCard) == 0x000150, "Member 'UTryksEffectCardsControllerComponent::_pointsNecessaryToActivateNextCard' has a wrong offset!");
static_assert(offsetof(UTryksEffectCardsControllerComponent, _drawnCards) == 0x000158, "Member 'UTryksEffectCardsControllerComponent::_drawnCards' has a wrong offset!");

// Class Anniversary2024.TryksEventComponent
// 0x0010 (0x00B8 - 0x00A8)
class UTryksEventComponent final : public UActorComponent
{
public:
	TSubclassOf<class AAnniversary2024Tryks>      _tryksTemplate;                                    // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TryksEventComponent">();
	}
	static class UTryksEventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTryksEventComponent>();
	}
};
static_assert(alignof(UTryksEventComponent) == 0x000008, "Wrong alignment on UTryksEventComponent");
static_assert(sizeof(UTryksEventComponent) == 0x0000B8, "Wrong size on UTryksEventComponent");
static_assert(offsetof(UTryksEventComponent, _tryksTemplate) == 0x0000A8, "Member 'UTryksEventComponent::_tryksTemplate' has a wrong offset!");

// Class Anniversary2024.TryksTotemInteraction
// 0x0090 (0x09B0 - 0x0920)
class UTryksTotemInteraction final : public UBasicChargeableInteraction
{
public:
	struct FStatusEffectSpawnData                 _hasteEffectOnCompletion;                          // 0x0920(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _timedRevealForOpposingRole;                       // 0x0938(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _timedRevealDuration;                              // 0x0940(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hasteDuration;                                    // 0x0944(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  _tagsToTriggerInterruptScore;                      // 0x0948(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_968[0x48];                                     // 0x0968(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TryksTotemInteraction">();
	}
	static class UTryksTotemInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTryksTotemInteraction>();
	}
};
static_assert(alignof(UTryksTotemInteraction) == 0x000010, "Wrong alignment on UTryksTotemInteraction");
static_assert(sizeof(UTryksTotemInteraction) == 0x0009B0, "Wrong size on UTryksTotemInteraction");
static_assert(offsetof(UTryksTotemInteraction, _hasteEffectOnCompletion) == 0x000920, "Member 'UTryksTotemInteraction::_hasteEffectOnCompletion' has a wrong offset!");
static_assert(offsetof(UTryksTotemInteraction, _timedRevealForOpposingRole) == 0x000938, "Member 'UTryksTotemInteraction::_timedRevealForOpposingRole' has a wrong offset!");
static_assert(offsetof(UTryksTotemInteraction, _timedRevealDuration) == 0x000940, "Member 'UTryksTotemInteraction::_timedRevealDuration' has a wrong offset!");
static_assert(offsetof(UTryksTotemInteraction, _hasteDuration) == 0x000944, "Member 'UTryksTotemInteraction::_hasteDuration' has a wrong offset!");
static_assert(offsetof(UTryksTotemInteraction, _tagsToTriggerInterruptScore) == 0x000948, "Member 'UTryksTotemInteraction::_tagsToTriggerInterruptScore' has a wrong offset!");

}

