#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K27

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_K27.WBP_K27_C
// 0x0078 (0x03B0 - 0x0338)
class UWBP_K27_C final : public UCorePlayerStatusKillerEffectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FullCondemnedIdleAnimation;                        // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CondemnedActiveKillerAnimation;                    // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StaticOpeningAnimation;                            // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ResetAnimation;                                    // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FullCondemnedPulseAnimation;                       // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewSegmentSurvivorAnimation;                       // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Bg;                                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Glow;                                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Glow2;                                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Segments;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Static;                                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         OldSegment;                                        // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSegment;                                    // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SegmentRatio;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTheOnryoStatusData*                    CacheData;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateStatic(bool IsHoldingTape);
	void UpdateSegmentCount(class UTheOnryoStatusData* KillerData);
	void SetSurvivor(bool ActiveStateChanged, bool FullCondemnedChanged, class UTheOnryoStatusData* KillerData);
	void SetKillerData(const struct FPlayerStatusViewData& Data);
	void SetKiller(bool ActiveStateChanged, bool FullCondemnedChanged, class UTheOnryoStatusData* KillerData);
	void SetK27Data(bool IsLocalKiller, class UTheOnryoStatusData* KillerData);
	void SequenceEvent__ENTRYPOINTWBP_K27();
	void FullCondemnedLoop();
	void ExecuteUbergraph_WBP_K27(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_K27_C">();
	}
	static class UWBP_K27_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_K27_C>();
	}
};
static_assert(alignof(UWBP_K27_C) == 0x000008, "Wrong alignment on UWBP_K27_C");
static_assert(sizeof(UWBP_K27_C) == 0x0003B0, "Wrong size on UWBP_K27_C");
static_assert(offsetof(UWBP_K27_C, UberGraphFrame) == 0x000338, "Member 'UWBP_K27_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, FullCondemnedIdleAnimation) == 0x000340, "Member 'UWBP_K27_C::FullCondemnedIdleAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, CondemnedActiveKillerAnimation) == 0x000348, "Member 'UWBP_K27_C::CondemnedActiveKillerAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, StaticOpeningAnimation) == 0x000350, "Member 'UWBP_K27_C::StaticOpeningAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, ResetAnimation) == 0x000358, "Member 'UWBP_K27_C::ResetAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, FullCondemnedPulseAnimation) == 0x000360, "Member 'UWBP_K27_C::FullCondemnedPulseAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, NewSegmentSurvivorAnimation) == 0x000368, "Member 'UWBP_K27_C::NewSegmentSurvivorAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, Bg) == 0x000370, "Member 'UWBP_K27_C::Bg' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, Glow) == 0x000378, "Member 'UWBP_K27_C::Glow' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, Glow2) == 0x000380, "Member 'UWBP_K27_C::Glow2' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, Segments) == 0x000388, "Member 'UWBP_K27_C::Segments' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, Static) == 0x000390, "Member 'UWBP_K27_C::Static' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, OldSegment) == 0x000398, "Member 'UWBP_K27_C::OldSegment' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, CurrentSegment) == 0x00039C, "Member 'UWBP_K27_C::CurrentSegment' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, SegmentRatio) == 0x0003A0, "Member 'UWBP_K27_C::SegmentRatio' has a wrong offset!");
static_assert(offsetof(UWBP_K27_C, CacheData) == 0x0003A8, "Member 'UWBP_K27_C::CacheData' has a wrong offset!");

}

