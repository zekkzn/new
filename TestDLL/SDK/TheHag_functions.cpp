#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheHag

#include "Basic.hpp"

#include "TheHag_classes.hpp"
#include "TheHag_parameters.hpp"


namespace SDK
{

// Function TheHag.HagScoreComponent.Authority_OnActorEndPlay
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHagScoreComponent::Authority_OnActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HagScoreComponent", "Authority_OnActorEndPlay");

	Params::HagScoreComponent_Authority_OnActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.ActivateSlasher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   Slasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::ActivateSlasher(class ASlasherPlayer* Slasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "ActivateSlasher");

	Params::PhantomTrap_ActivateSlasher Parms{};

	Parms.Slasher = Slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.Authority_OnTriggerZoneBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void APhantomTrap::Authority_OnTriggerZoneBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "Authority_OnTriggerZoneBeginOverlap");

	Params::PhantomTrap_Authority_OnTriggerZoneBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.Authority_OnTriggerZoneEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::Authority_OnTriggerZoneEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "Authority_OnTriggerZoneEndOverlap");

	Params::PhantomTrap_Authority_OnTriggerZoneEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.BP_OnTrapActivate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    Triggerer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::BP_OnTrapActivate(class ACamperPlayer* Triggerer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "BP_OnTrapActivate");

	Params::PhantomTrap_BP_OnTrapActivate Parms{};

	Parms.Triggerer = Triggerer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.PhantomTrap.BP_OnTrapDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    PlayerDestroyingTrap                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::BP_OnTrapDestroyed(class ACamperPlayer* PlayerDestroyingTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "BP_OnTrapDestroyed");

	Params::PhantomTrap_BP_OnTrapDestroyed Parms{};

	Parms.PlayerDestroyingTrap = PlayerDestroyingTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.PhantomTrap.CanActivateTrap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACamperPlayer*                    Camper                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInUse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::CanActivateTrap(class ACamperPlayer* Camper, bool IsInUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "CanActivateTrap");

	Params::PhantomTrap_CanActivateTrap Parms{};

	Parms.Camper = Camper;
	Parms.IsInUse = IsInUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.InitializeTerrorRadiusEmitter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ASlasherPlayer*                   OwningSlasher                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::InitializeTerrorRadiusEmitter(class ASlasherPlayer* OwningSlasher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "InitializeTerrorRadiusEmitter");

	Params::PhantomTrap_InitializeTerrorRadiusEmitter Parms{};

	Parms.OwningSlasher = OwningSlasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.Multicast_DestroyTrap
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ACamperPlayer*                    PlayerDestroyingTrap                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::Multicast_DestroyTrap(class ACamperPlayer* PlayerDestroyingTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "Multicast_DestroyTrap");

	Params::PhantomTrap_Multicast_DestroyTrap Parms{};

	Parms.PlayerDestroyingTrap = PlayerDestroyingTrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.OnTrapActivated
// (Final, Native, Protected, BlueprintCallable)

void APhantomTrap::OnTrapActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "OnTrapActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.OnTrapPlaced
// (Final, Native, Protected, BlueprintCallable)

void APhantomTrap::OnTrapPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "OnTrapPlaced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.OnTrapReset
// (Final, Native, Protected, BlueprintCallable)

void APhantomTrap::OnTrapReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "OnTrapReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.RetrievePerkFlags
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     SilentTrapTag                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PhantomCollisionTag                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::RetrievePerkFlags(const struct FGameplayTag& SilentTrapTag, const struct FGameplayTag& PhantomCollisionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "RetrievePerkFlags");

	Params::PhantomTrap_RetrievePerkFlags Parms{};

	Parms.SilentTrapTag = std::move(SilentTrapTag);
	Parms.PhantomCollisionTag = std::move(PhantomCollisionTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.SetIsInUse
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    InUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APhantomTrap::SetIsInUse(bool InUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "SetIsInUse");

	Params::PhantomTrap_SetIsInUse Parms{};

	Parms.InUse = InUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheHag.PhantomTrap.GetMesh
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* APhantomTrap::GetMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "GetMesh");

	Params::PhantomTrap_GetMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.GetPhantomTransform
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* APhantomTrap::GetPhantomTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "GetPhantomTransform");

	Params::PhantomTrap_GetPhantomTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.HasKillerTeleported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::HasKillerTeleported() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "HasKillerTeleported");

	Params::PhantomTrap_HasKillerTeleported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.IsSilentTrigger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::IsSilentTrigger() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "IsSilentTrigger");

	Params::PhantomTrap_IsSilentTrigger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.IsTrapActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::IsTrapActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "IsTrapActive");

	Params::PhantomTrap_IsTrapActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.IsTrapDeactivating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::IsTrapDeactivating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "IsTrapDeactivating");

	Params::PhantomTrap_IsTrapDeactivating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.PhantomTrap.IsTrapSet
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APhantomTrap::IsTrapSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhantomTrap", "IsTrapSet");

	Params::PhantomTrap_IsTrapSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.TeleportToPhantomTrap.BP_OnTeleport
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   Slasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APhantomTrap*                     Trap                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::BP_OnTeleport(class ASlasherPlayer* Slasher, class APhantomTrap* Trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "BP_OnTeleport");

	Params::TeleportToPhantomTrap_BP_OnTeleport Parms{};

	Parms.Slasher = Slasher;
	Parms.Trap = Trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.Cosmetic_OnInteractionFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Slasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HasInteractionStarted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::Cosmetic_OnInteractionFinished(class ADBDPlayer* Slasher, bool HasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "Cosmetic_OnInteractionFinished");

	Params::TeleportToPhantomTrap_Cosmetic_OnInteractionFinished Parms{};

	Parms.Slasher = Slasher;
	Parms.HasInteractionStarted = HasInteractionStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.Cosmetic_OnTeleport
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   Slasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APhantomTrap*                     Trap                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTeleportToPhantomTrap::Cosmetic_OnTeleport(class ASlasherPlayer* Slasher, class APhantomTrap* Trap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "Cosmetic_OnTeleport");

	Params::TeleportToPhantomTrap_Cosmetic_OnTeleport Parms{};

	Parms.Slasher = Slasher;
	Parms.Trap = Trap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheHag.TeleportToPhantomTrap.GetPhantomTrap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APhantomTrap*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APhantomTrap* UTeleportToPhantomTrap::GetPhantomTrap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "GetPhantomTrap");

	Params::TeleportToPhantomTrap_GetPhantomTrap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.TeleportToPhantomTrap.GetTeleportMaxDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASlasherPlayer*                   Slasher                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTeleportToPhantomTrap::GetTeleportMaxDistance(class ASlasherPlayer* Slasher) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "GetTeleportMaxDistance");

	Params::TeleportToPhantomTrap_GetTeleportMaxDistance Parms{};

	Parms.Slasher = Slasher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheHag.TeleportToPhantomTrap.IsTeleportationPossible
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTeleportToPhantomTrap::IsTeleportationPossible(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TeleportToPhantomTrap", "IsTeleportationPossible");

	Params::TeleportToPhantomTrap_IsTeleportationPossible Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheHag.WipeAwayPhantomTrapInteraction.CancelInteraction
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWipeAwayPhantomTrapInteraction::CancelInteraction(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WipeAwayPhantomTrapInteraction", "CancelInteraction");

	Params::WipeAwayPhantomTrapInteraction_CancelInteraction Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

