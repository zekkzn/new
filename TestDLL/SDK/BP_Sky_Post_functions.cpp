#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sky_Post

#include "Basic.hpp"

#include "BP_Sky_Post_classes.hpp"
#include "BP_Sky_Post_parameters.hpp"


namespace SDK
{

// Function BP_Sky_Post.BP_Sky_Post_C.Crash
// (BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::Crash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "Crash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.CreateDynamicMaterialInstances
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::CreateDynamicMaterialInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "CreateDynamicMaterialInstances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.ExecuteUbergraph_BP_Sky_Post
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::ExecuteUbergraph_BP_Sky_Post(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "ExecuteUbergraph_BP_Sky_Post");

	Params::BP_Sky_Post_C_ExecuteUbergraph_BP_Sky_Post Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.Fog
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Flat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Density                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::Fog(double Start, double Flat, double Opacity, double Density)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "Fog");

	Params::BP_Sky_Post_C_Fog Parms{};

	Parms.Start = Start;
	Parms.Flat = Flat;
	Parms.Opacity = Opacity;
	Parms.Density = Density;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.GetBasementPost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDBDPerPlatformFloat             Override                                               (Parm, OutParm, NoDestructor)

void ABP_Sky_Post_C::GetBasementPost(ELightingInterfaceEnum* BP_Type, struct FDBDPerPlatformFloat* Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "GetBasementPost");

	Params::BP_Sky_Post_C_GetBasementPost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (Override != nullptr)
		*Override = std::move(Parms.Override);
}


// Function BP_Sky_Post.BP_Sky_Post_C.GetCondemnedStatusVignetteIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CondemnedStatusIntensityOverride                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::GetCondemnedStatusVignetteIntensity(ELightingInterfaceEnum* BP_Type, double* CondemnedStatusIntensityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "GetCondemnedStatusVignetteIntensity");

	Params::BP_Sky_Post_C_GetCondemnedStatusVignetteIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (CondemnedStatusIntensityOverride != nullptr)
		*CondemnedStatusIntensityOverride = Parms.CondemnedStatusIntensityOverride;
}


// Function BP_Sky_Post.BP_Sky_Post_C.GetDetectionZoneIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectionZoneCylinderIntensityOverride                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectionZoneDecalIntensityOverride                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::GetDetectionZoneIntensity(ELightingInterfaceEnum* BP_Type, double* DetectionZoneCylinderIntensityOverride, double* DetectionZoneDecalIntensityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "GetDetectionZoneIntensity");

	Params::BP_Sky_Post_C_GetDetectionZoneIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (DetectionZoneCylinderIntensityOverride != nullptr)
		*DetectionZoneCylinderIntensityOverride = Parms.DetectionZoneCylinderIntensityOverride;

	if (DetectionZoneDecalIntensityOverride != nullptr)
		*DetectionZoneDecalIntensityOverride = Parms.DetectionZoneDecalIntensityOverride;
}


// Function BP_Sky_Post.BP_Sky_Post_C.GetLightingPost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPostProcessComponent*>    PostProcess                                            (Parm, OutParm, ContainsInstancedReference)
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::GetLightingPost(TArray<class UPostProcessComponent*>* PostProcess, ELightingInterfaceEnum* BP_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "GetLightingPost");

	Params::BP_Sky_Post_C_GetLightingPost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PostProcess != nullptr)
		*PostProcess = std::move(Parms.PostProcess);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;
}


// Function BP_Sky_Post.BP_Sky_Post_C.GetPostprocessComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPostProcessComponent*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UPostProcessComponent* ABP_Sky_Post_C::GetPostprocessComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "GetPostprocessComponent");

	Params::BP_Sky_Post_C_GetPostprocessComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Sky_Post.BP_Sky_Post_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void ABP_Sky_Post_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.OnAlphaChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewAlpha                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::OnAlphaChanged(float NewAlpha, class AActor* Other)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "OnAlphaChanged");

	Params::BP_Sky_Post_C_OnAlphaChanged Parms{};

	Parms.NewAlpha = NewAlpha;
	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.OnFadeBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::OnFadeBegin(class AActor* Other)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "OnFadeBegin");

	Params::BP_Sky_Post_C_OnFadeBegin Parms{};

	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Sky_Post_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.Reset Global Parameters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::Reset_Global_Parameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "Reset Global Parameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.SetPostOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPostProcessSettings             PostSettings                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class UPostProcessComponent*            PostProcess                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::SetPostOverride(const struct FPostProcessSettings& PostSettings, class UPostProcessComponent* PostProcess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "SetPostOverride");

	Params::BP_Sky_Post_C_SetPostOverride Parms{};

	Parms.PostSettings = std::move(PostSettings);
	Parms.PostProcess = PostProcess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.ToggleLightingChange
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ToggleOn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ThemeName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Sky_Post_C::ToggleLightingChange(bool ToggleOn, class FName ThemeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "ToggleLightingChange");

	Params::BP_Sky_Post_C_ToggleLightingChange Parms{};

	Parms.ToggleOn = ToggleOn;
	Parms.ThemeName = ThemeName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Sky_Post.BP_Sky_Post_C.UpdateMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::UpdateMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "UpdateMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.UpdateSunDirection
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::UpdateSunDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "UpdateSunDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Sky_Post.BP_Sky_Post_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Sky_Post_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Sky_Post_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

