#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClosetExitSwing

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function ClosetExitSwing.ClosetExitSwing_C.OnInteractionUpdateStart
// 0x0008 (0x0008 - 0x0000)
struct ClosetExitSwing_C_OnInteractionUpdateStart final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_OnInteractionUpdateStart) == 0x000008, "Wrong alignment on ClosetExitSwing_C_OnInteractionUpdateStart");
static_assert(sizeof(ClosetExitSwing_C_OnInteractionUpdateStart) == 0x000008, "Wrong size on ClosetExitSwing_C_OnInteractionUpdateStart");
static_assert(offsetof(ClosetExitSwing_C_OnInteractionUpdateStart, Player) == 0x000000, "Member 'ClosetExitSwing_C_OnInteractionUpdateStart::Player' has a wrong offset!");

// Function ClosetExitSwing.ClosetExitSwing_C.OnInteractionFinished
// 0x0010 (0x0010 - 0x0000)
struct ClosetExitSwing_C_OnInteractionFinished final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInteractionStarted;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_OnInteractionFinished) == 0x000008, "Wrong alignment on ClosetExitSwing_C_OnInteractionFinished");
static_assert(sizeof(ClosetExitSwing_C_OnInteractionFinished) == 0x000010, "Wrong size on ClosetExitSwing_C_OnInteractionFinished");
static_assert(offsetof(ClosetExitSwing_C_OnInteractionFinished, Player) == 0x000000, "Member 'ClosetExitSwing_C_OnInteractionFinished::Player' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_OnInteractionFinished, HasInteractionStarted) == 0x000008, "Member 'ClosetExitSwing_C_OnInteractionFinished::HasInteractionStarted' has a wrong offset!");

// Function ClosetExitSwing.ClosetExitSwing_C.ExecuteUbergraph_ClosetExitSwing
// 0x0038 (0x0038 - 0x0000)
struct ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_hasInteractionStarted;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_Event_player_1;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerk*                                  CallFunc_GetPerk_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHeadOn*                                K2Node_DynamicCast_AsHead_On;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing) == 0x000008, "Wrong alignment on ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing");
static_assert(sizeof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing) == 0x000038, "Wrong size on ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, EntryPoint) == 0x000000, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::EntryPoint' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, K2Node_Event_player) == 0x000008, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, K2Node_Event_hasInteractionStarted) == 0x000010, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::K2Node_Event_hasInteractionStarted' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, K2Node_Event_player_1) == 0x000018, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, CallFunc_GetPerk_ReturnValue) == 0x000020, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::CallFunc_GetPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, K2Node_DynamicCast_AsHead_On) == 0x000028, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::K2Node_DynamicCast_AsHead_On' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ClosetExitSwing_C_ExecuteUbergraph_ClosetExitSwing::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ClosetExitSwing.ClosetExitSwing_C.EndPerformingHeadOn
// 0x0020 (0x0020 - 0x0000)
struct ClosetExitSwing_C_EndPerformingHeadOn final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerk*                                  CallFunc_GetPerk_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHeadOn*                                K2Node_DynamicCast_AsHead_On;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_EndPerformingHeadOn) == 0x000008, "Wrong alignment on ClosetExitSwing_C_EndPerformingHeadOn");
static_assert(sizeof(ClosetExitSwing_C_EndPerformingHeadOn) == 0x000020, "Wrong size on ClosetExitSwing_C_EndPerformingHeadOn");
static_assert(offsetof(ClosetExitSwing_C_EndPerformingHeadOn, Player) == 0x000000, "Member 'ClosetExitSwing_C_EndPerformingHeadOn::Player' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_EndPerformingHeadOn, CallFunc_GetPerk_ReturnValue) == 0x000008, "Member 'ClosetExitSwing_C_EndPerformingHeadOn::CallFunc_GetPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_EndPerformingHeadOn, K2Node_DynamicCast_AsHead_On) == 0x000010, "Member 'ClosetExitSwing_C_EndPerformingHeadOn::K2Node_DynamicCast_AsHead_On' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_EndPerformingHeadOn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ClosetExitSwing_C_EndPerformingHeadOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ClosetExitSwing.ClosetExitSwing_C.IsInteractionPossibleBP
// 0x0010 (0x0010 - 0x0000)
struct ClosetExitSwing_C_IsInteractionPossibleBP final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInputInteractionType                         InteractionType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyHeadOnInteraction_ReturnValue;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionPossibleBP_ReturnValue;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_IsInteractionPossibleBP) == 0x000008, "Wrong alignment on ClosetExitSwing_C_IsInteractionPossibleBP");
static_assert(sizeof(ClosetExitSwing_C_IsInteractionPossibleBP) == 0x000010, "Wrong size on ClosetExitSwing_C_IsInteractionPossibleBP");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, Player) == 0x000000, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::Player' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, InteractionType) == 0x000008, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::InteractionType' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, ReturnValue) == 0x000009, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, CallFunc_CanApplyHeadOnInteraction_ReturnValue) == 0x00000A, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::CallFunc_CanApplyHeadOnInteraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, CallFunc_IsInteractionPossibleBP_ReturnValue) == 0x00000B, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::CallFunc_IsInteractionPossibleBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_IsInteractionPossibleBP, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'ClosetExitSwing_C_IsInteractionPossibleBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ClosetExitSwing.ClosetExitSwing_C.CanApplyHeadOnInteraction
// 0x0028 (0x0028 - 0x0000)
struct ClosetExitSwing_C_CanApplyHeadOnInteraction final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerk*                                  CallFunc_GetPerk_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHeadOn*                                K2Node_DynamicCast_AsHead_On;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyHeadOnInteraction_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetExitSwing_C_CanApplyHeadOnInteraction) == 0x000008, "Wrong alignment on ClosetExitSwing_C_CanApplyHeadOnInteraction");
static_assert(sizeof(ClosetExitSwing_C_CanApplyHeadOnInteraction) == 0x000028, "Wrong size on ClosetExitSwing_C_CanApplyHeadOnInteraction");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, Player) == 0x000000, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::Player' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, ReturnValue) == 0x000008, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, CallFunc_GetPerk_ReturnValue) == 0x000010, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::CallFunc_GetPerk_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, K2Node_DynamicCast_AsHead_On) == 0x000018, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::K2Node_DynamicCast_AsHead_On' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ClosetExitSwing_C_CanApplyHeadOnInteraction, CallFunc_CanApplyHeadOnInteraction_ReturnValue) == 0x000021, "Member 'ClosetExitSwing_C_CanApplyHeadOnInteraction::CallFunc_CanApplyHeadOnInteraction_ReturnValue' has a wrong offset!");

}

