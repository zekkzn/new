#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Calamari

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Calamari.AssassinSurvivorCosmeticHelperActor.Cosmetic_OnSurvivorMarkChanged
// 0x0001 (0x0001 - 0x0000)
struct AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged final
{
public:
	bool                                          IsMarked;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged) == 0x000001, "Wrong alignment on AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged");
static_assert(sizeof(AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged) == 0x000001, "Wrong size on AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged");
static_assert(offsetof(AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged, IsMarked) == 0x000000, "Member 'AssassinSurvivorCosmeticHelperActor_Cosmetic_OnSurvivorMarkChanged::IsMarked' has a wrong offset!");

// Function Calamari.CalamariCage.Cosmetic_OnGoingUpFinished
// 0x0010 (0x0010 - 0x0000)
struct CalamariCage_Cosmetic_OnGoingUpFinished final
{
public:
	bool                                          IsAnticampRelocation;                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class ACamperPlayer*                    CagedSurvivor;                                     // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CalamariCage_Cosmetic_OnGoingUpFinished) == 0x000008, "Wrong alignment on CalamariCage_Cosmetic_OnGoingUpFinished");
static_assert(sizeof(CalamariCage_Cosmetic_OnGoingUpFinished) == 0x000010, "Wrong size on CalamariCage_Cosmetic_OnGoingUpFinished");
static_assert(offsetof(CalamariCage_Cosmetic_OnGoingUpFinished, IsAnticampRelocation) == 0x000000, "Member 'CalamariCage_Cosmetic_OnGoingUpFinished::IsAnticampRelocation' has a wrong offset!");
static_assert(offsetof(CalamariCage_Cosmetic_OnGoingUpFinished, CagedSurvivor) == 0x000008, "Member 'CalamariCage_Cosmetic_OnGoingUpFinished::CagedSurvivor' has a wrong offset!");

// Function Calamari.CalamariCage.OnSurvivorDeath
// 0x0008 (0x0008 - 0x0000)
struct CalamariCage_OnSurvivorDeath final
{
public:
	const class ACamperPlayer*                    CagedSurvivor;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CalamariCage_OnSurvivorDeath) == 0x000008, "Wrong alignment on CalamariCage_OnSurvivorDeath");
static_assert(sizeof(CalamariCage_OnSurvivorDeath) == 0x000008, "Wrong size on CalamariCage_OnSurvivorDeath");
static_assert(offsetof(CalamariCage_OnSurvivorDeath, CagedSurvivor) == 0x000000, "Member 'CalamariCage_OnSurvivorDeath::CagedSurvivor' has a wrong offset!");

// Function Calamari.GeneratorChargeSpeedCatchUpEffect.Authority_OnGeneratorActivated
// 0x0001 (0x0001 - 0x0000)
struct GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated final
{
public:
	bool                                          IsAutoCompleted;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated) == 0x000001, "Wrong alignment on GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated");
static_assert(sizeof(GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated) == 0x000001, "Wrong size on GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated");
static_assert(offsetof(GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated, IsAutoCompleted) == 0x000000, "Member 'GeneratorChargeSpeedCatchUpEffect_Authority_OnGeneratorActivated::IsAutoCompleted' has a wrong offset!");

// Function Calamari.SurvivorClassCosmeticHelperActor.Cosmetic_OnSurvivorDamageStateChanged
// 0x0001 (0x0001 - 0x0000)
struct SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged final
{
public:
	ECamperDamageState                            NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged) == 0x000001, "Wrong alignment on SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged");
static_assert(sizeof(SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged) == 0x000001, "Wrong size on SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged");
static_assert(offsetof(SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged, NewState) == 0x000000, "Member 'SurvivorClassCosmeticHelperActor_Cosmetic_OnSurvivorDamageStateChanged::NewState' has a wrong offset!");

// Function Calamari.SurvivorClassCosmeticHelperActor.OnSurvivorDamageStateChanged
// 0x0002 (0x0002 - 0x0000)
struct SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged final
{
public:
	ECamperDamageState                            OldState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            NewState;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged) == 0x000001, "Wrong alignment on SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged");
static_assert(sizeof(SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged) == 0x000002, "Wrong size on SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged");
static_assert(offsetof(SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged, OldState) == 0x000000, "Member 'SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged, NewState) == 0x000001, "Member 'SurvivorClassCosmeticHelperActor_OnSurvivorDamageStateChanged::NewState' has a wrong offset!");

// Function Calamari.MedicSurvivorCosmeticHelperActor.Cosmetic_VitalityHealedPlayer
// 0x0008 (0x0008 - 0x0000)
struct MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer final
{
public:
	class ADBDPlayer*                             HealedPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer) == 0x000008, "Wrong alignment on MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer");
static_assert(sizeof(MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer) == 0x000008, "Wrong size on MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer");
static_assert(offsetof(MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer, HealedPlayer) == 0x000000, "Member 'MedicSurvivorCosmeticHelperActor_Cosmetic_VitalityHealedPlayer::HealedPlayer' has a wrong offset!");

// Function Calamari.MedicTeamSkill.Cosmetic_VitalityHealedPlayer
// 0x0008 (0x0008 - 0x0000)
struct MedicTeamSkill_Cosmetic_VitalityHealedPlayer final
{
public:
	class ADBDPlayer*                             HealedPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MedicTeamSkill_Cosmetic_VitalityHealedPlayer) == 0x000008, "Wrong alignment on MedicTeamSkill_Cosmetic_VitalityHealedPlayer");
static_assert(sizeof(MedicTeamSkill_Cosmetic_VitalityHealedPlayer) == 0x000008, "Wrong size on MedicTeamSkill_Cosmetic_VitalityHealedPlayer");
static_assert(offsetof(MedicTeamSkill_Cosmetic_VitalityHealedPlayer, HealedPlayer) == 0x000000, "Member 'MedicTeamSkill_Cosmetic_VitalityHealedPlayer::HealedPlayer' has a wrong offset!");

// Function Calamari.PhantomSightManager.Multicast_OnPlayerSeesPhantom
// 0x0008 (0x0008 - 0x0000)
struct PhantomSightManager_Multicast_OnPlayerSeesPhantom final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhantomSightManager_Multicast_OnPlayerSeesPhantom) == 0x000008, "Wrong alignment on PhantomSightManager_Multicast_OnPlayerSeesPhantom");
static_assert(sizeof(PhantomSightManager_Multicast_OnPlayerSeesPhantom) == 0x000008, "Wrong size on PhantomSightManager_Multicast_OnPlayerSeesPhantom");
static_assert(offsetof(PhantomSightManager_Multicast_OnPlayerSeesPhantom, Survivor) == 0x000000, "Member 'PhantomSightManager_Multicast_OnPlayerSeesPhantom::Survivor' has a wrong offset!");

// Function Calamari.RevealGeneratorsClosestToEachOtherSkill.OnRep_RevealedGenerators
// 0x0010 (0x0010 - 0x0000)
struct RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators final
{
public:
	TArray<class AGenerator*>                     OldRevealedGenerators;                             // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators) == 0x000008, "Wrong alignment on RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators");
static_assert(sizeof(RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators) == 0x000010, "Wrong size on RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators");
static_assert(offsetof(RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators, OldRevealedGenerators) == 0x000000, "Member 'RevealGeneratorsClosestToEachOtherSkill_OnRep_RevealedGenerators::OldRevealedGenerators' has a wrong offset!");

// Function Calamari.ScoutAbilityInteraction.OnPalletBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct ScoutAbilityInteraction_OnPalletBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScoutAbilityInteraction_OnPalletBeginOverlap) == 0x000008, "Wrong alignment on ScoutAbilityInteraction_OnPalletBeginOverlap");
static_assert(sizeof(ScoutAbilityInteraction_OnPalletBeginOverlap) == 0x000110, "Wrong size on ScoutAbilityInteraction_OnPalletBeginOverlap");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, OverlappedComponent) == 0x000000, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, OtherActor) == 0x000008, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, OtherComp) == 0x000010, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, bFromSweep) == 0x00001C, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletBeginOverlap, SweepResult) == 0x000020, "Member 'ScoutAbilityInteraction_OnPalletBeginOverlap::SweepResult' has a wrong offset!");

// Function Calamari.ScoutAbilityInteraction.OnPalletEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct ScoutAbilityInteraction_OnPalletEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScoutAbilityInteraction_OnPalletEndOverlap) == 0x000008, "Wrong alignment on ScoutAbilityInteraction_OnPalletEndOverlap");
static_assert(sizeof(ScoutAbilityInteraction_OnPalletEndOverlap) == 0x000020, "Wrong size on ScoutAbilityInteraction_OnPalletEndOverlap");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletEndOverlap, OverlappedComponent) == 0x000000, "Member 'ScoutAbilityInteraction_OnPalletEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletEndOverlap, OtherActor) == 0x000008, "Member 'ScoutAbilityInteraction_OnPalletEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletEndOverlap, OtherComp) == 0x000010, "Member 'ScoutAbilityInteraction_OnPalletEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(ScoutAbilityInteraction_OnPalletEndOverlap, OtherBodyIndex) == 0x000018, "Member 'ScoutAbilityInteraction_OnPalletEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function Calamari.ScoutSurvivorCosmeticHelperActor.Cosmetic_ScoutTeamSkillActivated
// 0x0008 (0x0008 - 0x0000)
struct ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated final
{
public:
	class APallet*                                Pallet;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated) == 0x000008, "Wrong alignment on ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated");
static_assert(sizeof(ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated) == 0x000008, "Wrong size on ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated");
static_assert(offsetof(ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated, Pallet) == 0x000000, "Member 'ScoutSurvivorCosmeticHelperActor_Cosmetic_ScoutTeamSkillActivated::Pallet' has a wrong offset!");

// Function Calamari.SendToCalamariCageInteraction.Cosmetic_BeginSendToCage
// 0x0008 (0x0008 - 0x0000)
struct SendToCalamariCageInteraction_Cosmetic_BeginSendToCage final
{
public:
	class ACamperPlayer*                          SurvivorBeingSent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SendToCalamariCageInteraction_Cosmetic_BeginSendToCage) == 0x000008, "Wrong alignment on SendToCalamariCageInteraction_Cosmetic_BeginSendToCage");
static_assert(sizeof(SendToCalamariCageInteraction_Cosmetic_BeginSendToCage) == 0x000008, "Wrong size on SendToCalamariCageInteraction_Cosmetic_BeginSendToCage");
static_assert(offsetof(SendToCalamariCageInteraction_Cosmetic_BeginSendToCage, SurvivorBeingSent) == 0x000000, "Member 'SendToCalamariCageInteraction_Cosmetic_BeginSendToCage::SurvivorBeingSent' has a wrong offset!");

// Function Calamari.SurvivalistTeamSprintBurstSkill.Cosmetic_SprintBurstActivatedOnPlayer
// 0x0008 (0x0008 - 0x0000)
struct SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer) == 0x000008, "Wrong alignment on SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer");
static_assert(sizeof(SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer) == 0x000008, "Wrong size on SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer");
static_assert(offsetof(SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer, Player) == 0x000000, "Member 'SurvivalistTeamSprintBurstSkill_Cosmetic_SprintBurstActivatedOnPlayer::Player' has a wrong offset!");

// Function Calamari.SurvivalistTeamSprintBurstSkill.Multicast_SprintBurstActivated
// 0x0008 (0x0008 - 0x0000)
struct SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated) == 0x000008, "Wrong alignment on SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated");
static_assert(sizeof(SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated) == 0x000008, "Wrong size on SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated");
static_assert(offsetof(SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated, Player) == 0x000000, "Member 'SurvivalistTeamSprintBurstSkill_Multicast_SprintBurstActivated::Player' has a wrong offset!");

}

