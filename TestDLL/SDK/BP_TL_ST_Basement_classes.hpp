#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TL_ST_Basement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TL_ST_Basement.BP_TL_ST_Basement_C
// 0x04E8 (0x0788 - 0x02A0)
class ABP_TL_ST_Basement_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UActorSpawner*                          BasementSeanceActorSpawner01;                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGodWall_C*                        AudioGodWall3;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGodWall_C*                        AudioGodWall2;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGodWall_C*                        AudioGodWall1;                                     // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioGodWall_C*                        AudioGodWall;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioFloorOcclusion_C*                 AudioGodFloor_Small;                               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioFloorOcclusion_C*                 AudioGodFloor_Big;                                 // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioFloorOcclusion_C*                 AudioGodFloor_Medium;                              // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNatAudioAmbienceBox*                   AudioAmbBox_Stairs_01;                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNatAudioAmbienceBox*                   AudioAmbBox_Basement_02;                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNatAudioAmbienceBox*                   AudioAmbBox_Basement_01;                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker07;                                    // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker06;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker05;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker04;                                    // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker03;                                    // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          EventSpawnerBasement;                              // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_CollisionTool;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        NavLinks;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAmbienceBoxComponent*                  BlinkBlocker02;                                    // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   DynamicCapsuleResizerTrigger;                      // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement01_NavMesh;                          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Chests;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObjectRandomizer*                      ObjectRandomizer;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        TileSpawnPoint;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightRay_Smoke;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Decals;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Lights;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Walls;                                             // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Closets;                                           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Hooks;                                             // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Audio;                                             // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Clipper_C*                          BP_Clipper;                                        // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDBoxReflectionCaptureSpawnerComponent* DBDBoxReflectionCaptureSpawner1;                   // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Hook;                                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExponentialHeightFogComponent*         ExponentialHeightFog_Minus_Override;               // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Fog_Override;                                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkFall01;                                     // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkFall02;                                     // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkFall05;                                     // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkFall04;                                     // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkFall03;                                     // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet06;                                          // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight10;                                      // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight9;                                       // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight8;                                       // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight7;                                       // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight6;                                       // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight5;                                       // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight4;                                       // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight3;                                       // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_SpotLight03;                                  // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Postprocess_Volume;                                // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDBoxReflectionCaptureSpawnerComponent* DBDBoxReflectionCaptureSpawner;                    // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_SpotLight02;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_SpotLight01;                                  // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_014;                                 // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_013;                                 // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_012;                                 // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_011;                                 // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_09;                                  // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_08;                                  // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_07;                                  // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_06;                                  // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_05;                                  // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_04;                                  // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_03;                                  // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_02;                                  // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_01;                                  // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight7;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight6;                                        // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_SpotLight04;                                  // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightbeamRoot_010;                                 // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight25;                                       // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight24;                                       // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight23;                                       // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight22;                                       // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight21;                                       // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight20;                                       // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight19;                                       // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight18;                                       // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight17;                                       // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight16;                                       // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight15;                                       // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight14;                                       // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight13;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight12;                                       // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_014;                                   // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_014;                              // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_014;                                   // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_013;                                   // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_013;                              // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_013;                                   // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_012;                                   // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_012;                              // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_012;                                   // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_011;                                   // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_011;                              // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_011;                                   // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_010;                                   // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_010;                              // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_010;                                   // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_09;                                    // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_09;                               // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_09;                                    // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_08;                                    // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_08;                               // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_08;                                    // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_07;                                    // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_07;                               // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_07;                                    // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_06;                                    // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_06;                               // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_06;                                    // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_05;                                    // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_05;                               // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_05;                                    // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_04;                                    // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_04;                               // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_04;                                    // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_03;                                    // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_03;                               // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_03;                                    // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_02;                                    // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_02;                               // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_02;                                    // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCracks_01;                                    // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WallRaysBasement_01;                               // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LightsSmoke_01;                                    // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGMAdaptiveShadowMapSourceComponent*    GMAdaptiveShadowMapSource3;                        // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_4m_00;                         // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_2m_03;                         // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_2m_02;                         // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_2m_00;                         // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet05;                                          // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Basement_Mist;                                   // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Light_Drips5;                                    // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Light_Drips4;                                    // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Light_Drips3;                                    // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Light_Drips2;                                    // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Light_Drips1;                                    // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_DustFalling_Manor_Ceiling;                       // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_DustModular;                                     // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Chest;                                             // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Chest_2;                                           // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_SM_ST_Basement01;                               // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet01;                                          // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet04;                                          // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet03;                                          // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          Closet02;                                          // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TL_ST_Basement(int32 EntryPoint);
	void OnIntroCompletedBP();
	void OverrideExposure();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TL_ST_Basement_C">();
	}
	static class ABP_TL_ST_Basement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TL_ST_Basement_C>();
	}
};
static_assert(alignof(ABP_TL_ST_Basement_C) == 0x000008, "Wrong alignment on ABP_TL_ST_Basement_C");
static_assert(sizeof(ABP_TL_ST_Basement_C) == 0x000788, "Wrong size on ABP_TL_ST_Basement_C");
static_assert(offsetof(ABP_TL_ST_Basement_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_TL_ST_Basement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BasementSeanceActorSpawner01) == 0x0002A8, "Member 'ABP_TL_ST_Basement_C::BasementSeanceActorSpawner01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodWall3) == 0x0002B0, "Member 'ABP_TL_ST_Basement_C::AudioGodWall3' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodWall2) == 0x0002B8, "Member 'ABP_TL_ST_Basement_C::AudioGodWall2' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodWall1) == 0x0002C0, "Member 'ABP_TL_ST_Basement_C::AudioGodWall1' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodWall) == 0x0002C8, "Member 'ABP_TL_ST_Basement_C::AudioGodWall' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodFloor_Small) == 0x0002D0, "Member 'ABP_TL_ST_Basement_C::AudioGodFloor_Small' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodFloor_Big) == 0x0002D8, "Member 'ABP_TL_ST_Basement_C::AudioGodFloor_Big' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioGodFloor_Medium) == 0x0002E0, "Member 'ABP_TL_ST_Basement_C::AudioGodFloor_Medium' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioAmbBox_Stairs_01) == 0x0002E8, "Member 'ABP_TL_ST_Basement_C::AudioAmbBox_Stairs_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioAmbBox_Basement_02) == 0x0002F0, "Member 'ABP_TL_ST_Basement_C::AudioAmbBox_Basement_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, AudioAmbBox_Basement_01) == 0x0002F8, "Member 'ABP_TL_ST_Basement_C::AudioAmbBox_Basement_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker07) == 0x000300, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker07' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker06) == 0x000308, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker05) == 0x000310, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker04) == 0x000318, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker03) == 0x000320, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, EventSpawnerBasement) == 0x000328, "Member 'ABP_TL_ST_Basement_C::EventSpawnerBasement' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BP_CollisionTool) == 0x000330, "Member 'ABP_TL_ST_Basement_C::BP_CollisionTool' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinks) == 0x000338, "Member 'ABP_TL_ST_Basement_C::NavLinks' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BlinkBlocker02) == 0x000340, "Member 'ABP_TL_ST_Basement_C::BlinkBlocker02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Scene1) == 0x000348, "Member 'ABP_TL_ST_Basement_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, DynamicCapsuleResizerTrigger) == 0x000350, "Member 'ABP_TL_ST_Basement_C::DynamicCapsuleResizerTrigger' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SM_ST_Basement01_NavMesh) == 0x000358, "Member 'ABP_TL_ST_Basement_C::SM_ST_Basement01_NavMesh' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Chests) == 0x000360, "Member 'ABP_TL_ST_Basement_C::Chests' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, ObjectRandomizer) == 0x000368, "Member 'ABP_TL_ST_Basement_C::ObjectRandomizer' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, TileSpawnPoint) == 0x000370, "Member 'ABP_TL_ST_Basement_C::TileSpawnPoint' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightRay_Smoke) == 0x000378, "Member 'ABP_TL_ST_Basement_C::LightRay_Smoke' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Decals) == 0x000380, "Member 'ABP_TL_ST_Basement_C::Decals' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Lights) == 0x000388, "Member 'ABP_TL_ST_Basement_C::Lights' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Walls) == 0x000390, "Member 'ABP_TL_ST_Basement_C::Walls' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closets) == 0x000398, "Member 'ABP_TL_ST_Basement_C::Closets' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Hooks) == 0x0003A0, "Member 'ABP_TL_ST_Basement_C::Hooks' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Audio) == 0x0003A8, "Member 'ABP_TL_ST_Basement_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BP_Clipper) == 0x0003B0, "Member 'ABP_TL_ST_Basement_C::BP_Clipper' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, DBDBoxReflectionCaptureSpawner1) == 0x0003B8, "Member 'ABP_TL_ST_Basement_C::DBDBoxReflectionCaptureSpawner1' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Hook) == 0x0003C0, "Member 'ABP_TL_ST_Basement_C::Hook' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, ExponentialHeightFog_Minus_Override) == 0x0003C8, "Member 'ABP_TL_ST_Basement_C::ExponentialHeightFog_Minus_Override' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Fog_Override) == 0x0003D0, "Member 'ABP_TL_ST_Basement_C::Fog_Override' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinkFall01) == 0x0003D8, "Member 'ABP_TL_ST_Basement_C::NavLinkFall01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinkFall02) == 0x0003E0, "Member 'ABP_TL_ST_Basement_C::NavLinkFall02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinkFall05) == 0x0003E8, "Member 'ABP_TL_ST_Basement_C::NavLinkFall05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinkFall04) == 0x0003F0, "Member 'ABP_TL_ST_Basement_C::NavLinkFall04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, NavLinkFall03) == 0x0003F8, "Member 'ABP_TL_ST_Basement_C::NavLinkFall03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet06) == 0x000400, "Member 'ABP_TL_ST_Basement_C::Closet06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight10) == 0x000408, "Member 'ABP_TL_ST_Basement_C::PointLight10' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight9) == 0x000410, "Member 'ABP_TL_ST_Basement_C::PointLight9' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight8) == 0x000418, "Member 'ABP_TL_ST_Basement_C::PointLight8' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight7) == 0x000420, "Member 'ABP_TL_ST_Basement_C::PointLight7' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight6) == 0x000428, "Member 'ABP_TL_ST_Basement_C::PointLight6' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight5) == 0x000430, "Member 'ABP_TL_ST_Basement_C::PointLight5' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight4) == 0x000438, "Member 'ABP_TL_ST_Basement_C::PointLight4' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight3) == 0x000440, "Member 'ABP_TL_ST_Basement_C::PointLight3' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Fill_SpotLight03) == 0x000448, "Member 'ABP_TL_ST_Basement_C::Fill_SpotLight03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Postprocess_Volume) == 0x000450, "Member 'ABP_TL_ST_Basement_C::Postprocess_Volume' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, DBDBoxReflectionCaptureSpawner) == 0x000458, "Member 'ABP_TL_ST_Basement_C::DBDBoxReflectionCaptureSpawner' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Fill_SpotLight02) == 0x000460, "Member 'ABP_TL_ST_Basement_C::Fill_SpotLight02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Fill_SpotLight01) == 0x000468, "Member 'ABP_TL_ST_Basement_C::Fill_SpotLight01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_014) == 0x000470, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_014' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_013) == 0x000478, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_013' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_012) == 0x000480, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_012' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_011) == 0x000488, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_011' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight2) == 0x000490, "Member 'ABP_TL_ST_Basement_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_09) == 0x000498, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_09' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_08) == 0x0004A0, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_08' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_07) == 0x0004A8, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_07' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_06) == 0x0004B0, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_05) == 0x0004B8, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_04) == 0x0004C0, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_03) == 0x0004C8, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_02) == 0x0004D0, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_01) == 0x0004D8, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight7) == 0x0004E0, "Member 'ABP_TL_ST_Basement_C::SpotLight7' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight6) == 0x0004E8, "Member 'ABP_TL_ST_Basement_C::SpotLight6' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Fill_SpotLight04) == 0x0004F0, "Member 'ABP_TL_ST_Basement_C::Fill_SpotLight04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight1) == 0x0004F8, "Member 'ABP_TL_ST_Basement_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PointLight) == 0x000500, "Member 'ABP_TL_ST_Basement_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightbeamRoot_010) == 0x000508, "Member 'ABP_TL_ST_Basement_C::LightbeamRoot_010' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, PostProcess) == 0x000510, "Member 'ABP_TL_ST_Basement_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight25) == 0x000518, "Member 'ABP_TL_ST_Basement_C::SpotLight25' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight24) == 0x000520, "Member 'ABP_TL_ST_Basement_C::SpotLight24' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight23) == 0x000528, "Member 'ABP_TL_ST_Basement_C::SpotLight23' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight22) == 0x000530, "Member 'ABP_TL_ST_Basement_C::SpotLight22' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight21) == 0x000538, "Member 'ABP_TL_ST_Basement_C::SpotLight21' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight20) == 0x000540, "Member 'ABP_TL_ST_Basement_C::SpotLight20' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight19) == 0x000548, "Member 'ABP_TL_ST_Basement_C::SpotLight19' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight18) == 0x000550, "Member 'ABP_TL_ST_Basement_C::SpotLight18' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight17) == 0x000558, "Member 'ABP_TL_ST_Basement_C::SpotLight17' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight16) == 0x000560, "Member 'ABP_TL_ST_Basement_C::SpotLight16' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight15) == 0x000568, "Member 'ABP_TL_ST_Basement_C::SpotLight15' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight14) == 0x000570, "Member 'ABP_TL_ST_Basement_C::SpotLight14' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight13) == 0x000578, "Member 'ABP_TL_ST_Basement_C::SpotLight13' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SpotLight12) == 0x000580, "Member 'ABP_TL_ST_Basement_C::SpotLight12' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_014) == 0x000588, "Member 'ABP_TL_ST_Basement_C::LightCracks_014' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_014) == 0x000590, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_014' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_014) == 0x000598, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_014' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_013) == 0x0005A0, "Member 'ABP_TL_ST_Basement_C::LightCracks_013' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_013) == 0x0005A8, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_013' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_013) == 0x0005B0, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_013' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_012) == 0x0005B8, "Member 'ABP_TL_ST_Basement_C::LightCracks_012' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_012) == 0x0005C0, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_012' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_012) == 0x0005C8, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_012' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_011) == 0x0005D0, "Member 'ABP_TL_ST_Basement_C::LightCracks_011' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_011) == 0x0005D8, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_011' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_011) == 0x0005E0, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_011' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_010) == 0x0005E8, "Member 'ABP_TL_ST_Basement_C::LightCracks_010' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_010) == 0x0005F0, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_010' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_010) == 0x0005F8, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_010' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_09) == 0x000600, "Member 'ABP_TL_ST_Basement_C::LightCracks_09' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_09) == 0x000608, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_09' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_09) == 0x000610, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_09' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_08) == 0x000618, "Member 'ABP_TL_ST_Basement_C::LightCracks_08' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_08) == 0x000620, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_08' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_08) == 0x000628, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_08' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_07) == 0x000630, "Member 'ABP_TL_ST_Basement_C::LightCracks_07' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_07) == 0x000638, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_07' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_07) == 0x000640, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_07' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_06) == 0x000648, "Member 'ABP_TL_ST_Basement_C::LightCracks_06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_06) == 0x000650, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_06) == 0x000658, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_06' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_05) == 0x000660, "Member 'ABP_TL_ST_Basement_C::LightCracks_05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_05) == 0x000668, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_05) == 0x000670, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_04) == 0x000678, "Member 'ABP_TL_ST_Basement_C::LightCracks_04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_04) == 0x000680, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_04) == 0x000688, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_03) == 0x000690, "Member 'ABP_TL_ST_Basement_C::LightCracks_03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_03) == 0x000698, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_03) == 0x0006A0, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_02) == 0x0006A8, "Member 'ABP_TL_ST_Basement_C::LightCracks_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_02) == 0x0006B0, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_02) == 0x0006B8, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightCracks_01) == 0x0006C0, "Member 'ABP_TL_ST_Basement_C::LightCracks_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, WallRaysBasement_01) == 0x0006C8, "Member 'ABP_TL_ST_Basement_C::WallRaysBasement_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, LightsSmoke_01) == 0x0006D0, "Member 'ABP_TL_ST_Basement_C::LightsSmoke_01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, GMAdaptiveShadowMapSource3) == 0x0006D8, "Member 'ABP_TL_ST_Basement_C::GMAdaptiveShadowMapSource3' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SM_ST_Basement_Wall_4m_00) == 0x0006E0, "Member 'ABP_TL_ST_Basement_C::SM_ST_Basement_Wall_4m_00' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SM_ST_Basement_Wall_2m_03) == 0x0006E8, "Member 'ABP_TL_ST_Basement_C::SM_ST_Basement_Wall_2m_03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SM_ST_Basement_Wall_2m_02) == 0x0006F0, "Member 'ABP_TL_ST_Basement_C::SM_ST_Basement_Wall_2m_02' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, SM_ST_Basement_Wall_2m_00) == 0x0006F8, "Member 'ABP_TL_ST_Basement_C::SM_ST_Basement_Wall_2m_00' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet05) == 0x000700, "Member 'ABP_TL_ST_Basement_C::Closet05' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Basement_Mist) == 0x000708, "Member 'ABP_TL_ST_Basement_C::P_Basement_Mist' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Light_Drips5) == 0x000710, "Member 'ABP_TL_ST_Basement_C::P_Light_Drips5' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Light_Drips4) == 0x000718, "Member 'ABP_TL_ST_Basement_C::P_Light_Drips4' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Light_Drips3) == 0x000720, "Member 'ABP_TL_ST_Basement_C::P_Light_Drips3' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Light_Drips2) == 0x000728, "Member 'ABP_TL_ST_Basement_C::P_Light_Drips2' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_Light_Drips1) == 0x000730, "Member 'ABP_TL_ST_Basement_C::P_Light_Drips1' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_DustFalling_Manor_Ceiling) == 0x000738, "Member 'ABP_TL_ST_Basement_C::P_DustFalling_Manor_Ceiling' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, P_DustModular) == 0x000740, "Member 'ABP_TL_ST_Basement_C::P_DustModular' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Scene) == 0x000748, "Member 'ABP_TL_ST_Basement_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Chest) == 0x000750, "Member 'ABP_TL_ST_Basement_C::Chest' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Chest_2) == 0x000758, "Member 'ABP_TL_ST_Basement_C::Chest_2' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, BP_SM_ST_Basement01) == 0x000760, "Member 'ABP_TL_ST_Basement_C::BP_SM_ST_Basement01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet01) == 0x000768, "Member 'ABP_TL_ST_Basement_C::Closet01' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet04) == 0x000770, "Member 'ABP_TL_ST_Basement_C::Closet04' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet03) == 0x000778, "Member 'ABP_TL_ST_Basement_C::Closet03' has a wrong offset!");
static_assert(offsetof(ABP_TL_ST_Basement_C, Closet02) == 0x000780, "Member 'ABP_TL_ST_Basement_C::Closet02' has a wrong offset!");

}

