#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS14

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DataTableUtilities_structs.hpp"


namespace SDK
{

// Class TheS14.Autodidact
// 0x0020 (0x0440 - 0x0420)
class UAutodidact final : public UPerk
{
public:
	int32                                         _maxTokenCountPerLevel[0x3];                       // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _progressionBonusPerToken;                         // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _initialSkillCheckProgressionPenalty;              // 0x0430(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_434[0xC];                                      // 0x0434(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Autodidact">();
	}
	static class UAutodidact* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutodidact>();
	}
};
static_assert(alignof(UAutodidact) == 0x000008, "Wrong alignment on UAutodidact");
static_assert(sizeof(UAutodidact) == 0x000440, "Wrong size on UAutodidact");
static_assert(offsetof(UAutodidact, _maxTokenCountPerLevel) == 0x000420, "Member 'UAutodidact::_maxTokenCountPerLevel' has a wrong offset!");
static_assert(offsetof(UAutodidact, _progressionBonusPerToken) == 0x00042C, "Member 'UAutodidact::_progressionBonusPerToken' has a wrong offset!");
static_assert(offsetof(UAutodidact, _initialSkillCheckProgressionPenalty) == 0x000430, "Member 'UAutodidact::_initialSkillCheckProgressionPenalty' has a wrong offset!");

// Class TheS14.Deliverance
// 0x0028 (0x0448 - 0x0420)
class UDeliverance final : public UPerk
{
public:
	float                                         _brokenEffectDurationPerLevel[0x3];                // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _selfUnhookAlwaysSucceedEffectClass;               // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _brokenEffectClass;                                // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _selfUnhookAlwaysSucceedEffect;                    // 0x0440(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	float GetBrokenEffectDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Deliverance">();
	}
	static class UDeliverance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeliverance>();
	}
};
static_assert(alignof(UDeliverance) == 0x000008, "Wrong alignment on UDeliverance");
static_assert(sizeof(UDeliverance) == 0x000448, "Wrong size on UDeliverance");
static_assert(offsetof(UDeliverance, _brokenEffectDurationPerLevel) == 0x000420, "Member 'UDeliverance::_brokenEffectDurationPerLevel' has a wrong offset!");
static_assert(offsetof(UDeliverance, _selfUnhookAlwaysSucceedEffectClass) == 0x000430, "Member 'UDeliverance::_selfUnhookAlwaysSucceedEffectClass' has a wrong offset!");
static_assert(offsetof(UDeliverance, _brokenEffectClass) == 0x000438, "Member 'UDeliverance::_brokenEffectClass' has a wrong offset!");
static_assert(offsetof(UDeliverance, _selfUnhookAlwaysSucceedEffect) == 0x000440, "Member 'UDeliverance::_selfUnhookAlwaysSucceedEffect' has a wrong offset!");

// Class TheS14.Diversion
// 0x0080 (0x04A0 - 0x0420)
class UDiversion final : public UPerk
{
public:
	uint8                                         Pad_420[0x60];                                     // 0x0420(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _diversionActivationTimePerLevel[0x3];             // 0x0480(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _throwPebbleDistance;                              // 0x048C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UThrowRockInteraction>      _throwPebbleInteraction;                           // 0x0490(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionAttacherComponent*          _interactionAttacherComponent;                     // 0x0498(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnOwningSurvivorDamageStateChanged(ECamperDamageState OldDamageState, ECamperDamageState CurrentDamageState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Diversion">();
	}
	static class UDiversion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDiversion>();
	}
};
static_assert(alignof(UDiversion) == 0x000008, "Wrong alignment on UDiversion");
static_assert(sizeof(UDiversion) == 0x0004A0, "Wrong size on UDiversion");
static_assert(offsetof(UDiversion, _diversionActivationTimePerLevel) == 0x000480, "Member 'UDiversion::_diversionActivationTimePerLevel' has a wrong offset!");
static_assert(offsetof(UDiversion, _throwPebbleDistance) == 0x00048C, "Member 'UDiversion::_throwPebbleDistance' has a wrong offset!");
static_assert(offsetof(UDiversion, _throwPebbleInteraction) == 0x000490, "Member 'UDiversion::_throwPebbleInteraction' has a wrong offset!");
static_assert(offsetof(UDiversion, _interactionAttacherComponent) == 0x000498, "Member 'UDiversion::_interactionAttacherComponent' has a wrong offset!");

// Class TheS14.ThrowRockInteraction
// 0x0080 (0x0800 - 0x0780)
class UThrowRockInteraction final : public UInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _loudNoiseAudioRange;                              // 0x0778(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _scratchMarksApplicationDelay;                     // 0x07A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _scratchMarksCountToSpawn;                         // 0x07A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A8[0x4];                                      // 0x07A8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _diversionHeightOffset;                            // 0x07AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B0[0x50];                                     // 0x07B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ThrowRockInteraction">();
	}
	static class UThrowRockInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UThrowRockInteraction>();
	}
};
static_assert(alignof(UThrowRockInteraction) == 0x000010, "Wrong alignment on UThrowRockInteraction");
static_assert(sizeof(UThrowRockInteraction) == 0x000800, "Wrong size on UThrowRockInteraction");
static_assert(offsetof(UThrowRockInteraction, _loudNoiseAudioRange) == 0x000778, "Member 'UThrowRockInteraction::_loudNoiseAudioRange' has a wrong offset!");
static_assert(offsetof(UThrowRockInteraction, _scratchMarksApplicationDelay) == 0x0007A0, "Member 'UThrowRockInteraction::_scratchMarksApplicationDelay' has a wrong offset!");
static_assert(offsetof(UThrowRockInteraction, _scratchMarksCountToSpawn) == 0x0007A4, "Member 'UThrowRockInteraction::_scratchMarksCountToSpawn' has a wrong offset!");
static_assert(offsetof(UThrowRockInteraction, _diversionHeightOffset) == 0x0007AC, "Member 'UThrowRockInteraction::_diversionHeightOffset' has a wrong offset!");

}

