#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KillerPlayerController

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KillerPlayerController.BP_KillerPlayerController_C
// 0x0030 (0x0BA8 - 0x0B78)
class ABP_KillerPlayerController_C final : public ADBDPlayerController
{
public:
	class UBPNearestOutsideMapBoundsLocator_C*    BPNearestOutsideMapBoundsLocator;                  // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEmblemAnalyticsComponent*              EmblemAnalytics;                                   // 0x0B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_KillerMalicious*             DBDEmblem_KillerMalicious;                         // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_KillerGatekeeper*            DBDEmblem_KillerGatekeeper;                        // 0x0B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_KillerDevout*                DBDEmblem_KillerDevout;                            // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_KillerChaser*                DBDEmblem_KillerChaser;                            // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KillerPlayerController_C">();
	}
	static class ABP_KillerPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KillerPlayerController_C>();
	}
};
static_assert(alignof(ABP_KillerPlayerController_C) == 0x000008, "Wrong alignment on ABP_KillerPlayerController_C");
static_assert(sizeof(ABP_KillerPlayerController_C) == 0x000BA8, "Wrong size on ABP_KillerPlayerController_C");
static_assert(offsetof(ABP_KillerPlayerController_C, BPNearestOutsideMapBoundsLocator) == 0x000B78, "Member 'ABP_KillerPlayerController_C::BPNearestOutsideMapBoundsLocator' has a wrong offset!");
static_assert(offsetof(ABP_KillerPlayerController_C, EmblemAnalytics) == 0x000B80, "Member 'ABP_KillerPlayerController_C::EmblemAnalytics' has a wrong offset!");
static_assert(offsetof(ABP_KillerPlayerController_C, DBDEmblem_KillerMalicious) == 0x000B88, "Member 'ABP_KillerPlayerController_C::DBDEmblem_KillerMalicious' has a wrong offset!");
static_assert(offsetof(ABP_KillerPlayerController_C, DBDEmblem_KillerGatekeeper) == 0x000B90, "Member 'ABP_KillerPlayerController_C::DBDEmblem_KillerGatekeeper' has a wrong offset!");
static_assert(offsetof(ABP_KillerPlayerController_C, DBDEmblem_KillerDevout) == 0x000B98, "Member 'ABP_KillerPlayerController_C::DBDEmblem_KillerDevout' has a wrong offset!");
static_assert(offsetof(ABP_KillerPlayerController_C, DBDEmblem_KillerChaser) == 0x000BA0, "Member 'ABP_KillerPlayerController_C::DBDEmblem_KillerChaser' has a wrong offset!");

}

