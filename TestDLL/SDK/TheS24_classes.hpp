#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS24

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS24.Appraisal
// 0x0020 (0x0440 - 0x0420)
class UAppraisal final : public UPerk
{
public:
	float                                         _chestSearchSpeedMultiplier[0x3];                  // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _fastChestSearchEffectClass;                       // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Appraisal">();
	}
	static class UAppraisal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppraisal>();
	}
};
static_assert(alignof(UAppraisal) == 0x000008, "Wrong alignment on UAppraisal");
static_assert(sizeof(UAppraisal) == 0x000440, "Wrong size on UAppraisal");
static_assert(offsetof(UAppraisal, _chestSearchSpeedMultiplier) == 0x000420, "Member 'UAppraisal::_chestSearchSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(UAppraisal, _fastChestSearchEffectClass) == 0x000430, "Member 'UAppraisal::_fastChestSearchEffectClass' has a wrong offset!");

// Class TheS24.Deception
// 0x0040 (0x0460 - 0x0420)
class UDeception final : public UPerk
{
public:
	float                                         _noScratchMarksDuration[0x3];                      // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _perkCooldownDuration[0x3];                        // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _deceptionStatusEffectClass;                       // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _statusEffect;                                     // 0x0440(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UManualIconStrategy*                    _iconStrategy;                                     // 0x0450(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOwningPlayerFakedEnteringLockerCosmetic();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Deception">();
	}
	static class UDeception* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeception>();
	}
};
static_assert(alignof(UDeception) == 0x000008, "Wrong alignment on UDeception");
static_assert(sizeof(UDeception) == 0x000460, "Wrong size on UDeception");
static_assert(offsetof(UDeception, _noScratchMarksDuration) == 0x000420, "Member 'UDeception::_noScratchMarksDuration' has a wrong offset!");
static_assert(offsetof(UDeception, _perkCooldownDuration) == 0x00042C, "Member 'UDeception::_perkCooldownDuration' has a wrong offset!");
static_assert(offsetof(UDeception, _deceptionStatusEffectClass) == 0x000438, "Member 'UDeception::_deceptionStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UDeception, _statusEffect) == 0x000440, "Member 'UDeception::_statusEffect' has a wrong offset!");
static_assert(offsetof(UDeception, _iconStrategy) == 0x000450, "Member 'UDeception::_iconStrategy' has a wrong offset!");

// Class TheS24.PowerStruggle
// 0x0018 (0x0438 - 0x0420)
class UPowerStruggle final : public UPerk
{
public:
	float                                         _wigglePercentToActivatePerk[0x3];                 // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _revealPalletWhenKOEffectClass;                    // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PowerStruggle">();
	}
	static class UPowerStruggle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPowerStruggle>();
	}
};
static_assert(alignof(UPowerStruggle) == 0x000008, "Wrong alignment on UPowerStruggle");
static_assert(sizeof(UPowerStruggle) == 0x000438, "Wrong size on UPowerStruggle");
static_assert(offsetof(UPowerStruggle, _wigglePercentToActivatePerk) == 0x000420, "Member 'UPowerStruggle::_wigglePercentToActivatePerk' has a wrong offset!");
static_assert(offsetof(UPowerStruggle, _revealPalletWhenKOEffectClass) == 0x000430, "Member 'UPowerStruggle::_revealPalletWhenKOEffectClass' has a wrong offset!");

}

