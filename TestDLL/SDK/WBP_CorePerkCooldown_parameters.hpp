#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePerkCooldown

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.UpdateRechargeablePerk
// 0x0010 (0x0010 - 0x0000)
struct WBP_CorePerkCooldown_C_UpdateRechargeablePerk final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayed;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk) == 0x000008, "Wrong alignment on WBP_CorePerkCooldown_C_UpdateRechargeablePerk");
static_assert(sizeof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk) == 0x000010, "Wrong size on WBP_CorePerkCooldown_C_UpdateRechargeablePerk");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, Percent) == 0x000000, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::Percent' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, IsActive) == 0x000008, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, IsDisplayed) == 0x000009, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::IsDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateRechargeablePerk, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WBP_CorePerkCooldown_C_UpdateRechargeablePerk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.UpdateNormalPerk
// 0x0010 (0x0010 - 0x0000)
struct WBP_CorePerkCooldown_C_UpdateNormalPerk final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayed;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Greater_FloatFloat_A_ImplicitCast;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerkCooldown_C_UpdateNormalPerk) == 0x000008, "Wrong alignment on WBP_CorePerkCooldown_C_UpdateNormalPerk");
static_assert(sizeof(WBP_CorePerkCooldown_C_UpdateNormalPerk) == 0x000010, "Wrong size on WBP_CorePerkCooldown_C_UpdateNormalPerk");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateNormalPerk, Percent) == 0x000000, "Member 'WBP_CorePerkCooldown_C_UpdateNormalPerk::Percent' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateNormalPerk, IsDisplayed) == 0x000008, "Member 'WBP_CorePerkCooldown_C_UpdateNormalPerk::IsDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateNormalPerk, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'WBP_CorePerkCooldown_C_UpdateNormalPerk::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateNormalPerk, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000A, "Member 'WBP_CorePerkCooldown_C_UpdateNormalPerk::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_UpdateNormalPerk, CallFunc_Greater_FloatFloat_A_ImplicitCast) == 0x00000C, "Member 'WBP_CorePerkCooldown_C_UpdateNormalPerk::CallFunc_Greater_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.SetPercentage
// 0x0020 (0x0020 - 0x0000)
struct WBP_CorePerkCooldown_C_SetPercentage final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRechargeable;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRechargeableActive;                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateNormalPerk_IsDisplayed;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRechargeablePerk_IsDisplayed;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerkCooldown_C_SetPercentage) == 0x000008, "Wrong alignment on WBP_CorePerkCooldown_C_SetPercentage");
static_assert(sizeof(WBP_CorePerkCooldown_C_SetPercentage) == 0x000020, "Wrong size on WBP_CorePerkCooldown_C_SetPercentage");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, Percent) == 0x000000, "Member 'WBP_CorePerkCooldown_C_SetPercentage::Percent' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, IsRechargeable) == 0x000008, "Member 'WBP_CorePerkCooldown_C_SetPercentage::IsRechargeable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, IsRechargeableActive) == 0x000009, "Member 'WBP_CorePerkCooldown_C_SetPercentage::IsRechargeableActive' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_CorePerkCooldown_C_SetPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, CallFunc_UpdateNormalPerk_IsDisplayed) == 0x000018, "Member 'WBP_CorePerkCooldown_C_SetPercentage::CallFunc_UpdateNormalPerk_IsDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, CallFunc_UpdateRechargeablePerk_IsDisplayed) == 0x000019, "Member 'WBP_CorePerkCooldown_C_SetPercentage::CallFunc_UpdateRechargeablePerk_IsDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_SetPercentage, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00001C, "Member 'WBP_CorePerkCooldown_C_SetPercentage::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePerkCooldown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerkCooldown_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CorePerkCooldown_C_PreConstruct");
static_assert(sizeof(WBP_CorePerkCooldown_C_PreConstruct) == 0x000001, "Wrong size on WBP_CorePerkCooldown_C_PreConstruct");
static_assert(offsetof(WBP_CorePerkCooldown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CorePerkCooldown_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.ExecuteUbergraph_WBP_CorePerkCooldown
// 0x0010 (0x0010 - 0x0000)
struct WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown) == 0x000008, "Wrong alignment on WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown");
static_assert(sizeof(WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown) == 0x000010, "Wrong size on WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown");
static_assert(offsetof(WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown, EntryPoint) == 0x000000, "Member 'WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

