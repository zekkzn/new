#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreItem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreItem.WBP_CoreItem_C.UpdateInputPrompt
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreItem_C_UpdateInputPrompt final
{
public:
	EControlMode                                  ControlMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_UpdateInputPrompt) == 0x000001, "Wrong alignment on WBP_CoreItem_C_UpdateInputPrompt");
static_assert(sizeof(WBP_CoreItem_C_UpdateInputPrompt) == 0x000001, "Wrong size on WBP_CoreItem_C_UpdateInputPrompt");
static_assert(offsetof(WBP_CoreItem_C_UpdateInputPrompt, ControlMode) == 0x000000, "Member 'WBP_CoreItem_C_UpdateInputPrompt::ControlMode' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.UpdateEnergyLevel
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreItem_C_UpdateEnergyLevel final
{
public:
	double                                        CallFunc_SetPercent_percent_ImplicitCast;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_UpdateEnergyLevel) == 0x000008, "Wrong alignment on WBP_CoreItem_C_UpdateEnergyLevel");
static_assert(sizeof(WBP_CoreItem_C_UpdateEnergyLevel) == 0x000008, "Wrong size on WBP_CoreItem_C_UpdateEnergyLevel");
static_assert(offsetof(WBP_CoreItem_C_UpdateEnergyLevel, CallFunc_SetPercent_percent_ImplicitCast) == 0x000000, "Member 'WBP_CoreItem_C_UpdateEnergyLevel::CallFunc_SetPercent_percent_ImplicitCast' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.SetValidState
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreItem_C_SetValidState final
{
public:
	bool                                          IsValidData;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_SetValidState) == 0x000001, "Wrong alignment on WBP_CoreItem_C_SetValidState");
static_assert(sizeof(WBP_CoreItem_C_SetValidState) == 0x000001, "Wrong size on WBP_CoreItem_C_SetValidState");
static_assert(offsetof(WBP_CoreItem_C_SetValidState, IsValidData) == 0x000000, "Member 'WBP_CoreItem_C_SetValidState::IsValidData' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.SetInputVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreItem_C_SetInputVisibility final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_SetInputVisibility) == 0x000001, "Wrong alignment on WBP_CoreItem_C_SetInputVisibility");
static_assert(sizeof(WBP_CoreItem_C_SetInputVisibility) == 0x000001, "Wrong size on WBP_CoreItem_C_SetInputVisibility");
static_assert(offsetof(WBP_CoreItem_C_SetInputVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'WBP_CoreItem_C_SetInputVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.SetGaugeSide
// 0x0058 (0x0058 - 0x0000)
struct WBP_CoreItem_C_SetGaugeSide final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue_1;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_SetGaugeSide) == 0x000008, "Wrong alignment on WBP_CoreItem_C_SetGaugeSide");
static_assert(sizeof(WBP_CoreItem_C_SetGaugeSide) == 0x000058, "Wrong size on WBP_CoreItem_C_SetGaugeSide");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, Temp_bool_Variable) == 0x000000, "Member 'WBP_CoreItem_C_SetGaugeSide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, Temp_struct_Variable) == 0x000008, "Member 'WBP_CoreItem_C_SetGaugeSide::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_CoreItem_C_SetGaugeSide::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, K2Node_Select_Default) == 0x000028, "Member 'WBP_CoreItem_C_SetGaugeSide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, CallFunc_SelectInt_ReturnValue) == 0x000038, "Member 'WBP_CoreItem_C_SetGaugeSide::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000040, "Member 'WBP_CoreItem_C_SetGaugeSide::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, CallFunc_SlotAsGridSlot_ReturnValue_1) == 0x000048, "Member 'WBP_CoreItem_C_SetGaugeSide::CallFunc_SlotAsGridSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_SetGaugeSide, CallFunc_SelectInt_ReturnValue_1) == 0x000050, "Member 'WBP_CoreItem_C_SetGaugeSide::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.SetData
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_CoreItem_C_SetData final
{
public:
	struct FItemViewData                          ItemViewData;                                      // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreItem_C_SetData) == 0x000008, "Wrong alignment on WBP_CoreItem_C_SetData");
static_assert(sizeof(WBP_CoreItem_C_SetData) == 0x0000A0, "Wrong size on WBP_CoreItem_C_SetData");
static_assert(offsetof(WBP_CoreItem_C_SetData, ItemViewData) == 0x000000, "Member 'WBP_CoreItem_C_SetData::ItemViewData' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.SetActiveState
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreItem_C_SetActiveState final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_SetActiveState) == 0x000001, "Wrong alignment on WBP_CoreItem_C_SetActiveState");
static_assert(sizeof(WBP_CoreItem_C_SetActiveState) == 0x000001, "Wrong size on WBP_CoreItem_C_SetActiveState");
static_assert(offsetof(WBP_CoreItem_C_SetActiveState, Param_IsActive) == 0x000000, "Member 'WBP_CoreItem_C_SetActiveState::Param_IsActive' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreItem_C_PreConstruct");
static_assert(sizeof(WBP_CoreItem_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreItem_C_PreConstruct");
static_assert(offsetof(WBP_CoreItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.IsEmpty
// 0x0003 (0x0003 - 0x0000)
struct WBP_CoreItem_C_IsEmpty final
{
public:
	bool                                          Param_IsEmpty;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_IsEmpty) == 0x000001, "Wrong alignment on WBP_CoreItem_C_IsEmpty");
static_assert(sizeof(WBP_CoreItem_C_IsEmpty) == 0x000003, "Wrong size on WBP_CoreItem_C_IsEmpty");
static_assert(offsetof(WBP_CoreItem_C_IsEmpty, Param_IsEmpty) == 0x000000, "Member 'WBP_CoreItem_C_IsEmpty::Param_IsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_IsEmpty, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'WBP_CoreItem_C_IsEmpty::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_IsEmpty, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_CoreItem_C_IsEmpty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_CoreItem.WBP_CoreItem_C.ExecuteUbergraph_WBP_CoreItem
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemViewData                          K2Node_Event_itemViewData;                         // 0x0008(0x00A0)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsActive;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem) == 0x000008, "Wrong alignment on WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem");
static_assert(sizeof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem) == 0x0000B0, "Wrong size on WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem");
static_assert(offsetof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem, EntryPoint) == 0x000000, "Member 'WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem, K2Node_Event_itemViewData) == 0x000008, "Member 'WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem::K2Node_Event_itemViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A9, "Member 'WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem, K2Node_Event_IsActive) == 0x0000AA, "Member 'WBP_CoreItem_C_ExecuteUbergraph_WBP_CoreItem::K2Node_Event_IsActive' has a wrong offset!");

}

