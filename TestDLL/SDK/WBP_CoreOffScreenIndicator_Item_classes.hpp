#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreOffScreenIndicator_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C
// 0x00E0 (0x0430 - 0x0350)
class UWBP_CoreOffScreenIndicator_Item_C final : public UCoreScreenIndicatorWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       K33NoiseAnim;                                      // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ObjectiveStrokeAnim;                               // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StealthLossAnim;                                   // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Arrow;                                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ArrowBig;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ArrowSmall;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ArrowStroke;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HeartIMG;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 K33Noise1;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 K33Noise2;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 K33Noise3;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               K33NoiseDetection;                                 // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Line;                                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LoudNoise;                                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Objective;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ObjectiveIcon;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StealthLine01;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StealthLine02;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StealthLine03;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StealthLine04;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               StealthLoss;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TerrorRadius;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TypeSwitcher;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsStealthAnimationPlaying;                         // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsObjectivePlaying;                                // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ConstrainedViewSize;                               // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsK33NoisePlaying;                                 // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateTerrorRadiusIndicator(const struct FScreenIndicatorViewData& Data);
	void UpdatePosition(double RadAngle);
	void UpdateObjectiveIndicator(const struct FScreenIndicatorViewData& Data, bool ShowIconAtLocation);
	void UpdateNoiseIndicator(const struct FScreenIndicatorViewData& Data);
	void UpdateK33Noise(const struct FScreenIndicatorViewData& Data);
	void UpdateInFrontPosition(const struct FVector2D& ScreenPosition);
	void UpdateDistance(double Distance);
	void UpdateAngle(class UWidget* RotationRoot, const struct FVector2D& Position, double* RadAngle);
	void Update_Stealth_Indicator(const struct FScreenIndicatorViewData& Data);
	void StopIdleAnimation();
	void SetData(const struct FScreenIndicatorViewData& Data);
	void PlayIdleObjectiveAnimation();
	void PlayIdleAnimation();
	void GetViewportSize(struct FVector2D* ViewportSize);
	void GetFullViewportSize(struct FVector2D* ViewportSize);
	void ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item(int32 EntryPoint);
	void ClearData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreOffScreenIndicator_Item_C">();
	}
	static class UWBP_CoreOffScreenIndicator_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreOffScreenIndicator_Item_C>();
	}
};
static_assert(alignof(UWBP_CoreOffScreenIndicator_Item_C) == 0x000008, "Wrong alignment on UWBP_CoreOffScreenIndicator_Item_C");
static_assert(sizeof(UWBP_CoreOffScreenIndicator_Item_C) == 0x000430, "Wrong size on UWBP_CoreOffScreenIndicator_Item_C");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, UberGraphFrame) == 0x000350, "Member 'UWBP_CoreOffScreenIndicator_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, K33NoiseAnim) == 0x000358, "Member 'UWBP_CoreOffScreenIndicator_Item_C::K33NoiseAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ObjectiveStrokeAnim) == 0x000360, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ObjectiveStrokeAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLossAnim) == 0x000368, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLossAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, Arrow) == 0x000370, "Member 'UWBP_CoreOffScreenIndicator_Item_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ArrowBig) == 0x000378, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ArrowBig' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ArrowSmall) == 0x000380, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ArrowSmall' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ArrowStroke) == 0x000388, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ArrowStroke' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, HeartIMG) == 0x000390, "Member 'UWBP_CoreOffScreenIndicator_Item_C::HeartIMG' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, K33Noise1) == 0x000398, "Member 'UWBP_CoreOffScreenIndicator_Item_C::K33Noise1' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, K33Noise2) == 0x0003A0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::K33Noise2' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, K33Noise3) == 0x0003A8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::K33Noise3' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, K33NoiseDetection) == 0x0003B0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::K33NoiseDetection' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, Line) == 0x0003B8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::Line' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, LoudNoise) == 0x0003C0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::LoudNoise' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, Objective) == 0x0003C8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::Objective' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ObjectiveIcon) == 0x0003D0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ObjectiveIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLine01) == 0x0003D8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLine01' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLine02) == 0x0003E0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLine02' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLine03) == 0x0003E8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLine03' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLine04) == 0x0003F0, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLine04' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, StealthLoss) == 0x0003F8, "Member 'UWBP_CoreOffScreenIndicator_Item_C::StealthLoss' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, TerrorRadius) == 0x000400, "Member 'UWBP_CoreOffScreenIndicator_Item_C::TerrorRadius' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, TypeSwitcher) == 0x000408, "Member 'UWBP_CoreOffScreenIndicator_Item_C::TypeSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, IsStealthAnimationPlaying) == 0x000410, "Member 'UWBP_CoreOffScreenIndicator_Item_C::IsStealthAnimationPlaying' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, IsObjectivePlaying) == 0x000411, "Member 'UWBP_CoreOffScreenIndicator_Item_C::IsObjectivePlaying' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, ConstrainedViewSize) == 0x000418, "Member 'UWBP_CoreOffScreenIndicator_Item_C::ConstrainedViewSize' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffScreenIndicator_Item_C, IsK33NoisePlaying) == 0x000428, "Member 'UWBP_CoreOffScreenIndicator_Item_C::IsK33NoisePlaying' has a wrong offset!");

}

