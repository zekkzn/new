#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K31

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_K31.WBP_K31_C.UpdateSurvivorClaws
// 0x0048 (0x0048 - 0x0000)
struct WBP_K31_C_UpdateSurvivorClaws final
{
public:
	class UK31StatusData*                         Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         OldBatteryAmount;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewBatteryAmount;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_UpdateSurvivorClaws) == 0x000008, "Wrong alignment on WBP_K31_C_UpdateSurvivorClaws");
static_assert(sizeof(WBP_K31_C_UpdateSurvivorClaws) == 0x000048, "Wrong size on WBP_K31_C_UpdateSurvivorClaws");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, Data) == 0x000000, "Member 'WBP_K31_C_UpdateSurvivorClaws::Data' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, OldBatteryAmount) == 0x000008, "Member 'WBP_K31_C_UpdateSurvivorClaws::OldBatteryAmount' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, NewBatteryAmount) == 0x00000C, "Member 'WBP_K31_C_UpdateSurvivorClaws::NewBatteryAmount' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, Temp_int_Variable) == 0x000010, "Member 'WBP_K31_C_UpdateSurvivorClaws::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, Temp_int_Variable_1) == 0x000018, "Member 'WBP_K31_C_UpdateSurvivorClaws::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, Temp_int_Variable_2) == 0x000028, "Member 'WBP_K31_C_UpdateSurvivorClaws::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00002D, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, Temp_int_Variable_3) == 0x000034, "Member 'WBP_K31_C_UpdateSurvivorClaws::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000039, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Add_IntInt_ReturnValue_5) == 0x000040, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000044, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_BooleanOR_ReturnValue) == 0x000045, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_BooleanOR_ReturnValue_1) == 0x000046, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateSurvivorClaws, CallFunc_Less_IntInt_ReturnValue_2) == 0x000047, "Member 'WBP_K31_C_UpdateSurvivorClaws::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.UpdateStoredValues
// 0x0028 (0x0028 - 0x0000)
struct WBP_K31_C_UpdateStoredValues final
{
public:
	class UK31StatusData*                         Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBatteryNumber_BatteryIndex;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBatteryNumber_BatteryIndex_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_UpdateStoredValues) == 0x000008, "Wrong alignment on WBP_K31_C_UpdateStoredValues");
static_assert(sizeof(WBP_K31_C_UpdateStoredValues) == 0x000028, "Wrong size on WBP_K31_C_UpdateStoredValues");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, Data) == 0x000000, "Member 'WBP_K31_C_UpdateStoredValues::Data' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GetBatteryNumber_BatteryIndex) == 0x000008, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GetBatteryNumber_BatteryIndex' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GetBatteryNumber_BatteryIndex_1) == 0x00000C, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GetBatteryNumber_BatteryIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000012, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000013, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000014, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast) == 0x000018, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateStoredValues, CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast_1) == 0x000020, "Member 'WBP_K31_C_UpdateStoredValues::CallFunc_GetBatteryNumber_LockonProgress_ImplicitCast_1' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.UpdateKillerClaws
// 0x0018 (0x0018 - 0x0000)
struct WBP_K31_C_UpdateKillerClaws final
{
public:
	class UK31StatusData*                         Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_UpdateKillerClaws) == 0x000008, "Wrong alignment on WBP_K31_C_UpdateKillerClaws");
static_assert(sizeof(WBP_K31_C_UpdateKillerClaws) == 0x000018, "Wrong size on WBP_K31_C_UpdateKillerClaws");
static_assert(offsetof(WBP_K31_C_UpdateKillerClaws, Data) == 0x000000, "Member 'WBP_K31_C_UpdateKillerClaws::Data' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateKillerClaws, Temp_int_Variable) == 0x000008, "Member 'WBP_K31_C_UpdateKillerClaws::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateKillerClaws, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'WBP_K31_C_UpdateKillerClaws::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateKillerClaws, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'WBP_K31_C_UpdateKillerClaws::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_UpdateKillerClaws, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_K31_C_UpdateKillerClaws::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.SetKillerData
// 0x0098 (0x0098 - 0x0000)
struct WBP_K31_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_K31_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_K31_C_SetKillerData");
static_assert(sizeof(WBP_K31_C_SetKillerData) == 0x000098, "Wrong size on WBP_K31_C_SetKillerData");
static_assert(offsetof(WBP_K31_C_SetKillerData, Data) == 0x000000, "Member 'WBP_K31_C_SetKillerData::Data' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.SetK31Data
// 0x0030 (0x0030 - 0x0000)
struct WBP_K31_C_SetK31Data final
{
public:
	bool                                          IsLocalKiller;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31StatusData*                         K31StatusData;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_SetK31Data) == 0x000008, "Wrong alignment on WBP_K31_C_SetK31Data");
static_assert(sizeof(WBP_K31_C_SetK31Data) == 0x000030, "Wrong size on WBP_K31_C_SetK31Data");
static_assert(offsetof(WBP_K31_C_SetK31Data, IsLocalKiller) == 0x000000, "Member 'WBP_K31_C_SetK31Data::IsLocalKiller' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_SetK31Data, K31StatusData) == 0x000008, "Member 'WBP_K31_C_SetK31Data::K31StatusData' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_SetK31Data, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_K31_C_SetK31Data::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_SetK31Data, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_K31_C_SetK31Data::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_SetK31Data, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_K31_C_SetK31Data::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_SetK31Data, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'WBP_K31_C_SetK31Data::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_K31_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_K31_C_PreConstruct");
static_assert(sizeof(WBP_K31_C_PreConstruct) == 0x000001, "Wrong size on WBP_K31_C_PreConstruct");
static_assert(offsetof(WBP_K31_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_K31_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.PlayBatteryAnimation
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_K31_C_PlayBatteryAnimation final
{
public:
	int32                                         BatteryIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOn;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTrapped;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_2;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_3;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_4;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_5;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_6;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_7;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_8;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_9;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_10;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_11;                        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item_12;                        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_PlayBatteryAnimation) == 0x000008, "Wrong alignment on WBP_K31_C_PlayBatteryAnimation");
static_assert(sizeof(WBP_K31_C_PlayBatteryAnimation) == 0x0000A8, "Wrong size on WBP_K31_C_PlayBatteryAnimation");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, BatteryIndex) == 0x000000, "Member 'WBP_K31_C_PlayBatteryAnimation::BatteryIndex' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, IsOn) == 0x000004, "Member 'WBP_K31_C_PlayBatteryAnimation::IsOn' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, IsTrapped) == 0x000005, "Member 'WBP_K31_C_PlayBatteryAnimation::IsTrapped' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_2) == 0x000018, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_3) == 0x000020, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_4) == 0x000030, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_5) == 0x000038, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_6) == 0x000040, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_7) == 0x000048, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000050, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_PlayAnimation_ReturnValue_1) == 0x000058, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_8) == 0x000060, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_9) == 0x000068, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000070, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_PlayAnimation_ReturnValue_2) == 0x000078, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_10) == 0x000080, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_11) == 0x000088, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_Array_Get_Item_12) == 0x000090, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_PlayAnimation_ReturnValue_3) == 0x000098, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_PlayBatteryAnimation, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x0000A0, "Member 'WBP_K31_C_PlayBatteryAnimation::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.GetBatteryNumber
// 0x0050 (0x0050 - 0x0000)
struct WBP_K31_C_GetBatteryNumber final
{
public:
	double                                        LockonProgress;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClawTrapped;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BatteryIndex;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Greater_FloatFloat_A_ImplicitCast;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Greater_FloatFloat_A_ImplicitCast_1;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Greater_FloatFloat_A_ImplicitCast_2;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Greater_FloatFloat_B_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Greater_FloatFloat_B_ImplicitCast_1;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Greater_FloatFloat_B_ImplicitCast_2;      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K31_C_GetBatteryNumber) == 0x000008, "Wrong alignment on WBP_K31_C_GetBatteryNumber");
static_assert(sizeof(WBP_K31_C_GetBatteryNumber) == 0x000050, "Wrong size on WBP_K31_C_GetBatteryNumber");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, LockonProgress) == 0x000000, "Member 'WBP_K31_C_GetBatteryNumber::LockonProgress' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, IsClawTrapped) == 0x000008, "Member 'WBP_K31_C_GetBatteryNumber::IsClawTrapped' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, BatteryIndex) == 0x00000C, "Member 'WBP_K31_C_GetBatteryNumber::BatteryIndex' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000021, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000030, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_A_ImplicitCast) == 0x000034, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_A_ImplicitCast_1) == 0x000038, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_A_ImplicitCast_2) == 0x00003C, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_B_ImplicitCast) == 0x000040, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_B_ImplicitCast_1) == 0x000044, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_GetBatteryNumber, CallFunc_Greater_FloatFloat_B_ImplicitCast_2) == 0x000048, "Member 'WBP_K31_C_GetBatteryNumber::CallFunc_Greater_FloatFloat_B_ImplicitCast_2' has a wrong offset!");

// Function WBP_K31.WBP_K31_C.ExecuteUbergraph_WBP_K31
// 0x0108 (0x0108 - 0x0000)
struct WBP_K31_C_ExecuteUbergraph_WBP_K31 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31StatusData*                         K2Node_DynamicCast_AsK31Status_Data;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31StatusData*                         CallFunc_SpawnObject_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array_2;                          // 0x00E8(0x0010)(ReferenceParm)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array_3;                          // 0x00F8(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_K31_C_ExecuteUbergraph_WBP_K31) == 0x000008, "Wrong alignment on WBP_K31_C_ExecuteUbergraph_WBP_K31");
static_assert(sizeof(WBP_K31_C_ExecuteUbergraph_WBP_K31) == 0x000108, "Wrong size on WBP_K31_C_ExecuteUbergraph_WBP_K31");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, EntryPoint) == 0x000000, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_Event_data) == 0x000008, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_Event_IsDesignTime) == 0x0000A0, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_DynamicCast_AsK31Status_Data) == 0x0000A8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_DynamicCast_AsK31Status_Data' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, CallFunc_SpawnObject_ReturnValue) == 0x0000B8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000C0, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_MakeArray_Array_2) == 0x0000E8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_K31_C_ExecuteUbergraph_WBP_K31, K2Node_MakeArray_Array_3) == 0x0000F8, "Member 'WBP_K31_C_ExecuteUbergraph_WBP_K31::K2Node_MakeArray_Array_3' has a wrong offset!");

}

