#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK34

#include "Basic.hpp"

#include "StatSystem_structs.hpp"


namespace SDK
{

// Enum TheK34.EK34Foot
// NumValues: 0x0003
enum class EK34Foot : uint8
{
	LeftFoot                                 = 0,
	RightFoot                                = 1,
	EK34Foot_MAX                             = 2,
};

// Enum TheK34.EScamperPhase
// NumValues: 0x0005
enum class EScamperPhase : uint8
{
	Charging                                 = 0,
	Dashing                                  = 1,
	Chaining                                 = 2,
	Completed                                = 3,
	EScamperPhase_MAX                        = 4,
};

// ScriptStruct TheK34.CamperDistractionData
// 0x0078 (0x0078 - 0x0000)
struct alignas(0x08) FCamperDistractionData final
{
public:
	uint8                                         Pad_0[0x78];                                       // 0x0000(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCamperDistractionData) == 0x000008, "Wrong alignment on FCamperDistractionData");
static_assert(sizeof(FCamperDistractionData) == 0x000078, "Wrong size on FCamperDistractionData");

// ScriptStruct TheK34.K34FootstepVisibilityRaycastDefinition
// 0x000C (0x000C - 0x0000)
struct FK34FootstepVisibilityRaycastDefinition final
{
public:
	float                                         HeightOffset;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalOffset;                                  // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SphereTraceRadius;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FK34FootstepVisibilityRaycastDefinition) == 0x000004, "Wrong alignment on FK34FootstepVisibilityRaycastDefinition");
static_assert(sizeof(FK34FootstepVisibilityRaycastDefinition) == 0x00000C, "Wrong size on FK34FootstepVisibilityRaycastDefinition");
static_assert(offsetof(FK34FootstepVisibilityRaycastDefinition, HeightOffset) == 0x000000, "Member 'FK34FootstepVisibilityRaycastDefinition::HeightOffset' has a wrong offset!");
static_assert(offsetof(FK34FootstepVisibilityRaycastDefinition, HorizontalOffset) == 0x000004, "Member 'FK34FootstepVisibilityRaycastDefinition::HorizontalOffset' has a wrong offset!");
static_assert(offsetof(FK34FootstepVisibilityRaycastDefinition, SphereTraceRadius) == 0x000008, "Member 'FK34FootstepVisibilityRaycastDefinition::SphereTraceRadius' has a wrong offset!");

// ScriptStruct TheK34.K34ScamperMovementSpeedSetting
// 0x0130 (0x0130 - 0x0000)
struct FK34ScamperMovementSpeedSetting final
{
public:
	class UCurveFloat*                            SpeedCurve;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            MouseTurnLimitationCurve;                          // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ControllerTurnLimitationCurve;                     // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatProperty                          AccelerationMultiplierModifier;                    // 0x0018(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FStatProperty                          Duration;                                          // 0x00A0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FK34ScamperMovementSpeedSetting) == 0x000008, "Wrong alignment on FK34ScamperMovementSpeedSetting");
static_assert(sizeof(FK34ScamperMovementSpeedSetting) == 0x000130, "Wrong size on FK34ScamperMovementSpeedSetting");
static_assert(offsetof(FK34ScamperMovementSpeedSetting, SpeedCurve) == 0x000000, "Member 'FK34ScamperMovementSpeedSetting::SpeedCurve' has a wrong offset!");
static_assert(offsetof(FK34ScamperMovementSpeedSetting, MouseTurnLimitationCurve) == 0x000008, "Member 'FK34ScamperMovementSpeedSetting::MouseTurnLimitationCurve' has a wrong offset!");
static_assert(offsetof(FK34ScamperMovementSpeedSetting, ControllerTurnLimitationCurve) == 0x000010, "Member 'FK34ScamperMovementSpeedSetting::ControllerTurnLimitationCurve' has a wrong offset!");
static_assert(offsetof(FK34ScamperMovementSpeedSetting, AccelerationMultiplierModifier) == 0x000018, "Member 'FK34ScamperMovementSpeedSetting::AccelerationMultiplierModifier' has a wrong offset!");
static_assert(offsetof(FK34ScamperMovementSpeedSetting, Duration) == 0x0000A0, "Member 'FK34ScamperMovementSpeedSetting::Duration' has a wrong offset!");

}

