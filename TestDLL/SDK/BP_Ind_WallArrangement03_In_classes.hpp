#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ind_WallArrangement03_In

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ind_WallArrangement03_In.BP_Ind_WallArrangement03_In_C
// 0x0030 (0x02D0 - 0x02A0)
class ABP_Ind_WallArrangement03_In_C final : public AActor
{
public:
	class UChildActorComponent*                   BP_WL_Br_T01_1;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_WL_Br_T01_0;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Light03;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Ind_WL_Br_2mStraight01;                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ind_WallArrangement03_In_C">();
	}
	static class ABP_Ind_WallArrangement03_In_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ind_WallArrangement03_In_C>();
	}
};
static_assert(alignof(ABP_Ind_WallArrangement03_In_C) == 0x000008, "Wrong alignment on ABP_Ind_WallArrangement03_In_C");
static_assert(sizeof(ABP_Ind_WallArrangement03_In_C) == 0x0002D0, "Wrong size on ABP_Ind_WallArrangement03_In_C");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, BP_WL_Br_T01_1) == 0x0002A0, "Member 'ABP_Ind_WallArrangement03_In_C::BP_WL_Br_T01_1' has a wrong offset!");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, BP_WL_Br_T01_0) == 0x0002A8, "Member 'ABP_Ind_WallArrangement03_In_C::BP_WL_Br_T01_0' has a wrong offset!");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, BP_Light03) == 0x0002B0, "Member 'ABP_Ind_WallArrangement03_In_C::BP_Light03' has a wrong offset!");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, BP_Ind_WL_Br_2mStraight01) == 0x0002B8, "Member 'ABP_Ind_WallArrangement03_In_C::BP_Ind_WL_Br_2mStraight01' has a wrong offset!");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, Scene) == 0x0002C0, "Member 'ABP_Ind_WallArrangement03_In_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Ind_WallArrangement03_In_C, Root) == 0x0002C8, "Member 'ABP_Ind_WallArrangement03_In_C::Root' has a wrong offset!");

}

