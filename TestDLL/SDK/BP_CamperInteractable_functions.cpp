#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CamperInteractable

#include "Basic.hpp"

#include "BP_CamperInteractable_classes.hpp"
#include "BP_CamperInteractable_parameters.hpp"


namespace SDK
{

// Function BP_CamperInteractable.BP_CamperInteractable_C.AddGestureInteractions
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CamperInteractable_C::AddGestureInteractions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "AddGestureInteractions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.AddInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInteractionDefinition*           Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::AddInteraction(class UInteractionDefinition* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "AddInteraction");

	Params::BP_CamperInteractable_C_AddInteraction Parms{};

	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.ExecuteUbergraph_BP_CamperInteractable
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::ExecuteUbergraph_BP_CamperInteractable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "ExecuteUbergraph_BP_CamperInteractable");

	Params::BP_CamperInteractable_C_ExecuteUbergraph_BP_CamperInteractable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetCloseToPlayerSnapPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ADBDPlayer*                       SnappingPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       SnappedPlayer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SnapPoint                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::GetCloseToPlayerSnapPoint(class ADBDPlayer* SnappingPlayer, class ADBDPlayer* SnappedPlayer, struct FTransform* SnapPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetCloseToPlayerSnapPoint");

	Params::BP_CamperInteractable_C_GetCloseToPlayerSnapPoint Parms{};

	Parms.SnappingPlayer = SnappingPlayer;
	Parms.SnappedPlayer = SnappedPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (SnapPoint != nullptr)
		*SnapPoint = std::move(Parms.SnapPoint);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetInterrupteeSnapPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ADBDPlayer*                       Interruptee                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          CurrentInterruption                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Snap_Point                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::GetInterrupteeSnapPoint(class ADBDPlayer* Interruptee, class UInterruptionDefinition* CurrentInterruption, struct FTransform* Snap_Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetInterrupteeSnapPoint");

	Params::BP_CamperInteractable_C_GetInterrupteeSnapPoint Parms{};

	Parms.Interruptee = Interruptee;
	Parms.CurrentInterruption = CurrentInterruption;

	UObject::ProcessEvent(Func, &Parms);

	if (Snap_Point != nullptr)
		*Snap_Point = std::move(Parms.Snap_Point);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetInterruptorSnapPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          CurrentInterruption                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Snap_Point                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::GetInterruptorSnapPoint(class ADBDPlayer* Interruptor, class ADBDPlayer* Interruptee, class UInterruptionDefinition* CurrentInterruption, struct FTransform* Snap_Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetInterruptorSnapPoint");

	Params::BP_CamperInteractable_C_GetInterruptorSnapPoint Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.CurrentInterruption = CurrentInterruption;

	UObject::ProcessEvent(Func, &Parms);

	if (Snap_Point != nullptr)
		*Snap_Point = std::move(Parms.Snap_Point);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetMedkit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AMedkit*                          Medkit                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::GetMedkit(class ADBDPlayer* Player, class AMedkit** Medkit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetMedkit");

	Params::BP_CamperInteractable_C_GetMedkit Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Medkit != nullptr)
		*Medkit = Parms.Medkit;
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.HPSlotChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UChargeableComponent*             NewHPSlot                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       InteractingPlayer                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  OldPercentFilled                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::HPSlotChanged(class UChargeableComponent*& NewHPSlot, class ADBDPlayer*& InteractingPlayer, double& OldPercentFilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "HPSlotChanged");

	Params::BP_CamperInteractable_C_HPSlotChanged Parms{};

	Parms.NewHPSlot = NewHPSlot;
	Parms.InteractingPlayer = InteractingPlayer;
	Parms.OldPercentFilled = OldPercentFilled;

	UObject::ProcessEvent(Func, &Parms);

	NewHPSlot = Parms.NewHPSlot;
	InteractingPlayer = Parms.InteractingPlayer;
	OldPercentFilled = Parms.OldPercentFilled;
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.InitHealingInteractors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CamperInteractable_C::InitHealingInteractors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "InitHealingInteractors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.Initialize Healing Interactions
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CamperInteractable_C::Initialize_Healing_Interactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "Initialize Healing Interactions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.InitInteractable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CamperInteractable_C::InitInteractable(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "InitInteractable");

	Params::BP_CamperInteractable_C_InitInteractable Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CamperInteractable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.SkillCheckAestheticResponse
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CamperInteractable_C::SkillCheckAestheticResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "SkillCheckAestheticResponse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CamperInteractable_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetCamper
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ACamperPlayer*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class ACamperPlayer* ABP_CamperInteractable_C::GetCamper() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetCamper");

	Params::BP_CamperInteractable_C_GetCamper Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.GetSlasherInteractor
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UInteractor*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UInteractor* ABP_CamperInteractable_C::GetSlasherInteractor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "GetSlasherInteractor");

	Params::BP_CamperInteractable_C_GetSlasherInteractor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CamperInteractable.BP_CamperInteractable_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Interactor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_CamperInteractable_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CamperInteractable_C", "IsInterruptionPossible");

	Params::BP_CamperInteractable_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Interactor = Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

