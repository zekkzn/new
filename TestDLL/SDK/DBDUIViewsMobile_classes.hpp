#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDUIViewsMobile

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DBDUIViewsMobile_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// Class DBDUIViewsMobile.FriendsMenuUtilities
// 0x0000 (0x0030 - 0x0030)
class UFriendsMenuUtilities final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendsMenuUtilities">();
	}
	static class UFriendsMenuUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendsMenuUtilities>();
	}
};
static_assert(alignof(UFriendsMenuUtilities) == 0x000008, "Wrong alignment on UFriendsMenuUtilities");
static_assert(sizeof(UFriendsMenuUtilities) == 0x000030, "Wrong size on UFriendsMenuUtilities");

// Class DBDUIViewsMobile.MatchConfigDifficultyDataAsset
// 0x0050 (0x0088 - 0x0038)
class UMatchConfigDifficultyDataAsset final : public UPrimaryDataAsset
{
public:
	TMap<ECustomMatchDifficulty, struct FMatchConfigDifficultyData> DifficultiesData;                                  // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchConfigDifficultyDataAsset">();
	}
	static class UMatchConfigDifficultyDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchConfigDifficultyDataAsset>();
	}
};
static_assert(alignof(UMatchConfigDifficultyDataAsset) == 0x000008, "Wrong alignment on UMatchConfigDifficultyDataAsset");
static_assert(sizeof(UMatchConfigDifficultyDataAsset) == 0x000088, "Wrong size on UMatchConfigDifficultyDataAsset");
static_assert(offsetof(UMatchConfigDifficultyDataAsset, DifficultiesData) == 0x000038, "Member 'UMatchConfigDifficultyDataAsset::DifficultiesData' has a wrong offset!");

// Class DBDUIViewsMobile.MatchConfigOptionsDataAsset
// 0x0050 (0x0088 - 0x0038)
class UMatchConfigOptionsDataAsset final : public UPrimaryDataAsset
{
public:
	TMap<ECustomMatchOptions, struct FMatchOptionAssetData> OptionsData;                                       // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchConfigOptionsDataAsset">();
	}
	static class UMatchConfigOptionsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchConfigOptionsDataAsset>();
	}
};
static_assert(alignof(UMatchConfigOptionsDataAsset) == 0x000008, "Wrong alignment on UMatchConfigOptionsDataAsset");
static_assert(sizeof(UMatchConfigOptionsDataAsset) == 0x000088, "Wrong size on UMatchConfigOptionsDataAsset");
static_assert(offsetof(UMatchConfigOptionsDataAsset, OptionsData) == 0x000038, "Member 'UMatchConfigOptionsDataAsset::OptionsData' has a wrong offset!");

// Class DBDUIViewsMobile.MatchConfigTabsDataAsset
// 0x0050 (0x0088 - 0x0038)
class UMatchConfigTabsDataAsset final : public UPrimaryDataAsset
{
public:
	TMap<ECustomMatchTab, struct FMatchConfigTabData> Data;                                              // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchConfigTabsDataAsset">();
	}
	static class UMatchConfigTabsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchConfigTabsDataAsset>();
	}
};
static_assert(alignof(UMatchConfigTabsDataAsset) == 0x000008, "Wrong alignment on UMatchConfigTabsDataAsset");
static_assert(sizeof(UMatchConfigTabsDataAsset) == 0x000088, "Wrong size on UMatchConfigTabsDataAsset");
static_assert(offsetof(UMatchConfigTabsDataAsset, Data) == 0x000038, "Member 'UMatchConfigTabsDataAsset::Data' has a wrong offset!");

// Class DBDUIViewsMobile.MobileBaseUserWidget
// 0x00A0 (0x0348 - 0x02A8)
class UMobileBaseUserWidget : public UUserWidget
{
public:
	uint8                                         Pad_2A8[0x10];                                     // 0x02A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                HighlightWidget;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _tutorialAnimationName;                            // 0x02C0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         _tutorialNumberOfLoops;                            // 0x02CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D0[0x78];                                     // 0x02D0(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FinishTutorialVisuals();
	bool IsInTutorialState();
	void OnSynchronizeProperties();
	void PropagateOnHighlightWidgetClicked(const class FName OnBoardingID);
	void TriggerTutorialVisuals();
	void TryBroadcastOnHighlightWidgetClicked();
	void TutorialAnimationFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MobileBaseUserWidget">();
	}
	static class UMobileBaseUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMobileBaseUserWidget>();
	}
};
static_assert(alignof(UMobileBaseUserWidget) == 0x000008, "Wrong alignment on UMobileBaseUserWidget");
static_assert(sizeof(UMobileBaseUserWidget) == 0x000348, "Wrong size on UMobileBaseUserWidget");
static_assert(offsetof(UMobileBaseUserWidget, HighlightWidget) == 0x0002B8, "Member 'UMobileBaseUserWidget::HighlightWidget' has a wrong offset!");
static_assert(offsetof(UMobileBaseUserWidget, _tutorialAnimationName) == 0x0002C0, "Member 'UMobileBaseUserWidget::_tutorialAnimationName' has a wrong offset!");
static_assert(offsetof(UMobileBaseUserWidget, _tutorialNumberOfLoops) == 0x0002CC, "Member 'UMobileBaseUserWidget::_tutorialNumberOfLoops' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaCustomMatchLobbyRule
// 0x0018 (0x0360 - 0x0348)
class UUMGAtlantaCustomMatchLobbyRule final : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                             RuleName;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             OptionName;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaCustomMatchLobbyRule">();
	}
	static class UUMGAtlantaCustomMatchLobbyRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaCustomMatchLobbyRule>();
	}
};
static_assert(alignof(UUMGAtlantaCustomMatchLobbyRule) == 0x000008, "Wrong alignment on UUMGAtlantaCustomMatchLobbyRule");
static_assert(sizeof(UUMGAtlantaCustomMatchLobbyRule) == 0x000360, "Wrong size on UUMGAtlantaCustomMatchLobbyRule");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyRule, RuleName) == 0x000348, "Member 'UUMGAtlantaCustomMatchLobbyRule::RuleName' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyRule, OptionName) == 0x000350, "Member 'UUMGAtlantaCustomMatchLobbyRule::OptionName' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaCustomMatchLobbyScreen
// 0x0038 (0x0380 - 0x0348)
class UUMGAtlantaCustomMatchLobbyScreen final : public UMobileBaseUserWidget
{
public:
	class UUMGBaseButtonWidget*                   EditButton;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           RulesBox;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CustomMatchTitle;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MatchRulesTitle;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x18];                                     // 0x0368(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleEditConfigButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaCustomMatchLobbyScreen">();
	}
	static class UUMGAtlantaCustomMatchLobbyScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaCustomMatchLobbyScreen>();
	}
};
static_assert(alignof(UUMGAtlantaCustomMatchLobbyScreen) == 0x000008, "Wrong alignment on UUMGAtlantaCustomMatchLobbyScreen");
static_assert(sizeof(UUMGAtlantaCustomMatchLobbyScreen) == 0x000380, "Wrong size on UUMGAtlantaCustomMatchLobbyScreen");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyScreen, EditButton) == 0x000348, "Member 'UUMGAtlantaCustomMatchLobbyScreen::EditButton' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyScreen, RulesBox) == 0x000350, "Member 'UUMGAtlantaCustomMatchLobbyScreen::RulesBox' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyScreen, CustomMatchTitle) == 0x000358, "Member 'UUMGAtlantaCustomMatchLobbyScreen::CustomMatchTitle' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaCustomMatchLobbyScreen, MatchRulesTitle) == 0x000360, "Member 'UUMGAtlantaCustomMatchLobbyScreen::MatchRulesTitle' has a wrong offset!");

// Class DBDUIViewsMobile.UMGPageScrollWidget
// 0x0140 (0x0488 - 0x0348)
class UUMGPageScrollWidget : public UMobileBaseUserWidget
{
public:
	float                                         ItemWidth;                                         // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemHeight;                                        // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RowCount;                                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColumnCount;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemGapDistance;                                   // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalPageCount;                                    // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ButtonWidth;                                       // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          OnPageChangeSound;                                 // 0x0368(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                           ContainerPanel;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         ButtonsPanel;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   _pageButtonWidgetClass;                            // 0x0380(0x0038)(Edit, NoClear, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UCanvasPanel*>                   _itemArray;                                        // 0x03B8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         _currentPageIndex;                                 // 0x03C8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMobileBaseUserWidget*>          _activeWidgets;                                    // 0x03D0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0xA8];                                     // 0x03E0(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandlePageButtonClicked(int32 PageIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGPageScrollWidget">();
	}
	static class UUMGPageScrollWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGPageScrollWidget>();
	}
};
static_assert(alignof(UUMGPageScrollWidget) == 0x000008, "Wrong alignment on UUMGPageScrollWidget");
static_assert(sizeof(UUMGPageScrollWidget) == 0x000488, "Wrong size on UUMGPageScrollWidget");
static_assert(offsetof(UUMGPageScrollWidget, ItemWidth) == 0x000348, "Member 'UUMGPageScrollWidget::ItemWidth' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ItemHeight) == 0x00034C, "Member 'UUMGPageScrollWidget::ItemHeight' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, RowCount) == 0x000350, "Member 'UUMGPageScrollWidget::RowCount' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ColumnCount) == 0x000354, "Member 'UUMGPageScrollWidget::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ItemGapDistance) == 0x000358, "Member 'UUMGPageScrollWidget::ItemGapDistance' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, TotalPageCount) == 0x00035C, "Member 'UUMGPageScrollWidget::TotalPageCount' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ButtonWidth) == 0x000360, "Member 'UUMGPageScrollWidget::ButtonWidth' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, OnPageChangeSound) == 0x000368, "Member 'UUMGPageScrollWidget::OnPageChangeSound' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ContainerPanel) == 0x000370, "Member 'UUMGPageScrollWidget::ContainerPanel' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, ButtonsPanel) == 0x000378, "Member 'UUMGPageScrollWidget::ButtonsPanel' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, _pageButtonWidgetClass) == 0x000380, "Member 'UUMGPageScrollWidget::_pageButtonWidgetClass' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, _itemArray) == 0x0003B8, "Member 'UUMGPageScrollWidget::_itemArray' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, _currentPageIndex) == 0x0003C8, "Member 'UUMGPageScrollWidget::_currentPageIndex' has a wrong offset!");
static_assert(offsetof(UUMGPageScrollWidget, _activeWidgets) == 0x0003D0, "Member 'UUMGPageScrollWidget::_activeWidgets' has a wrong offset!");

// Class DBDUIViewsMobile.UMGGridPageScrollWidget
// 0x0008 (0x0490 - 0x0488)
class UUMGGridPageScrollWidget : public UUMGPageScrollWidget
{
public:
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGGridPageScrollWidget">();
	}
	static class UUMGGridPageScrollWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGGridPageScrollWidget>();
	}
};
static_assert(alignof(UUMGGridPageScrollWidget) == 0x000008, "Wrong alignment on UUMGGridPageScrollWidget");
static_assert(sizeof(UUMGGridPageScrollWidget) == 0x000490, "Wrong size on UUMGGridPageScrollWidget");

// Class DBDUIViewsMobile.UMGAtlantaMatchConfigPageScroll
// 0x0180 (0x0610 - 0x0490)
class UUMGAtlantaMatchConfigPageScroll final : public UUMGGridPageScrollWidget
{
public:
	struct FCustomMatchTabConfig                  CharactersTabConfig;                               // 0x0490(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FCustomMatchTabConfig                  InventoryTabConfig;                                // 0x04D8(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FCustomMatchTabConfig                  MapTabConfig;                                      // 0x0520(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_568[0xA8];                                     // 0x0568(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaMatchConfigPageScroll">();
	}
	static class UUMGAtlantaMatchConfigPageScroll* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaMatchConfigPageScroll>();
	}
};
static_assert(alignof(UUMGAtlantaMatchConfigPageScroll) == 0x000008, "Wrong alignment on UUMGAtlantaMatchConfigPageScroll");
static_assert(sizeof(UUMGAtlantaMatchConfigPageScroll) == 0x000610, "Wrong size on UUMGAtlantaMatchConfigPageScroll");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScroll, CharactersTabConfig) == 0x000490, "Member 'UUMGAtlantaMatchConfigPageScroll::CharactersTabConfig' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScroll, InventoryTabConfig) == 0x0004D8, "Member 'UUMGAtlantaMatchConfigPageScroll::InventoryTabConfig' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScroll, MapTabConfig) == 0x000520, "Member 'UUMGAtlantaMatchConfigPageScroll::MapTabConfig' has a wrong offset!");

// Class DBDUIViewsMobile.UMGBaseButtonWidget
// 0x0178 (0x04C0 - 0x0348)
#pragma pack(push, 0x1)
class alignas(0x10) UUMGBaseButtonWidget : public UMobileBaseUserWidget
{
public:
	FMulticastInlineDelegateProperty_             OnBaseButtonClickedEvent;                          // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBaseButtonPressedEvent;                          // 0x0358(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBaseButtonReleasedEvent;                         // 0x0368(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBaseButtonLongPressEvent;                        // 0x0378(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UButton*                                Button;                                            // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IconPicture;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ButtonLabel;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            ButtonPictureBrush;                                // 0x03A0(0x00D0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   ButtonText;                                        // 0x0470(0x0018)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          OnPressSound;                                      // 0x0488(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          OnClickSound;                                      // 0x0490(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          OnLongPressSound;                                  // 0x0498(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          OnReleaseSound;                                    // 0x04A0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                          OnHoveredSound;                                    // 0x04A8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B0[0x8];                                      // 0x04B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleButtonClickedEvent();
	void HandleButtonHoveredEvent();
	void HandleButtonLongPressEvent();
	void HandleButtonPressedEvent();
	void HandleButtonReleasedEvent();
	void OnBaseButtonClicked__DelegateSignature();
	void OnBaseButtonLongPress__DelegateSignature();
	void OnBaseButtonPressed__DelegateSignature();
	void OnBaseButtonReleased__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGBaseButtonWidget">();
	}
	static class UUMGBaseButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGBaseButtonWidget>();
	}
};
#pragma pack(pop)
static_assert(alignof(UUMGBaseButtonWidget) == 0x000010, "Wrong alignment on UUMGBaseButtonWidget");
static_assert(sizeof(UUMGBaseButtonWidget) == 0x0004C0, "Wrong size on UUMGBaseButtonWidget");
static_assert(offsetof(UUMGBaseButtonWidget, OnBaseButtonClickedEvent) == 0x000348, "Member 'UUMGBaseButtonWidget::OnBaseButtonClickedEvent' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnBaseButtonPressedEvent) == 0x000358, "Member 'UUMGBaseButtonWidget::OnBaseButtonPressedEvent' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnBaseButtonReleasedEvent) == 0x000368, "Member 'UUMGBaseButtonWidget::OnBaseButtonReleasedEvent' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnBaseButtonLongPressEvent) == 0x000378, "Member 'UUMGBaseButtonWidget::OnBaseButtonLongPressEvent' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, Button) == 0x000388, "Member 'UUMGBaseButtonWidget::Button' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, IconPicture) == 0x000390, "Member 'UUMGBaseButtonWidget::IconPicture' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, ButtonLabel) == 0x000398, "Member 'UUMGBaseButtonWidget::ButtonLabel' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, ButtonPictureBrush) == 0x0003A0, "Member 'UUMGBaseButtonWidget::ButtonPictureBrush' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, ButtonText) == 0x000470, "Member 'UUMGBaseButtonWidget::ButtonText' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnPressSound) == 0x000488, "Member 'UUMGBaseButtonWidget::OnPressSound' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnClickSound) == 0x000490, "Member 'UUMGBaseButtonWidget::OnClickSound' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnLongPressSound) == 0x000498, "Member 'UUMGBaseButtonWidget::OnLongPressSound' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnReleaseSound) == 0x0004A0, "Member 'UUMGBaseButtonWidget::OnReleaseSound' has a wrong offset!");
static_assert(offsetof(UUMGBaseButtonWidget, OnHoveredSound) == 0x0004A8, "Member 'UUMGBaseButtonWidget::OnHoveredSound' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaMatchConfigPageScrollItem
// 0x0040 (0x0500 - 0x04C0)
class UUMGAtlantaMatchConfigPageScrollItem final : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                           ImagePanel;                                        // 0x04B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           DefaultPanel;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DefaultImage;                                      // 0x04C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _unselectedOpacity;                                // 0x04D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _selectedOpacity;                                  // 0x04D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D8[0x28];                                     // 0x04D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaMatchConfigPageScrollItem">();
	}
	static class UUMGAtlantaMatchConfigPageScrollItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaMatchConfigPageScrollItem>();
	}
};
static_assert(alignof(UUMGAtlantaMatchConfigPageScrollItem) == 0x000010, "Wrong alignment on UUMGAtlantaMatchConfigPageScrollItem");
static_assert(sizeof(UUMGAtlantaMatchConfigPageScrollItem) == 0x000500, "Wrong size on UUMGAtlantaMatchConfigPageScrollItem");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScrollItem, ImagePanel) == 0x0004B8, "Member 'UUMGAtlantaMatchConfigPageScrollItem::ImagePanel' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScrollItem, DefaultPanel) == 0x0004C0, "Member 'UUMGAtlantaMatchConfigPageScrollItem::DefaultPanel' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScrollItem, DefaultImage) == 0x0004C8, "Member 'UUMGAtlantaMatchConfigPageScrollItem::DefaultImage' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScrollItem, _unselectedOpacity) == 0x0004D0, "Member 'UUMGAtlantaMatchConfigPageScrollItem::_unselectedOpacity' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigPageScrollItem, _selectedOpacity) == 0x0004D4, "Member 'UUMGAtlantaMatchConfigPageScrollItem::_selectedOpacity' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaMatchConfigScreen
// 0x0268 (0x05B0 - 0x0348)
class UUMGAtlantaMatchConfigScreen final : public UMobileBaseUserWidget
{
public:
	class UUMGAtlantaMatchConfigPageScroll*       MatchConfigPageScroll;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         TabsBox;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           BotsTabsBox;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                   BackButton;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MatchConfigTitle;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             InventoryTitle;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             SelectedTabTitle;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMatchConfigTabsDataAsset*              TabsDataAsset;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            SmallTabSeparation;                                // 0x0390(0x00D0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            BigTabSeparation;                                  // 0x0460(0x00D0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                         TabsVerticalPadding;                               // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TabsHorizontalPadding;                             // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_538[0x78];                                     // 0x0538(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleBackButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaMatchConfigScreen">();
	}
	static class UUMGAtlantaMatchConfigScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaMatchConfigScreen>();
	}
};
static_assert(alignof(UUMGAtlantaMatchConfigScreen) == 0x000010, "Wrong alignment on UUMGAtlantaMatchConfigScreen");
static_assert(sizeof(UUMGAtlantaMatchConfigScreen) == 0x0005B0, "Wrong size on UUMGAtlantaMatchConfigScreen");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, MatchConfigPageScroll) == 0x000348, "Member 'UUMGAtlantaMatchConfigScreen::MatchConfigPageScroll' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, TabsBox) == 0x000350, "Member 'UUMGAtlantaMatchConfigScreen::TabsBox' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, BotsTabsBox) == 0x000358, "Member 'UUMGAtlantaMatchConfigScreen::BotsTabsBox' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, BackButton) == 0x000360, "Member 'UUMGAtlantaMatchConfigScreen::BackButton' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, MatchConfigTitle) == 0x000368, "Member 'UUMGAtlantaMatchConfigScreen::MatchConfigTitle' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, InventoryTitle) == 0x000370, "Member 'UUMGAtlantaMatchConfigScreen::InventoryTitle' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, SelectedTabTitle) == 0x000378, "Member 'UUMGAtlantaMatchConfigScreen::SelectedTabTitle' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, TabsDataAsset) == 0x000380, "Member 'UUMGAtlantaMatchConfigScreen::TabsDataAsset' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, SmallTabSeparation) == 0x000390, "Member 'UUMGAtlantaMatchConfigScreen::SmallTabSeparation' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, BigTabSeparation) == 0x000460, "Member 'UUMGAtlantaMatchConfigScreen::BigTabSeparation' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, TabsVerticalPadding) == 0x000530, "Member 'UUMGAtlantaMatchConfigScreen::TabsVerticalPadding' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigScreen, TabsHorizontalPadding) == 0x000534, "Member 'UUMGAtlantaMatchConfigScreen::TabsHorizontalPadding' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaMatchConfigTab
// 0x0030 (0x04F0 - 0x04C0)
class UUMGAtlantaMatchConfigTab final : public UUMGBaseButtonWidget
{
public:
	class USizeBox*                               IconSizeBox;                                       // 0x04B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TabName;                                           // 0x04C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           RandomPanel;                                       // 0x04C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D0[0x20];                                     // 0x04D0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaMatchConfigTab">();
	}
	static class UUMGAtlantaMatchConfigTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaMatchConfigTab>();
	}
};
static_assert(alignof(UUMGAtlantaMatchConfigTab) == 0x000010, "Wrong alignment on UUMGAtlantaMatchConfigTab");
static_assert(sizeof(UUMGAtlantaMatchConfigTab) == 0x0004F0, "Wrong size on UUMGAtlantaMatchConfigTab");
static_assert(offsetof(UUMGAtlantaMatchConfigTab, IconSizeBox) == 0x0004B8, "Member 'UUMGAtlantaMatchConfigTab::IconSizeBox' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigTab, TabName) == 0x0004C0, "Member 'UUMGAtlantaMatchConfigTab::TabName' has a wrong offset!");
static_assert(offsetof(UUMGAtlantaMatchConfigTab, RandomPanel) == 0x0004C8, "Member 'UUMGAtlantaMatchConfigTab::RandomPanel' has a wrong offset!");

// Class DBDUIViewsMobile.UMGAtlantaRequestRoleButton
// 0x0010 (0x04D0 - 0x04C0)
class UUMGAtlantaRequestRoleButton final : public UUMGBaseButtonWidget
{
public:
	class UWidgetSwitcher*                        IconSwitcher;                                      // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C0[0x10];                                     // 0x04C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnToggleActiveState(bool IsActive);
	void SetIsActive(bool IsActive);

	bool GetIsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGAtlantaRequestRoleButton">();
	}
	static class UUMGAtlantaRequestRoleButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGAtlantaRequestRoleButton>();
	}
};
static_assert(alignof(UUMGAtlantaRequestRoleButton) == 0x000010, "Wrong alignment on UUMGAtlantaRequestRoleButton");
static_assert(sizeof(UUMGAtlantaRequestRoleButton) == 0x0004D0, "Wrong size on UUMGAtlantaRequestRoleButton");
static_assert(offsetof(UUMGAtlantaRequestRoleButton, IconSwitcher) == 0x0004B8, "Member 'UUMGAtlantaRequestRoleButton::IconSwitcher' has a wrong offset!");

// Class DBDUIViewsMobile.UMGBaseFriendListContextualMenuWidget
// 0x0058 (0x03A0 - 0x0348)
class UUMGBaseFriendListContextualMenuWidget : public UMobileBaseUserWidget
{
public:
	uint8                                         Pad_348[0x18];                                     // 0x0348(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGFriendButtonWidget*                 InviteToPartyButton;                               // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendButtonWidget*                 MuteButton;                                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendButtonWidget*                 UnmuteButton;                                      // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendButtonWidget*                 RemoveFriendButton;                                // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendButtonWidget*                 RemovePlayerFromPartyButton;                       // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x10];                                     // 0x0388(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          TransitionOutAnimationSound;                       // 0x0398(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleActionTriggered(EActionOnFriendType ActionType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGBaseFriendListContextualMenuWidget">();
	}
	static class UUMGBaseFriendListContextualMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGBaseFriendListContextualMenuWidget>();
	}
};
static_assert(alignof(UUMGBaseFriendListContextualMenuWidget) == 0x000008, "Wrong alignment on UUMGBaseFriendListContextualMenuWidget");
static_assert(sizeof(UUMGBaseFriendListContextualMenuWidget) == 0x0003A0, "Wrong size on UUMGBaseFriendListContextualMenuWidget");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, InviteToPartyButton) == 0x000360, "Member 'UUMGBaseFriendListContextualMenuWidget::InviteToPartyButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, MuteButton) == 0x000368, "Member 'UUMGBaseFriendListContextualMenuWidget::MuteButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, UnmuteButton) == 0x000370, "Member 'UUMGBaseFriendListContextualMenuWidget::UnmuteButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, RemoveFriendButton) == 0x000378, "Member 'UUMGBaseFriendListContextualMenuWidget::RemoveFriendButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, RemovePlayerFromPartyButton) == 0x000380, "Member 'UUMGBaseFriendListContextualMenuWidget::RemovePlayerFromPartyButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListContextualMenuWidget, TransitionOutAnimationSound) == 0x000398, "Member 'UUMGBaseFriendListContextualMenuWidget::TransitionOutAnimationSound' has a wrong offset!");

// Class DBDUIViewsMobile.UMGBaseFriendListElement
// 0x00C0 (0x0408 - 0x0348)
class UUMGBaseFriendListElement : public UMobileBaseUserWidget
{
public:
	class UImage*                                 StatusPicture;                                     // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             FriendName;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             FriendStatus;                                      // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           SelectionHighlight;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                   ItemSelectionBaseButton;                           // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             ContextualMenuPosition;                            // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAtlantaFriendUIData                   _cachedFriendData;                                 // 0x0378(0x0068)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                             FriendUIStatusDataTable;                           // 0x03E0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x20];                                     // 0x03E8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TriggerActionOnThisFriend(EActionOnFriendType ActionType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGBaseFriendListElement">();
	}
	static class UUMGBaseFriendListElement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGBaseFriendListElement>();
	}
};
static_assert(alignof(UUMGBaseFriendListElement) == 0x000008, "Wrong alignment on UUMGBaseFriendListElement");
static_assert(sizeof(UUMGBaseFriendListElement) == 0x000408, "Wrong size on UUMGBaseFriendListElement");
static_assert(offsetof(UUMGBaseFriendListElement, StatusPicture) == 0x000348, "Member 'UUMGBaseFriendListElement::StatusPicture' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, FriendName) == 0x000350, "Member 'UUMGBaseFriendListElement::FriendName' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, FriendStatus) == 0x000358, "Member 'UUMGBaseFriendListElement::FriendStatus' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, SelectionHighlight) == 0x000360, "Member 'UUMGBaseFriendListElement::SelectionHighlight' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, ItemSelectionBaseButton) == 0x000368, "Member 'UUMGBaseFriendListElement::ItemSelectionBaseButton' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, ContextualMenuPosition) == 0x000370, "Member 'UUMGBaseFriendListElement::ContextualMenuPosition' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, _cachedFriendData) == 0x000378, "Member 'UUMGBaseFriendListElement::_cachedFriendData' has a wrong offset!");
static_assert(offsetof(UUMGBaseFriendListElement, FriendUIStatusDataTable) == 0x0003E0, "Member 'UUMGBaseFriendListElement::FriendUIStatusDataTable' has a wrong offset!");

// Class DBDUIViewsMobile.UMGBaseTabButtonWidget
// 0x0070 (0x0530 - 0x04C0)
class UUMGBaseTabButtonWidget : public UUMGBaseButtonWidget
{
public:
	uint8                                         Pad_4B8[0x18];                                     // 0x04B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlock*                         TabText;                                           // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             NotificationCountText;                             // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           NotificationPanel;                                 // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 TabButtonSelected;                                 // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         TabIndex;                                          // 0x04F0(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TitleOfTab;                                        // 0x04F8(0x0018)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_510[0x8];                                      // 0x0510(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _tabTextParameter;                                 // 0x0518(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGBaseTabButtonWidget">();
	}
	static class UUMGBaseTabButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGBaseTabButtonWidget>();
	}
};
static_assert(alignof(UUMGBaseTabButtonWidget) == 0x000010, "Wrong alignment on UUMGBaseTabButtonWidget");
static_assert(sizeof(UUMGBaseTabButtonWidget) == 0x000530, "Wrong size on UUMGBaseTabButtonWidget");
static_assert(offsetof(UUMGBaseTabButtonWidget, TabText) == 0x0004D0, "Member 'UUMGBaseTabButtonWidget::TabText' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, NotificationCountText) == 0x0004D8, "Member 'UUMGBaseTabButtonWidget::NotificationCountText' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, NotificationPanel) == 0x0004E0, "Member 'UUMGBaseTabButtonWidget::NotificationPanel' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, TabButtonSelected) == 0x0004E8, "Member 'UUMGBaseTabButtonWidget::TabButtonSelected' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, TabIndex) == 0x0004F0, "Member 'UUMGBaseTabButtonWidget::TabIndex' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, TitleOfTab) == 0x0004F8, "Member 'UUMGBaseTabButtonWidget::TitleOfTab' has a wrong offset!");
static_assert(offsetof(UUMGBaseTabButtonWidget, _tabTextParameter) == 0x000518, "Member 'UUMGBaseTabButtonWidget::_tabTextParameter' has a wrong offset!");

// Class DBDUIViewsMobile.UMGBaseTabListWidget
// 0x0000 (0x0348 - 0x0348)
class UUMGBaseTabListWidget : public UMobileBaseUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGBaseTabListWidget">();
	}
	static class UUMGBaseTabListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGBaseTabListWidget>();
	}
};
static_assert(alignof(UUMGBaseTabListWidget) == 0x000008, "Wrong alignment on UUMGBaseTabListWidget");
static_assert(sizeof(UUMGBaseTabListWidget) == 0x000348, "Wrong size on UUMGBaseTabListWidget");

// Class DBDUIViewsMobile.UMGExpandableListWidget
// 0x00A8 (0x03F0 - 0x0348)
class alignas(0x10) UUMGExpandableListWidget final : public UMobileBaseUserWidget
{
public:
	bool                                          ShouldHideExpandableListIfEmpty;                   // 0x0348(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsExtendedAtStart;                                 // 0x0349(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGBaseButtonWidget*                   ExpansionButton;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           ItemContainer;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CategorieName;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ItemCount;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExpandableArea*                        ExpandableArea;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   HeaderTitle;                                       // 0x0378(0x0018)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    _childWidgets;                                     // 0x0398(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x48];                                     // 0x03A8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ToggleExpansion();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGExpandableListWidget">();
	}
	static class UUMGExpandableListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGExpandableListWidget>();
	}
};
static_assert(alignof(UUMGExpandableListWidget) == 0x000010, "Wrong alignment on UUMGExpandableListWidget");
static_assert(sizeof(UUMGExpandableListWidget) == 0x0003F0, "Wrong size on UUMGExpandableListWidget");
static_assert(offsetof(UUMGExpandableListWidget, ShouldHideExpandableListIfEmpty) == 0x000348, "Member 'UUMGExpandableListWidget::ShouldHideExpandableListIfEmpty' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, IsExtendedAtStart) == 0x000349, "Member 'UUMGExpandableListWidget::IsExtendedAtStart' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, ExpansionButton) == 0x000350, "Member 'UUMGExpandableListWidget::ExpansionButton' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, ItemContainer) == 0x000358, "Member 'UUMGExpandableListWidget::ItemContainer' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, CategorieName) == 0x000360, "Member 'UUMGExpandableListWidget::CategorieName' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, ItemCount) == 0x000368, "Member 'UUMGExpandableListWidget::ItemCount' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, ExpandableArea) == 0x000370, "Member 'UUMGExpandableListWidget::ExpandableArea' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, HeaderTitle) == 0x000378, "Member 'UUMGExpandableListWidget::HeaderTitle' has a wrong offset!");
static_assert(offsetof(UUMGExpandableListWidget, _childWidgets) == 0x000398, "Member 'UUMGExpandableListWidget::_childWidgets' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendBaseTabListWidget
// 0x0000 (0x0348 - 0x0348)
class UUMGFriendBaseTabListWidget : public UUMGBaseTabListWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendBaseTabListWidget">();
	}
	static class UUMGFriendBaseTabListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendBaseTabListWidget>();
	}
};
static_assert(alignof(UUMGFriendBaseTabListWidget) == 0x000008, "Wrong alignment on UUMGFriendBaseTabListWidget");
static_assert(sizeof(UUMGFriendBaseTabListWidget) == 0x000348, "Wrong size on UUMGFriendBaseTabListWidget");

// Class DBDUIViewsMobile.UMGFriendButtonWidget
// 0x0080 (0x0540 - 0x04C0)
class UUMGFriendButtonWidget final : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                           InteractableButtonStatePanel;                      // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           NonInteractableButtonStatePanel;                   // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             NonInteractableExplanationText;                    // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             NonInteractableActionText;                         // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInteractable;                                   // 0x04D8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 NonInteractableImage;                              // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EFriendTypeButton, struct FSlateBrush>   _nonInteractableImages;                            // 0x04E8(0x0050)(Edit, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_538[0x8];                                      // 0x0538(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendButtonWidget">();
	}
	static class UUMGFriendButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendButtonWidget>();
	}
};
static_assert(alignof(UUMGFriendButtonWidget) == 0x000010, "Wrong alignment on UUMGFriendButtonWidget");
static_assert(sizeof(UUMGFriendButtonWidget) == 0x000540, "Wrong size on UUMGFriendButtonWidget");
static_assert(offsetof(UUMGFriendButtonWidget, InteractableButtonStatePanel) == 0x0004B8, "Member 'UUMGFriendButtonWidget::InteractableButtonStatePanel' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, NonInteractableButtonStatePanel) == 0x0004C0, "Member 'UUMGFriendButtonWidget::NonInteractableButtonStatePanel' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, NonInteractableExplanationText) == 0x0004C8, "Member 'UUMGFriendButtonWidget::NonInteractableExplanationText' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, NonInteractableActionText) == 0x0004D0, "Member 'UUMGFriendButtonWidget::NonInteractableActionText' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, _isInteractable) == 0x0004D8, "Member 'UUMGFriendButtonWidget::_isInteractable' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, NonInteractableImage) == 0x0004E0, "Member 'UUMGFriendButtonWidget::NonInteractableImage' has a wrong offset!");
static_assert(offsetof(UUMGFriendButtonWidget, _nonInteractableImages) == 0x0004E8, "Member 'UUMGFriendButtonWidget::_nonInteractableImages' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendContextualMenuWidget
// 0x0000 (0x03A0 - 0x03A0)
class UUMGFriendContextualMenuWidget final : public UUMGBaseFriendListContextualMenuWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendContextualMenuWidget">();
	}
	static class UUMGFriendContextualMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendContextualMenuWidget>();
	}
};
static_assert(alignof(UUMGFriendContextualMenuWidget) == 0x000008, "Wrong alignment on UUMGFriendContextualMenuWidget");
static_assert(sizeof(UUMGFriendContextualMenuWidget) == 0x0003A0, "Wrong size on UUMGFriendContextualMenuWidget");

// Class DBDUIViewsMobile.UMGFriendElementWidget
// 0x0298 (0x06A0 - 0x0408)
class UUMGFriendElementWidget : public UUMGBaseFriendListElement
{
public:
	class UImage*                                 FavoriteSlot;                                      // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                FavoriteButton;                                    // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 SelectionImage;                                    // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 SelectedPicture;                                   // 0x0420(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 FriendIcon;                                        // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            UnFavoriteBrush;                                   // 0x0430(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            FavoriteBrush;                                     // 0x0500(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            MutedBrush;                                        // 0x05D0(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void HandleFavoriteButtonClicked();
	void HandleSelectionButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendElementWidget">();
	}
	static class UUMGFriendElementWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendElementWidget>();
	}
};
static_assert(alignof(UUMGFriendElementWidget) == 0x000010, "Wrong alignment on UUMGFriendElementWidget");
static_assert(sizeof(UUMGFriendElementWidget) == 0x0006A0, "Wrong size on UUMGFriendElementWidget");
static_assert(offsetof(UUMGFriendElementWidget, FavoriteSlot) == 0x000408, "Member 'UUMGFriendElementWidget::FavoriteSlot' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, FavoriteButton) == 0x000410, "Member 'UUMGFriendElementWidget::FavoriteButton' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, SelectionImage) == 0x000418, "Member 'UUMGFriendElementWidget::SelectionImage' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, SelectedPicture) == 0x000420, "Member 'UUMGFriendElementWidget::SelectedPicture' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, FriendIcon) == 0x000428, "Member 'UUMGFriendElementWidget::FriendIcon' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, UnFavoriteBrush) == 0x000430, "Member 'UUMGFriendElementWidget::UnFavoriteBrush' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, FavoriteBrush) == 0x000500, "Member 'UUMGFriendElementWidget::FavoriteBrush' has a wrong offset!");
static_assert(offsetof(UUMGFriendElementWidget, MutedBrush) == 0x0005D0, "Member 'UUMGFriendElementWidget::MutedBrush' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendListTabWidget
// 0x0018 (0x0360 - 0x0348)
class UUMGFriendListTabWidget final : public UUMGFriendBaseTabListWidget
{
public:
	class UUMGExpandableListWidget*               SentInviteToParty;                                 // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGExpandableListWidget*               ConnectedFriendsExpandableList;                    // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGExpandableListWidget*               DisconnectedFriendsExpandableList;                 // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendListTabWidget">();
	}
	static class UUMGFriendListTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendListTabWidget>();
	}
};
static_assert(alignof(UUMGFriendListTabWidget) == 0x000008, "Wrong alignment on UUMGFriendListTabWidget");
static_assert(sizeof(UUMGFriendListTabWidget) == 0x000360, "Wrong size on UUMGFriendListTabWidget");
static_assert(offsetof(UUMGFriendListTabWidget, SentInviteToParty) == 0x000348, "Member 'UUMGFriendListTabWidget::SentInviteToParty' has a wrong offset!");
static_assert(offsetof(UUMGFriendListTabWidget, ConnectedFriendsExpandableList) == 0x000350, "Member 'UUMGFriendListTabWidget::ConnectedFriendsExpandableList' has a wrong offset!");
static_assert(offsetof(UUMGFriendListTabWidget, DisconnectedFriendsExpandableList) == 0x000358, "Member 'UUMGFriendListTabWidget::DisconnectedFriendsExpandableList' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendPartyListElementWidget
// 0x01C0 (0x0860 - 0x06A0)
class UUMGFriendPartyListElementWidget final : public UUMGFriendElementWidget
{
public:
	class UWidgetSwitcher*                        ButtonOrStatusSwitcher;                            // 0x06A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                CancelInviteButton;                                // 0x06A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 PartyStatusImage;                                  // 0x06B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6B8[0x8];                                      // 0x06B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconNotReady;                                      // 0x06C0(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            IconReady;                                         // 0x0790(0x00D0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	void HandleCancelInviteButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendPartyListElementWidget">();
	}
	static class UUMGFriendPartyListElementWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendPartyListElementWidget>();
	}
};
static_assert(alignof(UUMGFriendPartyListElementWidget) == 0x000010, "Wrong alignment on UUMGFriendPartyListElementWidget");
static_assert(sizeof(UUMGFriendPartyListElementWidget) == 0x000860, "Wrong size on UUMGFriendPartyListElementWidget");
static_assert(offsetof(UUMGFriendPartyListElementWidget, ButtonOrStatusSwitcher) == 0x0006A0, "Member 'UUMGFriendPartyListElementWidget::ButtonOrStatusSwitcher' has a wrong offset!");
static_assert(offsetof(UUMGFriendPartyListElementWidget, CancelInviteButton) == 0x0006A8, "Member 'UUMGFriendPartyListElementWidget::CancelInviteButton' has a wrong offset!");
static_assert(offsetof(UUMGFriendPartyListElementWidget, PartyStatusImage) == 0x0006B0, "Member 'UUMGFriendPartyListElementWidget::PartyStatusImage' has a wrong offset!");
static_assert(offsetof(UUMGFriendPartyListElementWidget, IconNotReady) == 0x0006C0, "Member 'UUMGFriendPartyListElementWidget::IconNotReady' has a wrong offset!");
static_assert(offsetof(UUMGFriendPartyListElementWidget, IconReady) == 0x000790, "Member 'UUMGFriendPartyListElementWidget::IconReady' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendSearchBarWidget
// 0x0040 (0x0388 - 0x0348)
class UUMGFriendSearchBarWidget final : public UMobileBaseUserWidget
{
public:
	uint8                                         Pad_348[0x30];                                     // 0x0348(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       InputTextField;                                    // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                   SearchButton;                                      // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleSearchButtonClicked();
	void HandleTextInputChanged(const class FText& TextInput);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendSearchBarWidget">();
	}
	static class UUMGFriendSearchBarWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendSearchBarWidget>();
	}
};
static_assert(alignof(UUMGFriendSearchBarWidget) == 0x000008, "Wrong alignment on UUMGFriendSearchBarWidget");
static_assert(sizeof(UUMGFriendSearchBarWidget) == 0x000388, "Wrong size on UUMGFriendSearchBarWidget");
static_assert(offsetof(UUMGFriendSearchBarWidget, InputTextField) == 0x000378, "Member 'UUMGFriendSearchBarWidget::InputTextField' has a wrong offset!");
static_assert(offsetof(UUMGFriendSearchBarWidget, SearchButton) == 0x000380, "Member 'UUMGFriendSearchBarWidget::SearchButton' has a wrong offset!");

// Class DBDUIViewsMobile.UMGFriendTabButtonWidget
// 0x0050 (0x0580 - 0x0530)
class UUMGFriendTabButtonWidget final : public UUMGBaseTabButtonWidget
{
public:
	uint8                                         Pad_530[0x50];                                     // 0x0530(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGFriendTabButtonWidget">();
	}
	static class UUMGFriendTabButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGFriendTabButtonWidget>();
	}
};
static_assert(alignof(UUMGFriendTabButtonWidget) == 0x000010, "Wrong alignment on UUMGFriendTabButtonWidget");
static_assert(sizeof(UUMGFriendTabButtonWidget) == 0x000580, "Wrong size on UUMGFriendTabButtonWidget");

// Class DBDUIViewsMobile.UMGRequestsListTabWidget
// 0x0010 (0x0358 - 0x0348)
class UUMGRequestsListTabWidget final : public UUMGFriendBaseTabListWidget
{
public:
	class UUMGExpandableListWidget*               FriendRequestExpandableList;                       // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGExpandableListWidget*               PendingExpandableList;                             // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGRequestsListTabWidget">();
	}
	static class UUMGRequestsListTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGRequestsListTabWidget>();
	}
};
static_assert(alignof(UUMGRequestsListTabWidget) == 0x000008, "Wrong alignment on UUMGRequestsListTabWidget");
static_assert(sizeof(UUMGRequestsListTabWidget) == 0x000358, "Wrong size on UUMGRequestsListTabWidget");
static_assert(offsetof(UUMGRequestsListTabWidget, FriendRequestExpandableList) == 0x000348, "Member 'UUMGRequestsListTabWidget::FriendRequestExpandableList' has a wrong offset!");
static_assert(offsetof(UUMGRequestsListTabWidget, PendingExpandableList) == 0x000350, "Member 'UUMGRequestsListTabWidget::PendingExpandableList' has a wrong offset!");

// Class DBDUIViewsMobile.UMGScrollListPageButton
// 0x0028 (0x0370 - 0x0348)
class UUMGScrollListPageButton final : public UMobileBaseUserWidget
{
public:
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0348(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         PageIndex;                                         // 0x0358(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UButton*                                ActionButton;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 SelectedImage;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleActionButtonClick();
	void SetIsSelected(bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGScrollListPageButton">();
	}
	static class UUMGScrollListPageButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGScrollListPageButton>();
	}
};
static_assert(alignof(UUMGScrollListPageButton) == 0x000008, "Wrong alignment on UUMGScrollListPageButton");
static_assert(sizeof(UUMGScrollListPageButton) == 0x000370, "Wrong size on UUMGScrollListPageButton");
static_assert(offsetof(UUMGScrollListPageButton, OnClicked) == 0x000348, "Member 'UUMGScrollListPageButton::OnClicked' has a wrong offset!");
static_assert(offsetof(UUMGScrollListPageButton, PageIndex) == 0x000358, "Member 'UUMGScrollListPageButton::PageIndex' has a wrong offset!");
static_assert(offsetof(UUMGScrollListPageButton, ActionButton) == 0x000360, "Member 'UUMGScrollListPageButton::ActionButton' has a wrong offset!");
static_assert(offsetof(UUMGScrollListPageButton, SelectedImage) == 0x000368, "Member 'UUMGScrollListPageButton::SelectedImage' has a wrong offset!");

// Class DBDUIViewsMobile.UMGSuggestionsListTabWidget
// 0x0010 (0x0358 - 0x0348)
class UUMGSuggestionsListTabWidget final : public UUMGFriendBaseTabListWidget
{
public:
	class UUMGExpandableListWidget*               PlayedWithFriendsExpandableList;                   // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGExpandableListWidget*               SocialFriendsExpandableList;                       // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UMGSuggestionsListTabWidget">();
	}
	static class UUMGSuggestionsListTabWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMGSuggestionsListTabWidget>();
	}
};
static_assert(alignof(UUMGSuggestionsListTabWidget) == 0x000008, "Wrong alignment on UUMGSuggestionsListTabWidget");
static_assert(sizeof(UUMGSuggestionsListTabWidget) == 0x000358, "Wrong size on UUMGSuggestionsListTabWidget");
static_assert(offsetof(UUMGSuggestionsListTabWidget, PlayedWithFriendsExpandableList) == 0x000348, "Member 'UUMGSuggestionsListTabWidget::PlayedWithFriendsExpandableList' has a wrong offset!");
static_assert(offsetof(UUMGSuggestionsListTabWidget, SocialFriendsExpandableList) == 0x000350, "Member 'UUMGSuggestionsListTabWidget::SocialFriendsExpandableList' has a wrong offset!");

}

