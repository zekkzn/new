#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptableToolsFramework

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InteractiveToolsFramework_structs.hpp"
#include "ScriptableToolsFramework_structs.hpp"


namespace SDK::Params
{

// Function ScriptableToolsFramework.ScriptableInteractiveTool.AddLogMessage
// 0x0020 (0x0020 - 0x0000)
struct ScriptableInteractiveTool_AddLogMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          bHighlighted;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_AddLogMessage) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_AddLogMessage");
static_assert(sizeof(ScriptableInteractiveTool_AddLogMessage) == 0x000020, "Wrong size on ScriptableInteractiveTool_AddLogMessage");
static_assert(offsetof(ScriptableInteractiveTool_AddLogMessage, Message) == 0x000000, "Member 'ScriptableInteractiveTool_AddLogMessage::Message' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_AddLogMessage, bHighlighted) == 0x000018, "Member 'ScriptableInteractiveTool_AddLogMessage::bHighlighted' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.AddPropertySetOfType
// 0x0028 (0x0028 - 0x0000)
struct ScriptableInteractiveTool_AddPropertySetOfType final
{
public:
	TSubclassOf<class UScriptableInteractiveToolPropertySet> PropertySetType;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Identifier;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EToolsFrameworkOutcomePins                    Outcome;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_AddPropertySetOfType) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_AddPropertySetOfType");
static_assert(sizeof(ScriptableInteractiveTool_AddPropertySetOfType) == 0x000028, "Wrong size on ScriptableInteractiveTool_AddPropertySetOfType");
static_assert(offsetof(ScriptableInteractiveTool_AddPropertySetOfType, PropertySetType) == 0x000000, "Member 'ScriptableInteractiveTool_AddPropertySetOfType::PropertySetType' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_AddPropertySetOfType, Identifier) == 0x000008, "Member 'ScriptableInteractiveTool_AddPropertySetOfType::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_AddPropertySetOfType, Outcome) == 0x000018, "Member 'ScriptableInteractiveTool_AddPropertySetOfType::Outcome' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_AddPropertySetOfType, ReturnValue) == 0x000020, "Member 'ScriptableInteractiveTool_AddPropertySetOfType::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.ClearUserMessages
// 0x0002 (0x0002 - 0x0000)
struct ScriptableInteractiveTool_ClearUserMessages final
{
public:
	bool                                          bHelpMessage;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWarningMessage;                                   // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_ClearUserMessages) == 0x000001, "Wrong alignment on ScriptableInteractiveTool_ClearUserMessages");
static_assert(sizeof(ScriptableInteractiveTool_ClearUserMessages) == 0x000002, "Wrong size on ScriptableInteractiveTool_ClearUserMessages");
static_assert(offsetof(ScriptableInteractiveTool_ClearUserMessages, bHelpMessage) == 0x000000, "Member 'ScriptableInteractiveTool_ClearUserMessages::bHelpMessage' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_ClearUserMessages, bWarningMessage) == 0x000001, "Member 'ScriptableInteractiveTool_ClearUserMessages::bWarningMessage' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.CreateTRSGizmo
// 0x0090 (0x0090 - 0x0000)
struct ScriptableInteractiveTool_CreateTRSGizmo final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             InitialTransform;                                  // 0x0010(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptableToolGizmoOptions            GizmoOptions;                                      // 0x0070(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EToolsFrameworkOutcomePins                    Outcome;                                           // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_CreateTRSGizmo) == 0x000010, "Wrong alignment on ScriptableInteractiveTool_CreateTRSGizmo");
static_assert(sizeof(ScriptableInteractiveTool_CreateTRSGizmo) == 0x000090, "Wrong size on ScriptableInteractiveTool_CreateTRSGizmo");
static_assert(offsetof(ScriptableInteractiveTool_CreateTRSGizmo, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_CreateTRSGizmo::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_CreateTRSGizmo, InitialTransform) == 0x000010, "Member 'ScriptableInteractiveTool_CreateTRSGizmo::InitialTransform' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_CreateTRSGizmo, GizmoOptions) == 0x000070, "Member 'ScriptableInteractiveTool_CreateTRSGizmo::GizmoOptions' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_CreateTRSGizmo, Outcome) == 0x000088, "Member 'ScriptableInteractiveTool_CreateTRSGizmo::Outcome' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.DestroyTRSGizmo
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_DestroyTRSGizmo final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EToolsFrameworkOutcomePins                    Outcome;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_DestroyTRSGizmo) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_DestroyTRSGizmo");
static_assert(sizeof(ScriptableInteractiveTool_DestroyTRSGizmo) == 0x000018, "Wrong size on ScriptableInteractiveTool_DestroyTRSGizmo");
static_assert(offsetof(ScriptableInteractiveTool_DestroyTRSGizmo, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_DestroyTRSGizmo::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_DestroyTRSGizmo, Outcome) == 0x000010, "Member 'ScriptableInteractiveTool_DestroyTRSGizmo::Outcome' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.DisplayUserHelpMessage
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_DisplayUserHelpMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_DisplayUserHelpMessage) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_DisplayUserHelpMessage");
static_assert(sizeof(ScriptableInteractiveTool_DisplayUserHelpMessage) == 0x000018, "Wrong size on ScriptableInteractiveTool_DisplayUserHelpMessage");
static_assert(offsetof(ScriptableInteractiveTool_DisplayUserHelpMessage, Message) == 0x000000, "Member 'ScriptableInteractiveTool_DisplayUserHelpMessage::Message' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.DisplayUserWarningMessage
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_DisplayUserWarningMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_DisplayUserWarningMessage) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_DisplayUserWarningMessage");
static_assert(sizeof(ScriptableInteractiveTool_DisplayUserWarningMessage) == 0x000018, "Wrong size on ScriptableInteractiveTool_DisplayUserWarningMessage");
static_assert(offsetof(ScriptableInteractiveTool_DisplayUserWarningMessage, Message) == 0x000000, "Member 'ScriptableInteractiveTool_DisplayUserWarningMessage::Message' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.ForcePropertySetUpdateByName
// 0x0010 (0x0010 - 0x0000)
struct ScriptableInteractiveTool_ForcePropertySetUpdateByName final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_ForcePropertySetUpdateByName) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_ForcePropertySetUpdateByName");
static_assert(sizeof(ScriptableInteractiveTool_ForcePropertySetUpdateByName) == 0x000010, "Wrong size on ScriptableInteractiveTool_ForcePropertySetUpdateByName");
static_assert(offsetof(ScriptableInteractiveTool_ForcePropertySetUpdateByName, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_ForcePropertySetUpdateByName::Identifier' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.GetGizmoTransform
// 0x0070 (0x0070 - 0x0000)
struct ScriptableInteractiveTool_GetGizmoTransform final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_GetGizmoTransform) == 0x000010, "Wrong alignment on ScriptableInteractiveTool_GetGizmoTransform");
static_assert(sizeof(ScriptableInteractiveTool_GetGizmoTransform) == 0x000070, "Wrong size on ScriptableInteractiveTool_GetGizmoTransform");
static_assert(offsetof(ScriptableInteractiveTool_GetGizmoTransform, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_GetGizmoTransform::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_GetGizmoTransform, ReturnValue) == 0x000010, "Member 'ScriptableInteractiveTool_GetGizmoTransform::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.GetToolWorld
// 0x0008 (0x0008 - 0x0000)
struct ScriptableInteractiveTool_GetToolWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_GetToolWorld) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_GetToolWorld");
static_assert(sizeof(ScriptableInteractiveTool_GetToolWorld) == 0x000008, "Wrong size on ScriptableInteractiveTool_GetToolWorld");
static_assert(offsetof(ScriptableInteractiveTool_GetToolWorld, ReturnValue) == 0x000000, "Member 'ScriptableInteractiveTool_GetToolWorld::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnGizmoTransformChanged
// 0x0070 (0x0070 - 0x0000)
struct ScriptableInteractiveTool_OnGizmoTransformChanged final
{
public:
	class FString                                 GizmoIdentifier;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             NewTransform;                                      // 0x0010(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnGizmoTransformChanged) == 0x000010, "Wrong alignment on ScriptableInteractiveTool_OnGizmoTransformChanged");
static_assert(sizeof(ScriptableInteractiveTool_OnGizmoTransformChanged) == 0x000070, "Wrong size on ScriptableInteractiveTool_OnGizmoTransformChanged");
static_assert(offsetof(ScriptableInteractiveTool_OnGizmoTransformChanged, GizmoIdentifier) == 0x000000, "Member 'ScriptableInteractiveTool_OnGizmoTransformChanged::GizmoIdentifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_OnGizmoTransformChanged, NewTransform) == 0x000010, "Member 'ScriptableInteractiveTool_OnGizmoTransformChanged::NewTransform' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptDrawHUD
// 0x0008 (0x0008 - 0x0000)
struct ScriptableInteractiveTool_OnScriptDrawHUD final
{
public:
	class UScriptableTool_HUDAPI*                 DrawHUDAPI;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnScriptDrawHUD) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_OnScriptDrawHUD");
static_assert(sizeof(ScriptableInteractiveTool_OnScriptDrawHUD) == 0x000008, "Wrong size on ScriptableInteractiveTool_OnScriptDrawHUD");
static_assert(offsetof(ScriptableInteractiveTool_OnScriptDrawHUD, DrawHUDAPI) == 0x000000, "Member 'ScriptableInteractiveTool_OnScriptDrawHUD::DrawHUDAPI' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptRender
// 0x0008 (0x0008 - 0x0000)
struct ScriptableInteractiveTool_OnScriptRender final
{
public:
	class UScriptableTool_RenderAPI*              RenderAPI;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnScriptRender) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_OnScriptRender");
static_assert(sizeof(ScriptableInteractiveTool_OnScriptRender) == 0x000008, "Wrong size on ScriptableInteractiveTool_OnScriptRender");
static_assert(offsetof(ScriptableInteractiveTool_OnScriptRender, RenderAPI) == 0x000000, "Member 'ScriptableInteractiveTool_OnScriptRender::RenderAPI' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptShutdown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableInteractiveTool_OnScriptShutdown final
{
public:
	EToolShutdownType                             ShutdownType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnScriptShutdown) == 0x000001, "Wrong alignment on ScriptableInteractiveTool_OnScriptShutdown");
static_assert(sizeof(ScriptableInteractiveTool_OnScriptShutdown) == 0x000001, "Wrong size on ScriptableInteractiveTool_OnScriptShutdown");
static_assert(offsetof(ScriptableInteractiveTool_OnScriptShutdown, ShutdownType) == 0x000000, "Member 'ScriptableInteractiveTool_OnScriptShutdown::ShutdownType' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptTick
// 0x0004 (0x0004 - 0x0000)
struct ScriptableInteractiveTool_OnScriptTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnScriptTick) == 0x000004, "Wrong alignment on ScriptableInteractiveTool_OnScriptTick");
static_assert(sizeof(ScriptableInteractiveTool_OnScriptTick) == 0x000004, "Wrong size on ScriptableInteractiveTool_OnScriptTick");
static_assert(offsetof(ScriptableInteractiveTool_OnScriptTick, DeltaTime) == 0x000000, "Member 'ScriptableInteractiveTool_OnScriptTick::DeltaTime' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.RemovePropertySetByName
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_RemovePropertySetByName final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EToolsFrameworkOutcomePins                    Outcome;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_RemovePropertySetByName) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_RemovePropertySetByName");
static_assert(sizeof(ScriptableInteractiveTool_RemovePropertySetByName) == 0x000018, "Wrong size on ScriptableInteractiveTool_RemovePropertySetByName");
static_assert(offsetof(ScriptableInteractiveTool_RemovePropertySetByName, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_RemovePropertySetByName::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_RemovePropertySetByName, Outcome) == 0x000010, "Member 'ScriptableInteractiveTool_RemovePropertySetByName::Outcome' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.RequestToolShutdown
// 0x0020 (0x0020 - 0x0000)
struct ScriptableInteractiveTool_RequestToolShutdown final
{
public:
	bool                                          bAccept;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowUserPopupMessage;                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UserMessage;                                       // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_RequestToolShutdown) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_RequestToolShutdown");
static_assert(sizeof(ScriptableInteractiveTool_RequestToolShutdown) == 0x000020, "Wrong size on ScriptableInteractiveTool_RequestToolShutdown");
static_assert(offsetof(ScriptableInteractiveTool_RequestToolShutdown, bAccept) == 0x000000, "Member 'ScriptableInteractiveTool_RequestToolShutdown::bAccept' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_RequestToolShutdown, bShowUserPopupMessage) == 0x000001, "Member 'ScriptableInteractiveTool_RequestToolShutdown::bShowUserPopupMessage' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_RequestToolShutdown, UserMessage) == 0x000008, "Member 'ScriptableInteractiveTool_RequestToolShutdown::UserMessage' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.RestorePropertySetSettings
// 0x0020 (0x0020 - 0x0000)
struct ScriptableInteractiveTool_RestorePropertySetSettings final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveKey;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_RestorePropertySetSettings) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_RestorePropertySetSettings");
static_assert(sizeof(ScriptableInteractiveTool_RestorePropertySetSettings) == 0x000020, "Wrong size on ScriptableInteractiveTool_RestorePropertySetSettings");
static_assert(offsetof(ScriptableInteractiveTool_RestorePropertySetSettings, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_RestorePropertySetSettings::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_RestorePropertySetSettings, SaveKey) == 0x000008, "Member 'ScriptableInteractiveTool_RestorePropertySetSettings::SaveKey' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_RestorePropertySetSettings, ReturnValue) == 0x000018, "Member 'ScriptableInteractiveTool_RestorePropertySetSettings::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.SavePropertySetSettings
// 0x0020 (0x0020 - 0x0000)
struct ScriptableInteractiveTool_SavePropertySetSettings final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveKey;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_SavePropertySetSettings) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_SavePropertySetSettings");
static_assert(sizeof(ScriptableInteractiveTool_SavePropertySetSettings) == 0x000020, "Wrong size on ScriptableInteractiveTool_SavePropertySetSettings");
static_assert(offsetof(ScriptableInteractiveTool_SavePropertySetSettings, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_SavePropertySetSettings::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SavePropertySetSettings, SaveKey) == 0x000008, "Member 'ScriptableInteractiveTool_SavePropertySetSettings::SaveKey' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SavePropertySetSettings, ReturnValue) == 0x000018, "Member 'ScriptableInteractiveTool_SavePropertySetSettings::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetGizmoTransform
// 0x0080 (0x0080 - 0x0000)
struct ScriptableInteractiveTool_SetGizmoTransform final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             NewTransform;                                      // 0x0010(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUndoable;                                         // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_SetGizmoTransform) == 0x000010, "Wrong alignment on ScriptableInteractiveTool_SetGizmoTransform");
static_assert(sizeof(ScriptableInteractiveTool_SetGizmoTransform) == 0x000080, "Wrong size on ScriptableInteractiveTool_SetGizmoTransform");
static_assert(offsetof(ScriptableInteractiveTool_SetGizmoTransform, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_SetGizmoTransform::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SetGizmoTransform, NewTransform) == 0x000010, "Member 'ScriptableInteractiveTool_SetGizmoTransform::NewTransform' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SetGizmoTransform, bUndoable) == 0x000070, "Member 'ScriptableInteractiveTool_SetGizmoTransform::bUndoable' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetGizmoVisible
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_SetGizmoVisible final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisible;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_SetGizmoVisible) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_SetGizmoVisible");
static_assert(sizeof(ScriptableInteractiveTool_SetGizmoVisible) == 0x000018, "Wrong size on ScriptableInteractiveTool_SetGizmoVisible");
static_assert(offsetof(ScriptableInteractiveTool_SetGizmoVisible, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_SetGizmoVisible::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SetGizmoVisible, bVisible) == 0x000010, "Member 'ScriptableInteractiveTool_SetGizmoVisible::bVisible' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetPropertySetVisibleByName
// 0x0018 (0x0018 - 0x0000)
struct ScriptableInteractiveTool_SetPropertySetVisibleByName final
{
public:
	class FString                                 Identifier;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisible;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableInteractiveTool_SetPropertySetVisibleByName) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_SetPropertySetVisibleByName");
static_assert(sizeof(ScriptableInteractiveTool_SetPropertySetVisibleByName) == 0x000018, "Wrong size on ScriptableInteractiveTool_SetPropertySetVisibleByName");
static_assert(offsetof(ScriptableInteractiveTool_SetPropertySetVisibleByName, Identifier) == 0x000000, "Member 'ScriptableInteractiveTool_SetPropertySetVisibleByName::Identifier' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_SetPropertySetVisibleByName, bVisible) == 0x000010, "Member 'ScriptableInteractiveTool_SetPropertySetVisibleByName::bVisible' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchBoolProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchBoolProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, bool bNewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchBoolProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchBoolProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchBoolProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchBoolProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchBoolProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchBoolProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchBoolProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchBoolProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchBoolProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchBoolProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchBoolProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchBoolProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchEnumProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchEnumProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, uint8 NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchEnumProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchEnumProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchEnumProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchEnumProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchEnumProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchEnumProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchEnumProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchEnumProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchEnumProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchEnumProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchEnumProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchEnumProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchFloatProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchFloatProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, double NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchFloatProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchFloatProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchFloatProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchFloatProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchFloatProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchFloatProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchFloatProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchFloatProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchFloatProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchFloatProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchFloatProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchFloatProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchIntProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchIntProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, int32 NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchIntProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchIntProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchIntProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchIntProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchIntProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchIntProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchIntProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchIntProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchIntProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchIntProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchIntProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchIntProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchNameProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchNameProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class FName NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchNameProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchNameProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchNameProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchNameProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchNameProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchNameProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchNameProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchNameProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchNameProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchNameProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchNameProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchNameProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchObjectProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchObjectProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class UObject* NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchObjectProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchObjectProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchObjectProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchObjectProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchObjectProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchObjectProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchObjectProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchObjectProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchObjectProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchObjectProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchObjectProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchObjectProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchStringProperty
// 0x0038 (0x0038 - 0x0000)
struct ScriptableInteractiveTool_WatchStringProperty final
{
public:
	class UScriptableInteractiveToolPropertySet*  PropertySet;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const class FString& NewValue)> OnModified;                                        // 0x0018(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveToolPropertySet*  ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_WatchStringProperty) == 0x000008, "Wrong alignment on ScriptableInteractiveTool_WatchStringProperty");
static_assert(sizeof(ScriptableInteractiveTool_WatchStringProperty) == 0x000038, "Wrong size on ScriptableInteractiveTool_WatchStringProperty");
static_assert(offsetof(ScriptableInteractiveTool_WatchStringProperty, PropertySet) == 0x000000, "Member 'ScriptableInteractiveTool_WatchStringProperty::PropertySet' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchStringProperty, PropertyName) == 0x000008, "Member 'ScriptableInteractiveTool_WatchStringProperty::PropertyName' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchStringProperty, OnModified) == 0x000018, "Member 'ScriptableInteractiveTool_WatchStringProperty::OnModified' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveTool_WatchStringProperty, ReturnValue) == 0x000030, "Member 'ScriptableInteractiveTool_WatchStringProperty::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptCanAccept
// 0x0001 (0x0001 - 0x0000)
struct ScriptableInteractiveTool_OnScriptCanAccept final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveTool_OnScriptCanAccept) == 0x000001, "Wrong alignment on ScriptableInteractiveTool_OnScriptCanAccept");
static_assert(sizeof(ScriptableInteractiveTool_OnScriptCanAccept) == 0x000001, "Wrong size on ScriptableInteractiveTool_OnScriptCanAccept");
static_assert(offsetof(ScriptableInteractiveTool_OnScriptCanAccept, ReturnValue) == 0x000000, "Member 'ScriptableInteractiveTool_OnScriptCanAccept::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.GetActiveModifiers
// 0x0003 (0x0003 - 0x0000)
struct ScriptableClickDragTool_GetActiveModifiers final
{
public:
	struct FScriptableToolModifierStates          ReturnValue;                                       // 0x0000(0x0003)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_GetActiveModifiers) == 0x000001, "Wrong alignment on ScriptableClickDragTool_GetActiveModifiers");
static_assert(sizeof(ScriptableClickDragTool_GetActiveModifiers) == 0x000003, "Wrong size on ScriptableClickDragTool_GetActiveModifiers");
static_assert(offsetof(ScriptableClickDragTool_GetActiveModifiers, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_GetActiveModifiers::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragBegin
// 0x0050 (0x0050 - 0x0000)
struct ScriptableClickDragTool_OnDragBegin final
{
public:
	struct FInputDeviceRay                        StartPosition;                                     // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableClickDragTool_OnDragBegin) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnDragBegin");
static_assert(sizeof(ScriptableClickDragTool_OnDragBegin) == 0x000050, "Wrong size on ScriptableClickDragTool_OnDragBegin");
static_assert(offsetof(ScriptableClickDragTool_OnDragBegin, StartPosition) == 0x000000, "Member 'ScriptableClickDragTool_OnDragBegin::StartPosition' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnDragBegin, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnDragBegin::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragEnd
// 0x0050 (0x0050 - 0x0000)
struct ScriptableClickDragTool_OnDragEnd final
{
public:
	struct FInputDeviceRay                        EndPosition;                                       // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableClickDragTool_OnDragEnd) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnDragEnd");
static_assert(sizeof(ScriptableClickDragTool_OnDragEnd) == 0x000050, "Wrong size on ScriptableClickDragTool_OnDragEnd");
static_assert(offsetof(ScriptableClickDragTool_OnDragEnd, EndPosition) == 0x000000, "Member 'ScriptableClickDragTool_OnDragEnd::EndPosition' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnDragEnd, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnDragEnd::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragUpdatePosition
// 0x0050 (0x0050 - 0x0000)
struct ScriptableClickDragTool_OnDragUpdatePosition final
{
public:
	struct FInputDeviceRay                        NewPosition;                                       // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableClickDragTool_OnDragUpdatePosition) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnDragUpdatePosition");
static_assert(sizeof(ScriptableClickDragTool_OnDragUpdatePosition) == 0x000050, "Wrong size on ScriptableClickDragTool_OnDragUpdatePosition");
static_assert(offsetof(ScriptableClickDragTool_OnDragUpdatePosition, NewPosition) == 0x000000, "Member 'ScriptableClickDragTool_OnDragUpdatePosition::NewPosition' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnDragUpdatePosition, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnDragUpdatePosition::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverBegin
// 0x0050 (0x0050 - 0x0000)
struct ScriptableClickDragTool_OnHoverBegin final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableClickDragTool_OnHoverBegin) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnHoverBegin");
static_assert(sizeof(ScriptableClickDragTool_OnHoverBegin) == 0x000050, "Wrong size on ScriptableClickDragTool_OnHoverBegin");
static_assert(offsetof(ScriptableClickDragTool_OnHoverBegin, HoverPos) == 0x000000, "Member 'ScriptableClickDragTool_OnHoverBegin::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnHoverBegin, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnHoverBegin::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverEnd
// 0x0003 (0x0003 - 0x0000)
struct ScriptableClickDragTool_OnHoverEnd final
{
public:
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_OnHoverEnd) == 0x000001, "Wrong alignment on ScriptableClickDragTool_OnHoverEnd");
static_assert(sizeof(ScriptableClickDragTool_OnHoverEnd) == 0x000003, "Wrong size on ScriptableClickDragTool_OnHoverEnd");
static_assert(offsetof(ScriptableClickDragTool_OnHoverEnd, Modifiers) == 0x000000, "Member 'ScriptableClickDragTool_OnHoverEnd::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverHitTest
// 0x0090 (0x0090 - 0x0000)
struct ScriptableClickDragTool_OnHoverHitTest final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRayHit                           ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_OnHoverHitTest) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnHoverHitTest");
static_assert(sizeof(ScriptableClickDragTool_OnHoverHitTest) == 0x000090, "Wrong size on ScriptableClickDragTool_OnHoverHitTest");
static_assert(offsetof(ScriptableClickDragTool_OnHoverHitTest, HoverPos) == 0x000000, "Member 'ScriptableClickDragTool_OnHoverHitTest::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnHoverHitTest, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnHoverHitTest::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnHoverHitTest, ReturnValue) == 0x000050, "Member 'ScriptableClickDragTool_OnHoverHitTest::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverUpdate
// 0x0050 (0x0050 - 0x0000)
struct ScriptableClickDragTool_OnHoverUpdate final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x004B(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableClickDragTool_OnHoverUpdate) == 0x000008, "Wrong alignment on ScriptableClickDragTool_OnHoverUpdate");
static_assert(sizeof(ScriptableClickDragTool_OnHoverUpdate) == 0x000050, "Wrong size on ScriptableClickDragTool_OnHoverUpdate");
static_assert(offsetof(ScriptableClickDragTool_OnHoverUpdate, HoverPos) == 0x000000, "Member 'ScriptableClickDragTool_OnHoverUpdate::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnHoverUpdate, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_OnHoverUpdate::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_OnHoverUpdate, ReturnValue) == 0x00004B, "Member 'ScriptableClickDragTool_OnHoverUpdate::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.TestIfCanBeginClickDrag
// 0x0090 (0x0090 - 0x0000)
struct ScriptableClickDragTool_TestIfCanBeginClickDrag final
{
public:
	struct FInputDeviceRay                        ClickPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRayHit                           ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_TestIfCanBeginClickDrag) == 0x000008, "Wrong alignment on ScriptableClickDragTool_TestIfCanBeginClickDrag");
static_assert(sizeof(ScriptableClickDragTool_TestIfCanBeginClickDrag) == 0x000090, "Wrong size on ScriptableClickDragTool_TestIfCanBeginClickDrag");
static_assert(offsetof(ScriptableClickDragTool_TestIfCanBeginClickDrag, ClickPos) == 0x000000, "Member 'ScriptableClickDragTool_TestIfCanBeginClickDrag::ClickPos' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_TestIfCanBeginClickDrag, Modifiers) == 0x000048, "Member 'ScriptableClickDragTool_TestIfCanBeginClickDrag::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableClickDragTool_TestIfCanBeginClickDrag, ReturnValue) == 0x000050, "Member 'ScriptableClickDragTool_TestIfCanBeginClickDrag::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.InActiveClickDrag
// 0x0001 (0x0001 - 0x0000)
struct ScriptableClickDragTool_InActiveClickDrag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_InActiveClickDrag) == 0x000001, "Wrong alignment on ScriptableClickDragTool_InActiveClickDrag");
static_assert(sizeof(ScriptableClickDragTool_InActiveClickDrag) == 0x000001, "Wrong size on ScriptableClickDragTool_InActiveClickDrag");
static_assert(offsetof(ScriptableClickDragTool_InActiveClickDrag, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_InActiveClickDrag::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.InActiveHover
// 0x0001 (0x0001 - 0x0000)
struct ScriptableClickDragTool_InActiveHover final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_InActiveHover) == 0x000001, "Wrong alignment on ScriptableClickDragTool_InActiveHover");
static_assert(sizeof(ScriptableClickDragTool_InActiveHover) == 0x000001, "Wrong size on ScriptableClickDragTool_InActiveHover");
static_assert(offsetof(ScriptableClickDragTool_InActiveHover, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_InActiveHover::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.IsAltDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableClickDragTool_IsAltDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_IsAltDown) == 0x000001, "Wrong alignment on ScriptableClickDragTool_IsAltDown");
static_assert(sizeof(ScriptableClickDragTool_IsAltDown) == 0x000001, "Wrong size on ScriptableClickDragTool_IsAltDown");
static_assert(offsetof(ScriptableClickDragTool_IsAltDown, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_IsAltDown::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.IsCtrlDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableClickDragTool_IsCtrlDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_IsCtrlDown) == 0x000001, "Wrong alignment on ScriptableClickDragTool_IsCtrlDown");
static_assert(sizeof(ScriptableClickDragTool_IsCtrlDown) == 0x000001, "Wrong size on ScriptableClickDragTool_IsCtrlDown");
static_assert(offsetof(ScriptableClickDragTool_IsCtrlDown, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_IsCtrlDown::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableClickDragTool.IsShiftDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableClickDragTool_IsShiftDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableClickDragTool_IsShiftDown) == 0x000001, "Wrong alignment on ScriptableClickDragTool_IsShiftDown");
static_assert(sizeof(ScriptableClickDragTool_IsShiftDown) == 0x000001, "Wrong size on ScriptableClickDragTool_IsShiftDown");
static_assert(offsetof(ScriptableClickDragTool_IsShiftDown, ReturnValue) == 0x000000, "Member 'ScriptableClickDragTool_IsShiftDown::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableTool_RenderAPI.DrawLine
// 0x0058 (0x0058 - 0x0000)
struct ScriptableTool_RenderAPI_DrawLine final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0030(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Thickness;                                         // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthBias;                                         // 0x0044(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDepthTested;                                      // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableTool_RenderAPI*              ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableTool_RenderAPI_DrawLine) == 0x000008, "Wrong alignment on ScriptableTool_RenderAPI_DrawLine");
static_assert(sizeof(ScriptableTool_RenderAPI_DrawLine) == 0x000058, "Wrong size on ScriptableTool_RenderAPI_DrawLine");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, Start) == 0x000000, "Member 'ScriptableTool_RenderAPI_DrawLine::Start' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, End) == 0x000018, "Member 'ScriptableTool_RenderAPI_DrawLine::End' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, Color) == 0x000030, "Member 'ScriptableTool_RenderAPI_DrawLine::Color' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, Thickness) == 0x000040, "Member 'ScriptableTool_RenderAPI_DrawLine::Thickness' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, DepthBias) == 0x000044, "Member 'ScriptableTool_RenderAPI_DrawLine::DepthBias' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, bDepthTested) == 0x000048, "Member 'ScriptableTool_RenderAPI_DrawLine::bDepthTested' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawLine, ReturnValue) == 0x000050, "Member 'ScriptableTool_RenderAPI_DrawLine::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableTool_RenderAPI.DrawRectWidthHeightXY
// 0x00A0 (0x00A0 - 0x0000)
struct ScriptableTool_RenderAPI_DrawRectWidthHeightXY final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Width;                                             // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Height;                                            // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0070(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineThickness;                                     // 0x0080(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthBias;                                         // 0x0084(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDepthTested;                                      // 0x0088(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCentered;                                         // 0x0089(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableTool_RenderAPI*              ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY) == 0x000010, "Wrong alignment on ScriptableTool_RenderAPI_DrawRectWidthHeightXY");
static_assert(sizeof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY) == 0x0000A0, "Wrong size on ScriptableTool_RenderAPI_DrawRectWidthHeightXY");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, Transform) == 0x000000, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::Transform' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, Width) == 0x000060, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::Width' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, Height) == 0x000068, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::Height' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, Color) == 0x000070, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::Color' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, LineThickness) == 0x000080, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::LineThickness' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, DepthBias) == 0x000084, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::DepthBias' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, bDepthTested) == 0x000088, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::bDepthTested' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, bCentered) == 0x000089, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::bCentered' has a wrong offset!");
static_assert(offsetof(ScriptableTool_RenderAPI_DrawRectWidthHeightXY, ReturnValue) == 0x000090, "Member 'ScriptableTool_RenderAPI_DrawRectWidthHeightXY::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.DrawTextArrayAtLocation
// 0x0048 (0x0048 - 0x0000)
struct ScriptableTool_HUDAPI_DrawTextArrayAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Strings;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCentered;                                         // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShiftRowsY;                                        // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptableTool_HUDAPI*                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation) == 0x000008, "Wrong alignment on ScriptableTool_HUDAPI_DrawTextArrayAtLocation");
static_assert(sizeof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation) == 0x000048, "Wrong size on ScriptableTool_HUDAPI_DrawTextArrayAtLocation");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, Location) == 0x000000, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::Location' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, Strings) == 0x000018, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::Strings' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, Color) == 0x000028, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::Color' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, bCentered) == 0x000038, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::bCentered' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, ShiftRowsY) == 0x00003C, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::ShiftRowsY' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextArrayAtLocation, ReturnValue) == 0x000040, "Member 'ScriptableTool_HUDAPI_DrawTextArrayAtLocation::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.DrawTextAtLocation
// 0x0048 (0x0048 - 0x0000)
struct ScriptableTool_HUDAPI_DrawTextAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 String;                                            // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0028(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCentered;                                         // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShiftRowsY;                                        // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptableTool_HUDAPI*                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableTool_HUDAPI_DrawTextAtLocation) == 0x000008, "Wrong alignment on ScriptableTool_HUDAPI_DrawTextAtLocation");
static_assert(sizeof(ScriptableTool_HUDAPI_DrawTextAtLocation) == 0x000048, "Wrong size on ScriptableTool_HUDAPI_DrawTextAtLocation");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, Location) == 0x000000, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::Location' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, String) == 0x000018, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::String' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, Color) == 0x000028, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::Color' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, bCentered) == 0x000038, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::bCentered' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, ShiftRowsY) == 0x00003C, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::ShiftRowsY' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_DrawTextAtLocation, ReturnValue) == 0x000040, "Member 'ScriptableTool_HUDAPI_DrawTextAtLocation::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.GetCanvasLocation
// 0x0030 (0x0030 - 0x0000)
struct ScriptableTool_HUDAPI_GetCanvasLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              CanvasLocation;                                    // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptableTool_HUDAPI*                 ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableTool_HUDAPI_GetCanvasLocation) == 0x000008, "Wrong alignment on ScriptableTool_HUDAPI_GetCanvasLocation");
static_assert(sizeof(ScriptableTool_HUDAPI_GetCanvasLocation) == 0x000030, "Wrong size on ScriptableTool_HUDAPI_GetCanvasLocation");
static_assert(offsetof(ScriptableTool_HUDAPI_GetCanvasLocation, Location) == 0x000000, "Member 'ScriptableTool_HUDAPI_GetCanvasLocation::Location' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_GetCanvasLocation, CanvasLocation) == 0x000018, "Member 'ScriptableTool_HUDAPI_GetCanvasLocation::CanvasLocation' has a wrong offset!");
static_assert(offsetof(ScriptableTool_HUDAPI_GetCanvasLocation, ReturnValue) == 0x000028, "Member 'ScriptableTool_HUDAPI_GetCanvasLocation::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableInteractiveToolPropertySet.GetOwningTool
// 0x0010 (0x0010 - 0x0000)
struct ScriptableInteractiveToolPropertySet_GetOwningTool final
{
public:
	EToolsFrameworkOutcomePins                    Outcome;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptableInteractiveTool*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableInteractiveToolPropertySet_GetOwningTool) == 0x000008, "Wrong alignment on ScriptableInteractiveToolPropertySet_GetOwningTool");
static_assert(sizeof(ScriptableInteractiveToolPropertySet_GetOwningTool) == 0x000010, "Wrong size on ScriptableInteractiveToolPropertySet_GetOwningTool");
static_assert(offsetof(ScriptableInteractiveToolPropertySet_GetOwningTool, Outcome) == 0x000000, "Member 'ScriptableInteractiveToolPropertySet_GetOwningTool::Outcome' has a wrong offset!");
static_assert(offsetof(ScriptableInteractiveToolPropertySet_GetOwningTool, ReturnValue) == 0x000008, "Member 'ScriptableInteractiveToolPropertySet_GetOwningTool::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit
// 0x0050 (0x0050 - 0x0000)
struct ScriptableToolsUtilityLibrary_MakeInputRayHit final
{
public:
	double                                        HitDepth;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                OptionalHitObject;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputRayHit                           ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableToolsUtilityLibrary_MakeInputRayHit) == 0x000008, "Wrong alignment on ScriptableToolsUtilityLibrary_MakeInputRayHit");
static_assert(sizeof(ScriptableToolsUtilityLibrary_MakeInputRayHit) == 0x000050, "Wrong size on ScriptableToolsUtilityLibrary_MakeInputRayHit");
static_assert(offsetof(ScriptableToolsUtilityLibrary_MakeInputRayHit, HitDepth) == 0x000000, "Member 'ScriptableToolsUtilityLibrary_MakeInputRayHit::HitDepth' has a wrong offset!");
static_assert(offsetof(ScriptableToolsUtilityLibrary_MakeInputRayHit, OptionalHitObject) == 0x000008, "Member 'ScriptableToolsUtilityLibrary_MakeInputRayHit::OptionalHitObject' has a wrong offset!");
static_assert(offsetof(ScriptableToolsUtilityLibrary_MakeInputRayHit, ReturnValue) == 0x000010, "Member 'ScriptableToolsUtilityLibrary_MakeInputRayHit::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit_MaxDepth
// 0x0040 (0x0040 - 0x0000)
struct ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth final
{
public:
	struct FInputRayHit                           ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth) == 0x000008, "Wrong alignment on ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth");
static_assert(sizeof(ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth) == 0x000040, "Wrong size on ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth");
static_assert(offsetof(ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth, ReturnValue) == 0x000000, "Member 'ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit_Miss
// 0x0040 (0x0040 - 0x0000)
struct ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss final
{
public:
	struct FInputRayHit                           ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss) == 0x000008, "Wrong alignment on ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss");
static_assert(sizeof(ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss) == 0x000040, "Wrong size on ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss");
static_assert(offsetof(ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss, ReturnValue) == 0x000000, "Member 'ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.GetActiveModifiers
// 0x0003 (0x0003 - 0x0000)
struct ScriptableSingleClickTool_GetActiveModifiers final
{
public:
	struct FScriptableToolModifierStates          ReturnValue;                                       // 0x0000(0x0003)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_GetActiveModifiers) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_GetActiveModifiers");
static_assert(sizeof(ScriptableSingleClickTool_GetActiveModifiers) == 0x000003, "Wrong size on ScriptableSingleClickTool_GetActiveModifiers");
static_assert(offsetof(ScriptableSingleClickTool_GetActiveModifiers, ReturnValue) == 0x000000, "Member 'ScriptableSingleClickTool_GetActiveModifiers::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHitByClick
// 0x0050 (0x0050 - 0x0000)
struct ScriptableSingleClickTool_OnHitByClick final
{
public:
	struct FInputDeviceRay                        ClickPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableSingleClickTool_OnHitByClick) == 0x000008, "Wrong alignment on ScriptableSingleClickTool_OnHitByClick");
static_assert(sizeof(ScriptableSingleClickTool_OnHitByClick) == 0x000050, "Wrong size on ScriptableSingleClickTool_OnHitByClick");
static_assert(offsetof(ScriptableSingleClickTool_OnHitByClick, ClickPos) == 0x000000, "Member 'ScriptableSingleClickTool_OnHitByClick::ClickPos' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHitByClick, Modifiers) == 0x000048, "Member 'ScriptableSingleClickTool_OnHitByClick::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverBegin
// 0x0050 (0x0050 - 0x0000)
struct ScriptableSingleClickTool_OnHoverBegin final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableSingleClickTool_OnHoverBegin) == 0x000008, "Wrong alignment on ScriptableSingleClickTool_OnHoverBegin");
static_assert(sizeof(ScriptableSingleClickTool_OnHoverBegin) == 0x000050, "Wrong size on ScriptableSingleClickTool_OnHoverBegin");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverBegin, HoverPos) == 0x000000, "Member 'ScriptableSingleClickTool_OnHoverBegin::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverBegin, Modifiers) == 0x000048, "Member 'ScriptableSingleClickTool_OnHoverBegin::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverEnd
// 0x0003 (0x0003 - 0x0000)
struct ScriptableSingleClickTool_OnHoverEnd final
{
public:
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_OnHoverEnd) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_OnHoverEnd");
static_assert(sizeof(ScriptableSingleClickTool_OnHoverEnd) == 0x000003, "Wrong size on ScriptableSingleClickTool_OnHoverEnd");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverEnd, Modifiers) == 0x000000, "Member 'ScriptableSingleClickTool_OnHoverEnd::Modifiers' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverHitTest
// 0x0090 (0x0090 - 0x0000)
struct ScriptableSingleClickTool_OnHoverHitTest final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRayHit                           ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_OnHoverHitTest) == 0x000008, "Wrong alignment on ScriptableSingleClickTool_OnHoverHitTest");
static_assert(sizeof(ScriptableSingleClickTool_OnHoverHitTest) == 0x000090, "Wrong size on ScriptableSingleClickTool_OnHoverHitTest");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverHitTest, HoverPos) == 0x000000, "Member 'ScriptableSingleClickTool_OnHoverHitTest::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverHitTest, Modifiers) == 0x000048, "Member 'ScriptableSingleClickTool_OnHoverHitTest::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverHitTest, ReturnValue) == 0x000050, "Member 'ScriptableSingleClickTool_OnHoverHitTest::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverUpdate
// 0x0050 (0x0050 - 0x0000)
struct ScriptableSingleClickTool_OnHoverUpdate final
{
public:
	struct FInputDeviceRay                        HoverPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x004B(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptableSingleClickTool_OnHoverUpdate) == 0x000008, "Wrong alignment on ScriptableSingleClickTool_OnHoverUpdate");
static_assert(sizeof(ScriptableSingleClickTool_OnHoverUpdate) == 0x000050, "Wrong size on ScriptableSingleClickTool_OnHoverUpdate");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverUpdate, HoverPos) == 0x000000, "Member 'ScriptableSingleClickTool_OnHoverUpdate::HoverPos' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverUpdate, Modifiers) == 0x000048, "Member 'ScriptableSingleClickTool_OnHoverUpdate::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_OnHoverUpdate, ReturnValue) == 0x00004B, "Member 'ScriptableSingleClickTool_OnHoverUpdate::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.TestIfHitByClick
// 0x0090 (0x0090 - 0x0000)
struct ScriptableSingleClickTool_TestIfHitByClick final
{
public:
	struct FInputDeviceRay                        ClickPos;                                          // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptableToolModifierStates          Modifiers;                                         // 0x0048(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputRayHit                           ReturnValue;                                       // 0x0050(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_TestIfHitByClick) == 0x000008, "Wrong alignment on ScriptableSingleClickTool_TestIfHitByClick");
static_assert(sizeof(ScriptableSingleClickTool_TestIfHitByClick) == 0x000090, "Wrong size on ScriptableSingleClickTool_TestIfHitByClick");
static_assert(offsetof(ScriptableSingleClickTool_TestIfHitByClick, ClickPos) == 0x000000, "Member 'ScriptableSingleClickTool_TestIfHitByClick::ClickPos' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_TestIfHitByClick, Modifiers) == 0x000048, "Member 'ScriptableSingleClickTool_TestIfHitByClick::Modifiers' has a wrong offset!");
static_assert(offsetof(ScriptableSingleClickTool_TestIfHitByClick, ReturnValue) == 0x000050, "Member 'ScriptableSingleClickTool_TestIfHitByClick::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.InActiveHover
// 0x0001 (0x0001 - 0x0000)
struct ScriptableSingleClickTool_InActiveHover final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_InActiveHover) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_InActiveHover");
static_assert(sizeof(ScriptableSingleClickTool_InActiveHover) == 0x000001, "Wrong size on ScriptableSingleClickTool_InActiveHover");
static_assert(offsetof(ScriptableSingleClickTool_InActiveHover, ReturnValue) == 0x000000, "Member 'ScriptableSingleClickTool_InActiveHover::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsAltDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableSingleClickTool_IsAltDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_IsAltDown) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_IsAltDown");
static_assert(sizeof(ScriptableSingleClickTool_IsAltDown) == 0x000001, "Wrong size on ScriptableSingleClickTool_IsAltDown");
static_assert(offsetof(ScriptableSingleClickTool_IsAltDown, ReturnValue) == 0x000000, "Member 'ScriptableSingleClickTool_IsAltDown::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsCtrlDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableSingleClickTool_IsCtrlDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_IsCtrlDown) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_IsCtrlDown");
static_assert(sizeof(ScriptableSingleClickTool_IsCtrlDown) == 0x000001, "Wrong size on ScriptableSingleClickTool_IsCtrlDown");
static_assert(offsetof(ScriptableSingleClickTool_IsCtrlDown, ReturnValue) == 0x000000, "Member 'ScriptableSingleClickTool_IsCtrlDown::ReturnValue' has a wrong offset!");

// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsShiftDown
// 0x0001 (0x0001 - 0x0000)
struct ScriptableSingleClickTool_IsShiftDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptableSingleClickTool_IsShiftDown) == 0x000001, "Wrong alignment on ScriptableSingleClickTool_IsShiftDown");
static_assert(sizeof(ScriptableSingleClickTool_IsShiftDown) == 0x000001, "Wrong size on ScriptableSingleClickTool_IsShiftDown");
static_assert(offsetof(ScriptableSingleClickTool_IsShiftDown, ReturnValue) == 0x000000, "Member 'ScriptableSingleClickTool_IsShiftDown::ReturnValue' has a wrong offset!");

}

