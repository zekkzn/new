#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreRankTooltip

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreRankTooltip.WBP_CoreRankTooltip_C.ExecuteUbergraph_WBP_CoreRankTooltip
// 0x0050 (0x0050 - 0x0000)
struct WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankTooltipViewData                   K2Node_Event_viewData;                             // 0x0008(0x0020)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRankTooltipViewData                   K2Node_MakeStruct_RankTooltipViewData;             // 0x0030(0x0020)()
};
static_assert(alignof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip) == 0x000008, "Wrong alignment on WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip");
static_assert(sizeof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip) == 0x000050, "Wrong size on WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip");
static_assert(offsetof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip, EntryPoint) == 0x000000, "Member 'WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip, K2Node_Event_viewData) == 0x000008, "Member 'WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip::K2Node_Event_viewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip, K2Node_MakeStruct_RankTooltipViewData) == 0x000030, "Member 'WBP_CoreRankTooltip_C_ExecuteUbergraph_WBP_CoreRankTooltip::K2Node_MakeStruct_RankTooltipViewData' has a wrong offset!");

// Function WBP_CoreRankTooltip.WBP_CoreRankTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreRankTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRankTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreRankTooltip_C_PreConstruct");
static_assert(sizeof(WBP_CoreRankTooltip_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreRankTooltip_C_PreConstruct");
static_assert(offsetof(WBP_CoreRankTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreRankTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreRankTooltip.WBP_CoreRankTooltip_C.SetTooltipData
// 0x0020 (0x0020 - 0x0000)
struct WBP_CoreRankTooltip_C_SetTooltipData final
{
public:
	struct FRankTooltipViewData                   ViewData;                                          // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreRankTooltip_C_SetTooltipData) == 0x000008, "Wrong alignment on WBP_CoreRankTooltip_C_SetTooltipData");
static_assert(sizeof(WBP_CoreRankTooltip_C_SetTooltipData) == 0x000020, "Wrong size on WBP_CoreRankTooltip_C_SetTooltipData");
static_assert(offsetof(WBP_CoreRankTooltip_C_SetTooltipData, ViewData) == 0x000000, "Member 'WBP_CoreRankTooltip_C_SetTooltipData::ViewData' has a wrong offset!");

// Function WBP_CoreRankTooltip.WBP_CoreRankTooltip_C.SetViewData
// 0x0038 (0x0038 - 0x0000)
struct WBP_CoreRankTooltip_C_SetViewData final
{
public:
	struct FRankTooltipViewData                   ViewData;                                          // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
};
static_assert(alignof(WBP_CoreRankTooltip_C_SetViewData) == 0x000008, "Wrong alignment on WBP_CoreRankTooltip_C_SetViewData");
static_assert(sizeof(WBP_CoreRankTooltip_C_SetViewData) == 0x000038, "Wrong size on WBP_CoreRankTooltip_C_SetViewData");
static_assert(offsetof(WBP_CoreRankTooltip_C_SetViewData, ViewData) == 0x000000, "Member 'WBP_CoreRankTooltip_C_SetViewData::ViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreRankTooltip_C_SetViewData, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WBP_CoreRankTooltip_C_SetViewData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

