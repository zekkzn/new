#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FXWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function FXWidget.FXUserWidgetBase.GetNiagaraFX
// 0x0008 (0x0008 - 0x0000)
struct FXUserWidgetBase_GetNiagaraFX final
{
public:
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXUserWidgetBase_GetNiagaraFX) == 0x000008, "Wrong alignment on FXUserWidgetBase_GetNiagaraFX");
static_assert(sizeof(FXUserWidgetBase_GetNiagaraFX) == 0x000008, "Wrong size on FXUserWidgetBase_GetNiagaraFX");
static_assert(offsetof(FXUserWidgetBase_GetNiagaraFX, ReturnValue) == 0x000000, "Member 'FXUserWidgetBase_GetNiagaraFX::ReturnValue' has a wrong offset!");

// Function FXWidget.FXUserWidgetBase.PlayParticle
// 0x0008 (0x0008 - 0x0000)
struct FXUserWidgetBase_PlayParticle final
{
public:
	float                                         StartAtTime;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumLoopsToPlay;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FXUserWidgetBase_PlayParticle) == 0x000004, "Wrong alignment on FXUserWidgetBase_PlayParticle");
static_assert(sizeof(FXUserWidgetBase_PlayParticle) == 0x000008, "Wrong size on FXUserWidgetBase_PlayParticle");
static_assert(offsetof(FXUserWidgetBase_PlayParticle, StartAtTime) == 0x000000, "Member 'FXUserWidgetBase_PlayParticle::StartAtTime' has a wrong offset!");
static_assert(offsetof(FXUserWidgetBase_PlayParticle, NumLoopsToPlay) == 0x000004, "Member 'FXUserWidgetBase_PlayParticle::NumLoopsToPlay' has a wrong offset!");

}

