#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseSabotageMeathook

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseSabotageMeathook.BaseSabotageMeathook_C
// 0x0020 (0x08E0 - 0x08C0)
#pragma pack(push, 0x1)
class alignas(0x10) UBaseSabotageMeathook_C : public UChargeableInteractionDefinition
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AMeatHook*                              MeatHook;                                          // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        StartTimer;                                        // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnSabotageFailed(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, ESkillCheckCustomType Type);
	void OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime);
	void OnInteractionUpdateStart(class ADBDPlayer* Player);
	void OnInteractionInterruptStart(class ADBDPlayer* Player, class UInterruptionDefinition* CurrentInterruption, class ADBDPlayer* InterruptingPlayer);
	void OnInteractionFinished(class ADBDPlayer* Player, bool HasInteractionStarted);
	void OnInteractionExitStart(class ADBDPlayer* Player);
	void OnInteractionEnterStart(class ADBDPlayer* Player, float ActualSnapTime);
	void OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool Complete);
	void GetScoreEventForSabotage(struct FGameplayTag* GameplayTag);
	void FireScoreEvent();
	void ExecuteUbergraph_BaseSabotageMeathook(int32 EntryPoint);
	void CanFireHookSoundEventOnSabotage(class ADBDPlayer* Target, bool* Value);
	void CanCharge(bool* Can_Charge);
	void ApplyCharge(double DeltaTime, class ADBDPlayer* Character);

	bool IsInteractionPossibleBP(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const;
	bool IsCancelable(const class ADBDPlayer* Player) const;
	void HasChargedToolBox(class ADBDPlayer* Player, bool* Param_HasChargedToolBox) const;
	class AMeatHook* GetMeatHook() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BaseSabotageMeathook_C">();
	}
	static class UBaseSabotageMeathook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseSabotageMeathook_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBaseSabotageMeathook_C) == 0x000010, "Wrong alignment on UBaseSabotageMeathook_C");
static_assert(sizeof(UBaseSabotageMeathook_C) == 0x0008E0, "Wrong size on UBaseSabotageMeathook_C");
static_assert(offsetof(UBaseSabotageMeathook_C, UberGraphFrame) == 0x0008C0, "Member 'UBaseSabotageMeathook_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBaseSabotageMeathook_C, MeatHook) == 0x0008C8, "Member 'UBaseSabotageMeathook_C::MeatHook' has a wrong offset!");
static_assert(offsetof(UBaseSabotageMeathook_C, StartTimer) == 0x0008D0, "Member 'UBaseSabotageMeathook_C::StartTimer' has a wrong offset!");

}

