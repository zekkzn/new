#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheNurse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum TheNurse.EBlinkPowerState
// NumValues: 0x0006
enum class EBlinkPowerState : uint8
{
	Ready                                    = 0,
	ChainBlink                               = 1,
	AttackBlink                              = 2,
	AwaitingCooldown                         = 3,
	Cooldown                                 = 4,
	EBlinkPowerState_MAX                     = 5,
};

// ScriptStruct TheNurse.BlinkParams
// 0x0020 (0x0020 - 0x0000)
struct FBlinkParams final
{
public:
	struct FVector                                TargetTranslation;                                 // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timestamp;                                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBlinkParams) == 0x000008, "Wrong alignment on FBlinkParams");
static_assert(sizeof(FBlinkParams) == 0x000020, "Wrong size on FBlinkParams");
static_assert(offsetof(FBlinkParams, TargetTranslation) == 0x000000, "Member 'FBlinkParams::TargetTranslation' has a wrong offset!");
static_assert(offsetof(FBlinkParams, Duration) == 0x000018, "Member 'FBlinkParams::Duration' has a wrong offset!");
static_assert(offsetof(FBlinkParams, Timestamp) == 0x00001C, "Member 'FBlinkParams::Timestamp' has a wrong offset!");

// ScriptStruct TheNurse.BlinkPowerSetupParams
// 0x0018 (0x0018 - 0x0000)
struct FBlinkPowerSetupParams final
{
public:
	class UTimerObject*                           ChainBlinkTimer;                                   // 0x0000(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimerObject*                           CooldownTimer;                                     // 0x0008(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTimerObject*                           RechargeTimer;                                     // 0x0010(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBlinkPowerSetupParams) == 0x000008, "Wrong alignment on FBlinkPowerSetupParams");
static_assert(sizeof(FBlinkPowerSetupParams) == 0x000018, "Wrong size on FBlinkPowerSetupParams");
static_assert(offsetof(FBlinkPowerSetupParams, ChainBlinkTimer) == 0x000000, "Member 'FBlinkPowerSetupParams::ChainBlinkTimer' has a wrong offset!");
static_assert(offsetof(FBlinkPowerSetupParams, CooldownTimer) == 0x000008, "Member 'FBlinkPowerSetupParams::CooldownTimer' has a wrong offset!");
static_assert(offsetof(FBlinkPowerSetupParams, RechargeTimer) == 0x000010, "Member 'FBlinkPowerSetupParams::RechargeTimer' has a wrong offset!");

}

