#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RunVaultDefinition

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RunVaultDefinition.RunVaultDefinition_C.IsInteractionPossibleClient
// 0x0200 (0x0200 - 0x0000)
struct RunVaultDefinition_C_IsInteractionPossibleClient final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInputInteractionType                         InteractionType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxSpeedForNormalization;                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AlmostCurrentHorizontalVelocity;                   // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManager*                           CallFunc_GetPerkManager_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRunning_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPerkFlag_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRunVaultEnabled_ReturnValue;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAverageVelocity_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetXYVector_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCamperMovementComponent*               K2Node_DynamicCast_AsCamper_Movement_Component;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_HasWalkableSurfaceForward_outHits;        // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_HasWalkableSurfaceForward_raycastStart;   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasWalkableSurfaceForward_ReturnValue;    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWindow*                                K2Node_DynamicCast_AsWindow;                       // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWindowVaultBlockedFor_ReturnValue;      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GreaterEqual_FloatFloat_B_ImplicitCast;   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast_1; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_B_ImplicitCast;         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GreaterEqual_FloatFloat_A_ImplicitCast;   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_A_ImplicitCast;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunVaultDefinition_C_IsInteractionPossibleClient) == 0x000008, "Wrong alignment on RunVaultDefinition_C_IsInteractionPossibleClient");
static_assert(sizeof(RunVaultDefinition_C_IsInteractionPossibleClient) == 0x000200, "Wrong size on RunVaultDefinition_C_IsInteractionPossibleClient");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, Player) == 0x000000, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::Player' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, InteractionType) == 0x000008, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::InteractionType' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, ReturnValue) == 0x000009, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, MaxSpeedForNormalization) == 0x000010, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::MaxSpeedForNormalization' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, AlmostCurrentHorizontalVelocity) == 0x000018, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::AlmostCurrentHorizontalVelocity' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, Ret) == 0x000030, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::Ret' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetPerkManager_ReturnValue) == 0x000038, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetPerkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_IsRunning_ReturnValue) == 0x000040, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_IsRunning_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_HasPerkFlag_ReturnValue) == 0x000041, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_HasPerkFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetRunVaultEnabled_ReturnValue) == 0x000042, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetRunVaultEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetAverageVelocity_ReturnValue) == 0x000068, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetAverageVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue_1) == 0x000080, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetXYVector_ReturnValue) == 0x000088, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetXYVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_DynamicCast_AsCamper_Movement_Component) == 0x0000A0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_DynamicCast_AsCamper_Movement_Component' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_IsMovingOnGround_ReturnValue) == 0x0000A9, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Dot_VectorVector_ReturnValue) == 0x000100, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000108, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Abs_ReturnValue) == 0x000120, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000128, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000148, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_HasWalkableSurfaceForward_outHits) == 0x000160, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_HasWalkableSurfaceForward_outHits' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_HasWalkableSurfaceForward_raycastStart) == 0x000170, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_HasWalkableSurfaceForward_raycastStart' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_HasWalkableSurfaceForward_ReturnValue) == 0x000188, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_HasWalkableSurfaceForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetTunableValue_ReturnValue) == 0x00018C, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue_2) == 0x000190, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetOwner_ReturnValue_1) == 0x000198, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_DynamicCast_AsWindow) == 0x0001A0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_DynamicCast_AsWindow' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_IsWindowVaultBlockedFor_ReturnValue) == 0x0001A9, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_IsWindowVaultBlockedFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001AA, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue_3) == 0x0001AB, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GetForwardVector_ReturnValue) == 0x0001B0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0001C8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001D0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D4, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue_4) == 0x0001D5, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_BooleanAND_ReturnValue_5) == 0x0001D6, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GreaterEqual_FloatFloat_B_ImplicitCast) == 0x0001D8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GreaterEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast) == 0x0001E0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast_1) == 0x0001E8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::K2Node_VariableSet_MaxSpeedForNormalization_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Divide_FloatFloat_B_ImplicitCast) == 0x0001F0, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Divide_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_GreaterEqual_FloatFloat_A_ImplicitCast) == 0x0001F4, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_GreaterEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_IsInteractionPossibleClient, CallFunc_Divide_FloatFloat_A_ImplicitCast) == 0x0001F8, "Member 'RunVaultDefinition_C_IsInteractionPossibleClient::CallFunc_Divide_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function RunVaultDefinition.RunVaultDefinition_C.GetSnapTime
// 0x00A0 (0x00A0 - 0x0000)
struct RunVaultDefinition_C_GetSnapTime final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SnapSpeed;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCamperMovementComponent*               K2Node_DynamicCast_AsCamper_Movement_Component;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSnapPointPosition_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_B_ImplicitCast;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SnapSpeed_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SnapSpeed_ImplicitCast_1;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_A_ImplicitCast;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RunVaultDefinition_C_GetSnapTime) == 0x000008, "Wrong alignment on RunVaultDefinition_C_GetSnapTime");
static_assert(sizeof(RunVaultDefinition_C_GetSnapTime) == 0x0000A0, "Wrong size on RunVaultDefinition_C_GetSnapTime");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, Player) == 0x000000, "Member 'RunVaultDefinition_C_GetSnapTime::Player' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, ReturnValue) == 0x000008, "Member 'RunVaultDefinition_C_GetSnapTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, SnapSpeed) == 0x000010, "Member 'RunVaultDefinition_C_GetSnapTime::SnapSpeed' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_GetTunableValue_ReturnValue) == 0x000030, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, K2Node_DynamicCast_AsCamper_Movement_Component) == 0x000038, "Member 'RunVaultDefinition_C_GetSnapTime::K2Node_DynamicCast_AsCamper_Movement_Component' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'RunVaultDefinition_C_GetSnapTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_GetSnapPointPosition_ReturnValue) == 0x000048, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_GetSnapPointPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_Add_FloatFloat_B_ImplicitCast) == 0x000084, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_Add_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, K2Node_VariableSet_SnapSpeed_ImplicitCast) == 0x000088, "Member 'RunVaultDefinition_C_GetSnapTime::K2Node_VariableSet_SnapSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, K2Node_VariableSet_SnapSpeed_ImplicitCast_1) == 0x000090, "Member 'RunVaultDefinition_C_GetSnapTime::K2Node_VariableSet_SnapSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(RunVaultDefinition_C_GetSnapTime, CallFunc_Divide_FloatFloat_A_ImplicitCast) == 0x000098, "Member 'RunVaultDefinition_C_GetSnapTime::CallFunc_Divide_FloatFloat_A_ImplicitCast' has a wrong offset!");

}

