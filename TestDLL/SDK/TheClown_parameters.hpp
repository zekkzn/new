#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheClown

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TheClown_structs.hpp"


namespace SDK::Params
{

// Function TheClown.BaseGasCloudProjectile.Authority_SetCumulativeLifetime
// 0x0004 (0x0004 - 0x0000)
struct BaseGasCloudProjectile_Authority_SetCumulativeLifetime final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_Authority_SetCumulativeLifetime) == 0x000004, "Wrong alignment on BaseGasCloudProjectile_Authority_SetCumulativeLifetime");
static_assert(sizeof(BaseGasCloudProjectile_Authority_SetCumulativeLifetime) == 0x000004, "Wrong size on BaseGasCloudProjectile_Authority_SetCumulativeLifetime");
static_assert(offsetof(BaseGasCloudProjectile_Authority_SetCumulativeLifetime, Value) == 0x000000, "Member 'BaseGasCloudProjectile_Authority_SetCumulativeLifetime::Value' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.GetGasType
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_GetGasType final
{
public:
	EBombType                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_GetGasType) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_GetGasType");
static_assert(sizeof(BaseGasCloudProjectile_GetGasType) == 0x000001, "Wrong size on BaseGasCloudProjectile_GetGasType");
static_assert(offsetof(BaseGasCloudProjectile_GetGasType, ReturnValue) == 0x000000, "Member 'BaseGasCloudProjectile_GetGasType::ReturnValue' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.IsDissipating
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_IsDissipating final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_IsDissipating) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_IsDissipating");
static_assert(sizeof(BaseGasCloudProjectile_IsDissipating) == 0x000001, "Wrong size on BaseGasCloudProjectile_IsDissipating");
static_assert(offsetof(BaseGasCloudProjectile_IsDissipating, ReturnValue) == 0x000000, "Member 'BaseGasCloudProjectile_IsDissipating::ReturnValue' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.IsSurvivorDetectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_IsSurvivorDetectionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_IsSurvivorDetectionEnabled) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_IsSurvivorDetectionEnabled");
static_assert(sizeof(BaseGasCloudProjectile_IsSurvivorDetectionEnabled) == 0x000001, "Wrong size on BaseGasCloudProjectile_IsSurvivorDetectionEnabled");
static_assert(offsetof(BaseGasCloudProjectile_IsSurvivorDetectionEnabled, ReturnValue) == 0x000000, "Member 'BaseGasCloudProjectile_IsSurvivorDetectionEnabled::ReturnValue' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.OnAcquiredChanged
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_OnAcquiredChanged final
{
public:
	bool                                          Acquired;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_OnAcquiredChanged) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_OnAcquiredChanged");
static_assert(sizeof(BaseGasCloudProjectile_OnAcquiredChanged) == 0x000001, "Wrong size on BaseGasCloudProjectile_OnAcquiredChanged");
static_assert(offsetof(BaseGasCloudProjectile_OnAcquiredChanged, Acquired) == 0x000000, "Member 'BaseGasCloudProjectile_OnAcquiredChanged::Acquired' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.OnDelayedActivationStart
// 0x0004 (0x0004 - 0x0000)
struct BaseGasCloudProjectile_OnDelayedActivationStart final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_OnDelayedActivationStart) == 0x000004, "Wrong alignment on BaseGasCloudProjectile_OnDelayedActivationStart");
static_assert(sizeof(BaseGasCloudProjectile_OnDelayedActivationStart) == 0x000004, "Wrong size on BaseGasCloudProjectile_OnDelayedActivationStart");
static_assert(offsetof(BaseGasCloudProjectile_OnDelayedActivationStart, Delay) == 0x000000, "Member 'BaseGasCloudProjectile_OnDelayedActivationStart::Delay' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.OnOverlapBegin
// 0x0110 (0x0110 - 0x0000)
struct BaseGasCloudProjectile_OnOverlapBegin final
{
public:
	class UPrimitiveComponent*                    HitComp;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_OnOverlapBegin) == 0x000008, "Wrong alignment on BaseGasCloudProjectile_OnOverlapBegin");
static_assert(sizeof(BaseGasCloudProjectile_OnOverlapBegin) == 0x000110, "Wrong size on BaseGasCloudProjectile_OnOverlapBegin");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, HitComp) == 0x000000, "Member 'BaseGasCloudProjectile_OnOverlapBegin::HitComp' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, OtherActor) == 0x000008, "Member 'BaseGasCloudProjectile_OnOverlapBegin::OtherActor' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, OtherComponent) == 0x000010, "Member 'BaseGasCloudProjectile_OnOverlapBegin::OtherComponent' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, OtherBodyIndex) == 0x000018, "Member 'BaseGasCloudProjectile_OnOverlapBegin::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, bFromSweep) == 0x00001C, "Member 'BaseGasCloudProjectile_OnOverlapBegin::bFromSweep' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapBegin, SweepResult) == 0x000020, "Member 'BaseGasCloudProjectile_OnOverlapBegin::SweepResult' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.OnOverlapEnd
// 0x0020 (0x0020 - 0x0000)
struct BaseGasCloudProjectile_OnOverlapEnd final
{
public:
	class UPrimitiveComponent*                    HitComp;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BaseGasCloudProjectile_OnOverlapEnd) == 0x000008, "Wrong alignment on BaseGasCloudProjectile_OnOverlapEnd");
static_assert(sizeof(BaseGasCloudProjectile_OnOverlapEnd) == 0x000020, "Wrong size on BaseGasCloudProjectile_OnOverlapEnd");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapEnd, HitComp) == 0x000000, "Member 'BaseGasCloudProjectile_OnOverlapEnd::HitComp' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapEnd, OtherActor) == 0x000008, "Member 'BaseGasCloudProjectile_OnOverlapEnd::OtherActor' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapEnd, OtherComponent) == 0x000010, "Member 'BaseGasCloudProjectile_OnOverlapEnd::OtherComponent' has a wrong offset!");
static_assert(offsetof(BaseGasCloudProjectile_OnOverlapEnd, OtherBodyIndex) == 0x000018, "Member 'BaseGasCloudProjectile_OnOverlapEnd::OtherBodyIndex' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.SetGasAudioActive
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_SetGasAudioActive final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_SetGasAudioActive) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_SetGasAudioActive");
static_assert(sizeof(BaseGasCloudProjectile_SetGasAudioActive) == 0x000001, "Wrong size on BaseGasCloudProjectile_SetGasAudioActive");
static_assert(offsetof(BaseGasCloudProjectile_SetGasAudioActive, Activated) == 0x000000, "Member 'BaseGasCloudProjectile_SetGasAudioActive::Activated' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.SetIsDissipating
// 0x0001 (0x0001 - 0x0000)
struct BaseGasCloudProjectile_SetIsDissipating final
{
public:
	bool                                          IsDissipating;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_SetIsDissipating) == 0x000001, "Wrong alignment on BaseGasCloudProjectile_SetIsDissipating");
static_assert(sizeof(BaseGasCloudProjectile_SetIsDissipating) == 0x000001, "Wrong size on BaseGasCloudProjectile_SetIsDissipating");
static_assert(offsetof(BaseGasCloudProjectile_SetIsDissipating, IsDissipating) == 0x000000, "Member 'BaseGasCloudProjectile_SetIsDissipating::IsDissipating' has a wrong offset!");

// Function TheClown.BaseGasCloudProjectile.Authority_GetCumulativeLifetime
// 0x0004 (0x0004 - 0x0000)
struct BaseGasCloudProjectile_Authority_GetCumulativeLifetime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseGasCloudProjectile_Authority_GetCumulativeLifetime) == 0x000004, "Wrong alignment on BaseGasCloudProjectile_Authority_GetCumulativeLifetime");
static_assert(sizeof(BaseGasCloudProjectile_Authority_GetCumulativeLifetime) == 0x000004, "Wrong size on BaseGasCloudProjectile_Authority_GetCumulativeLifetime");
static_assert(offsetof(BaseGasCloudProjectile_Authority_GetCumulativeLifetime, ReturnValue) == 0x000000, "Member 'BaseGasCloudProjectile_Authority_GetCumulativeLifetime::ReturnValue' has a wrong offset!");

// Function TheClown.BombLauncher.LocalLaunch
// 0x0004 (0x0004 - 0x0000)
struct BombLauncher_LocalLaunch final
{
public:
	float                                         PercentThrowStrength;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_LocalLaunch) == 0x000004, "Wrong alignment on BombLauncher_LocalLaunch");
static_assert(sizeof(BombLauncher_LocalLaunch) == 0x000004, "Wrong size on BombLauncher_LocalLaunch");
static_assert(offsetof(BombLauncher_LocalLaunch, PercentThrowStrength) == 0x000000, "Member 'BombLauncher_LocalLaunch::PercentThrowStrength' has a wrong offset!");

// Function TheClown.BombLauncher.SetPercentThrowStrength
// 0x0004 (0x0004 - 0x0000)
struct BombLauncher_SetPercentThrowStrength final
{
public:
	float                                         ThrowStrength;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_SetPercentThrowStrength) == 0x000004, "Wrong alignment on BombLauncher_SetPercentThrowStrength");
static_assert(sizeof(BombLauncher_SetPercentThrowStrength) == 0x000004, "Wrong size on BombLauncher_SetPercentThrowStrength");
static_assert(offsetof(BombLauncher_SetPercentThrowStrength, ThrowStrength) == 0x000000, "Member 'BombLauncher_SetPercentThrowStrength::ThrowStrength' has a wrong offset!");

// Function TheClown.BombLauncher.SetProjectilePitchCurve
// 0x0008 (0x0008 - 0x0000)
struct BombLauncher_SetProjectilePitchCurve final
{
public:
	class UCurveFloat*                            NewProjectilePitchCurve;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_SetProjectilePitchCurve) == 0x000008, "Wrong alignment on BombLauncher_SetProjectilePitchCurve");
static_assert(sizeof(BombLauncher_SetProjectilePitchCurve) == 0x000008, "Wrong size on BombLauncher_SetProjectilePitchCurve");
static_assert(offsetof(BombLauncher_SetProjectilePitchCurve, NewProjectilePitchCurve) == 0x000000, "Member 'BombLauncher_SetProjectilePitchCurve::NewProjectilePitchCurve' has a wrong offset!");

// Function TheClown.BombLauncher.SetProjectileSpeedCurve
// 0x0008 (0x0008 - 0x0000)
struct BombLauncher_SetProjectileSpeedCurve final
{
public:
	class UCurveFloat*                            NewProjectileSpeedCurve;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_SetProjectileSpeedCurve) == 0x000008, "Wrong alignment on BombLauncher_SetProjectileSpeedCurve");
static_assert(sizeof(BombLauncher_SetProjectileSpeedCurve) == 0x000008, "Wrong size on BombLauncher_SetProjectileSpeedCurve");
static_assert(offsetof(BombLauncher_SetProjectileSpeedCurve, NewProjectileSpeedCurve) == 0x000000, "Member 'BombLauncher_SetProjectileSpeedCurve::NewProjectileSpeedCurve' has a wrong offset!");

// Function TheClown.BombLauncher.GetCurrentBombType
// 0x0001 (0x0001 - 0x0000)
struct BombLauncher_GetCurrentBombType final
{
public:
	EBombType                                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_GetCurrentBombType) == 0x000001, "Wrong alignment on BombLauncher_GetCurrentBombType");
static_assert(sizeof(BombLauncher_GetCurrentBombType) == 0x000001, "Wrong size on BombLauncher_GetCurrentBombType");
static_assert(offsetof(BombLauncher_GetCurrentBombType, ReturnValue) == 0x000000, "Member 'BombLauncher_GetCurrentBombType::ReturnValue' has a wrong offset!");

// Function TheClown.BombLauncher.GetPercentThrowStrenght
// 0x0004 (0x0004 - 0x0000)
struct BombLauncher_GetPercentThrowStrenght final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_GetPercentThrowStrenght) == 0x000004, "Wrong alignment on BombLauncher_GetPercentThrowStrenght");
static_assert(sizeof(BombLauncher_GetPercentThrowStrenght) == 0x000004, "Wrong size on BombLauncher_GetPercentThrowStrenght");
static_assert(offsetof(BombLauncher_GetPercentThrowStrenght, ReturnValue) == 0x000000, "Member 'BombLauncher_GetPercentThrowStrenght::ReturnValue' has a wrong offset!");

// Function TheClown.BombLauncher.IsBombFullyCharged
// 0x0001 (0x0001 - 0x0000)
struct BombLauncher_IsBombFullyCharged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BombLauncher_IsBombFullyCharged) == 0x000001, "Wrong alignment on BombLauncher_IsBombFullyCharged");
static_assert(sizeof(BombLauncher_IsBombFullyCharged) == 0x000001, "Wrong size on BombLauncher_IsBombFullyCharged");
static_assert(offsetof(BombLauncher_IsBombFullyCharged, ReturnValue) == 0x000000, "Member 'BombLauncher_IsBombFullyCharged::ReturnValue' has a wrong offset!");

// Function TheClown.GasDizzyCosmeticEffect.Cosmetic_SetDizzyEffectActive
// 0x0001 (0x0001 - 0x0000)
struct GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive) == 0x000001, "Wrong alignment on GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive");
static_assert(sizeof(GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive) == 0x000001, "Wrong size on GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive");
static_assert(offsetof(GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive, IsActive) == 0x000000, "Member 'GasDizzyCosmeticEffect_Cosmetic_SetDizzyEffectActive::IsActive' has a wrong offset!");

// Function TheClown.GasDizzyCosmeticEffect.SetWantsDizzyEffectActive
// 0x0001 (0x0001 - 0x0000)
struct GasDizzyCosmeticEffect_SetWantsDizzyEffectActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GasDizzyCosmeticEffect_SetWantsDizzyEffectActive) == 0x000001, "Wrong alignment on GasDizzyCosmeticEffect_SetWantsDizzyEffectActive");
static_assert(sizeof(GasDizzyCosmeticEffect_SetWantsDizzyEffectActive) == 0x000001, "Wrong size on GasDizzyCosmeticEffect_SetWantsDizzyEffectActive");
static_assert(offsetof(GasDizzyCosmeticEffect_SetWantsDizzyEffectActive, IsActive) == 0x000000, "Member 'GasDizzyCosmeticEffect_SetWantsDizzyEffectActive::IsActive' has a wrong offset!");

// Function TheClown.GassedStatusEffect.Authority_AddOverlappingCloud
// 0x0008 (0x0008 - 0x0000)
struct GassedStatusEffect_Authority_AddOverlappingCloud final
{
public:
	class ABaseGasCloudProjectile*                Cloud;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_Authority_AddOverlappingCloud) == 0x000008, "Wrong alignment on GassedStatusEffect_Authority_AddOverlappingCloud");
static_assert(sizeof(GassedStatusEffect_Authority_AddOverlappingCloud) == 0x000008, "Wrong size on GassedStatusEffect_Authority_AddOverlappingCloud");
static_assert(offsetof(GassedStatusEffect_Authority_AddOverlappingCloud, Cloud) == 0x000000, "Member 'GassedStatusEffect_Authority_AddOverlappingCloud::Cloud' has a wrong offset!");

// Function TheClown.GassedStatusEffect.Authority_RemoveOverlappingCloud
// 0x0008 (0x0008 - 0x0000)
struct GassedStatusEffect_Authority_RemoveOverlappingCloud final
{
public:
	class ABaseGasCloudProjectile*                Cloud;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_Authority_RemoveOverlappingCloud) == 0x000008, "Wrong alignment on GassedStatusEffect_Authority_RemoveOverlappingCloud");
static_assert(sizeof(GassedStatusEffect_Authority_RemoveOverlappingCloud) == 0x000008, "Wrong size on GassedStatusEffect_Authority_RemoveOverlappingCloud");
static_assert(offsetof(GassedStatusEffect_Authority_RemoveOverlappingCloud, Cloud) == 0x000000, "Member 'GassedStatusEffect_Authority_RemoveOverlappingCloud::Cloud' has a wrong offset!");

// Function TheClown.GassedStatusEffect.Authority_SetIsInAntidoteCloud
// 0x0001 (0x0001 - 0x0000)
struct GassedStatusEffect_Authority_SetIsInAntidoteCloud final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_Authority_SetIsInAntidoteCloud) == 0x000001, "Wrong alignment on GassedStatusEffect_Authority_SetIsInAntidoteCloud");
static_assert(sizeof(GassedStatusEffect_Authority_SetIsInAntidoteCloud) == 0x000001, "Wrong size on GassedStatusEffect_Authority_SetIsInAntidoteCloud");
static_assert(offsetof(GassedStatusEffect_Authority_SetIsInAntidoteCloud, Value) == 0x000000, "Member 'GassedStatusEffect_Authority_SetIsInAntidoteCloud::Value' has a wrong offset!");

// Function TheClown.GassedStatusEffect.Authority_SetIsInCloud
// 0x0001 (0x0001 - 0x0000)
struct GassedStatusEffect_Authority_SetIsInCloud final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_Authority_SetIsInCloud) == 0x000001, "Wrong alignment on GassedStatusEffect_Authority_SetIsInCloud");
static_assert(sizeof(GassedStatusEffect_Authority_SetIsInCloud) == 0x000001, "Wrong size on GassedStatusEffect_Authority_SetIsInCloud");
static_assert(offsetof(GassedStatusEffect_Authority_SetIsInCloud, Value) == 0x000000, "Member 'GassedStatusEffect_Authority_SetIsInCloud::Value' has a wrong offset!");

// Function TheClown.GassedStatusEffect.OnAntidoteEffectBegin
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_OnAntidoteEffectBegin final
{
public:
	float                                         EffectDuration;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_OnAntidoteEffectBegin) == 0x000004, "Wrong alignment on GassedStatusEffect_OnAntidoteEffectBegin");
static_assert(sizeof(GassedStatusEffect_OnAntidoteEffectBegin) == 0x000004, "Wrong size on GassedStatusEffect_OnAntidoteEffectBegin");
static_assert(offsetof(GassedStatusEffect_OnAntidoteEffectBegin, EffectDuration) == 0x000000, "Member 'GassedStatusEffect_OnAntidoteEffectBegin::EffectDuration' has a wrong offset!");

// Function TheClown.GassedStatusEffect.OnAntidoteEffectEnd
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_OnAntidoteEffectEnd final
{
public:
	float                                         DurationSkipped;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_OnAntidoteEffectEnd) == 0x000004, "Wrong alignment on GassedStatusEffect_OnAntidoteEffectEnd");
static_assert(sizeof(GassedStatusEffect_OnAntidoteEffectEnd) == 0x000004, "Wrong size on GassedStatusEffect_OnAntidoteEffectEnd");
static_assert(offsetof(GassedStatusEffect_OnAntidoteEffectEnd, DurationSkipped) == 0x000000, "Member 'GassedStatusEffect_OnAntidoteEffectEnd::DurationSkipped' has a wrong offset!");

// Function TheClown.GassedStatusEffect.OnDirectBottleHit
// 0x0001 (0x0001 - 0x0000)
struct GassedStatusEffect_OnDirectBottleHit final
{
public:
	EBombType                                     bottleType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_OnDirectBottleHit) == 0x000001, "Wrong alignment on GassedStatusEffect_OnDirectBottleHit");
static_assert(sizeof(GassedStatusEffect_OnDirectBottleHit) == 0x000001, "Wrong size on GassedStatusEffect_OnDirectBottleHit");
static_assert(offsetof(GassedStatusEffect_OnDirectBottleHit, bottleType) == 0x000000, "Member 'GassedStatusEffect_OnDirectBottleHit::bottleType' has a wrong offset!");

// Function TheClown.GassedStatusEffect.OnToxinEffectBegin
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_OnToxinEffectBegin final
{
public:
	float                                         EffectDuration;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_OnToxinEffectBegin) == 0x000004, "Wrong alignment on GassedStatusEffect_OnToxinEffectBegin");
static_assert(sizeof(GassedStatusEffect_OnToxinEffectBegin) == 0x000004, "Wrong size on GassedStatusEffect_OnToxinEffectBegin");
static_assert(offsetof(GassedStatusEffect_OnToxinEffectBegin, EffectDuration) == 0x000000, "Member 'GassedStatusEffect_OnToxinEffectBegin::EffectDuration' has a wrong offset!");

// Function TheClown.GassedStatusEffect.OnToxinEffectEnd
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_OnToxinEffectEnd final
{
public:
	float                                         DurationSkipped;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_OnToxinEffectEnd) == 0x000004, "Wrong alignment on GassedStatusEffect_OnToxinEffectEnd");
static_assert(sizeof(GassedStatusEffect_OnToxinEffectEnd) == 0x000004, "Wrong size on GassedStatusEffect_OnToxinEffectEnd");
static_assert(offsetof(GassedStatusEffect_OnToxinEffectEnd, DurationSkipped) == 0x000000, "Member 'GassedStatusEffect_OnToxinEffectEnd::DurationSkipped' has a wrong offset!");

// Function TheClown.GassedStatusEffect.SetRemainingAntidoteDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_SetRemainingAntidoteDuration final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_SetRemainingAntidoteDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_SetRemainingAntidoteDuration");
static_assert(sizeof(GassedStatusEffect_SetRemainingAntidoteDuration) == 0x000004, "Wrong size on GassedStatusEffect_SetRemainingAntidoteDuration");
static_assert(offsetof(GassedStatusEffect_SetRemainingAntidoteDuration, Value) == 0x000000, "Member 'GassedStatusEffect_SetRemainingAntidoteDuration::Value' has a wrong offset!");

// Function TheClown.GassedStatusEffect.SetRemainingDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_SetRemainingDuration final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_SetRemainingDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_SetRemainingDuration");
static_assert(sizeof(GassedStatusEffect_SetRemainingDuration) == 0x000004, "Wrong size on GassedStatusEffect_SetRemainingDuration");
static_assert(offsetof(GassedStatusEffect_SetRemainingDuration, Value) == 0x000000, "Member 'GassedStatusEffect_SetRemainingDuration::Value' has a wrong offset!");

// Function TheClown.GassedStatusEffect.UpdateAntidoteEffectVFX
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_UpdateAntidoteEffectVFX final
{
public:
	float                                         DurationRemaining;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_UpdateAntidoteEffectVFX) == 0x000004, "Wrong alignment on GassedStatusEffect_UpdateAntidoteEffectVFX");
static_assert(sizeof(GassedStatusEffect_UpdateAntidoteEffectVFX) == 0x000004, "Wrong size on GassedStatusEffect_UpdateAntidoteEffectVFX");
static_assert(offsetof(GassedStatusEffect_UpdateAntidoteEffectVFX, DurationRemaining) == 0x000000, "Member 'GassedStatusEffect_UpdateAntidoteEffectVFX::DurationRemaining' has a wrong offset!");

// Function TheClown.GassedStatusEffect.GetAntidoteCloudEffectDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_GetAntidoteCloudEffectDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_GetAntidoteCloudEffectDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_GetAntidoteCloudEffectDuration");
static_assert(sizeof(GassedStatusEffect_GetAntidoteCloudEffectDuration) == 0x000004, "Wrong size on GassedStatusEffect_GetAntidoteCloudEffectDuration");
static_assert(offsetof(GassedStatusEffect_GetAntidoteCloudEffectDuration, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_GetAntidoteCloudEffectDuration::ReturnValue' has a wrong offset!");

// Function TheClown.GassedStatusEffect.GetCloudEffectDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_GetCloudEffectDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_GetCloudEffectDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_GetCloudEffectDuration");
static_assert(sizeof(GassedStatusEffect_GetCloudEffectDuration) == 0x000004, "Wrong size on GassedStatusEffect_GetCloudEffectDuration");
static_assert(offsetof(GassedStatusEffect_GetCloudEffectDuration, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_GetCloudEffectDuration::ReturnValue' has a wrong offset!");

// Function TheClown.GassedStatusEffect.GetRemainingAntidoteDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_GetRemainingAntidoteDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_GetRemainingAntidoteDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_GetRemainingAntidoteDuration");
static_assert(sizeof(GassedStatusEffect_GetRemainingAntidoteDuration) == 0x000004, "Wrong size on GassedStatusEffect_GetRemainingAntidoteDuration");
static_assert(offsetof(GassedStatusEffect_GetRemainingAntidoteDuration, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_GetRemainingAntidoteDuration::ReturnValue' has a wrong offset!");

// Function TheClown.GassedStatusEffect.GetRemainingDuration
// 0x0004 (0x0004 - 0x0000)
struct GassedStatusEffect_GetRemainingDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_GetRemainingDuration) == 0x000004, "Wrong alignment on GassedStatusEffect_GetRemainingDuration");
static_assert(sizeof(GassedStatusEffect_GetRemainingDuration) == 0x000004, "Wrong size on GassedStatusEffect_GetRemainingDuration");
static_assert(offsetof(GassedStatusEffect_GetRemainingDuration, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_GetRemainingDuration::ReturnValue' has a wrong offset!");

// Function TheClown.GassedStatusEffect.IsInAntidoteCloud
// 0x0001 (0x0001 - 0x0000)
struct GassedStatusEffect_IsInAntidoteCloud final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_IsInAntidoteCloud) == 0x000001, "Wrong alignment on GassedStatusEffect_IsInAntidoteCloud");
static_assert(sizeof(GassedStatusEffect_IsInAntidoteCloud) == 0x000001, "Wrong size on GassedStatusEffect_IsInAntidoteCloud");
static_assert(offsetof(GassedStatusEffect_IsInAntidoteCloud, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_IsInAntidoteCloud::ReturnValue' has a wrong offset!");

// Function TheClown.GassedStatusEffect.IsInCloud
// 0x0001 (0x0001 - 0x0000)
struct GassedStatusEffect_IsInCloud final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GassedStatusEffect_IsInCloud) == 0x000001, "Wrong alignment on GassedStatusEffect_IsInCloud");
static_assert(sizeof(GassedStatusEffect_IsInCloud) == 0x000001, "Wrong size on GassedStatusEffect_IsInCloud");
static_assert(offsetof(GassedStatusEffect_IsInCloud, ReturnValue) == 0x000000, "Member 'GassedStatusEffect_IsInCloud::ReturnValue' has a wrong offset!");

// Function TheClown.PopGoesTheWeasel.GetActivePerkDurationAtLevel
// 0x0004 (0x0004 - 0x0000)
struct PopGoesTheWeasel_GetActivePerkDurationAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PopGoesTheWeasel_GetActivePerkDurationAtLevel) == 0x000004, "Wrong alignment on PopGoesTheWeasel_GetActivePerkDurationAtLevel");
static_assert(sizeof(PopGoesTheWeasel_GetActivePerkDurationAtLevel) == 0x000004, "Wrong size on PopGoesTheWeasel_GetActivePerkDurationAtLevel");
static_assert(offsetof(PopGoesTheWeasel_GetActivePerkDurationAtLevel, ReturnValue) == 0x000000, "Member 'PopGoesTheWeasel_GetActivePerkDurationAtLevel::ReturnValue' has a wrong offset!");

// Function TheClown.TheClownUtilities.CanBeGassed
// 0x0010 (0x0010 - 0x0000)
struct TheClownUtilities_CanBeGassed final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheClownUtilities_CanBeGassed) == 0x000008, "Wrong alignment on TheClownUtilities_CanBeGassed");
static_assert(sizeof(TheClownUtilities_CanBeGassed) == 0x000010, "Wrong size on TheClownUtilities_CanBeGassed");
static_assert(offsetof(TheClownUtilities_CanBeGassed, Player) == 0x000000, "Member 'TheClownUtilities_CanBeGassed::Player' has a wrong offset!");
static_assert(offsetof(TheClownUtilities_CanBeGassed, ReturnValue) == 0x000008, "Member 'TheClownUtilities_CanBeGassed::ReturnValue' has a wrong offset!");

// Function TheClown.TheClownUtilities.GetActiveGasCloudTrackerComponent
// 0x0010 (0x0010 - 0x0000)
struct TheClownUtilities_GetActiveGasCloudTrackerComponent final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActiveGasCloudTrackerComponent*        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TheClownUtilities_GetActiveGasCloudTrackerComponent) == 0x000008, "Wrong alignment on TheClownUtilities_GetActiveGasCloudTrackerComponent");
static_assert(sizeof(TheClownUtilities_GetActiveGasCloudTrackerComponent) == 0x000010, "Wrong size on TheClownUtilities_GetActiveGasCloudTrackerComponent");
static_assert(offsetof(TheClownUtilities_GetActiveGasCloudTrackerComponent, WorldContextObject) == 0x000000, "Member 'TheClownUtilities_GetActiveGasCloudTrackerComponent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(TheClownUtilities_GetActiveGasCloudTrackerComponent, ReturnValue) == 0x000008, "Member 'TheClownUtilities_GetActiveGasCloudTrackerComponent::ReturnValue' has a wrong offset!");

// Function TheClown.TheClownUtilities.GetGassedStatusEffect
// 0x0010 (0x0010 - 0x0000)
struct TheClownUtilities_GetGassedStatusEffect final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGassedStatusEffect*                    ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TheClownUtilities_GetGassedStatusEffect) == 0x000008, "Wrong alignment on TheClownUtilities_GetGassedStatusEffect");
static_assert(sizeof(TheClownUtilities_GetGassedStatusEffect) == 0x000010, "Wrong size on TheClownUtilities_GetGassedStatusEffect");
static_assert(offsetof(TheClownUtilities_GetGassedStatusEffect, Player) == 0x000000, "Member 'TheClownUtilities_GetGassedStatusEffect::Player' has a wrong offset!");
static_assert(offsetof(TheClownUtilities_GetGassedStatusEffect, ReturnValue) == 0x000008, "Member 'TheClownUtilities_GetGassedStatusEffect::ReturnValue' has a wrong offset!");

// Function TheClown.TheClownUtilities.IsAffectedByAntidote
// 0x0010 (0x0010 - 0x0000)
struct TheClownUtilities_IsAffectedByAntidote final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheClownUtilities_IsAffectedByAntidote) == 0x000008, "Wrong alignment on TheClownUtilities_IsAffectedByAntidote");
static_assert(sizeof(TheClownUtilities_IsAffectedByAntidote) == 0x000010, "Wrong size on TheClownUtilities_IsAffectedByAntidote");
static_assert(offsetof(TheClownUtilities_IsAffectedByAntidote, Player) == 0x000000, "Member 'TheClownUtilities_IsAffectedByAntidote::Player' has a wrong offset!");
static_assert(offsetof(TheClownUtilities_IsAffectedByAntidote, ReturnValue) == 0x000008, "Member 'TheClownUtilities_IsAffectedByAntidote::ReturnValue' has a wrong offset!");

// Function TheClown.TheClownUtilities.IsGassed
// 0x0010 (0x0010 - 0x0000)
struct TheClownUtilities_IsGassed final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheClownUtilities_IsGassed) == 0x000008, "Wrong alignment on TheClownUtilities_IsGassed");
static_assert(sizeof(TheClownUtilities_IsGassed) == 0x000010, "Wrong size on TheClownUtilities_IsGassed");
static_assert(offsetof(TheClownUtilities_IsGassed, Player) == 0x000000, "Member 'TheClownUtilities_IsGassed::Player' has a wrong offset!");
static_assert(offsetof(TheClownUtilities_IsGassed, ReturnValue) == 0x000008, "Member 'TheClownUtilities_IsGassed::ReturnValue' has a wrong offset!");

}

