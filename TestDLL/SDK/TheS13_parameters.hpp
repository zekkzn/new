#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS13

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TheS13.BoilOverPerk.Authority_OnPlayerPickedUpEnd
// 0x0008 (0x0008 - 0x0000)
struct BoilOverPerk_Authority_OnPlayerPickedUpEnd final
{
public:
	class ADBDPlayer*                             Picker;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BoilOverPerk_Authority_OnPlayerPickedUpEnd) == 0x000008, "Wrong alignment on BoilOverPerk_Authority_OnPlayerPickedUpEnd");
static_assert(sizeof(BoilOverPerk_Authority_OnPlayerPickedUpEnd) == 0x000008, "Wrong size on BoilOverPerk_Authority_OnPlayerPickedUpEnd");
static_assert(offsetof(BoilOverPerk_Authority_OnPlayerPickedUpEnd, Picker) == 0x000000, "Member 'BoilOverPerk_Authority_OnPlayerPickedUpEnd::Picker' has a wrong offset!");

// Function TheS13.BoilOverPerk.GetAdditionnalWigglingProgressAtLevel
// 0x0004 (0x0004 - 0x0000)
struct BoilOverPerk_GetAdditionnalWigglingProgressAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BoilOverPerk_GetAdditionnalWigglingProgressAtLevel) == 0x000004, "Wrong alignment on BoilOverPerk_GetAdditionnalWigglingProgressAtLevel");
static_assert(sizeof(BoilOverPerk_GetAdditionnalWigglingProgressAtLevel) == 0x000004, "Wrong size on BoilOverPerk_GetAdditionnalWigglingProgressAtLevel");
static_assert(offsetof(BoilOverPerk_GetAdditionnalWigglingProgressAtLevel, ReturnValue) == 0x000000, "Member 'BoilOverPerk_GetAdditionnalWigglingProgressAtLevel::ReturnValue' has a wrong offset!");

// Function TheS13.BoilOverPerk.GetGreatHeightsValue
// 0x0004 (0x0004 - 0x0000)
struct BoilOverPerk_GetGreatHeightsValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BoilOverPerk_GetGreatHeightsValue) == 0x000004, "Wrong alignment on BoilOverPerk_GetGreatHeightsValue");
static_assert(sizeof(BoilOverPerk_GetGreatHeightsValue) == 0x000004, "Wrong size on BoilOverPerk_GetGreatHeightsValue");
static_assert(offsetof(BoilOverPerk_GetGreatHeightsValue, ReturnValue) == 0x000000, "Member 'BoilOverPerk_GetGreatHeightsValue::ReturnValue' has a wrong offset!");

// Function TheS13.DanceWithMePerk.Authority_OnPerkActivate
// 0x0040 (0x0040 - 0x0000)
struct DanceWithMePerk_Authority_OnPerkActivate final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(DanceWithMePerk_Authority_OnPerkActivate) == 0x000008, "Wrong alignment on DanceWithMePerk_Authority_OnPerkActivate");
static_assert(sizeof(DanceWithMePerk_Authority_OnPerkActivate) == 0x000040, "Wrong size on DanceWithMePerk_Authority_OnPerkActivate");
static_assert(offsetof(DanceWithMePerk_Authority_OnPerkActivate, GameplayTag) == 0x000000, "Member 'DanceWithMePerk_Authority_OnPerkActivate::GameplayTag' has a wrong offset!");
static_assert(offsetof(DanceWithMePerk_Authority_OnPerkActivate, GameEventData) == 0x000010, "Member 'DanceWithMePerk_Authority_OnPerkActivate::GameEventData' has a wrong offset!");

}

