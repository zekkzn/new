#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BearTrap

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "TheTrapper_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BearTrap.BearTrap_C
// 0x00B0 (0x0820 - 0x0770)
class ABearTrap_C : public ABearTrap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0770(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UZoneComponent*                         ZoneComponent;                                     // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDSkeletalMeshComponentBudgeted*      FxOutlineBIG;                                      // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DisarmZone;                                        // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       UntrapZone;                                        // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpherePlayerOverlapComponent*          PickTrapZone;                                      // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            MainInteractor;                                    // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCollectBearTrap_C*                     CollectBearTrap;                                   // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UResetTrap_C*                           ResetTrapChargeable;                               // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDisarm_C*                              Disarm_Trap;                                       // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USetTrap_C*                             SetTrap;                                           // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUntrap_C*                              UntrapOrbit;                                       // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USlashedOutOfTrap_C*                    SlashedOutOfTrap;                                  // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEscapeTrap_C*                          EscapeTrap;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapCamper_C*                          TrapCamper;                                        // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapKiller_C*                          TrapKiller;                                        // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   SetTrapChargeable;                                 // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   DisarmChargeable;                                  // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   EscapeChargeable;                                  // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   UntrapChargeable;                                  // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_BearTrap;                                 // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SetIndicatorActiveStateToTrappedPlayer(bool TrapIndicatorActive);
	void ReceiveBeginPlay();
	void PlayTrapSoundEvent(class FName SoundEventTunable, class ADBDPlayer* InstigatingPlayer);
	void OnTrappedVFX();
	void OnTrappedSFX();
	void OnPlayerTrapped(class ADBDPlayer* TrappedPlayer);
	void OnDropped(class ADBDPlayer* DroppingPlayer);
	void OnCollectorSet(class ADBDPlayer* Collector);
	void ForceOpen(class ADBDPlayer* InstigatingPlayer);
	void ExecuteUbergraph_BearTrap(int32 EntryPoint);
	void BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);

	void KillerHasBearTrapNoDamageModifier(bool* Return) const;
	class UAkComponent* GetAkAudioComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BearTrap_C">();
	}
	static class ABearTrap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABearTrap_C>();
	}
};
static_assert(alignof(ABearTrap_C) == 0x000010, "Wrong alignment on ABearTrap_C");
static_assert(sizeof(ABearTrap_C) == 0x000820, "Wrong size on ABearTrap_C");
static_assert(offsetof(ABearTrap_C, UberGraphFrame) == 0x000770, "Member 'ABearTrap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, ZoneComponent) == 0x000778, "Member 'ABearTrap_C::ZoneComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, FxOutlineBIG) == 0x000780, "Member 'ABearTrap_C::FxOutlineBIG' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, DisarmZone) == 0x000788, "Member 'ABearTrap_C::DisarmZone' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, UntrapZone) == 0x000790, "Member 'ABearTrap_C::UntrapZone' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, PickTrapZone) == 0x000798, "Member 'ABearTrap_C::PickTrapZone' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, MainInteractor) == 0x0007A0, "Member 'ABearTrap_C::MainInteractor' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, CollectBearTrap) == 0x0007A8, "Member 'ABearTrap_C::CollectBearTrap' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, ResetTrapChargeable) == 0x0007B0, "Member 'ABearTrap_C::ResetTrapChargeable' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, Disarm_Trap) == 0x0007B8, "Member 'ABearTrap_C::Disarm_Trap' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, SetTrap) == 0x0007C0, "Member 'ABearTrap_C::SetTrap' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, UntrapOrbit) == 0x0007C8, "Member 'ABearTrap_C::UntrapOrbit' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, SlashedOutOfTrap) == 0x0007D0, "Member 'ABearTrap_C::SlashedOutOfTrap' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, EscapeTrap) == 0x0007D8, "Member 'ABearTrap_C::EscapeTrap' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, TrapCamper) == 0x0007E0, "Member 'ABearTrap_C::TrapCamper' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, TrapKiller) == 0x0007E8, "Member 'ABearTrap_C::TrapKiller' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, SetTrapChargeable) == 0x0007F0, "Member 'ABearTrap_C::SetTrapChargeable' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, DisarmChargeable) == 0x0007F8, "Member 'ABearTrap_C::DisarmChargeable' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, EscapeChargeable) == 0x000800, "Member 'ABearTrap_C::EscapeChargeable' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, UntrapChargeable) == 0x000808, "Member 'ABearTrap_C::UntrapChargeable' has a wrong offset!");
static_assert(offsetof(ABearTrap_C, Ak_Audio_BearTrap) == 0x000810, "Member 'ABearTrap_C::Ak_Audio_BearTrap' has a wrong offset!");

}

