#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_KLR_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.TriggerSurvivorDamageHitAudioSFX
// 0x0010 (0x0010 - 0x0000)
struct BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX final
{
public:
	class ACamperPlayer*                          Camper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   AttackType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CausedKO;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeaponHit;                                       // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLightHit;                                        // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX");
static_assert(sizeof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX) == 0x000010, "Wrong size on BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX");
static_assert(offsetof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX, Camper) == 0x000000, "Member 'BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX::Camper' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX, AttackType) == 0x000008, "Member 'BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX::AttackType' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX, CausedKO) == 0x000009, "Member 'BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX::CausedKO' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX, IsWeaponHit) == 0x00000A, "Member 'BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX::IsWeaponHit' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX, IsLightHit) == 0x00000B, "Member 'BP_Audio_KLR_Base_C_TriggerSurvivorDamageHitAudioSFX::IsLightHit' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.SelectAudioStatusStartEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent final
{
public:
	bool                                          IsInMenu;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AudioEvent;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent");
static_assert(sizeof(BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent) == 0x000010, "Wrong size on BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent");
static_assert(offsetof(BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent, IsInMenu) == 0x000000, "Member 'BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent::IsInMenu' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent, AudioEvent) == 0x000008, "Member 'BP_Audio_KLR_Base_C_SelectAudioStatusStartEvent::AudioEvent' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.OnKillerSoundbankLoaded
// 0x0005 (0x0005 - 0x0000)
struct BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded final
{
public:
	EAkResult                                     Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded) == 0x000001, "Wrong alignment on BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded");
static_assert(sizeof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded) == 0x000005, "Wrong size on BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded, Result) == 0x000000, "Member 'BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded::Result' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000002, "Member 'BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_Audio_KLR_Base_C_OnKillerSoundbankLoaded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.OnKillerAudioEnabled
// 0x0014 (0x0014 - 0x0000)
struct BP_Audio_KLR_Base_C_OnKillerAudioEnabled final
{
public:
	TDelegate<void(EAkResult Result)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_OnKillerAudioEnabled) == 0x000004, "Wrong alignment on BP_Audio_KLR_Base_C_OnKillerAudioEnabled");
static_assert(sizeof(BP_Audio_KLR_Base_C_OnKillerAudioEnabled) == 0x000014, "Wrong size on BP_Audio_KLR_Base_C_OnKillerAudioEnabled");
static_assert(offsetof(BP_Audio_KLR_Base_C_OnKillerAudioEnabled, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Audio_KLR_Base_C_OnKillerAudioEnabled::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.InititializeComponent
// 0x0070 (0x0070 - 0x0000)
struct BP_Audio_KLR_Base_C_InititializeComponent final
{
public:
	class UAkAudioEvent*                          AudioEventResult;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_SelectAudioStatusStartEvent_AudioEvent;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASlasherPlayer*                         K2Node_DynamicCast_AsSlasher_Player;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAudioCharacterName_AudioCharacterName; // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDMenuPlayer*                         K2Node_DynamicCast_AsDBDMenu_Player;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDGameInstance*                       CallFunc_GetDBDGameInstance_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyInGame_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAudioCharacterName_AudioCharacterName_1; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInMenuPlayer_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationPreviewSubsystem*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPreviewingAnimation_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_InititializeComponent) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_InititializeComponent");
static_assert(sizeof(BP_Audio_KLR_Base_C_InititializeComponent) == 0x000070, "Wrong size on BP_Audio_KLR_Base_C_InititializeComponent");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, AudioEventResult) == 0x000000, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::AudioEventResult' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_SelectAudioStatusStartEvent_AudioEvent) == 0x000008, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_SelectAudioStatusStartEvent_AudioEvent' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, K2Node_DynamicCast_AsSlasher_Player) == 0x000010, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::K2Node_DynamicCast_AsSlasher_Player' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_GetAudioCharacterName_AudioCharacterName) == 0x00001C, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_GetAudioCharacterName_AudioCharacterName' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, K2Node_DynamicCast_AsDBDMenu_Player) == 0x000028, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::K2Node_DynamicCast_AsDBDMenu_Player' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_GetDBDGameInstance_ReturnValue) == 0x000038, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_GetDBDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_GetAudioComponent_ReturnValue) == 0x000040, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_GetAudioComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_IsCurrentlyInGame_ReturnValue) == 0x000048, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_IsCurrentlyInGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_GetAudioCharacterName_AudioCharacterName_1) == 0x00004C, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_GetAudioCharacterName_AudioCharacterName_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_IsInMenuPlayer_ReturnValue) == 0x000058, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_IsInMenuPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_IsPreviewingAnimation_ReturnValue) == 0x000068, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_IsPreviewingAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_InititializeComponent, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BP_Audio_KLR_Base_C_InititializeComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.HitImpactOnSurvivorSFX
// 0x0010 (0x0010 - 0x0000)
struct BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX final
{
public:
	class ACamperPlayer*                          Camper;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   AttackType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeaponHit;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX");
static_assert(sizeof(BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX) == 0x000010, "Wrong size on BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX");
static_assert(offsetof(BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX, Camper) == 0x000000, "Member 'BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX::Camper' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX, AttackType) == 0x000008, "Member 'BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX::AttackType' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX, IsWeaponHit) == 0x000009, "Member 'BP_Audio_KLR_Base_C_HitImpactOnSurvivorSFX::IsWeaponHit' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.GetAudioCharacterName
// 0x0040 (0x0040 - 0x0000)
struct BP_Audio_KLR_Base_C_GetAudioCharacterName final
{
public:
	class ADBDBasePlayer*                         Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   AudioCharacterName;                                // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizedAudioComponent*              CallFunc_GetCustomizedAudio_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAudioSwitchState_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_GetAudioCharacterName) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_GetAudioCharacterName");
static_assert(sizeof(BP_Audio_KLR_Base_C_GetAudioCharacterName) == 0x000040, "Wrong size on BP_Audio_KLR_Base_C_GetAudioCharacterName");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, Player) == 0x000000, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::Player' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, AudioCharacterName) == 0x000008, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::AudioCharacterName' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, CallFunc_GetCustomizedAudio_ReturnValue) == 0x000018, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::CallFunc_GetCustomizedAudio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, CallFunc_GetAudioSwitchState_ReturnValue) == 0x000020, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::CallFunc_GetAudioSwitchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_GetAudioCharacterName, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'BP_Audio_KLR_Base_C_GetAudioCharacterName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Audio_KLR_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Audio_KLR_Base_C_ReceiveEndPlay");
static_assert(sizeof(BP_Audio_KLR_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Audio_KLR_Base_C_ReceiveEndPlay");
static_assert(offsetof(BP_Audio_KLR_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Audio_KLR_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Audio_KLR_Base.BP_Audio_KLR_Base_C.ExecuteUbergraph_BP_Audio_KLR_Base
// 0x0070 (0x0070 - 0x0000)
struct BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          K2Node_Event_camper;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   K2Node_Event_attackType;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isWeaponHit;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0014(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACamperPlayer*                          K2Node_Event_camper_1;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   K2Node_Event_attackType_1;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_causedKO;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isWeaponHit_1;                        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isLightHit;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Audio_Survivor_Grunt_Hurt_Light_Return_Value; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue; // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TriggerScreamEventsIfPossible_ReturnValue; // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASlasherPlayer*                         CallFunc_GetOwningKiller_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDBasePlayer*                         K2Node_DynamicCast_AsDBDBase_Player;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkResult                                     CallFunc_DBD_LoadAudioBankSynchronous_ReturnValue; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnAudioManager*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base) == 0x000008, "Wrong alignment on BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base");
static_assert(sizeof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base) == 0x000070, "Wrong size on BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, EntryPoint) == 0x000000, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_camper) == 0x000008, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_camper' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_attackType) == 0x000010, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_attackType' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_isWeaponHit) == 0x000011, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_isWeaponHit' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, Temp_delegate_Variable) == 0x000014, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_GetAudioComponent_ReturnValue) == 0x000028, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_GetAudioComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_camper_1) == 0x000030, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_camper_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_attackType_1) == 0x000038, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_attackType_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_causedKO) == 0x000039, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_causedKO' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_isWeaponHit_1) == 0x00003A, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_isWeaponHit_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_isLightHit) == 0x00003B, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_isLightHit' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_PostAkEvent_ReturnValue) == 0x00003C, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_Audio_Survivor_Grunt_Hurt_Light_Return_Value) == 0x000040, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_Audio_Survivor_Grunt_Hurt_Light_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue) == 0x000042, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_TriggerScreamEventsIfPossible_ReturnValue) == 0x000043, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_TriggerScreamEventsIfPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_Event_EndPlayReason) == 0x000044, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_GetOwningKiller_ReturnValue) == 0x000048, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_GetOwningKiller_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_DynamicCast_AsDBDBase_Player) == 0x000058, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_DynamicCast_AsDBDBase_Player' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_DBD_LoadAudioBankSynchronous_ReturnValue) == 0x000061, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_DBD_LoadAudioBankSynchronous_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000068, "Member 'BP_Audio_KLR_Base_C_ExecuteUbergraph_BP_Audio_KLR_Base::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

}

