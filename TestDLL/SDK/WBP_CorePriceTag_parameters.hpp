#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePriceTag

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.ExecuteUbergraph_WBP_CorePriceTag
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPriceTagViewData                      K2Node_Event_viewData;                             // 0x0008(0x0050)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetBeautifiedNumericText_ReturnValue;     // 0x0060(0x0018)()
	class FText                                   CallFunc_GetBeautifiedNumericText_ReturnValue_1;   // 0x0078(0x0018)()
	bool                                          K2Node_Event_showBackground;                       // 0x0090(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_highlight;                            // 0x0091(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_bottomPadding;                        // 0x0094(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_priceTagScale;                        // 0x00B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag) == 0x000008, "Wrong alignment on WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag");
static_assert(sizeof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag) == 0x0000D0, "Wrong size on WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, EntryPoint) == 0x000000, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_viewData) == 0x000008, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_viewData' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_GetBeautifiedNumericText_ReturnValue) == 0x000060, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_GetBeautifiedNumericText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_GetBeautifiedNumericText_ReturnValue_1) == 0x000078, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_GetBeautifiedNumericText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_showBackground) == 0x000090, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_showBackground' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_highlight) == 0x000091, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_highlight' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_IsDesignTime) == 0x000092, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_bottomPadding) == 0x000094, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_bottomPadding' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000098, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, K2Node_Event_priceTagScale) == 0x0000B0, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::K2Node_Event_priceTagScale' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000C8, "Member 'WBP_CorePriceTag_C_ExecuteUbergraph_WBP_CorePriceTag::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePriceTag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CorePriceTag_C_PreConstruct");
static_assert(sizeof(WBP_CorePriceTag_C_PreConstruct) == 0x000001, "Wrong size on WBP_CorePriceTag_C_PreConstruct");
static_assert(offsetof(WBP_CorePriceTag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CorePriceTag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetBackgroundVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePriceTag_C_SetBackgroundVisible final
{
public:
	bool                                          Param_ShowBackground;                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetBackgroundVisible) == 0x000001, "Wrong alignment on WBP_CorePriceTag_C_SetBackgroundVisible");
static_assert(sizeof(WBP_CorePriceTag_C_SetBackgroundVisible) == 0x000001, "Wrong size on WBP_CorePriceTag_C_SetBackgroundVisible");
static_assert(offsetof(WBP_CorePriceTag_C_SetBackgroundVisible, Param_ShowBackground) == 0x000000, "Member 'WBP_CorePriceTag_C_SetBackgroundVisible::Param_ShowBackground' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetColors
// 0x0038 (0x0038 - 0x0000)
struct WBP_CorePriceTag_C_SetColors final
{
public:
	struct FSlateColor                            PriceColor;                                        // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            DiscountColor;                                     // 0x0014(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           StrikeColor;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetColors) == 0x000004, "Wrong alignment on WBP_CorePriceTag_C_SetColors");
static_assert(sizeof(WBP_CorePriceTag_C_SetColors) == 0x000038, "Wrong size on WBP_CorePriceTag_C_SetColors");
static_assert(offsetof(WBP_CorePriceTag_C_SetColors, PriceColor) == 0x000000, "Member 'WBP_CorePriceTag_C_SetColors::PriceColor' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetColors, DiscountColor) == 0x000014, "Member 'WBP_CorePriceTag_C_SetColors::DiscountColor' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetColors, StrikeColor) == 0x000028, "Member 'WBP_CorePriceTag_C_SetColors::StrikeColor' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetCurrencyIcon
// 0x0048 (0x0048 - 0x0000)
struct WBP_CorePriceTag_C_SetCurrencyIcon final
{
public:
	ECurrencyType                                 Param_CurrencyType;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIDataManager*                         CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetCurrencyIcon_ReturnValue;              // 0x0010(0x0038)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetCurrencyIcon) == 0x000008, "Wrong alignment on WBP_CorePriceTag_C_SetCurrencyIcon");
static_assert(sizeof(WBP_CorePriceTag_C_SetCurrencyIcon) == 0x000048, "Wrong size on WBP_CorePriceTag_C_SetCurrencyIcon");
static_assert(offsetof(WBP_CorePriceTag_C_SetCurrencyIcon, Param_CurrencyType) == 0x000000, "Member 'WBP_CorePriceTag_C_SetCurrencyIcon::Param_CurrencyType' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetCurrencyIcon, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000008, "Member 'WBP_CorePriceTag_C_SetCurrencyIcon::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetCurrencyIcon, CallFunc_GetCurrencyIcon_ReturnValue) == 0x000010, "Member 'WBP_CorePriceTag_C_SetCurrencyIcon::CallFunc_GetCurrencyIcon_ReturnValue' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetData
// 0x0050 (0x0050 - 0x0000)
struct WBP_CorePriceTag_C_SetData final
{
public:
	struct FPriceTagViewData                      ViewData;                                          // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CorePriceTag_C_SetData) == 0x000008, "Wrong alignment on WBP_CorePriceTag_C_SetData");
static_assert(sizeof(WBP_CorePriceTag_C_SetData) == 0x000050, "Wrong size on WBP_CorePriceTag_C_SetData");
static_assert(offsetof(WBP_CorePriceTag_C_SetData, ViewData) == 0x000000, "Member 'WBP_CorePriceTag_C_SetData::ViewData' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetDiscountTagSpacing
// 0x0004 (0x0004 - 0x0000)
struct WBP_CorePriceTag_C_SetDiscountTagSpacing final
{
public:
	float                                         bottomPadding;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetDiscountTagSpacing) == 0x000004, "Wrong alignment on WBP_CorePriceTag_C_SetDiscountTagSpacing");
static_assert(sizeof(WBP_CorePriceTag_C_SetDiscountTagSpacing) == 0x000004, "Wrong size on WBP_CorePriceTag_C_SetDiscountTagSpacing");
static_assert(offsetof(WBP_CorePriceTag_C_SetDiscountTagSpacing, bottomPadding) == 0x000000, "Member 'WBP_CorePriceTag_C_SetDiscountTagSpacing::bottomPadding' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetHighlightInsufficientCurrency
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePriceTag_C_SetHighlightInsufficientCurrency final
{
public:
	bool                                          Highlight;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetHighlightInsufficientCurrency) == 0x000001, "Wrong alignment on WBP_CorePriceTag_C_SetHighlightInsufficientCurrency");
static_assert(sizeof(WBP_CorePriceTag_C_SetHighlightInsufficientCurrency) == 0x000001, "Wrong size on WBP_CorePriceTag_C_SetHighlightInsufficientCurrency");
static_assert(offsetof(WBP_CorePriceTag_C_SetHighlightInsufficientCurrency, Highlight) == 0x000000, "Member 'WBP_CorePriceTag_C_SetHighlightInsufficientCurrency::Highlight' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.SetPriceTagVisual
// 0x0003 (0x0003 - 0x0000)
struct WBP_CorePriceTag_C_SetPriceTagVisual final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_SetPriceTagVisual) == 0x000001, "Wrong alignment on WBP_CorePriceTag_C_SetPriceTagVisual");
static_assert(sizeof(WBP_CorePriceTag_C_SetPriceTagVisual) == 0x000003, "Wrong size on WBP_CorePriceTag_C_SetPriceTagVisual");
static_assert(offsetof(WBP_CorePriceTag_C_SetPriceTagVisual, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'WBP_CorePriceTag_C_SetPriceTagVisual::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetPriceTagVisual, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_CorePriceTag_C_SetPriceTagVisual::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePriceTag_C_SetPriceTagVisual, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_CorePriceTag_C_SetPriceTagVisual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CorePriceTag.WBP_CorePriceTag_C.UpdatePriceTagScale
// 0x0004 (0x0004 - 0x0000)
struct WBP_CorePriceTag_C_UpdatePriceTagScale final
{
public:
	float                                         PriceTagScale;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePriceTag_C_UpdatePriceTagScale) == 0x000004, "Wrong alignment on WBP_CorePriceTag_C_UpdatePriceTagScale");
static_assert(sizeof(WBP_CorePriceTag_C_UpdatePriceTagScale) == 0x000004, "Wrong size on WBP_CorePriceTag_C_UpdatePriceTagScale");
static_assert(offsetof(WBP_CorePriceTag_C_UpdatePriceTagScale, PriceTagScale) == 0x000000, "Member 'WBP_CorePriceTag_C_UpdatePriceTagScale::PriceTagScale' has a wrong offset!");

}

