#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BeUtil

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct BeUtil.BeMaterialVector
// 0x001C (0x001C - 0x0000)
struct FBeMaterialVector final
{
public:
	class FName                                   Name;                                              // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Vector;                                            // 0x000C(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBeMaterialVector) == 0x000004, "Wrong alignment on FBeMaterialVector");
static_assert(sizeof(FBeMaterialVector) == 0x00001C, "Wrong size on FBeMaterialVector");
static_assert(offsetof(FBeMaterialVector, Name) == 0x000000, "Member 'FBeMaterialVector::Name' has a wrong offset!");
static_assert(offsetof(FBeMaterialVector, Vector) == 0x00000C, "Member 'FBeMaterialVector::Vector' has a wrong offset!");

// ScriptStruct BeUtil.BeMaterialScalar
// 0x0010 (0x0010 - 0x0000)
struct FBeMaterialScalar final
{
public:
	class FName                                   Name;                                              // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scalar;                                            // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBeMaterialScalar) == 0x000004, "Wrong alignment on FBeMaterialScalar");
static_assert(sizeof(FBeMaterialScalar) == 0x000010, "Wrong size on FBeMaterialScalar");
static_assert(offsetof(FBeMaterialScalar, Name) == 0x000000, "Member 'FBeMaterialScalar::Name' has a wrong offset!");
static_assert(offsetof(FBeMaterialScalar, Scalar) == 0x00000C, "Member 'FBeMaterialScalar::Scalar' has a wrong offset!");

// ScriptStruct BeUtil.BeMaterialTexture
// 0x0018 (0x0018 - 0x0000)
struct FBeMaterialTexture final
{
public:
	class FName                                   Name;                                              // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Texture;                                           // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBeMaterialTexture) == 0x000008, "Wrong alignment on FBeMaterialTexture");
static_assert(sizeof(FBeMaterialTexture) == 0x000018, "Wrong size on FBeMaterialTexture");
static_assert(offsetof(FBeMaterialTexture, Name) == 0x000000, "Member 'FBeMaterialTexture::Name' has a wrong offset!");
static_assert(offsetof(FBeMaterialTexture, Texture) == 0x000010, "Member 'FBeMaterialTexture::Texture' has a wrong offset!");

}

