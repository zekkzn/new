#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Halloween2020

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class Halloween2020.BlightedSerumAddon
// 0x0078 (0x0360 - 0x02E8)
class UBlightedSerumAddon final : public UItemAddon
{
public:
	TSubclassOf<class ACollectable>               _blightedSerumCollectable;                         // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlightedSerumDashInteraction*          _dashInteraction;                                  // 0x02F0(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _blightPowerPickedUp;                              // 0x02F8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _theBlightExtraTokens;                             // 0x02FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _numberOfDashesPerEvent;                           // 0x0300(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_304[0x5C];                                     // 0x0304(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBlightedDashEnabledVfxSfx();
	void OnRep_BlightPowerPickedUp();
	void OnRep_DashInteraction();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumAddon">();
	}
	static class UBlightedSerumAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumAddon>();
	}
};
static_assert(alignof(UBlightedSerumAddon) == 0x000008, "Wrong alignment on UBlightedSerumAddon");
static_assert(sizeof(UBlightedSerumAddon) == 0x000360, "Wrong size on UBlightedSerumAddon");
static_assert(offsetof(UBlightedSerumAddon, _blightedSerumCollectable) == 0x0002E8, "Member 'UBlightedSerumAddon::_blightedSerumCollectable' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _dashInteraction) == 0x0002F0, "Member 'UBlightedSerumAddon::_dashInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _blightPowerPickedUp) == 0x0002F8, "Member 'UBlightedSerumAddon::_blightPowerPickedUp' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _theBlightExtraTokens) == 0x0002FC, "Member 'UBlightedSerumAddon::_theBlightExtraTokens' has a wrong offset!");
static_assert(offsetof(UBlightedSerumAddon, _numberOfDashesPerEvent) == 0x000300, "Member 'UBlightedSerumAddon::_numberOfDashesPerEvent' has a wrong offset!");

// Class Halloween2020.BlightedSerumCollisionInteraction
// 0x0020 (0x07A0 - 0x0780)
class UBlightedSerumCollisionInteraction final : public UInteractionDefinition
{
public:
	class UBlightedSerumCooldownInteraction*      _cooldownInteraction;                              // 0x0778(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _bounceTime;                                       // 0x0780(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_784[0x1C];                                     // 0x0784(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCooldownInteraction(class UBlightedSerumCooldownInteraction* CooldownInteraction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumCollisionInteraction">();
	}
	static class UBlightedSerumCollisionInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumCollisionInteraction>();
	}
};
static_assert(alignof(UBlightedSerumCollisionInteraction) == 0x000010, "Wrong alignment on UBlightedSerumCollisionInteraction");
static_assert(sizeof(UBlightedSerumCollisionInteraction) == 0x0007A0, "Wrong size on UBlightedSerumCollisionInteraction");
static_assert(offsetof(UBlightedSerumCollisionInteraction, _cooldownInteraction) == 0x000778, "Member 'UBlightedSerumCollisionInteraction::_cooldownInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumCollisionInteraction, _bounceTime) == 0x000780, "Member 'UBlightedSerumCollisionInteraction::_bounceTime' has a wrong offset!");

// Class Halloween2020.BlightedSerumCooldownInteraction
// 0x0010 (0x0790 - 0x0780)
class UBlightedSerumCooldownInteraction final : public UInteractionDefinition
{
public:
	float                                         _cooldownTime;                                     // 0x0778(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cameraPitchRecenterTime;                          // 0x077C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_780[0x10];                                     // 0x0780(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumCooldownInteraction">();
	}
	static class UBlightedSerumCooldownInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumCooldownInteraction>();
	}
};
static_assert(alignof(UBlightedSerumCooldownInteraction) == 0x000010, "Wrong alignment on UBlightedSerumCooldownInteraction");
static_assert(sizeof(UBlightedSerumCooldownInteraction) == 0x000790, "Wrong size on UBlightedSerumCooldownInteraction");
static_assert(offsetof(UBlightedSerumCooldownInteraction, _cooldownTime) == 0x000778, "Member 'UBlightedSerumCooldownInteraction::_cooldownTime' has a wrong offset!");
static_assert(offsetof(UBlightedSerumCooldownInteraction, _cameraPitchRecenterTime) == 0x00077C, "Member 'UBlightedSerumCooldownInteraction::_cameraPitchRecenterTime' has a wrong offset!");

// Class Halloween2020.BlightedSerumDashInteraction
// 0x00B0 (0x0830 - 0x0780)
class UBlightedSerumDashInteraction final : public UInteractionDefinition
{
public:
	class UBlightedSerumCooldownInteraction*      _cooldownInteraction;                              // 0x0778(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlightedSerumCollisionInteraction*     _collisionInteraction;                             // 0x0780(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _dashSpeedCurve;                                   // 0x0788(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _lookAngleToTurnRateCurveController;               // 0x0790(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _lookAngleToTurnRateCurveMouse;                    // 0x0798(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _dashDuration;                                     // 0x07A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _vectorInterpToSpeed;                              // 0x07A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashAccelerationMultiplier;                   // 0x07A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cameraPitchRecenterTime;                          // 0x07AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _lookAngleTurnRateModifier;                        // 0x07B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionRadius;                          // 0x07B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionHeight;                          // 0x07B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _wallDashCollisionRange;                           // 0x07BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C0[0x70];                                     // 0x07C0(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCollisionInteraction(class UBlightedSerumCollisionInteraction* CollisionInteraction);
	void SetCooldownInteraction(class UBlightedSerumCooldownInteraction* CooldownInteraction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlightedSerumDashInteraction">();
	}
	static class UBlightedSerumDashInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlightedSerumDashInteraction>();
	}
};
static_assert(alignof(UBlightedSerumDashInteraction) == 0x000010, "Wrong alignment on UBlightedSerumDashInteraction");
static_assert(sizeof(UBlightedSerumDashInteraction) == 0x000830, "Wrong size on UBlightedSerumDashInteraction");
static_assert(offsetof(UBlightedSerumDashInteraction, _cooldownInteraction) == 0x000778, "Member 'UBlightedSerumDashInteraction::_cooldownInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _collisionInteraction) == 0x000780, "Member 'UBlightedSerumDashInteraction::_collisionInteraction' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _dashSpeedCurve) == 0x000788, "Member 'UBlightedSerumDashInteraction::_dashSpeedCurve' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleToTurnRateCurveController) == 0x000790, "Member 'UBlightedSerumDashInteraction::_lookAngleToTurnRateCurveController' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleToTurnRateCurveMouse) == 0x000798, "Member 'UBlightedSerumDashInteraction::_lookAngleToTurnRateCurveMouse' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _dashDuration) == 0x0007A0, "Member 'UBlightedSerumDashInteraction::_dashDuration' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _vectorInterpToSpeed) == 0x0007A4, "Member 'UBlightedSerumDashInteraction::_vectorInterpToSpeed' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashAccelerationMultiplier) == 0x0007A8, "Member 'UBlightedSerumDashInteraction::_wallDashAccelerationMultiplier' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _cameraPitchRecenterTime) == 0x0007AC, "Member 'UBlightedSerumDashInteraction::_cameraPitchRecenterTime' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _lookAngleTurnRateModifier) == 0x0007B0, "Member 'UBlightedSerumDashInteraction::_lookAngleTurnRateModifier' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionRadius) == 0x0007B4, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionRadius' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionHeight) == 0x0007B8, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionHeight' has a wrong offset!");
static_assert(offsetof(UBlightedSerumDashInteraction, _wallDashCollisionRange) == 0x0007BC, "Member 'UBlightedSerumDashInteraction::_wallDashCollisionRange' has a wrong offset!");

// Class Halloween2020.ToxinPlantInteractable
// 0x0008 (0x03F0 - 0x03E8)
class AToxinPlantInteractable final : public ASpecialBehaviourInteractable
{
public:
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSalvageInteractionFinished();
	void OnSalvageInteractionStart();
	void OnToxinPlantComplete();
	void SetToxinPlantComplete(const bool IsComplete);

	bool IsToxinPlantComplete() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ToxinPlantInteractable">();
	}
	static class AToxinPlantInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<AToxinPlantInteractable>();
	}
};
static_assert(alignof(AToxinPlantInteractable) == 0x000008, "Wrong alignment on AToxinPlantInteractable");
static_assert(sizeof(AToxinPlantInteractable) == 0x0003F0, "Wrong size on AToxinPlantInteractable");

}

