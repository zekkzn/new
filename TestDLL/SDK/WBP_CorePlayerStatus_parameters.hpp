#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePlayerStatus

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "UMG_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"
#include "DBDUIViewsCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.UpdateSurvivorSpecificPingIcon
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon final
{
public:
	EConnectionQuality                            ConnectionQuality;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon");
static_assert(sizeof(WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon) == 0x000001, "Wrong size on WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon");
static_assert(offsetof(WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon, ConnectionQuality) == 0x000000, "Member 'WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon::ConnectionQuality' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.UpdateSurvivorActivityProgress
// 0x0004 (0x0004 - 0x0000)
struct WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress) == 0x000004, "Wrong alignment on WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress");
static_assert(sizeof(WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress) == 0x000004, "Wrong size on WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress");
static_assert(offsetof(WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress, Progress) == 0x000000, "Member 'WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress::Progress' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ShowSurvivorActivity
// 0x0040 (0x0040 - 0x0000)
struct WBP_CorePlayerStatus_C_ShowSurvivorActivity final
{
public:
	TSoftObjectPtr<class UTexture2D>              Param_ActivityIcon;                                // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ShouldDisplayProgress;                             // 0x0038(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_ShowSurvivorActivity) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_ShowSurvivorActivity");
static_assert(sizeof(WBP_CorePlayerStatus_C_ShowSurvivorActivity) == 0x000040, "Wrong size on WBP_CorePlayerStatus_C_ShowSurvivorActivity");
static_assert(offsetof(WBP_CorePlayerStatus_C_ShowSurvivorActivity, Param_ActivityIcon) == 0x000000, "Member 'WBP_CorePlayerStatus_C_ShowSurvivorActivity::Param_ActivityIcon' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ShowSurvivorActivity, ShouldDisplayProgress) == 0x000038, "Member 'WBP_CorePlayerStatus_C_ShowSurvivorActivity::ShouldDisplayProgress' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetVisual
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CorePlayerStatus_C_SetVisual final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetVisual) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetVisual");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetVisual) == 0x0000B0, "Wrong size on WBP_CorePlayerStatus_C_SetVisual");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, Data) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetVisual::Data' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'WBP_CorePlayerStatus_C_SetVisual::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, CallFunc_SelectInt_ReturnValue) == 0x00009C, "Member 'WBP_CorePlayerStatus_C_SetVisual::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'WBP_CorePlayerStatus_C_SetVisual::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'WBP_CorePlayerStatus_C_SetVisual::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetVisual, CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast) == 0x0000A8, "Member 'WBP_CorePlayerStatus_C_SetVisual::CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTimerProgressVisual
// 0x02D0 (0x02D0 - 0x0000)
struct WBP_CorePlayerStatus_C_SetTimerProgressVisual final
{
public:
	double                                        TimerValue;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeepWound;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      K2Node_Select_Default_2;                           // 0x0020(0x0290)()
	float                                         CallFunc_Greater_FloatFloat_A_ImplicitCast;        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetTimerProgressVisual) == 0x000010, "Wrong alignment on WBP_CorePlayerStatus_C_SetTimerProgressVisual");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetTimerProgressVisual) == 0x0002D0, "Wrong size on WBP_CorePlayerStatus_C_SetTimerProgressVisual");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, TimerValue) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::TimerValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, IsDeepWound) == 0x000008, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::IsDeepWound' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, Temp_bool_Variable) == 0x000009, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000A, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, Temp_bool_Variable_1) == 0x00000B, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, Temp_bool_Variable_2) == 0x00000C, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, Temp_byte_Variable) == 0x00000D, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, Temp_byte_Variable_1) == 0x00000E, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, K2Node_Select_Default) == 0x00000F, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, K2Node_Select_Default_2) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_Greater_FloatFloat_A_ImplicitCast) == 0x0002B0, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_Greater_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x0002B8, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgressVisual, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0002C0, "Member 'WBP_CorePlayerStatus_C_SetTimerProgressVisual::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTimerProgress
// 0x0008 (0x0008 - 0x0000)
struct WBP_CorePlayerStatus_C_SetTimerProgress final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeepWound;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetTimerProgress) == 0x000004, "Wrong alignment on WBP_CorePlayerStatus_C_SetTimerProgress");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetTimerProgress) == 0x000008, "Wrong size on WBP_CorePlayerStatus_C_SetTimerProgress");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgress, Value) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetTimerProgress::Value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTimerProgress, IsDeepWound) == 0x000004, "Member 'WBP_CorePlayerStatus_C_SetTimerProgress::IsDeepWound' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTemplate
// 0x0002 (0x0002 - 0x0000)
struct WBP_CorePlayerStatus_C_SetTemplate final
{
public:
	EPlayerStatusTemplate                         Template;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetTemplate) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_SetTemplate");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetTemplate) == 0x000002, "Wrong size on WBP_CorePlayerStatus_C_SetTemplate");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTemplate, Template) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetTemplate::Template' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetTemplate, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_CorePlayerStatus_C_SetTemplate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetStatusIcon
// 0x0048 (0x0048 - 0x0000)
struct WBP_CorePlayerStatus_C_SetStatusIcon final
{
public:
	EPlayerStatus                                 PlayerStatusState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Player_Portrait;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Player_Portrait_Icon_Overwrite;                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCalamariMode;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Looping;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetStatusIconTexture_IconTexture;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetStatusIcon) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetStatusIcon");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetStatusIcon) == 0x000048, "Wrong size on WBP_CorePlayerStatus_C_SetStatusIcon");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, PlayerStatusState) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::PlayerStatusState' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, Player_Portrait) == 0x000008, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::Player_Portrait' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, Player_Portrait_Icon_Overwrite) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::Player_Portrait_Icon_Overwrite' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, IsCalamariMode) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::IsCalamariMode' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, Looping) == 0x00001C, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::Looping' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_MakeLiteralByte_ReturnValue) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_GetStatusIconTexture_IconTexture) == 0x000028, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_GetStatusIconTexture_IconTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000032, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000040, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetStatusIcon, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'WBP_CorePlayerStatus_C_SetStatusIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPlayerPortrait
// 0x0020 (0x0020 - 0x0000)
struct WBP_CorePlayerStatus_C_SetPlayerPortrait final
{
public:
	class UTexture2D*                             PortraitIcon;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetDistanceField_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetPlayerPortrait) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetPlayerPortrait");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetPlayerPortrait) == 0x000020, "Wrong size on WBP_CorePlayerStatus_C_SetPlayerPortrait");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerPortrait, PortraitIcon) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetPlayerPortrait::PortraitIcon' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerPortrait, CallFunc_GetDistanceField_ReturnValue) == 0x000008, "Member 'WBP_CorePlayerStatus_C_SetPlayerPortrait::CallFunc_GetDistanceField_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerPortrait, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetPlayerPortrait::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerPortrait, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetPlayerPortrait::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPlayerName
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_CorePlayerStatus_C_SetPlayerName final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PlayerNameMaxCharacters;                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Font_SIze;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Font_Size;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Character_Length;                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min_Character_Length_Before_Sizing;                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         Font;                                              // 0x0028(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_BeautifyName_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetPlayerName");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetPlayerName) == 0x0000B8, "Wrong size on WBP_CorePlayerStatus_C_SetPlayerName");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, PlayerName) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, PlayerNameMaxCharacters) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::PlayerNameMaxCharacters' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, Max_Font_SIze) == 0x000014, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::Max_Font_SIze' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, Min_Font_Size) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::Min_Font_Size' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, Max_Character_Length) == 0x00001C, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::Max_Character_Length' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, Min_Character_Length_Before_Sizing) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::Min_Character_Length_Before_Sizing' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, Font) == 0x000028, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::Font' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, CallFunc_BeautifyName_ReturnValue) == 0x000088, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::CallFunc_BeautifyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPlayerName, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000B0, "Member 'WBP_CorePlayerStatus_C_SetPlayerName::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPingVisual
// 0x0002 (0x0002 - 0x0000)
struct WBP_CorePlayerStatus_C_SetPingVisual final
{
public:
	EConnectionQuality                            Ping;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetPingVisual) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_SetPingVisual");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetPingVisual) == 0x000002, "Wrong size on WBP_CorePlayerStatus_C_SetPingVisual");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPingVisual, Ping) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetPingVisual::Ping' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetPingVisual, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_CorePlayerStatus_C_SetPingVisual::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetObsessionState
// 0x0040 (0x0040 - 0x0000)
struct WBP_CorePlayerStatus_C_SetObsessionState final
{
public:
	EObsessionUIState                             Obsession_State;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasObsessionStateChanged_ReturnValue;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetObsessionState) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetObsessionState");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetObsessionState) == 0x000040, "Wrong size on WBP_CorePlayerStatus_C_SetObsessionState");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, Obsession_State) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::Obsession_State' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_PlayAnimation_ReturnValue_2) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, K2Node_SwitchEnum_CmpSuccess_1) == 0x000029, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_PlayAnimation_ReturnValue_3) == 0x000030, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetObsessionState, CallFunc_HasObsessionStateChanged_ReturnValue) == 0x000038, "Member 'WBP_CorePlayerStatus_C_SetObsessionState::CallFunc_HasObsessionStateChanged_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetKillerData
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_CorePlayerStatus_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UCorePlayerStatusKillerEffectWidget*    CallFunc_GetKillerStatusEffectWidget_ReturnValue;  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetKillerData");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetKillerData) == 0x0000A8, "Wrong size on WBP_CorePlayerStatus_C_SetKillerData");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetKillerData, Data) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetKillerData::Data' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetKillerData, CallFunc_GetKillerStatusEffectWidget_ReturnValue) == 0x000098, "Member 'WBP_CorePlayerStatus_C_SetKillerData::CallFunc_GetKillerStatusEffectWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetKillerData, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WBP_CorePlayerStatus_C_SetKillerData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetHookStrikeVisual
// 0x0030 (0x0030 - 0x0000)
struct WBP_CorePlayerStatus_C_SetHookStrikeVisual final
{
public:
	class UDBDImage*                              HookStrikeImage;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOn;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKiller;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             HookStrikeIcon_Off;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             HookStrikeIcon_On;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetHookStrikeVisual) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetHookStrikeVisual");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetHookStrikeVisual) == 0x000030, "Wrong size on WBP_CorePlayerStatus_C_SetHookStrikeVisual");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, HookStrikeImage) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::HookStrikeImage' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, IsOn) == 0x000008, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::IsOn' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, IsKiller) == 0x000009, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::IsKiller' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, HookStrikeIcon_Off) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::HookStrikeIcon_Off' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, HookStrikeIcon_On) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::HookStrikeIcon_On' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, Temp_bool_Variable) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetHookStrikeVisual, K2Node_Select_Default) == 0x000028, "Member 'WBP_CorePlayerStatus_C_SetHookStrikeVisual::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetEventIcon
// 0x0028 (0x0028 - 0x0000)
struct WBP_CorePlayerStatus_C_SetEventIcon final
{
public:
	class FString                                 EventBannerLabel;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetEventIcon) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetEventIcon");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetEventIcon) == 0x000028, "Wrong size on WBP_CorePlayerStatus_C_SetEventIcon");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetEventIcon, EventBannerLabel) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetEventIcon::EventBannerLabel' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetEventIcon, IsActive) == 0x000010, "Member 'WBP_CorePlayerStatus_C_SetEventIcon::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetEventIcon, CallFunc_Map_Find_Value) == 0x000018, "Member 'WBP_CorePlayerStatus_C_SetEventIcon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetEventIcon, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_CorePlayerStatus_C_SetEventIcon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetEventIcon, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_CorePlayerStatus_C_SetEventIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetData
// 0x0098 (0x0098 - 0x0000)
struct WBP_CorePlayerStatus_C_SetData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetData) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetData");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetData) == 0x000098, "Wrong size on WBP_CorePlayerStatus_C_SetData");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetData, Data) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetData::Data' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetClassIcon
// 0x0040 (0x0040 - 0x0000)
struct WBP_CorePlayerStatus_C_SetClassIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Param_ClassIcon;                                   // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsCalamariMode;                                    // 0x0038(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Player_Killer;                                  // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Local_Player_Killer;                            // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetClassIcon) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_SetClassIcon");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetClassIcon) == 0x000040, "Wrong size on WBP_CorePlayerStatus_C_SetClassIcon");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, Param_ClassIcon) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::Param_ClassIcon' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, IsCalamariMode) == 0x000038, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::IsCalamariMode' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, Is_Player_Killer) == 0x000039, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::Is_Player_Killer' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, Is_Local_Player_Killer) == 0x00003A, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::Is_Local_Player_Killer' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00003D, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetClassIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x00003F, "Member 'WBP_CorePlayerStatus_C_SetClassIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetBrokenIcon
// 0x0005 (0x0005 - 0x0000)
struct WBP_CorePlayerStatus_C_SetBrokenIcon final
{
public:
	bool                                          IsBroken;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetBrokenIcon) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_SetBrokenIcon");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetBrokenIcon) == 0x000005, "Wrong size on WBP_CorePlayerStatus_C_SetBrokenIcon");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBrokenIcon, IsBroken) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetBrokenIcon::IsBroken' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBrokenIcon, Temp_bool_Variable) == 0x000001, "Member 'WBP_CorePlayerStatus_C_SetBrokenIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBrokenIcon, Temp_byte_Variable) == 0x000002, "Member 'WBP_CorePlayerStatus_C_SetBrokenIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBrokenIcon, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CorePlayerStatus_C_SetBrokenIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBrokenIcon, K2Node_Select_Default) == 0x000004, "Member 'WBP_CorePlayerStatus_C_SetBrokenIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetBotTag
// 0x0006 (0x0006 - 0x0000)
struct WBP_CorePlayerStatus_C_SetBotTag final
{
public:
	bool                                          IsBot;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_SetBotTag) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_SetBotTag");
static_assert(sizeof(WBP_CorePlayerStatus_C_SetBotTag) == 0x000006, "Wrong size on WBP_CorePlayerStatus_C_SetBotTag");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, IsBot) == 0x000000, "Member 'WBP_CorePlayerStatus_C_SetBotTag::IsBot' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, Temp_bool_Variable) == 0x000001, "Member 'WBP_CorePlayerStatus_C_SetBotTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, Temp_byte_Variable) == 0x000002, "Member 'WBP_CorePlayerStatus_C_SetBotTag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CorePlayerStatus_C_SetBotTag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000004, "Member 'WBP_CorePlayerStatus_C_SetBotTag::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_SetBotTag, K2Node_Select_Default) == 0x000005, "Member 'WBP_CorePlayerStatus_C_SetBotTag::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Set Hooked Count
// 0x0008 (0x0008 - 0x0000)
struct WBP_CorePlayerStatus_C_Set_Hooked_Count final
{
public:
	int32                                         DrainStage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Killer;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_Set_Hooked_Count) == 0x000004, "Wrong alignment on WBP_CorePlayerStatus_C_Set_Hooked_Count");
static_assert(sizeof(WBP_CorePlayerStatus_C_Set_Hooked_Count) == 0x000008, "Wrong size on WBP_CorePlayerStatus_C_Set_Hooked_Count");
static_assert(offsetof(WBP_CorePlayerStatus_C_Set_Hooked_Count, DrainStage) == 0x000000, "Member 'WBP_CorePlayerStatus_C_Set_Hooked_Count::DrainStage' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Set_Hooked_Count, Is_Killer) == 0x000004, "Member 'WBP_CorePlayerStatus_C_Set_Hooked_Count::Is_Killer' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Set_Hooked_Count, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_CorePlayerStatus_C_Set_Hooked_Count::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Set_Hooked_Count, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000006, "Member 'WBP_CorePlayerStatus_C_Set_Hooked_Count::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePlayerStatus_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_PreConstruct");
static_assert(sizeof(WBP_CorePlayerStatus_C_PreConstruct) == 0x000001, "Wrong size on WBP_CorePlayerStatus_C_PreConstruct");
static_assert(offsetof(WBP_CorePlayerStatus_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CorePlayerStatus_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayUpdateAnimations
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_CorePlayerStatus_C_PlayUpdateAnimations final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EPlayerStateChangeType                        CurrentStateChangeType;                            // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Temp_object_Variable_1;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPlayerStateChangeType                        Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPlayerStateChangeType                        CallFunc_GetPlayerStateChangeType_ReturnValue;     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayerStateChanged_ReturnValue;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayerStatusDataChanged_ReturnValue;   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_PlayUpdateAnimations) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_PlayUpdateAnimations");
static_assert(sizeof(WBP_CorePlayerStatus_C_PlayUpdateAnimations) == 0x0000E8, "Wrong size on WBP_CorePlayerStatus_C_PlayUpdateAnimations");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, Data) == 0x000000, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::Data' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CurrentStateChangeType) == 0x000098, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CurrentStateChangeType' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, Temp_object_Variable) == 0x0000A0, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, Temp_object_Variable_1) == 0x0000A8, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, Temp_byte_Variable) == 0x0000B0, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_GetPlayerStateChangeType_ReturnValue) == 0x0000C0, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_GetPlayerStateChangeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_HasPlayerStateChanged_ReturnValue) == 0x0000C1, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_HasPlayerStateChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000D8, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayUpdateAnimations, CallFunc_HasPlayerStatusDataChanged_ReturnValue) == 0x0000E0, "Member 'WBP_CorePlayerStatus_C_PlayUpdateAnimations::CallFunc_HasPlayerStatusDataChanged_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayTimerBarAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_CorePlayerStatus_C_PlayTimerBarAnimation final
{
public:
	bool                                          IsLooping;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_PlayTimerBarAnimation");
static_assert(sizeof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation) == 0x000020, "Wrong size on WBP_CorePlayerStatus_C_PlayTimerBarAnimation");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, IsLooping) == 0x000000, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::IsLooping' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, Temp_bool_Variable) == 0x000001, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, Temp_int_Variable) == 0x000004, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, Temp_int_Variable_1) == 0x000008, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00000C, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000E, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, K2Node_Select_Default) == 0x000010, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayTimerBarAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_PlayTimerBarAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Player Injured Intro Animation
// 0x0018 (0x0018 - 0x0000)
struct WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation final
{
public:
	int32                                         Loop;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Animation;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation");
static_assert(sizeof(WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation) == 0x000018, "Wrong size on WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation, Loop) == 0x000000, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation::Loop' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation, Animation) == 0x000008, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Player Injured Idle Animation
// 0x0018 (0x0018 - 0x0000)
struct WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation final
{
public:
	int32                                         Loops;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoreState;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Animation;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation");
static_assert(sizeof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation) == 0x000018, "Wrong size on WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation, Loops) == 0x000000, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation::Loops' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation, RestoreState) == 0x000004, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation::RestoreState' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation, Animation) == 0x000008, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayBloodSplatterAnimation
// 0x0040 (0x0040 - 0x0000)
struct WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation final
{
public:
	EPlayerStatus                                 StatusState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Player_Injured_Idle_Animation_animation;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetBloodAnimationAssets_Texture;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_GetBloodAnimationAssets_Animation;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation");
static_assert(sizeof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation) == 0x000040, "Wrong size on WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, StatusState) == 0x000000, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::StatusState' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_Player_Injured_Idle_Animation_animation) == 0x000010, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_Player_Injured_Idle_Animation_animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_GetBloodAnimationAssets_Texture) == 0x000028, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_GetBloodAnimationAssets_Texture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_GetBloodAnimationAssets_Animation) == 0x000030, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_GetBloodAnimationAssets_Animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Play Bot Name Animation
// 0x0020 (0x0020 - 0x0000)
struct WBP_CorePlayerStatus_C_Play_Bot_Name_Animation final
{
public:
	bool                                          IsBot;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_Play_Bot_Name_Animation");
static_assert(sizeof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation) == 0x000020, "Wrong size on WBP_CorePlayerStatus_C_Play_Bot_Name_Animation");
static_assert(offsetof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation, IsBot) == 0x000000, "Member 'WBP_CorePlayerStatus_C_Play_Bot_Name_Animation::IsBot' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation, PlayerName) == 0x000008, "Member 'WBP_CorePlayerStatus_C_Play_Bot_Name_Animation::PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_Play_Bot_Name_Animation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_Play_Bot_Name_Animation, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'WBP_CorePlayerStatus_C_Play_Bot_Name_Animation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.OnPlayFocusAnimation
// 0x0030 (0x0030 - 0x0000)
struct WBP_CorePlayerStatus_C_OnPlayFocusAnimation final
{
public:
	bool                                          Forward;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TweenDelay;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_ToOpacity_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Create_delay_ImplicitCast;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ToOpacity_targetValue_ImplicitCast;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_OnPlayFocusAnimation");
static_assert(sizeof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation) == 0x000030, "Wrong size on WBP_CorePlayerStatus_C_OnPlayFocusAnimation");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, Forward) == 0x000000, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::Forward' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, TweenDelay) == 0x000008, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::TweenDelay' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, CallFunc_ToOpacity_ReturnValue) == 0x000020, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::CallFunc_ToOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, CallFunc_Create_delay_ImplicitCast) == 0x000028, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::CallFunc_Create_delay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_OnPlayFocusAnimation, CallFunc_ToOpacity_targetValue_ImplicitCast) == 0x00002C, "Member 'WBP_CorePlayerStatus_C_OnPlayFocusAnimation::CallFunc_ToOpacity_targetValue_ImplicitCast' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetStatusIconTexture
// 0x0038 (0x0038 - 0x0000)
struct WBP_CorePlayerStatus_C_GetStatusIconTexture final
{
public:
	EPlayerStatus                                 PlayerStatusState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCalamariMode;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             IconTexture;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusAssets                    CallFunc_Map_Find_Value;                           // 0x0018(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_GetStatusIconTexture) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_GetStatusIconTexture");
static_assert(sizeof(WBP_CorePlayerStatus_C_GetStatusIconTexture) == 0x000038, "Wrong size on WBP_CorePlayerStatus_C_GetStatusIconTexture");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, PlayerStatusState) == 0x000000, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::PlayerStatusState' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, IsCalamariMode) == 0x000001, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::IsCalamariMode' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, IconTexture) == 0x000008, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::IconTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, CallFunc_Map_Find_Value) == 0x000018, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetStatusIconTexture, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'WBP_CorePlayerStatus_C_GetStatusIconTexture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodImageTopBottom
// 0x0048 (0x0048 - 0x0000)
struct WBP_CorePlayerStatus_C_GetBloodImageTopBottom final
{
public:
	EPlayerStatus                                 Player_Status;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusAssets                    CallFunc_Map_Find_Value;                           // 0x0008(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_GetBloodImageTopBottom");
static_assert(sizeof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom) == 0x000048, "Wrong size on WBP_CorePlayerStatus_C_GetBloodImageTopBottom");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, Player_Status) == 0x000000, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::Player_Status' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, CallFunc_Map_Find_Value) == 0x000008, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000038, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodImageTopBottom, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_CorePlayerStatus_C_GetBloodImageTopBottom::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodAnimationAssets
// 0x0080 (0x0080 - 0x0000)
struct WBP_CorePlayerStatus_C_GetBloodAnimationAssets final
{
public:
	EPlayerStatus                                 State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Animation;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CageTexture;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             SacrificedTexture;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CrawlingTexture;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             InjuredTexture;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DeadTexture;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             TrapTexture;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             HookTexture;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusAssets                    CallFunc_Map_Find_Value;                           // 0x0058(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_GetBloodAnimation_Animation;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_GetBloodAnimationAssets");
static_assert(sizeof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets) == 0x000080, "Wrong size on WBP_CorePlayerStatus_C_GetBloodAnimationAssets");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, State) == 0x000000, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::State' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, Texture) == 0x000008, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::Texture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, Animation) == 0x000010, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::Animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CageTexture) == 0x000018, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CageTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, SacrificedTexture) == 0x000020, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::SacrificedTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CrawlingTexture) == 0x000028, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CrawlingTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, InjuredTexture) == 0x000030, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::InjuredTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, DeadTexture) == 0x000038, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::DeadTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, TrapTexture) == 0x000040, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::TrapTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, HookTexture) == 0x000048, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::HookTexture' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000071, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimationAssets, CallFunc_GetBloodAnimation_Animation) == 0x000078, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimationAssets::CallFunc_GetBloodAnimation_Animation' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_CorePlayerStatus_C_GetBloodAnimation final
{
public:
	EPlayerStatus                                 PlayerStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Animation;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_GetBloodAnimation) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_GetBloodAnimation");
static_assert(sizeof(WBP_CorePlayerStatus_C_GetBloodAnimation) == 0x000018, "Wrong size on WBP_CorePlayerStatus_C_GetBloodAnimation");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimation, PlayerStatus) == 0x000000, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimation::PlayerStatus' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimation, Animation) == 0x000008, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_GetBloodAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_CorePlayerStatus_C_GetBloodAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ExecuteUbergraph_WBP_CorePlayerStatus
// 0x02A8 (0x02A8 - 0x0000)
struct WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerStatusTemplate                         Temp_byte_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerStatusTemplate                         Temp_byte_Variable_4;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0028(0x0098)(ConstParm)
	EPlayerStatusTemplate                         K2Node_Select_Default;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  CallFunc_CacheViewData_ReturnValue;                // 0x00C8(0x0098)()
	float                                         K2Node_Event_value;                                // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isDeepWound;                          // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Player_Injured_Intro_Animation_animation; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCorePlayerStatusKillerEffectWidget*    CallFunc_GetKillerStatusEffectWidget_ReturnValue;  // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCorePlayerStatusKillerEffectK07Widget* K2Node_DynamicCast_AsCore_Player_Status_Killer_Effect_K07Widget; // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConnectionQuality                            K2Node_Event_connectionQuality;                    // 0x01A2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_progress;                             // 0x01B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isChased;                             // 0x01B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_activityIcon;                         // 0x01D0(0x0038)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_Event_shouldDisplayProgress;                // 0x0208(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_playerName;                     // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0238(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_disableLeftClaw;                      // 0x024C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_disableRightClaw;                     // 0x024D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0250(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_3;                           // 0x0264(0x0014)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0278(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus");
static_assert(sizeof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus) == 0x0002A8, "Wrong size on WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, EntryPoint) == 0x000000, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable) == 0x000004, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_bool_Variable) == 0x00001C, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_bool_Variable_1) == 0x00001D, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_bool_Variable_2) == 0x00001E, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable_1) == 0x00001F, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable_2) == 0x000020, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_bool_Variable_3) == 0x000021, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable_3) == 0x000022, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable_4) == 0x000023, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_data) == 0x000028, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Select_Default) == 0x0000C0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_CacheViewData_ReturnValue) == 0x0000C8, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_CacheViewData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_value) == 0x000160, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_value' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_isDeepWound) == 0x000164, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_isDeepWound' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_IsDesignTime) == 0x000165, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_Player_Injured_Intro_Animation_animation) == 0x000168, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_Player_Injured_Intro_Animation_animation' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_byte_Variable_5) == 0x000170, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_Not_PreBool_ReturnValue) == 0x000171, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000178, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000180, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, Temp_bool_Variable_4) == 0x000189, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_GetKillerStatusEffectWidget_ReturnValue) == 0x000190, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_GetKillerStatusEffectWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_DynamicCast_AsCore_Player_Status_Killer_Effect_K07Widget) == 0x000198, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_DynamicCast_AsCore_Player_Status_Killer_Effect_K07Widget' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0001A1, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_connectionQuality) == 0x0001A2, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_connectionQuality' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_ReturnValue) == 0x0001A8, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_progress) == 0x0001B0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_progress' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_isChased) == 0x0001B4, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_isChased' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001B8, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001C0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001C8, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_activityIcon) == 0x0001D0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_activityIcon' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_shouldDisplayProgress) == 0x000208, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_shouldDisplayProgress' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Select_Default_1) == 0x000209, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_CustomEvent_playerName) == 0x000210, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_CustomEvent_playerName' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000220, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_ReturnValue_3) == 0x000228, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_ReturnValue_4) == 0x000230, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_CreateDelegate_OutputDelegate_1) == 0x000238, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_disableLeftClaw) == 0x00024C, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_disableLeftClaw' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Event_disableRightClaw) == 0x00024D, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Event_disableRightClaw' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Select_Default_2) == 0x000250, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Select_Default_3) == 0x000264, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_CreateDelegate_OutputDelegate_2) == 0x000278, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00028C, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_SelectInt_ReturnValue) == 0x000290, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, K2Node_Select_Default_4) == 0x000294, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast) == 0x000298, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_SetTimerProgressVisual_TimerValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x0002A0, "Member 'WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Event Bot Name Change
// 0x0010 (0x0010 - 0x0000)
struct WBP_CorePlayerStatus_C_Event_Bot_Name_Change final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_Event_Bot_Name_Change) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_Event_Bot_Name_Change");
static_assert(sizeof(WBP_CorePlayerStatus_C_Event_Bot_Name_Change) == 0x000010, "Wrong size on WBP_CorePlayerStatus_C_Event_Bot_Name_Change");
static_assert(offsetof(WBP_CorePlayerStatus_C_Event_Bot_Name_Change, PlayerName) == 0x000000, "Member 'WBP_CorePlayerStatus_C_Event_Bot_Name_Change::PlayerName' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.EnableChasesMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePlayerStatus_C_EnableChasesMode final
{
public:
	bool                                          IsChased;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_EnableChasesMode) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_EnableChasesMode");
static_assert(sizeof(WBP_CorePlayerStatus_C_EnableChasesMode) == 0x000001, "Wrong size on WBP_CorePlayerStatus_C_EnableChasesMode");
static_assert(offsetof(WBP_CorePlayerStatus_C_EnableChasesMode, IsChased) == 0x000000, "Member 'WBP_CorePlayerStatus_C_EnableChasesMode::IsChased' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.DimObsessionAndChaseClaws
// 0x0002 (0x0002 - 0x0000)
struct WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws final
{
public:
	bool                                          DisableLeftClaw;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableRightClaw;                                  // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws");
static_assert(sizeof(WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws) == 0x000002, "Wrong size on WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws");
static_assert(offsetof(WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws, DisableLeftClaw) == 0x000000, "Member 'WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws::DisableLeftClaw' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws, DisableRightClaw) == 0x000001, "Member 'WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws::DisableRightClaw' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ClearKillerVisual
// 0x0010 (0x0010 - 0x0000)
struct WBP_CorePlayerStatus_C_ClearKillerVisual final
{
public:
	class UCorePlayerStatusKillerEffectWidget*    CallFunc_GetKillerStatusEffectWidget_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_ClearKillerVisual) == 0x000008, "Wrong alignment on WBP_CorePlayerStatus_C_ClearKillerVisual");
static_assert(sizeof(WBP_CorePlayerStatus_C_ClearKillerVisual) == 0x000010, "Wrong size on WBP_CorePlayerStatus_C_ClearKillerVisual");
static_assert(offsetof(WBP_CorePlayerStatus_C_ClearKillerVisual, CallFunc_GetKillerStatusEffectWidget_ReturnValue) == 0x000000, "Member 'WBP_CorePlayerStatus_C_ClearKillerVisual::CallFunc_GetKillerStatusEffectWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ClearKillerVisual, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_CorePlayerStatus_C_ClearKillerVisual::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ShouldPlayFocusAnimation
// 0x0002 (0x0002 - 0x0000)
struct WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayFocusAnimation_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation) == 0x000001, "Wrong alignment on WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation");
static_assert(sizeof(WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation) == 0x000002, "Wrong size on WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation");
static_assert(offsetof(WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation, ReturnValue) == 0x000000, "Member 'WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation, CallFunc_ShouldPlayFocusAnimation_ReturnValue) == 0x000001, "Member 'WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation::CallFunc_ShouldPlayFocusAnimation_ReturnValue' has a wrong offset!");

}

