#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindowStandard

#include "Basic.hpp"

#include "WindowStandard_classes.hpp"
#include "WindowStandard_parameters.hpp"


namespace SDK
{

// Function WindowStandard.WindowStandard_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWindowStandard_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WindowStandard.WindowStandard_C.UpdateWindowNavlinks
// (Public, BlueprintCallable, BlueprintEvent)

void AWindowStandard_C::UpdateWindowNavlinks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "UpdateWindowNavlinks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WindowStandard.WindowStandard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWindowStandard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WindowStandard.WindowStandard_C.OnFastVault
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AWindowStandard_C::OnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "OnFastVault");

	Params::WindowStandard_C_OnFastVault Parms{};

	Parms.Player = Player;
	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WindowStandard.WindowStandard_C.ExecuteUbergraph_WindowStandard
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWindowStandard_C::ExecuteUbergraph_WindowStandard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "ExecuteUbergraph_WindowStandard");

	Params::WindowStandard_C_ExecuteUbergraph_WindowStandard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WindowStandard.WindowStandard_C.Authority_OnVault
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Vaulter                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AWindowStandard_C::Authority_OnVault(class ADBDPlayer* Vaulter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "Authority_OnVault");

	Params::WindowStandard_C_Authority_OnVault Parms{};

	Parms.Vaulter = Vaulter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WindowStandard.WindowStandard_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Interactor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AWindowStandard_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "IsInterruptionPossible");

	Params::WindowStandard_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Interactor = Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WindowStandard.WindowStandard_C.GetInfectedParticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UParticleSystemComponent*> InfectedParticleArray                                  (Parm, OutParm, ContainsInstancedReference)

void AWindowStandard_C::GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "GetInfectedParticles");

	Params::WindowStandard_C_GetInfectedParticles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedParticleArray != nullptr)
		*InfectedParticleArray = std::move(Parms.InfectedParticleArray);
}


// Function WindowStandard.WindowStandard_C.GetInfectedDecals
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UDecalComponent*>          InfectedDecals                                         (Parm, OutParm, ContainsInstancedReference)

void AWindowStandard_C::GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WindowStandard_C", "GetInfectedDecals");

	Params::WindowStandard_C_GetInfectedDecals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedDecals != nullptr)
		*InfectedDecals = std::move(Parms.InfectedDecals);
}

}

