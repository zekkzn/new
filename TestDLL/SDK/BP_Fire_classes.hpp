#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fire

#include "Basic.hpp"

#include "VFXUtilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Fire.BP_Fire_C
// 0x0020 (0x02C8 - 0x02A8)
class ABP_Fire_C final : public ABaseVFX
{
public:
	class UParticleSystemComponent*               P_FireBarel_Fire1;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_Fire;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TotalTime;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Spawn(class UParticleSystemComponent* Param_Spawn, double Smoke1, double Smoke2, double F_Smoke2, double Fire0, double F_Fire0, double Flames1, double Flames2, double Flames3, double F_Flames1, double F_Flames2, double F_Flames3);
	void Fire_Smoke(class UParticleSystemComponent* FX, bool Smoke);
	void Fire_Normal(class UParticleSystemComponent* FX, bool Normal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Fire_C">();
	}
	static class ABP_Fire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Fire_C>();
	}
};
static_assert(alignof(ABP_Fire_C) == 0x000008, "Wrong alignment on ABP_Fire_C");
static_assert(sizeof(ABP_Fire_C) == 0x0002C8, "Wrong size on ABP_Fire_C");
static_assert(offsetof(ABP_Fire_C, P_FireBarel_Fire1) == 0x0002A8, "Member 'ABP_Fire_C::P_FireBarel_Fire1' has a wrong offset!");
static_assert(offsetof(ABP_Fire_C, Niagara_Fire) == 0x0002B0, "Member 'ABP_Fire_C::Niagara_Fire' has a wrong offset!");
static_assert(offsetof(ABP_Fire_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Fire_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Fire_C, TotalTime) == 0x0002C0, "Member 'ABP_Fire_C::TotalTime' has a wrong offset!");

}

