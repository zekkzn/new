#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK31

#include "Basic.hpp"

#include "DBDCompetence_structs.hpp"
#include "DBDCompetence_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "TheK31_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DBDAnimation_classes.hpp"
#include "StatSystem_structs.hpp"
#include "DBDCosmetic_classes.hpp"
#include "SystemUtilities_structs.hpp"
#include "Competence_classes.hpp"
#include "Achievements_classes.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// Class TheK31.K31PowerChargePresentationPowerFadeComponent
// 0x0008 (0x00B0 - 0x00A8)
class UK31PowerChargePresentationPowerFadeComponent final : public UPresentationPowerFadeComponent
{
public:
	class AK31Power*                              _originatingPower;                                 // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31PowerChargePresentationPowerFadeComponent">();
	}
	static class UK31PowerChargePresentationPowerFadeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31PowerChargePresentationPowerFadeComponent>();
	}
};
static_assert(alignof(UK31PowerChargePresentationPowerFadeComponent) == 0x000008, "Wrong alignment on UK31PowerChargePresentationPowerFadeComponent");
static_assert(sizeof(UK31PowerChargePresentationPowerFadeComponent) == 0x0000B0, "Wrong size on UK31PowerChargePresentationPowerFadeComponent");
static_assert(offsetof(UK31PowerChargePresentationPowerFadeComponent, _originatingPower) == 0x0000A8, "Member 'UK31PowerChargePresentationPowerFadeComponent::_originatingPower' has a wrong offset!");

// Class TheK31.K31DroneBaseAction
// 0x0000 (0x0030 - 0x0030)
class UK31DroneBaseAction : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneBaseAction">();
	}
	static class UK31DroneBaseAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneBaseAction>();
	}
};
static_assert(alignof(UK31DroneBaseAction) == 0x000008, "Wrong alignment on UK31DroneBaseAction");
static_assert(sizeof(UK31DroneBaseAction) == 0x000030, "Wrong size on UK31DroneBaseAction");

// Class TheK31.K31PowerCosmeticHelper
// 0x0050 (0x00F8 - 0x00A8)
class UK31PowerCosmeticHelper final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x50];                                      // 0x00A8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_DoesRadarDetectAnySurvivorsUpdatedEvent(bool DoesRadarDetectAnySurvivors);
	void Cosmetic_IsOnPowerCooldownUpdatedEvent(bool IsPowerOnCooldown);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31PowerCosmeticHelper">();
	}
	static class UK31PowerCosmeticHelper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31PowerCosmeticHelper>();
	}
};
static_assert(alignof(UK31PowerCosmeticHelper) == 0x000008, "Wrong alignment on UK31PowerCosmeticHelper");
static_assert(sizeof(UK31PowerCosmeticHelper) == 0x0000F8, "Wrong size on UK31PowerCosmeticHelper");

// Class TheK31.K31DroneChangeStateAction
// 0x0008 (0x0038 - 0x0030)
class UK31DroneChangeStateAction : public UK31DroneBaseAction
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneChangeStateAction">();
	}
	static class UK31DroneChangeStateAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneChangeStateAction>();
	}
};
static_assert(alignof(UK31DroneChangeStateAction) == 0x000008, "Wrong alignment on UK31DroneChangeStateAction");
static_assert(sizeof(UK31DroneChangeStateAction) == 0x000038, "Wrong size on UK31DroneChangeStateAction");

// Class TheK31.K31PowerSubAnimInstance
// 0x0030 (0x03B0 - 0x0380)
class UK31PowerSubAnimInstance final : public UDBDBaseAnimInstance
{
public:
	bool                                          _isChargingInspection;                             // 0x0380(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _inspectPlayRate;                                  // 0x0384(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _inspectSequenceStartPosition;                     // 0x0388(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          _inspectSequence;                                  // 0x0390(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x18];                                     // 0x0398(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31PowerSubAnimInstance">();
	}
	static class UK31PowerSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31PowerSubAnimInstance>();
	}
};
static_assert(alignof(UK31PowerSubAnimInstance) == 0x000010, "Wrong alignment on UK31PowerSubAnimInstance");
static_assert(sizeof(UK31PowerSubAnimInstance) == 0x0003B0, "Wrong size on UK31PowerSubAnimInstance");
static_assert(offsetof(UK31PowerSubAnimInstance, _isChargingInspection) == 0x000380, "Member 'UK31PowerSubAnimInstance::_isChargingInspection' has a wrong offset!");
static_assert(offsetof(UK31PowerSubAnimInstance, _inspectPlayRate) == 0x000384, "Member 'UK31PowerSubAnimInstance::_inspectPlayRate' has a wrong offset!");
static_assert(offsetof(UK31PowerSubAnimInstance, _inspectSequenceStartPosition) == 0x000388, "Member 'UK31PowerSubAnimInstance::_inspectSequenceStartPosition' has a wrong offset!");
static_assert(offsetof(UK31PowerSubAnimInstance, _inspectSequence) == 0x000390, "Member 'UK31PowerSubAnimInstance::_inspectSequence' has a wrong offset!");

// Class TheK31.ActivateK31DroneAction
// 0x0000 (0x0038 - 0x0038)
class UActivateK31DroneAction final : public UK31DroneChangeStateAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActivateK31DroneAction">();
	}
	static class UActivateK31DroneAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateK31DroneAction>();
	}
};
static_assert(alignof(UActivateK31DroneAction) == 0x000008, "Wrong alignment on UActivateK31DroneAction");
static_assert(sizeof(UActivateK31DroneAction) == 0x000038, "Wrong size on UActivateK31DroneAction");

// Class TheK31.ActiveDroneZoneLingeringEffect
// 0x0000 (0x03E8 - 0x03E8)
class UActiveDroneZoneLingeringEffect final : public UBaseLingeringStatusEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ActiveDroneZoneLingeringEffect">();
	}
	static class UActiveDroneZoneLingeringEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActiveDroneZoneLingeringEffect>();
	}
};
static_assert(alignof(UActiveDroneZoneLingeringEffect) == 0x000008, "Wrong alignment on UActiveDroneZoneLingeringEffect");
static_assert(sizeof(UActiveDroneZoneLingeringEffect) == 0x0003E8, "Wrong size on UActiveDroneZoneLingeringEffect");

// Class TheK31.Addon_K31Power_01
// 0x0010 (0x02F8 - 0x02E8)
class UAddon_K31Power_01 final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _modifySkillCheckDifficultyEffectClass;            // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _skillCheckDifficultyModifier;                     // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_01">();
	}
	static class UAddon_K31Power_01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_01>();
	}
};
static_assert(alignof(UAddon_K31Power_01) == 0x000008, "Wrong alignment on UAddon_K31Power_01");
static_assert(sizeof(UAddon_K31Power_01) == 0x0002F8, "Wrong size on UAddon_K31Power_01");
static_assert(offsetof(UAddon_K31Power_01, _modifySkillCheckDifficultyEffectClass) == 0x0002E8, "Member 'UAddon_K31Power_01::_modifySkillCheckDifficultyEffectClass' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_01, _skillCheckDifficultyModifier) == 0x0002F0, "Member 'UAddon_K31Power_01::_skillCheckDifficultyModifier' has a wrong offset!");

// Class TheK31.Addon_K31Power_02
// 0x0008 (0x02F0 - 0x02E8)
class UAddon_K31Power_02 final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _blindnessEffectClass;                             // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_02">();
	}
	static class UAddon_K31Power_02* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_02>();
	}
};
static_assert(alignof(UAddon_K31Power_02) == 0x000008, "Wrong alignment on UAddon_K31Power_02");
static_assert(sizeof(UAddon_K31Power_02) == 0x0002F0, "Wrong size on UAddon_K31Power_02");
static_assert(offsetof(UAddon_K31Power_02, _blindnessEffectClass) == 0x0002E8, "Member 'UAddon_K31Power_02::_blindnessEffectClass' has a wrong offset!");

// Class TheK31.Addon_K31Power_03
// 0x0010 (0x02F8 - 0x02E8)
class UAddon_K31Power_03 final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _actionSpeedEffect;                                // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _actionSpeedEffectDuration;                        // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_03">();
	}
	static class UAddon_K31Power_03* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_03>();
	}
};
static_assert(alignof(UAddon_K31Power_03) == 0x000008, "Wrong alignment on UAddon_K31Power_03");
static_assert(sizeof(UAddon_K31Power_03) == 0x0002F8, "Wrong size on UAddon_K31Power_03");
static_assert(offsetof(UAddon_K31Power_03, _actionSpeedEffect) == 0x0002E8, "Member 'UAddon_K31Power_03::_actionSpeedEffect' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_03, _actionSpeedEffectDuration) == 0x0002F0, "Member 'UAddon_K31Power_03::_actionSpeedEffectDuration' has a wrong offset!");

// Class TheK31.Addon_K31Power_13
// 0x0010 (0x02F8 - 0x02E8)
class UAddon_K31Power_13 final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _exhaustedEffectClass;                             // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _exhaustedEffectDurationSeconds;                   // 0x02F0(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_13">();
	}
	static class UAddon_K31Power_13* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_13>();
	}
};
static_assert(alignof(UAddon_K31Power_13) == 0x000008, "Wrong alignment on UAddon_K31Power_13");
static_assert(sizeof(UAddon_K31Power_13) == 0x0002F8, "Wrong size on UAddon_K31Power_13");
static_assert(offsetof(UAddon_K31Power_13, _exhaustedEffectClass) == 0x0002E8, "Member 'UAddon_K31Power_13::_exhaustedEffectClass' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_13, _exhaustedEffectDurationSeconds) == 0x0002F0, "Member 'UAddon_K31Power_13::_exhaustedEffectDurationSeconds' has a wrong offset!");

// Class TheK31.Addon_K31Power_18
// 0x0008 (0x0310 - 0x0308)
class UAddon_K31Power_18 final : public USimpleSpawnEffectsOnAllSurvivorsAddon
{
public:
	float                                         _batteryPercent;                                   // 0x0308(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_18">();
	}
	static class UAddon_K31Power_18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_18>();
	}
};
static_assert(alignof(UAddon_K31Power_18) == 0x000008, "Wrong alignment on UAddon_K31Power_18");
static_assert(sizeof(UAddon_K31Power_18) == 0x000310, "Wrong size on UAddon_K31Power_18");
static_assert(offsetof(UAddon_K31Power_18, _batteryPercent) == 0x000308, "Member 'UAddon_K31Power_18::_batteryPercent' has a wrong offset!");

// Class TheK31.Addon_K31Power_19
// 0x0000 (0x02E8 - 0x02E8)
class UAddon_K31Power_19 final : public UItemAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_19">();
	}
	static class UAddon_K31Power_19* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_19>();
	}
};
static_assert(alignof(UAddon_K31Power_19) == 0x000008, "Wrong alignment on UAddon_K31Power_19");
static_assert(sizeof(UAddon_K31Power_19) == 0x0002E8, "Wrong size on UAddon_K31Power_19");

// Class TheK31.Addon_K31Power_20
// 0x0088 (0x0370 - 0x02E8)
class UAddon_K31Power_20 final : public UItemAddon
{
public:
	float                                         _terrorRadiusSize;                                 // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _terrorRadiusDuration;                             // 0x02EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<EK31DroneStateID>                      _allowedDroneStatesForEffectToApply;               // 0x02F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class AK31Drone*                              _targetDrone;                                      // 0x0300(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTerrorRadiusEmitterComponent*          _terrorRadius;                                     // 0x0308(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_310[0x30];                                     // 0x0310(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _indicatorEffectClass;                             // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _indicatorEffect;                                  // 0x0348(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _undetectableEffectClass;                          // 0x0350(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _undetectableEffect;                               // 0x0358(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnGameEventReceived(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);
	void Authority_OnTerrorRadiusLifetimeTimerDone();
	void OnRep_TargetDrone();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_K31Power_20">();
	}
	static class UAddon_K31Power_20* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_K31Power_20>();
	}
};
static_assert(alignof(UAddon_K31Power_20) == 0x000008, "Wrong alignment on UAddon_K31Power_20");
static_assert(sizeof(UAddon_K31Power_20) == 0x000370, "Wrong size on UAddon_K31Power_20");
static_assert(offsetof(UAddon_K31Power_20, _terrorRadiusSize) == 0x0002E8, "Member 'UAddon_K31Power_20::_terrorRadiusSize' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _terrorRadiusDuration) == 0x0002EC, "Member 'UAddon_K31Power_20::_terrorRadiusDuration' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _allowedDroneStatesForEffectToApply) == 0x0002F0, "Member 'UAddon_K31Power_20::_allowedDroneStatesForEffectToApply' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _targetDrone) == 0x000300, "Member 'UAddon_K31Power_20::_targetDrone' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _terrorRadius) == 0x000308, "Member 'UAddon_K31Power_20::_terrorRadius' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _indicatorEffectClass) == 0x000340, "Member 'UAddon_K31Power_20::_indicatorEffectClass' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _indicatorEffect) == 0x000348, "Member 'UAddon_K31Power_20::_indicatorEffect' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _undetectableEffectClass) == 0x000350, "Member 'UAddon_K31Power_20::_undetectableEffectClass' has a wrong offset!");
static_assert(offsetof(UAddon_K31Power_20, _undetectableEffect) == 0x000358, "Member 'UAddon_K31Power_20::_undetectableEffect' has a wrong offset!");

// Class TheK31.DeployDroneInteraction
// 0x0010 (0x0790 - 0x0780)
class UDeployDroneInteraction final : public UInteractionDefinition
{
public:
	bool                                          _shouldDeploymentSetPowerOnCooldown;               // 0x0778(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _canPlaceDroneWhilePowerIsOnCooldown;              // 0x0779(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_77A[0x16];                                     // 0x077A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeployDroneInteraction">();
	}
	static class UDeployDroneInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeployDroneInteraction>();
	}
};
static_assert(alignof(UDeployDroneInteraction) == 0x000010, "Wrong alignment on UDeployDroneInteraction");
static_assert(sizeof(UDeployDroneInteraction) == 0x000790, "Wrong size on UDeployDroneInteraction");
static_assert(offsetof(UDeployDroneInteraction, _shouldDeploymentSetPowerOnCooldown) == 0x000778, "Member 'UDeployDroneInteraction::_shouldDeploymentSetPowerOnCooldown' has a wrong offset!");
static_assert(offsetof(UDeployDroneInteraction, _canPlaceDroneWhilePowerIsOnCooldown) == 0x000779, "Member 'UDeployDroneInteraction::_canPlaceDroneWhilePowerIsOnCooldown' has a wrong offset!");

// Class TheK31.DroneRestrictedPlacementAreaStrategy
// 0x0020 (0x00C8 - 0x00A8)
class UDroneRestrictedPlacementAreaStrategy final : public URestrictedPlacementAreaStrategy
{
public:
	uint8                                         Pad_A8[0x20];                                      // 0x00A8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDroneAcquiredChanged(const bool Acquired);
	void OnDroneEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DroneRestrictedPlacementAreaStrategy">();
	}
	static class UDroneRestrictedPlacementAreaStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDroneRestrictedPlacementAreaStrategy>();
	}
};
static_assert(alignof(UDroneRestrictedPlacementAreaStrategy) == 0x000008, "Wrong alignment on UDroneRestrictedPlacementAreaStrategy");
static_assert(sizeof(UDroneRestrictedPlacementAreaStrategy) == 0x0000C8, "Wrong size on UDroneRestrictedPlacementAreaStrategy");

// Class TheK31.HackableDroneState
// 0x0000 (0x0030 - 0x0030)
class IHackableDroneState final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HackableDroneState">();
	}
	static class IHackableDroneState* GetDefaultObj()
	{
		return GetDefaultObjImpl<IHackableDroneState>();
	}
};
static_assert(alignof(IHackableDroneState) == 0x000008, "Wrong alignment on IHackableDroneState");
static_assert(sizeof(IHackableDroneState) == 0x000030, "Wrong size on IHackableDroneState");

// Class TheK31.HitPlayerAfterRecentDetectionScoreEmitter
// 0x0088 (0x00C0 - 0x0038)
class UHitPlayerAfterRecentDetectionScoreEmitter final : public UPlayerScoreEmitter
{
public:
	float                                         _timeSinceDetectionDuration;                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           _scoreEvent;                                       // 0x003C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ADBDPlayer*, float>                _trackers;                                         // 0x0048(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_98[0x28];                                      // 0x0098(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HitPlayerAfterRecentDetectionScoreEmitter">();
	}
	static class UHitPlayerAfterRecentDetectionScoreEmitter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitPlayerAfterRecentDetectionScoreEmitter>();
	}
};
static_assert(alignof(UHitPlayerAfterRecentDetectionScoreEmitter) == 0x000008, "Wrong alignment on UHitPlayerAfterRecentDetectionScoreEmitter");
static_assert(sizeof(UHitPlayerAfterRecentDetectionScoreEmitter) == 0x0000C0, "Wrong size on UHitPlayerAfterRecentDetectionScoreEmitter");
static_assert(offsetof(UHitPlayerAfterRecentDetectionScoreEmitter, _timeSinceDetectionDuration) == 0x000038, "Member 'UHitPlayerAfterRecentDetectionScoreEmitter::_timeSinceDetectionDuration' has a wrong offset!");
static_assert(offsetof(UHitPlayerAfterRecentDetectionScoreEmitter, _scoreEvent) == 0x00003C, "Member 'UHitPlayerAfterRecentDetectionScoreEmitter::_scoreEvent' has a wrong offset!");
static_assert(offsetof(UHitPlayerAfterRecentDetectionScoreEmitter, _trackers) == 0x000048, "Member 'UHitPlayerAfterRecentDetectionScoreEmitter::_trackers' has a wrong offset!");

// Class TheK31.HitPlayerInActiveZoneScoreEmitter
// 0x0080 (0x00B8 - 0x0038)
class UHitPlayerInActiveZoneScoreEmitter final : public UPlayerScoreEmitter
{
public:
	float                                         _activeZoneLingeringDuration;                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           _scoreEvent;                                       // 0x003C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FActiveZoneOverlapTracker> _trackers;                                         // 0x0048(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_98[0x20];                                      // 0x0098(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HitPlayerInActiveZoneScoreEmitter">();
	}
	static class UHitPlayerInActiveZoneScoreEmitter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHitPlayerInActiveZoneScoreEmitter>();
	}
};
static_assert(alignof(UHitPlayerInActiveZoneScoreEmitter) == 0x000008, "Wrong alignment on UHitPlayerInActiveZoneScoreEmitter");
static_assert(sizeof(UHitPlayerInActiveZoneScoreEmitter) == 0x0000B8, "Wrong size on UHitPlayerInActiveZoneScoreEmitter");
static_assert(offsetof(UHitPlayerInActiveZoneScoreEmitter, _activeZoneLingeringDuration) == 0x000038, "Member 'UHitPlayerInActiveZoneScoreEmitter::_activeZoneLingeringDuration' has a wrong offset!");
static_assert(offsetof(UHitPlayerInActiveZoneScoreEmitter, _scoreEvent) == 0x00003C, "Member 'UHitPlayerInActiveZoneScoreEmitter::_scoreEvent' has a wrong offset!");
static_assert(offsetof(UHitPlayerInActiveZoneScoreEmitter, _trackers) == 0x000048, "Member 'UHitPlayerInActiveZoneScoreEmitter::_trackers' has a wrong offset!");

// Class TheK31.InspectK31DroneInteraction
// 0x0180 (0x0A40 - 0x08C0)
class UInspectK31DroneInteraction final : public UChargeableInteractionDefinition
{
public:
	uint8                                         Pad_8C0[0x18];                                     // 0x08C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK31DroneActionProcessor>   _actionProcessorClass;                             // 0x08D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _inputInterval;                                    // 0x08E0(0x0028)(Edit, DisableEditOnInstance, NoClear, NativeAccessSpecifierPrivate)
	bool                                          _enableMaxSpeedSlowdown;                           // 0x0908(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_909[0x7];                                      // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _chargingSpeedCurve;                               // 0x0910(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _dechargingSpeedCurve;                             // 0x0918(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_920[0x28];                                     // 0x0920(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31DroneActionProcessor*               _actionProcessor;                                  // 0x0948(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_950[0xF0];                                     // 0x0950(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnChargeCompletedChanged(bool COMPLETED, const TArray<class AActor*>& InstigatorsForCompletion);
	void Server_SetIsPressingInput(bool IsPressing);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InspectK31DroneInteraction">();
	}
	static class UInspectK31DroneInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInspectK31DroneInteraction>();
	}
};
static_assert(alignof(UInspectK31DroneInteraction) == 0x000010, "Wrong alignment on UInspectK31DroneInteraction");
static_assert(sizeof(UInspectK31DroneInteraction) == 0x000A40, "Wrong size on UInspectK31DroneInteraction");
static_assert(offsetof(UInspectK31DroneInteraction, _actionProcessorClass) == 0x0008D8, "Member 'UInspectK31DroneInteraction::_actionProcessorClass' has a wrong offset!");
static_assert(offsetof(UInspectK31DroneInteraction, _inputInterval) == 0x0008E0, "Member 'UInspectK31DroneInteraction::_inputInterval' has a wrong offset!");
static_assert(offsetof(UInspectK31DroneInteraction, _enableMaxSpeedSlowdown) == 0x000908, "Member 'UInspectK31DroneInteraction::_enableMaxSpeedSlowdown' has a wrong offset!");
static_assert(offsetof(UInspectK31DroneInteraction, _chargingSpeedCurve) == 0x000910, "Member 'UInspectK31DroneInteraction::_chargingSpeedCurve' has a wrong offset!");
static_assert(offsetof(UInspectK31DroneInteraction, _dechargingSpeedCurve) == 0x000918, "Member 'UInspectK31DroneInteraction::_dechargingSpeedCurve' has a wrong offset!");
static_assert(offsetof(UInspectK31DroneInteraction, _actionProcessor) == 0x000948, "Member 'UInspectK31DroneInteraction::_actionProcessor' has a wrong offset!");

// Class TheK31.K31AnalyticsComponent
// 0x0018 (0x00C0 - 0x00A8)
class UK31AnalyticsComponent final : public UActorComponent
{
public:
	float                                         _analyticInspectionTime;                           // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x14];                                      // 0x00AC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31AnalyticsComponent">();
	}
	static class UK31AnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31AnalyticsComponent>();
	}
};
static_assert(alignof(UK31AnalyticsComponent) == 0x000008, "Wrong alignment on UK31AnalyticsComponent");
static_assert(sizeof(UK31AnalyticsComponent) == 0x0000C0, "Wrong size on UK31AnalyticsComponent");
static_assert(offsetof(UK31AnalyticsComponent, _analyticInspectionTime) == 0x0000A8, "Member 'UK31AnalyticsComponent::_analyticInspectionTime' has a wrong offset!");

// Class TheK31.K31AnimInstance
// 0x0040 (0x0760 - 0x0720)
class UK31AnimInstance final : public UKillerAnimInstance
{
public:
	bool                                          _isInspecting;                                     // 0x0720(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isDeployingADrone;                                // 0x0721(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isReceivingADronePassively;                       // 0x0722(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRecallingADrone;                                // 0x0723(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isActivatingADrone;                               // 0x0724(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomizationAnimationSelector*        _animationSelector;                                // 0x0728(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_730[0x30];                                     // 0x0730(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCustomizationAnimationMappingIDChanged(int32 AnimationMappingIndex);
	void OnGameEventReceived(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);
	void ResetIsActivatingADrone();
	void ResetIsDeployingADrone();
	void ResetIsRecallingADrone();
	void ResetIsReceivingADronePassively();

	TArray<class FName> GetCustoAnimTags() const;
	int32 GetCustomizationMappingID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31AnimInstance">();
	}
	static class UK31AnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31AnimInstance>();
	}
};
static_assert(alignof(UK31AnimInstance) == 0x000010, "Wrong alignment on UK31AnimInstance");
static_assert(sizeof(UK31AnimInstance) == 0x000760, "Wrong size on UK31AnimInstance");
static_assert(offsetof(UK31AnimInstance, _isInspecting) == 0x000720, "Member 'UK31AnimInstance::_isInspecting' has a wrong offset!");
static_assert(offsetof(UK31AnimInstance, _isDeployingADrone) == 0x000721, "Member 'UK31AnimInstance::_isDeployingADrone' has a wrong offset!");
static_assert(offsetof(UK31AnimInstance, _isReceivingADronePassively) == 0x000722, "Member 'UK31AnimInstance::_isReceivingADronePassively' has a wrong offset!");
static_assert(offsetof(UK31AnimInstance, _isRecallingADrone) == 0x000723, "Member 'UK31AnimInstance::_isRecallingADrone' has a wrong offset!");
static_assert(offsetof(UK31AnimInstance, _isActivatingADrone) == 0x000724, "Member 'UK31AnimInstance::_isActivatingADrone' has a wrong offset!");
static_assert(offsetof(UK31AnimInstance, _animationSelector) == 0x000728, "Member 'UK31AnimInstance::_animationSelector' has a wrong offset!");

// Class TheK31.K31ClawTrap
// 0x0000 (0x02A0 - 0x02A0)
class AK31ClawTrap final : public AActor
{
public:
	void Cosmetic_OnAddedByDrone(class AK31Drone* OriginatingDrone, float ClawTrapCosmeticDelayDuration);
	void Cosmetic_OnBatteryChargeUpdated(float NewCharge);
	void Cosmetic_OnIsBroadcastingChanged(bool IsBroadcasting);
	void Cosmetic_OnTrapAdded();
	void Cosmetic_OnTrapRemoved(bool WasRemovedAutomatically);
	void Cosmetic_Spark();
	void OnAnimNotifyManuallyRemoveTrap();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31ClawTrap">();
	}
	static class AK31ClawTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK31ClawTrap>();
	}
};
static_assert(alignof(AK31ClawTrap) == 0x000008, "Wrong alignment on AK31ClawTrap");
static_assert(sizeof(AK31ClawTrap) == 0x0002A0, "Wrong size on AK31ClawTrap");

// Class TheK31.K31Drone
// 0x00E8 (0x0490 - 0x03A8)
class AK31Drone final : public AInteractable
{
public:
	uint8                                         Pad_3A8[0x10];                                     // 0x03A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        _movingRootComponent;                              // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChildActorComponent*                   _laserChildActorComponent;                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneLaserController*               _laserController;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDSkeletalMeshComponentBudgeted*      _droneMesh;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   _activeZoneMesh;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneMovementComponent*             _movementComponent;                                // 0x03E0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneFlightController*              _flightController;                                 // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAuthoritativePoolableActorComponent*   _poolableActorComponent;                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneOwnershipComponent*            _ownershipComponent;                               // 0x03F8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneStateController*               _stateController;                                  // 0x0400(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneDebugComponent*                _debugComponent;                                   // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneZoneComponent*                 _droneZoneComponent;                               // 0x0410(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31TrapProximitySensor*                _trapProximitySensor;                              // 0x0418(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DronePlacementRecaller*             _placementRecallerComponent;                       // 0x0420(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneHackableComponent*             _hackableComponent;                                // 0x0428(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneHackableAvoidanceSensor*       _avoidanceSensor;                                  // 0x0430(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDeployDroneInteraction*                _deployInteraction;                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDNavModifierComponent*               _navModifierComponent;                             // 0x0440(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31DroneDangerPredictionComponent*     _dangerPredictionComponent;                        // 0x0448(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMapActorComponent*                     _droneMapActorComponent;                           // 0x0450(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                             _lastOwner;                                        // 0x0458(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULocalPlayerTrackerComponent*           _localPlayerTracker;                               // 0x0460(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x28];                                     // 0x0468(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnIsHackableStateChanged(bool IsHackable);
	void Cosmetic_OnLocallyObservedChanged();
	void Cosmetic_OnRevertToScoutingCurrentChargeChanged(float ChargePercentage);
	void Native_OnLocallyObservedChanged();
	void OnAcquiredChanged(const bool Acquired);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31Drone">();
	}
	static class AK31Drone* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK31Drone>();
	}
};
static_assert(alignof(AK31Drone) == 0x000008, "Wrong alignment on AK31Drone");
static_assert(sizeof(AK31Drone) == 0x000490, "Wrong size on AK31Drone");
static_assert(offsetof(AK31Drone, _movingRootComponent) == 0x0003B8, "Member 'AK31Drone::_movingRootComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _laserChildActorComponent) == 0x0003C0, "Member 'AK31Drone::_laserChildActorComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _laserController) == 0x0003C8, "Member 'AK31Drone::_laserController' has a wrong offset!");
static_assert(offsetof(AK31Drone, _droneMesh) == 0x0003D0, "Member 'AK31Drone::_droneMesh' has a wrong offset!");
static_assert(offsetof(AK31Drone, _activeZoneMesh) == 0x0003D8, "Member 'AK31Drone::_activeZoneMesh' has a wrong offset!");
static_assert(offsetof(AK31Drone, _movementComponent) == 0x0003E0, "Member 'AK31Drone::_movementComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _flightController) == 0x0003E8, "Member 'AK31Drone::_flightController' has a wrong offset!");
static_assert(offsetof(AK31Drone, _poolableActorComponent) == 0x0003F0, "Member 'AK31Drone::_poolableActorComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _ownershipComponent) == 0x0003F8, "Member 'AK31Drone::_ownershipComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _stateController) == 0x000400, "Member 'AK31Drone::_stateController' has a wrong offset!");
static_assert(offsetof(AK31Drone, _debugComponent) == 0x000408, "Member 'AK31Drone::_debugComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _droneZoneComponent) == 0x000410, "Member 'AK31Drone::_droneZoneComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _trapProximitySensor) == 0x000418, "Member 'AK31Drone::_trapProximitySensor' has a wrong offset!");
static_assert(offsetof(AK31Drone, _placementRecallerComponent) == 0x000420, "Member 'AK31Drone::_placementRecallerComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _hackableComponent) == 0x000428, "Member 'AK31Drone::_hackableComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _avoidanceSensor) == 0x000430, "Member 'AK31Drone::_avoidanceSensor' has a wrong offset!");
static_assert(offsetof(AK31Drone, _deployInteraction) == 0x000438, "Member 'AK31Drone::_deployInteraction' has a wrong offset!");
static_assert(offsetof(AK31Drone, _navModifierComponent) == 0x000440, "Member 'AK31Drone::_navModifierComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _dangerPredictionComponent) == 0x000448, "Member 'AK31Drone::_dangerPredictionComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _droneMapActorComponent) == 0x000450, "Member 'AK31Drone::_droneMapActorComponent' has a wrong offset!");
static_assert(offsetof(AK31Drone, _lastOwner) == 0x000458, "Member 'AK31Drone::_lastOwner' has a wrong offset!");
static_assert(offsetof(AK31Drone, _localPlayerTracker) == 0x000460, "Member 'AK31Drone::_localPlayerTracker' has a wrong offset!");

// Class TheK31.K31DroneActionProcessor
// 0x0000 (0x00A8 - 0x00A8)
class UK31DroneActionProcessor final : public UActorComponent
{
public:
	void Client_ReceiveActionResponse(const struct FK31DroneActionResponse& Response);
	void Server_RequestAction(const struct FK31DroneActionRequest& Request);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneActionProcessor">();
	}
	static class UK31DroneActionProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneActionProcessor>();
	}
};
static_assert(alignof(UK31DroneActionProcessor) == 0x000008, "Wrong alignment on UK31DroneActionProcessor");
static_assert(sizeof(UK31DroneActionProcessor) == 0x0000A8, "Wrong size on UK31DroneActionProcessor");

// Class TheK31.K31DroneState
// 0x0028 (0x0058 - 0x0030)
class UK31DroneState : public UObject
{
public:
	EK31DroneStateID                              _id;                                               // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31DroneStateController*               _stateController;                                  // 0x0038(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneState">();
	}
	static class UK31DroneState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneState>();
	}
};
static_assert(alignof(UK31DroneState) == 0x000008, "Wrong alignment on UK31DroneState");
static_assert(sizeof(UK31DroneState) == 0x000058, "Wrong size on UK31DroneState");
static_assert(offsetof(UK31DroneState, _id) == 0x000030, "Member 'UK31DroneState::_id' has a wrong offset!");
static_assert(offsetof(UK31DroneState, _stateController) == 0x000038, "Member 'UK31DroneState::_stateController' has a wrong offset!");

// Class TheK31.K31DroneActiveState
// 0x03B8 (0x0410 - 0x0058)
class UK31DroneActiveState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x20];                                      // 0x0058(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatProperty                          _unhackableDuration;                               // 0x0078(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _revertToScoutingMaxDuration;                      // 0x0100(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _revertToScoutingMinDuration;                      // 0x0188(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _revertToScoutingRechargeRate;                     // 0x0210(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _revertToScoutingDechargeRate;                     // 0x0298(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _revertToScoutingDechargeDelay;                    // 0x0320(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          _doNearbyClawTrapsDisableHacking;                  // 0x03A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChargeableComponent*                   _revertToScoutingCharge;                           // 0x03B0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _unhackableTimer;                                  // 0x03B8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0x50];                                     // 0x03C0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnChargeDepleted();
	float GetRevertToScoutingCurrentCharge();
	float GetRevertToScoutingMaxCharge();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneActiveState">();
	}
	static class UK31DroneActiveState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneActiveState>();
	}
};
static_assert(alignof(UK31DroneActiveState) == 0x000008, "Wrong alignment on UK31DroneActiveState");
static_assert(sizeof(UK31DroneActiveState) == 0x000410, "Wrong size on UK31DroneActiveState");
static_assert(offsetof(UK31DroneActiveState, _unhackableDuration) == 0x000078, "Member 'UK31DroneActiveState::_unhackableDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingMaxDuration) == 0x000100, "Member 'UK31DroneActiveState::_revertToScoutingMaxDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingMinDuration) == 0x000188, "Member 'UK31DroneActiveState::_revertToScoutingMinDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingRechargeRate) == 0x000210, "Member 'UK31DroneActiveState::_revertToScoutingRechargeRate' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingDechargeRate) == 0x000298, "Member 'UK31DroneActiveState::_revertToScoutingDechargeRate' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingDechargeDelay) == 0x000320, "Member 'UK31DroneActiveState::_revertToScoutingDechargeDelay' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _doNearbyClawTrapsDisableHacking) == 0x0003A8, "Member 'UK31DroneActiveState::_doNearbyClawTrapsDisableHacking' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _revertToScoutingCharge) == 0x0003B0, "Member 'UK31DroneActiveState::_revertToScoutingCharge' has a wrong offset!");
static_assert(offsetof(UK31DroneActiveState, _unhackableTimer) == 0x0003B8, "Member 'UK31DroneActiveState::_unhackableTimer' has a wrong offset!");

// Class TheK31.K31DroneAnimInstance
// 0x0020 (0x0370 - 0x0350)
class UK31DroneAnimInstance final : public UAnimInstance
{
public:
	EK31DroneStateID                              _droneState;                                       // 0x0350(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31DroneStateController*               _droneStateController;                             // 0x0358(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AK31Drone*                              _owningDrone;                                      // 0x0360(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneAnimInstance">();
	}
	static class UK31DroneAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneAnimInstance>();
	}
};
static_assert(alignof(UK31DroneAnimInstance) == 0x000010, "Wrong alignment on UK31DroneAnimInstance");
static_assert(sizeof(UK31DroneAnimInstance) == 0x000370, "Wrong size on UK31DroneAnimInstance");
static_assert(offsetof(UK31DroneAnimInstance, _droneState) == 0x000350, "Member 'UK31DroneAnimInstance::_droneState' has a wrong offset!");
static_assert(offsetof(UK31DroneAnimInstance, _droneStateController) == 0x000358, "Member 'UK31DroneAnimInstance::_droneStateController' has a wrong offset!");
static_assert(offsetof(UK31DroneAnimInstance, _owningDrone) == 0x000360, "Member 'UK31DroneAnimInstance::_owningDrone' has a wrong offset!");

// Class TheK31.K31DroneBeingDeployed
// 0x0000 (0x0058 - 0x0058)
class UK31DroneBeingDeployed final : public UK31DroneState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneBeingDeployed">();
	}
	static class UK31DroneBeingDeployed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneBeingDeployed>();
	}
};
static_assert(alignof(UK31DroneBeingDeployed) == 0x000008, "Wrong alignment on UK31DroneBeingDeployed");
static_assert(sizeof(UK31DroneBeingDeployed) == 0x000058, "Wrong size on UK31DroneBeingDeployed");

// Class TheK31.K31DroneBeingHackedState
// 0x0020 (0x0078 - 0x0058)
class UK31DroneBeingHackedState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x20];                                      // 0x0058(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneBeingHackedState">();
	}
	static class UK31DroneBeingHackedState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneBeingHackedState>();
	}
};
static_assert(alignof(UK31DroneBeingHackedState) == 0x000008, "Wrong alignment on UK31DroneBeingHackedState");
static_assert(sizeof(UK31DroneBeingHackedState) == 0x000078, "Wrong size on UK31DroneBeingHackedState");

// Class TheK31.K31DroneDangerPredictionComponent
// 0x0080 (0x0190 - 0x0110)
class UK31DroneDangerPredictionComponent final : public UDBDDangerPredictionComponent
{
public:
	uint8                                         Pad_110[0x50];                                     // 0x0110(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _minimumTraverseAngle;                             // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maximumTraverseAngle;                             // 0x0164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _crouchRangeMargin;                                // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _crouchingHeightDifference;                        // 0x016C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _crouchAngleNumerator;                             // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _crouchRotatingSpeedPercentAngleMargin;            // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxCrouchRange;                                   // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _activeUnhackableWeight;                           // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _activeHackableWeight;                             // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scoutingWeight;                                   // 0x0184(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneDangerPredictionComponent">();
	}
	static class UK31DroneDangerPredictionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneDangerPredictionComponent>();
	}
};
static_assert(alignof(UK31DroneDangerPredictionComponent) == 0x000008, "Wrong alignment on UK31DroneDangerPredictionComponent");
static_assert(sizeof(UK31DroneDangerPredictionComponent) == 0x000190, "Wrong size on UK31DroneDangerPredictionComponent");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _minimumTraverseAngle) == 0x000160, "Member 'UK31DroneDangerPredictionComponent::_minimumTraverseAngle' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _maximumTraverseAngle) == 0x000164, "Member 'UK31DroneDangerPredictionComponent::_maximumTraverseAngle' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _crouchRangeMargin) == 0x000168, "Member 'UK31DroneDangerPredictionComponent::_crouchRangeMargin' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _crouchingHeightDifference) == 0x00016C, "Member 'UK31DroneDangerPredictionComponent::_crouchingHeightDifference' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _crouchAngleNumerator) == 0x000170, "Member 'UK31DroneDangerPredictionComponent::_crouchAngleNumerator' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _crouchRotatingSpeedPercentAngleMargin) == 0x000174, "Member 'UK31DroneDangerPredictionComponent::_crouchRotatingSpeedPercentAngleMargin' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _maxCrouchRange) == 0x000178, "Member 'UK31DroneDangerPredictionComponent::_maxCrouchRange' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _activeUnhackableWeight) == 0x00017C, "Member 'UK31DroneDangerPredictionComponent::_activeUnhackableWeight' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _activeHackableWeight) == 0x000180, "Member 'UK31DroneDangerPredictionComponent::_activeHackableWeight' has a wrong offset!");
static_assert(offsetof(UK31DroneDangerPredictionComponent, _scoutingWeight) == 0x000184, "Member 'UK31DroneDangerPredictionComponent::_scoutingWeight' has a wrong offset!");

// Class TheK31.K31DroneDebugComponent
// 0x0040 (0x00E8 - 0x00A8)
class UK31DroneDebugComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x40];                                      // 0x00A8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneDebugComponent">();
	}
	static class UK31DroneDebugComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneDebugComponent>();
	}
};
static_assert(alignof(UK31DroneDebugComponent) == 0x000008, "Wrong alignment on UK31DroneDebugComponent");
static_assert(sizeof(UK31DroneDebugComponent) == 0x0000E8, "Wrong size on UK31DroneDebugComponent");

// Class TheK31.K31DroneDestroyedState
// 0x0000 (0x0058 - 0x0058)
class UK31DroneDestroyedState final : public UK31DroneState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneDestroyedState">();
	}
	static class UK31DroneDestroyedState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneDestroyedState>();
	}
};
static_assert(alignof(UK31DroneDestroyedState) == 0x000008, "Wrong alignment on UK31DroneDestroyedState");
static_assert(sizeof(UK31DroneDestroyedState) == 0x000058, "Wrong size on UK31DroneDestroyedState");

// Class TheK31.K31DroneDisabledState
// 0x0090 (0x00E8 - 0x0058)
class UK31DroneDisabledState final : public UK31DroneState
{
public:
	struct FStatProperty                          _disabledDuration;                                 // 0x0058(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _disabledTimer;                                    // 0x00E0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneDisabledState">();
	}
	static class UK31DroneDisabledState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneDisabledState>();
	}
};
static_assert(alignof(UK31DroneDisabledState) == 0x000008, "Wrong alignment on UK31DroneDisabledState");
static_assert(sizeof(UK31DroneDisabledState) == 0x0000E8, "Wrong size on UK31DroneDisabledState");
static_assert(offsetof(UK31DroneDisabledState, _disabledDuration) == 0x000058, "Member 'UK31DroneDisabledState::_disabledDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneDisabledState, _disabledTimer) == 0x0000E0, "Member 'UK31DroneDisabledState::_disabledTimer' has a wrong offset!");

// Class TheK31.K31DroneFlightController
// 0x0048 (0x00F0 - 0x00A8)
class UK31DroneFlightController final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayTagContainerComponent*         _objectState;                                      // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C8[0x28];                                      // 0x00C8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneFlightController">();
	}
	static class UK31DroneFlightController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneFlightController>();
	}
};
static_assert(alignof(UK31DroneFlightController) == 0x000008, "Wrong alignment on UK31DroneFlightController");
static_assert(sizeof(UK31DroneFlightController) == 0x0000F0, "Wrong size on UK31DroneFlightController");
static_assert(offsetof(UK31DroneFlightController, _objectState) == 0x0000C0, "Member 'UK31DroneFlightController::_objectState' has a wrong offset!");

// Class TheK31.K31DroneHackableAvoidanceSensor
// 0x0180 (0x0228 - 0x00A8)
class UK31DroneHackableAvoidanceSensor final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x48];                                      // 0x00A8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _survivorOverlapDetectionTime;                     // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                    _killerDetectionPrimitive;                         // 0x0118(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                    _survivorDetectionPrimitive;                       // 0x0120(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x30];                                     // 0x0128(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ADBDPlayer*>                       _overlappingSurvivors;                             // 0x0158(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ADBDPlayer*, bool>                 _overlappingKillerToVisibilityMap;                 // 0x01B0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0x28];                                     // 0x0200(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnKillerCollisionBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Authority_OnKillerCollisionEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Authority_OnSurvivorCollisionBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Authority_OnSurvivorCollisionEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Init(class UPrimitiveComponent* KillerPrimitive, class UPrimitiveComponent* SurvivorPrimitive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneHackableAvoidanceSensor">();
	}
	static class UK31DroneHackableAvoidanceSensor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneHackableAvoidanceSensor>();
	}
};
static_assert(alignof(UK31DroneHackableAvoidanceSensor) == 0x000008, "Wrong alignment on UK31DroneHackableAvoidanceSensor");
static_assert(sizeof(UK31DroneHackableAvoidanceSensor) == 0x000228, "Wrong size on UK31DroneHackableAvoidanceSensor");
static_assert(offsetof(UK31DroneHackableAvoidanceSensor, _survivorOverlapDetectionTime) == 0x0000F0, "Member 'UK31DroneHackableAvoidanceSensor::_survivorOverlapDetectionTime' has a wrong offset!");
static_assert(offsetof(UK31DroneHackableAvoidanceSensor, _killerDetectionPrimitive) == 0x000118, "Member 'UK31DroneHackableAvoidanceSensor::_killerDetectionPrimitive' has a wrong offset!");
static_assert(offsetof(UK31DroneHackableAvoidanceSensor, _survivorDetectionPrimitive) == 0x000120, "Member 'UK31DroneHackableAvoidanceSensor::_survivorDetectionPrimitive' has a wrong offset!");
static_assert(offsetof(UK31DroneHackableAvoidanceSensor, _overlappingSurvivors) == 0x000158, "Member 'UK31DroneHackableAvoidanceSensor::_overlappingSurvivors' has a wrong offset!");
static_assert(offsetof(UK31DroneHackableAvoidanceSensor, _overlappingKillerToVisibilityMap) == 0x0001B0, "Member 'UK31DroneHackableAvoidanceSensor::_overlappingKillerToVisibilityMap' has a wrong offset!");

// Class TheK31.K31DroneHackableComponent
// 0x0088 (0x0130 - 0x00A8)
class UK31DroneHackableComponent final : public UActorComponent
{
public:
	struct FDBDTunableRowHandle                   _unhackableClearanceCooldownDuration;              // 0x00A8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	bool                                          _isHackable;                                       // 0x00D0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D1[0x5F];                                      // 0x00D1(0x005F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_IsHackable();

	bool IsHackable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneHackableComponent">();
	}
	static class UK31DroneHackableComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneHackableComponent>();
	}
};
static_assert(alignof(UK31DroneHackableComponent) == 0x000008, "Wrong alignment on UK31DroneHackableComponent");
static_assert(sizeof(UK31DroneHackableComponent) == 0x000130, "Wrong size on UK31DroneHackableComponent");
static_assert(offsetof(UK31DroneHackableComponent, _unhackableClearanceCooldownDuration) == 0x0000A8, "Member 'UK31DroneHackableComponent::_unhackableClearanceCooldownDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneHackableComponent, _isHackable) == 0x0000D0, "Member 'UK31DroneHackableComponent::_isHackable' has a wrong offset!");

// Class TheK31.K31DroneInitializingState
// 0x00A8 (0x0100 - 0x0058)
class UK31DroneInitializingState final : public UK31DroneState
{
public:
	struct FStatProperty                          _initializingDuration;                             // 0x0058(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _initializingTimer;                                // 0x00E0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8[0x18];                                      // 0x00E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneInitializingState">();
	}
	static class UK31DroneInitializingState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneInitializingState>();
	}
};
static_assert(alignof(UK31DroneInitializingState) == 0x000008, "Wrong alignment on UK31DroneInitializingState");
static_assert(sizeof(UK31DroneInitializingState) == 0x000100, "Wrong size on UK31DroneInitializingState");
static_assert(offsetof(UK31DroneInitializingState, _initializingDuration) == 0x000058, "Member 'UK31DroneInitializingState::_initializingDuration' has a wrong offset!");
static_assert(offsetof(UK31DroneInitializingState, _initializingTimer) == 0x0000E0, "Member 'UK31DroneInitializingState::_initializingTimer' has a wrong offset!");

// Class TheK31.K31DroneInStashState
// 0x0018 (0x0070 - 0x0058)
class UK31DroneInStashState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneInStashState">();
	}
	static class UK31DroneInStashState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneInStashState>();
	}
};
static_assert(alignof(UK31DroneInStashState) == 0x000008, "Wrong alignment on UK31DroneInStashState");
static_assert(sizeof(UK31DroneInStashState) == 0x000070, "Wrong size on UK31DroneInStashState");

// Class TheK31.K31DroneLaserController
// 0x0098 (0x0140 - 0x00A8)
class UK31DroneLaserController final : public UActorComponent
{
public:
	class ULocalPlayerTrackerComponent*           _localPlayerTracker;                               // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                             _locallyObservedPlayer;                            // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x40];                                      // 0x00B8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31DroneLaserScanActor*                _laserActor;                                       // 0x00F8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_100[0x40];                                     // 0x0100(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Local_OnCrouchChanged(bool IsCrouched);
	void Local_OnIdleChanged(bool IsIdle, float IdleStartTime);
	void OnLocallyObservedChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneLaserController">();
	}
	static class UK31DroneLaserController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneLaserController>();
	}
};
static_assert(alignof(UK31DroneLaserController) == 0x000008, "Wrong alignment on UK31DroneLaserController");
static_assert(sizeof(UK31DroneLaserController) == 0x000140, "Wrong size on UK31DroneLaserController");
static_assert(offsetof(UK31DroneLaserController, _localPlayerTracker) == 0x0000A8, "Member 'UK31DroneLaserController::_localPlayerTracker' has a wrong offset!");
static_assert(offsetof(UK31DroneLaserController, _locallyObservedPlayer) == 0x0000B0, "Member 'UK31DroneLaserController::_locallyObservedPlayer' has a wrong offset!");
static_assert(offsetof(UK31DroneLaserController, _laserActor) == 0x0000F8, "Member 'UK31DroneLaserController::_laserActor' has a wrong offset!");

// Class TheK31.K31DroneLaserOutlineUpdateStrategy
// 0x0028 (0x0118 - 0x00F0)
class UK31DroneLaserOutlineUpdateStrategy final : public UDefaultOutlineUpdateStrategy
{
public:
	struct FDBDTunableRowHandle                   _laserOutlineDistance;                             // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneLaserOutlineUpdateStrategy">();
	}
	static class UK31DroneLaserOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneLaserOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UK31DroneLaserOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UK31DroneLaserOutlineUpdateStrategy");
static_assert(sizeof(UK31DroneLaserOutlineUpdateStrategy) == 0x000118, "Wrong size on UK31DroneLaserOutlineUpdateStrategy");
static_assert(offsetof(UK31DroneLaserOutlineUpdateStrategy, _laserOutlineDistance) == 0x0000F0, "Member 'UK31DroneLaserOutlineUpdateStrategy::_laserOutlineDistance' has a wrong offset!");

// Class TheK31.K31DroneLaserScanActor
// 0x03A0 (0x0640 - 0x02A0)
class AK31DroneLaserScanActor final : public AActor
{
public:
	class UMaterialInstance*                      LaserScanMeshMaterial;                             // 0x02A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      LaserScanMeshMaterialUndetectable;                 // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StaticCapturesLightAngle;                          // 0x02B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DynamicCapturesLightAngle;                         // 0x02B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthCaptureNearPlaneOffset;                       // 0x02B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   LaserScanSM;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGMShadowDepthCaptureComponent*         DepthCaptureComponentDynamic;                      // 0x02C8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGMShadowDepthCaptureComponent*         XDepthCaptureComponentStatic;                      // 0x02D0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGMShadowDepthCaptureComponent*         YDepthCaptureComponentStatic;                      // 0x02D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGMShadowDepthCaptureComponent*         NegXDepthCaptureComponentStatic;                   // 0x02E0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGMShadowDepthCaptureComponent*         NegYDepthCaptureComponentStatic;                   // 0x02E8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                  DynamicDepthCaptureSizeWidth;                      // 0x02F0(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                  DynamicDepthCaptureSizeHeight;                     // 0x0390(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                  StaticDepthCaptureSizeWidth;                       // 0x0430(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                  StaticDepthCaptureSizeHeight;                      // 0x04D0(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UK31DroneLaserOutlineUpdateStrategy*    _outlineUpdateStrategy;                            // 0x0570(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      _defaultLaserScanMeshMaterial;                     // 0x0578(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _scanLineFadeDistance;                             // 0x0580(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x05A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5B0[0x80];                                     // 0x05B0(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalPlayerTrackerComponent*           _localPlayerTrackerComponent;                      // 0x0630(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_638[0x8];                                      // 0x0638(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateDroneLaserScan();
	void Cosmetic_OnLocallyObservedEnteredVisibleRange();
	void Cosmetic_OnLocallyObservedLeftVisibleRange();
	void DeactivateDroneLaserScan();
	void InitDroneLaserScan();
	void OnLocallyObservedChanged();
	void RequestStaticDepthCapturesUpdate();
	void SetLaserVisibility(bool Visible);
	void UpdateLaserScanMeshMaterial(class UMaterialInstance* NewLaserScanMeshMaterial);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneLaserScanActor">();
	}
	static class AK31DroneLaserScanActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK31DroneLaserScanActor>();
	}
};
static_assert(alignof(AK31DroneLaserScanActor) == 0x000008, "Wrong alignment on AK31DroneLaserScanActor");
static_assert(sizeof(AK31DroneLaserScanActor) == 0x000640, "Wrong size on AK31DroneLaserScanActor");
static_assert(offsetof(AK31DroneLaserScanActor, LaserScanMeshMaterial) == 0x0002A0, "Member 'AK31DroneLaserScanActor::LaserScanMeshMaterial' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, LaserScanMeshMaterialUndetectable) == 0x0002A8, "Member 'AK31DroneLaserScanActor::LaserScanMeshMaterialUndetectable' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, StaticCapturesLightAngle) == 0x0002B0, "Member 'AK31DroneLaserScanActor::StaticCapturesLightAngle' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, DynamicCapturesLightAngle) == 0x0002B4, "Member 'AK31DroneLaserScanActor::DynamicCapturesLightAngle' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, DepthCaptureNearPlaneOffset) == 0x0002B8, "Member 'AK31DroneLaserScanActor::DepthCaptureNearPlaneOffset' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, LaserScanSM) == 0x0002C0, "Member 'AK31DroneLaserScanActor::LaserScanSM' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, DepthCaptureComponentDynamic) == 0x0002C8, "Member 'AK31DroneLaserScanActor::DepthCaptureComponentDynamic' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, XDepthCaptureComponentStatic) == 0x0002D0, "Member 'AK31DroneLaserScanActor::XDepthCaptureComponentStatic' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, YDepthCaptureComponentStatic) == 0x0002D8, "Member 'AK31DroneLaserScanActor::YDepthCaptureComponentStatic' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, NegXDepthCaptureComponentStatic) == 0x0002E0, "Member 'AK31DroneLaserScanActor::NegXDepthCaptureComponentStatic' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, NegYDepthCaptureComponentStatic) == 0x0002E8, "Member 'AK31DroneLaserScanActor::NegYDepthCaptureComponentStatic' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, DynamicDepthCaptureSizeWidth) == 0x0002F0, "Member 'AK31DroneLaserScanActor::DynamicDepthCaptureSizeWidth' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, DynamicDepthCaptureSizeHeight) == 0x000390, "Member 'AK31DroneLaserScanActor::DynamicDepthCaptureSizeHeight' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, StaticDepthCaptureSizeWidth) == 0x000430, "Member 'AK31DroneLaserScanActor::StaticDepthCaptureSizeWidth' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, StaticDepthCaptureSizeHeight) == 0x0004D0, "Member 'AK31DroneLaserScanActor::StaticDepthCaptureSizeHeight' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, _outlineUpdateStrategy) == 0x000570, "Member 'AK31DroneLaserScanActor::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, _defaultLaserScanMeshMaterial) == 0x000578, "Member 'AK31DroneLaserScanActor::_defaultLaserScanMeshMaterial' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, _scanLineFadeDistance) == 0x000580, "Member 'AK31DroneLaserScanActor::_scanLineFadeDistance' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, _outlineComponent) == 0x0005A8, "Member 'AK31DroneLaserScanActor::_outlineComponent' has a wrong offset!");
static_assert(offsetof(AK31DroneLaserScanActor, _localPlayerTrackerComponent) == 0x000630, "Member 'AK31DroneLaserScanActor::_localPlayerTrackerComponent' has a wrong offset!");

// Class TheK31.K31DroneMovementComponent
// 0x05E0 (0x06F0 - 0x0110)
class alignas(0x10) UK31DroneMovementComponent final : public UMovementComponent
{
public:
	uint8                                         Pad_110[0x48];                                     // 0x0110(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDeployLocationChangedEvent;                      // 0x0158(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAttachToCharacterForDeployChangedEvent;          // 0x0168(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAccelerationChangedEvent;                        // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFlightHeightChangedBlueprintEvent;               // 0x0188(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnMovementModeChangedBlueprintEvent;               // 0x0198(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FStatProperty                          _rotationRate;                                     // 0x01A8(0x0088)(Edit, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _rotationRateStealthMode;                          // 0x0230(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _rotationLerpTime;                                 // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _minHeightAboveGround;                             // 0x02C0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxHeightAboveGround;                             // 0x02E8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _heightAdjustmentMovingTime;                       // 0x0310(0x0028)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x4];                                      // 0x0338(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _deployMovementSpeed;                              // 0x033C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _replicationFrequency;                             // 0x0340(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _smoothingTime;                                    // 0x0344(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxSmoothUpdateDistance;                          // 0x0348(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _noSmoothUpdateDistance;                           // 0x034C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _deployCharacterSocket;                            // 0x0350(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxTravelDistance;                                // 0x035C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_360[0x4];                                      // 0x0360(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _maxDeployTime;                                    // 0x0364(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _gravity;                                          // 0x0368(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _velocityInterpolationAlpha;                       // 0x036C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _constantSpeedToAccelerationCurve;                 // 0x0370(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x88];                                     // 0x0378(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         _gameState;                                        // 0x0400(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x40];                                     // 0x0408(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDroneDeployDatum                      _localDeployDatum;                                 // 0x0448(0x0048)(NoDestructor, NativeAccessSpecifierPrivate)
	class AActor*                                 _interactingActor;                                 // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x40];                                     // 0x0498(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                _additionalRotatingComponents;                     // 0x04D8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USceneComponent*                        _updatedComponentOriginalParent;                   // 0x04E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F0[0x150];                                    // 0x04F0(0x0150)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDroneRepMovement                      _replicatedMovement;                               // 0x0640(0x0058)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDroneDeployDatum                      _repDeployDatum;                                   // 0x0698(0x0048)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6E0[0x10];                                     // 0x06E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MovementBlueprintEvent__DelegateSignature();
	void OnAccelerationChangedEvent__DelegateSignature(const struct FVector& Acceleration);
	void OnAttachToCharacterForDeployChangedEvent__DelegateSignature();
	void OnDeployLocationChangedEvent__DelegateSignature();
	void OnRep_DeployDatum(const struct FDroneDeployDatum& OldDeployDatum);
	void OnRep_ReplicatedMovement(const struct FDroneRepMovement& OldRepMovement);

	float GetDistanceToTarget() const;
	EK31DroneMovementMode GetMovementMode() const;
	EDroneFlyingHeight GetTargetFlightHeight() const;
	bool HasReachedDeployLocation() const;
	bool IsMeshAttachedToCharacterForDeploy() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneMovementComponent">();
	}
	static class UK31DroneMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneMovementComponent>();
	}
};
static_assert(alignof(UK31DroneMovementComponent) == 0x000010, "Wrong alignment on UK31DroneMovementComponent");
static_assert(sizeof(UK31DroneMovementComponent) == 0x0006F0, "Wrong size on UK31DroneMovementComponent");
static_assert(offsetof(UK31DroneMovementComponent, OnDeployLocationChangedEvent) == 0x000158, "Member 'UK31DroneMovementComponent::OnDeployLocationChangedEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, OnAttachToCharacterForDeployChangedEvent) == 0x000168, "Member 'UK31DroneMovementComponent::OnAttachToCharacterForDeployChangedEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, OnAccelerationChangedEvent) == 0x000178, "Member 'UK31DroneMovementComponent::OnAccelerationChangedEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, OnFlightHeightChangedBlueprintEvent) == 0x000188, "Member 'UK31DroneMovementComponent::OnFlightHeightChangedBlueprintEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, OnMovementModeChangedBlueprintEvent) == 0x000198, "Member 'UK31DroneMovementComponent::OnMovementModeChangedBlueprintEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _rotationRate) == 0x0001A8, "Member 'UK31DroneMovementComponent::_rotationRate' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _rotationRateStealthMode) == 0x000230, "Member 'UK31DroneMovementComponent::_rotationRateStealthMode' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _rotationLerpTime) == 0x0002B8, "Member 'UK31DroneMovementComponent::_rotationLerpTime' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _minHeightAboveGround) == 0x0002C0, "Member 'UK31DroneMovementComponent::_minHeightAboveGround' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _maxHeightAboveGround) == 0x0002E8, "Member 'UK31DroneMovementComponent::_maxHeightAboveGround' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _heightAdjustmentMovingTime) == 0x000310, "Member 'UK31DroneMovementComponent::_heightAdjustmentMovingTime' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _deployMovementSpeed) == 0x00033C, "Member 'UK31DroneMovementComponent::_deployMovementSpeed' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _replicationFrequency) == 0x000340, "Member 'UK31DroneMovementComponent::_replicationFrequency' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _smoothingTime) == 0x000344, "Member 'UK31DroneMovementComponent::_smoothingTime' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _maxSmoothUpdateDistance) == 0x000348, "Member 'UK31DroneMovementComponent::_maxSmoothUpdateDistance' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _noSmoothUpdateDistance) == 0x00034C, "Member 'UK31DroneMovementComponent::_noSmoothUpdateDistance' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _deployCharacterSocket) == 0x000350, "Member 'UK31DroneMovementComponent::_deployCharacterSocket' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _maxTravelDistance) == 0x00035C, "Member 'UK31DroneMovementComponent::_maxTravelDistance' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _maxDeployTime) == 0x000364, "Member 'UK31DroneMovementComponent::_maxDeployTime' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _gravity) == 0x000368, "Member 'UK31DroneMovementComponent::_gravity' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _velocityInterpolationAlpha) == 0x00036C, "Member 'UK31DroneMovementComponent::_velocityInterpolationAlpha' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _constantSpeedToAccelerationCurve) == 0x000370, "Member 'UK31DroneMovementComponent::_constantSpeedToAccelerationCurve' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _gameState) == 0x000400, "Member 'UK31DroneMovementComponent::_gameState' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _localDeployDatum) == 0x000448, "Member 'UK31DroneMovementComponent::_localDeployDatum' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _interactingActor) == 0x000490, "Member 'UK31DroneMovementComponent::_interactingActor' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _additionalRotatingComponents) == 0x0004D8, "Member 'UK31DroneMovementComponent::_additionalRotatingComponents' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _updatedComponentOriginalParent) == 0x0004E8, "Member 'UK31DroneMovementComponent::_updatedComponentOriginalParent' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _replicatedMovement) == 0x000640, "Member 'UK31DroneMovementComponent::_replicatedMovement' has a wrong offset!");
static_assert(offsetof(UK31DroneMovementComponent, _repDeployDatum) == 0x000698, "Member 'UK31DroneMovementComponent::_repDeployDatum' has a wrong offset!");

// Class TheK31.K31DroneOutlineUpdateStrategy
// 0x0070 (0x0140 - 0x00D0)
class UK31DroneOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                           _killerColorNormal;                                // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           _killerColorActive;                                // 0x00E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           _killerColorSelected;                              // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           _survivorColor;                                    // 0x0100(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<EK31DroneStateID>                      _invalidStates;                                    // 0x0110(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _killerMinimumDistance;                            // 0x0120(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _survivorMinimumDistance;                          // 0x0124(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _survivorMaximumDistanceXY;                        // 0x0128(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12C[0x14];                                     // 0x012C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneOutlineUpdateStrategy">();
	}
	static class UK31DroneOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UK31DroneOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UK31DroneOutlineUpdateStrategy");
static_assert(sizeof(UK31DroneOutlineUpdateStrategy) == 0x000140, "Wrong size on UK31DroneOutlineUpdateStrategy");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _killerColorNormal) == 0x0000D0, "Member 'UK31DroneOutlineUpdateStrategy::_killerColorNormal' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _killerColorActive) == 0x0000E0, "Member 'UK31DroneOutlineUpdateStrategy::_killerColorActive' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _killerColorSelected) == 0x0000F0, "Member 'UK31DroneOutlineUpdateStrategy::_killerColorSelected' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _survivorColor) == 0x000100, "Member 'UK31DroneOutlineUpdateStrategy::_survivorColor' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _invalidStates) == 0x000110, "Member 'UK31DroneOutlineUpdateStrategy::_invalidStates' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _killerMinimumDistance) == 0x000120, "Member 'UK31DroneOutlineUpdateStrategy::_killerMinimumDistance' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _survivorMinimumDistance) == 0x000124, "Member 'UK31DroneOutlineUpdateStrategy::_survivorMinimumDistance' has a wrong offset!");
static_assert(offsetof(UK31DroneOutlineUpdateStrategy, _survivorMaximumDistanceXY) == 0x000128, "Member 'UK31DroneOutlineUpdateStrategy::_survivorMaximumDistanceXY' has a wrong offset!");

// Class TheK31.K31DroneOwnershipComponent
// 0x0028 (0x00D0 - 0x00A8)
class UK31DroneOwnershipComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x28];                                      // 0x00A8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneOwnershipComponent">();
	}
	static class UK31DroneOwnershipComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneOwnershipComponent>();
	}
};
static_assert(alignof(UK31DroneOwnershipComponent) == 0x000008, "Wrong alignment on UK31DroneOwnershipComponent");
static_assert(sizeof(UK31DroneOwnershipComponent) == 0x0000D0, "Wrong size on UK31DroneOwnershipComponent");

// Class TheK31.K31DronePlacementRecaller
// 0x0078 (0x0120 - 0x00A8)
class UK31DronePlacementRecaller final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _maxDistanceXY;                                    // 0x00C0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxDistanceZ;                                     // 0x00E8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DronePlacementRecaller">();
	}
	static class UK31DronePlacementRecaller* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DronePlacementRecaller>();
	}
};
static_assert(alignof(UK31DronePlacementRecaller) == 0x000008, "Wrong alignment on UK31DronePlacementRecaller");
static_assert(sizeof(UK31DronePlacementRecaller) == 0x000120, "Wrong size on UK31DronePlacementRecaller");
static_assert(offsetof(UK31DronePlacementRecaller, _maxDistanceXY) == 0x0000C0, "Member 'UK31DronePlacementRecaller::_maxDistanceXY' has a wrong offset!");
static_assert(offsetof(UK31DronePlacementRecaller, _maxDistanceZ) == 0x0000E8, "Member 'UK31DronePlacementRecaller::_maxDistanceZ' has a wrong offset!");

// Class TheK31.K31DronePlacementStrategy
// 0x0078 (0x0180 - 0x0108)
class UK31DronePlacementStrategy final : public UObjectPlacementValidationWithRestrictionStrategy
{
public:
	struct FDBDTunableRowHandle                   _sphereSweepRadius;                                // 0x0108(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _minHeightAboveGround;                             // 0x0130(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxHeightAboveGround;                             // 0x0158(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DronePlacementStrategy">();
	}
	static class UK31DronePlacementStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DronePlacementStrategy>();
	}
};
static_assert(alignof(UK31DronePlacementStrategy) == 0x000008, "Wrong alignment on UK31DronePlacementStrategy");
static_assert(sizeof(UK31DronePlacementStrategy) == 0x000180, "Wrong size on UK31DronePlacementStrategy");
static_assert(offsetof(UK31DronePlacementStrategy, _sphereSweepRadius) == 0x000108, "Member 'UK31DronePlacementStrategy::_sphereSweepRadius' has a wrong offset!");
static_assert(offsetof(UK31DronePlacementStrategy, _minHeightAboveGround) == 0x000130, "Member 'UK31DronePlacementStrategy::_minHeightAboveGround' has a wrong offset!");
static_assert(offsetof(UK31DronePlacementStrategy, _maxHeightAboveGround) == 0x000158, "Member 'UK31DronePlacementStrategy::_maxHeightAboveGround' has a wrong offset!");

// Class TheK31.K31DroneRecallingState
// 0x0058 (0x00B0 - 0x0058)
class UK31DroneRecallingState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _recallingDuration;                                // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneRecallingState">();
	}
	static class UK31DroneRecallingState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneRecallingState>();
	}
};
static_assert(alignof(UK31DroneRecallingState) == 0x000008, "Wrong alignment on UK31DroneRecallingState");
static_assert(sizeof(UK31DroneRecallingState) == 0x0000B0, "Wrong size on UK31DroneRecallingState");
static_assert(offsetof(UK31DroneRecallingState, _recallingDuration) == 0x000088, "Member 'UK31DroneRecallingState::_recallingDuration' has a wrong offset!");

// Class TheK31.K31DroneScoutDetectionComponent
// 0x0228 (0x02D0 - 0x00A8)
class UK31DroneScoutDetectionComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FK31DroneScoutDetectionSphereRaycastStruct> _raycastSphereData;                                // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class ACamperPlayer*, struct FSurvivorDroneFrameDatum> _survivorLastFrameData;                            // 0x00D0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class ACamperPlayer*, struct FSurvivorDroneFrameDatum> _survivorCurrentFrameData;                         // 0x0120(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<class ACamperPlayer*>                  _detectedSurvivors;                                // 0x0170(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_180[0x90];                                     // 0x0180(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _baseDetectionConeYawHalfAngleDegrees;             // 0x0210(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _baseDetectionHalfHeight;                          // 0x0238(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _baseDetectionRadius;                              // 0x0260(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _sphereTraceRadius;                                // 0x0288(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _stateTagsPreventingSurvivorDetection;             // 0x02B0(0x0020)(Edit, NativeAccessSpecifierPrivate)

public:
	void OnLaserActive(class UActorComponent* Component, bool Reset);
	void OnLaserDeactivate(class UActorComponent* Component);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneScoutDetectionComponent">();
	}
	static class UK31DroneScoutDetectionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneScoutDetectionComponent>();
	}
};
static_assert(alignof(UK31DroneScoutDetectionComponent) == 0x000008, "Wrong alignment on UK31DroneScoutDetectionComponent");
static_assert(sizeof(UK31DroneScoutDetectionComponent) == 0x0002D0, "Wrong size on UK31DroneScoutDetectionComponent");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _raycastSphereData) == 0x0000C0, "Member 'UK31DroneScoutDetectionComponent::_raycastSphereData' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _survivorLastFrameData) == 0x0000D0, "Member 'UK31DroneScoutDetectionComponent::_survivorLastFrameData' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _survivorCurrentFrameData) == 0x000120, "Member 'UK31DroneScoutDetectionComponent::_survivorCurrentFrameData' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _detectedSurvivors) == 0x000170, "Member 'UK31DroneScoutDetectionComponent::_detectedSurvivors' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _baseDetectionConeYawHalfAngleDegrees) == 0x000210, "Member 'UK31DroneScoutDetectionComponent::_baseDetectionConeYawHalfAngleDegrees' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _baseDetectionHalfHeight) == 0x000238, "Member 'UK31DroneScoutDetectionComponent::_baseDetectionHalfHeight' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _baseDetectionRadius) == 0x000260, "Member 'UK31DroneScoutDetectionComponent::_baseDetectionRadius' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _sphereTraceRadius) == 0x000288, "Member 'UK31DroneScoutDetectionComponent::_sphereTraceRadius' has a wrong offset!");
static_assert(offsetof(UK31DroneScoutDetectionComponent, _stateTagsPreventingSurvivorDetection) == 0x0002B0, "Member 'UK31DroneScoutDetectionComponent::_stateTagsPreventingSurvivorDetection' has a wrong offset!");

// Class TheK31.K31DroneScoutingState
// 0x0060 (0x00B8 - 0x0058)
class UK31DroneScoutingState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x60];                                      // 0x0058(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneScoutingState">();
	}
	static class UK31DroneScoutingState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneScoutingState>();
	}
};
static_assert(alignof(UK31DroneScoutingState) == 0x000008, "Wrong alignment on UK31DroneScoutingState");
static_assert(sizeof(UK31DroneScoutingState) == 0x0000B8, "Wrong size on UK31DroneScoutingState");

// Class TheK31.K31DroneStateController
// 0x00D0 (0x0178 - 0x00A8)
class UK31DroneStateController final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x30];                                      // 0x00A8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnStateChangedBlueprintEvent;                      // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UK31DroneState>>     _stateClasses;                                     // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK31DroneState>             _defaultStateClass;                                // 0x00F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameStateBase*                         _gameState;                                        // 0x0100(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x18];                                     // 0x0108(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UK31DroneState*>                 _states;                                           // 0x0120(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x10];                                     // 0x0130(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FK31DroneTimestampedState              _local_currentState;                               // 0x0140(0x0018)(Transient, NativeAccessSpecifierPrivate)
	struct FK31DroneTimestampedState              _authority_RepCurrentState;                        // 0x0158(0x0018)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0x8];                                      // 0x0170(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_AuthorityRepCurrentState();
	void OnRep_States();
	void OnStateChangedBlueprintEvent__DelegateSignature(EK31DroneStateID OldState, EK31DroneStateID NewState);

	EK31DroneStateID GetCurrentStateID() const;
	EK31DroneStateID GetPreviousStateID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneStateController">();
	}
	static class UK31DroneStateController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneStateController>();
	}
};
static_assert(alignof(UK31DroneStateController) == 0x000008, "Wrong alignment on UK31DroneStateController");
static_assert(sizeof(UK31DroneStateController) == 0x000178, "Wrong size on UK31DroneStateController");
static_assert(offsetof(UK31DroneStateController, OnStateChangedBlueprintEvent) == 0x0000D8, "Member 'UK31DroneStateController::OnStateChangedBlueprintEvent' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _stateClasses) == 0x0000E8, "Member 'UK31DroneStateController::_stateClasses' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _defaultStateClass) == 0x0000F8, "Member 'UK31DroneStateController::_defaultStateClass' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _gameState) == 0x000100, "Member 'UK31DroneStateController::_gameState' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _states) == 0x000120, "Member 'UK31DroneStateController::_states' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _local_currentState) == 0x000140, "Member 'UK31DroneStateController::_local_currentState' has a wrong offset!");
static_assert(offsetof(UK31DroneStateController, _authority_RepCurrentState) == 0x000158, "Member 'UK31DroneStateController::_authority_RepCurrentState' has a wrong offset!");

// Class TheK31.K31DroneStealthState
// 0x0060 (0x00B8 - 0x0058)
class UK31DroneStealthState final : public UK31DroneState
{
public:
	uint8                                         Pad_58[0x60];                                      // 0x0058(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneStealthState">();
	}
	static class UK31DroneStealthState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneStealthState>();
	}
};
static_assert(alignof(UK31DroneStealthState) == 0x000008, "Wrong alignment on UK31DroneStealthState");
static_assert(sizeof(UK31DroneStealthState) == 0x0000B8, "Wrong size on UK31DroneStealthState");

// Class TheK31.K31DroneTargeter
// 0x0098 (0x0140 - 0x00A8)
class UK31DroneTargeter final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ADBDActorIndicator>         _indicatorClass;                                   // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxAngleFromScreenCenter;                         // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x28];                                      // 0x00F0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDActorIndicator*                     _indicator;                                        // 0x0118(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31Drone*                              _target;                                           // 0x0128(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x10];                                     // 0x0130(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneTargeter">();
	}
	static class UK31DroneTargeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneTargeter>();
	}
};
static_assert(alignof(UK31DroneTargeter) == 0x000008, "Wrong alignment on UK31DroneTargeter");
static_assert(sizeof(UK31DroneTargeter) == 0x000140, "Wrong size on UK31DroneTargeter");
static_assert(offsetof(UK31DroneTargeter, _indicatorClass) == 0x0000C0, "Member 'UK31DroneTargeter::_indicatorClass' has a wrong offset!");
static_assert(offsetof(UK31DroneTargeter, _maxAngleFromScreenCenter) == 0x0000C8, "Member 'UK31DroneTargeter::_maxAngleFromScreenCenter' has a wrong offset!");
static_assert(offsetof(UK31DroneTargeter, _indicator) == 0x000118, "Member 'UK31DroneTargeter::_indicator' has a wrong offset!");
static_assert(offsetof(UK31DroneTargeter, _target) == 0x000128, "Member 'UK31DroneTargeter::_target' has a wrong offset!");

// Class TheK31.K31DroneZoneComponent
// 0x00D0 (0x0178 - 0x00A8)
class UK31DroneZoneComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ADBDPlayer*, struct FK31PlayerDroneZoneStruct> _playerDroneZoneStructMap;                         // 0x00C0(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _maxDistanceXY;                                    // 0x0120(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _maxDistanceZ;                                     // 0x0148(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _maxDistanceZ_ScoutingLaser;                       // 0x0170(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31DroneZoneComponent">();
	}
	static class UK31DroneZoneComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31DroneZoneComponent>();
	}
};
static_assert(alignof(UK31DroneZoneComponent) == 0x000008, "Wrong alignment on UK31DroneZoneComponent");
static_assert(sizeof(UK31DroneZoneComponent) == 0x000178, "Wrong size on UK31DroneZoneComponent");
static_assert(offsetof(UK31DroneZoneComponent, _playerDroneZoneStructMap) == 0x0000C0, "Member 'UK31DroneZoneComponent::_playerDroneZoneStructMap' has a wrong offset!");
static_assert(offsetof(UK31DroneZoneComponent, _maxDistanceXY) == 0x000120, "Member 'UK31DroneZoneComponent::_maxDistanceXY' has a wrong offset!");
static_assert(offsetof(UK31DroneZoneComponent, _maxDistanceZ) == 0x000148, "Member 'UK31DroneZoneComponent::_maxDistanceZ' has a wrong offset!");
static_assert(offsetof(UK31DroneZoneComponent, _maxDistanceZ_ScoutingLaser) == 0x000170, "Member 'UK31DroneZoneComponent::_maxDistanceZ_ScoutingLaser' has a wrong offset!");

// Class TheK31.K31FXInterface
// 0x0000 (0x0030 - 0x0030)
class IK31FXInterface final : public IInterface
{
public:
	void Cosmetic_TriggerSurvivorAppearOnRadarEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31FXInterface">();
	}
	static class IK31FXInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IK31FXInterface>();
	}
};
static_assert(alignof(IK31FXInterface) == 0x000008, "Wrong alignment on IK31FXInterface");
static_assert(sizeof(IK31FXInterface) == 0x000030, "Wrong size on IK31FXInterface");

// Class TheK31.K31HasteEffect
// 0x0000 (0x0380 - 0x0380)
class UK31HasteEffect final : public UStatusEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31HasteEffect">();
	}
	static class UK31HasteEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31HasteEffect>();
	}
};
static_assert(alignof(UK31HasteEffect) == 0x000008, "Wrong alignment on UK31HasteEffect");
static_assert(sizeof(UK31HasteEffect) == 0x000380, "Wrong size on UK31HasteEffect");

// Class TheK31.K31InspectRadarScoreEmitter
// 0x0078 (0x00B0 - 0x0038)
class UK31InspectRadarScoreEmitter final : public UPlayerScoreEmitter
{
public:
	float                                         _timeAwaitingForInspect;                           // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x74];                                      // 0x003C(0x0074)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31InspectRadarScoreEmitter">();
	}
	static class UK31InspectRadarScoreEmitter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31InspectRadarScoreEmitter>();
	}
};
static_assert(alignof(UK31InspectRadarScoreEmitter) == 0x000008, "Wrong alignment on UK31InspectRadarScoreEmitter");
static_assert(sizeof(UK31InspectRadarScoreEmitter) == 0x0000B0, "Wrong size on UK31InspectRadarScoreEmitter");
static_assert(offsetof(UK31InspectRadarScoreEmitter, _timeAwaitingForInspect) == 0x000038, "Member 'UK31InspectRadarScoreEmitter::_timeAwaitingForInspect' has a wrong offset!");

// Class TheK31.K31MenuAnimInstance
// 0x0010 (0x03A0 - 0x0390)
class UK31MenuAnimInstance final : public UBaseMenuAnimInstance
{
public:
	class UCustomizationAnimationSelector*        _animationSelector;                                // 0x0388(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_390[0x10];                                     // 0x0390(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCustomizationAnimationMappingIDChanged(int32 AnimationMappingIndex);

	TArray<class FName> GetCustoAnimTags() const;
	int32 GetCustomizationMappingID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31MenuAnimInstance">();
	}
	static class UK31MenuAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31MenuAnimInstance>();
	}
};
static_assert(alignof(UK31MenuAnimInstance) == 0x000010, "Wrong alignment on UK31MenuAnimInstance");
static_assert(sizeof(UK31MenuAnimInstance) == 0x0003A0, "Wrong size on UK31MenuAnimInstance");
static_assert(offsetof(UK31MenuAnimInstance, _animationSelector) == 0x000388, "Member 'UK31MenuAnimInstance::_animationSelector' has a wrong offset!");

// Class TheK31.K31P01
// 0x0038 (0x0458 - 0x0420)
class UK31P01 final : public UPerk
{
public:
	float                                         _hasteEffectMovementSpeedIncrease;                 // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _hasteEffectDurationSeconds[0x3];                  // 0x0424(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _authority_hasteStatusEffect;                      // 0x0430(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _hasteEffectClass;                                 // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isPerkActive;                                     // 0x0440(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_441[0x17];                                     // 0x0441(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetHasteEffectDurationAtLevel() const;
	float GetHasteEffectMovementSpeedIncrease() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31P01">();
	}
	static class UK31P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31P01>();
	}
};
static_assert(alignof(UK31P01) == 0x000008, "Wrong alignment on UK31P01");
static_assert(sizeof(UK31P01) == 0x000458, "Wrong size on UK31P01");
static_assert(offsetof(UK31P01, _hasteEffectMovementSpeedIncrease) == 0x000420, "Member 'UK31P01::_hasteEffectMovementSpeedIncrease' has a wrong offset!");
static_assert(offsetof(UK31P01, _hasteEffectDurationSeconds) == 0x000424, "Member 'UK31P01::_hasteEffectDurationSeconds' has a wrong offset!");
static_assert(offsetof(UK31P01, _authority_hasteStatusEffect) == 0x000430, "Member 'UK31P01::_authority_hasteStatusEffect' has a wrong offset!");
static_assert(offsetof(UK31P01, _hasteEffectClass) == 0x000438, "Member 'UK31P01::_hasteEffectClass' has a wrong offset!");
static_assert(offsetof(UK31P01, _isPerkActive) == 0x000440, "Member 'UK31P01::_isPerkActive' has a wrong offset!");

// Class TheK31.K31P02
// 0x0018 (0x0438 - 0x0420)
class UK31P02 final : public UPerk
{
public:
	float                                         _screamRevealSeconds[0x3];                         // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _screamDistance;                                   // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_430[0x8];                                      // 0x0430(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Multicast_MakeSurvivorsScream();

	float GetScreamDistance() const;
	float GetScreamRevealDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31P02">();
	}
	static class UK31P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31P02>();
	}
};
static_assert(alignof(UK31P02) == 0x000008, "Wrong alignment on UK31P02");
static_assert(sizeof(UK31P02) == 0x000438, "Wrong size on UK31P02");
static_assert(offsetof(UK31P02, _screamRevealSeconds) == 0x000420, "Member 'UK31P02::_screamRevealSeconds' has a wrong offset!");
static_assert(offsetof(UK31P02, _screamDistance) == 0x00042C, "Member 'UK31P02::_screamDistance' has a wrong offset!");

// Class TheK31.K31P03
// 0x0078 (0x0498 - 0x0420)
class UK31P03 final : public UPerk
{
public:
	float                                         _healPenalty[0x3];                                 // 0x0420(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _reduceHealingSpeedEffectSeconds;                  // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _reduceHealingSpeedEffectClass;                    // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class ACamperPlayer>, TWeakObjectPtr<class UStatusEffect>> _survivorDebuffMap;                                // 0x0438(0x0050)(ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x10];                                     // 0x0488(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetHealPenaltyAtLevel() const;
	float GetReduceHealingSpeedEffectSeconds() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31P03">();
	}
	static class UK31P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31P03>();
	}
};
static_assert(alignof(UK31P03) == 0x000008, "Wrong alignment on UK31P03");
static_assert(sizeof(UK31P03) == 0x000498, "Wrong size on UK31P03");
static_assert(offsetof(UK31P03, _healPenalty) == 0x000420, "Member 'UK31P03::_healPenalty' has a wrong offset!");
static_assert(offsetof(UK31P03, _reduceHealingSpeedEffectSeconds) == 0x00042C, "Member 'UK31P03::_reduceHealingSpeedEffectSeconds' has a wrong offset!");
static_assert(offsetof(UK31P03, _reduceHealingSpeedEffectClass) == 0x000430, "Member 'UK31P03::_reduceHealingSpeedEffectClass' has a wrong offset!");
static_assert(offsetof(UK31P03, _survivorDebuffMap) == 0x000438, "Member 'UK31P03::_survivorDebuffMap' has a wrong offset!");

// Class TheK31.K31PlayerZoneStatus
// 0x00E0 (0x0188 - 0x00A8)
class UK31PlayerZoneStatus final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x48];                                      // 0x00A8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UK31DroneZoneComponent*, struct FK31DroneZoneOverlapDatum> _overlappingZones;                                 // 0x00F0(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x48];                                     // 0x0140(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31PlayerZoneStatus">();
	}
	static class UK31PlayerZoneStatus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31PlayerZoneStatus>();
	}
};
static_assert(alignof(UK31PlayerZoneStatus) == 0x000008, "Wrong alignment on UK31PlayerZoneStatus");
static_assert(sizeof(UK31PlayerZoneStatus) == 0x000188, "Wrong size on UK31PlayerZoneStatus");
static_assert(offsetof(UK31PlayerZoneStatus, _overlappingZones) == 0x0000F0, "Member 'UK31PlayerZoneStatus::_overlappingZones' has a wrong offset!");

// Class TheK31.K31Power
// 0x0288 (0x07D8 - 0x0550)
class AK31Power final : public ACollectable
{
public:
	uint8                                         Pad_550[0x48];                                     // 0x0550(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31PowerChargePresentationItemProgressComponent* _powerChargePresentationItemProgressComponent;     // 0x0598(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UK31PowerChargePresentationPowerFadeComponent* _powerChargePresentationPowerFadeComponent;        // 0x05A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UK31SurvivorDetection>      _survivorDetectionClass;                           // 0x05A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FStatusEffectSpawnData>         _effects;                                          // 0x05B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UInteractor*                            _interactor;                                       // 0x05C0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActorPoolInitializer*                  _dronePoolInitializer;                             // 0x05C8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAuthoritativeActorPoolComponent*       _dronePool;                                        // 0x05D0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31Scanner*                            _scanner;                                          // 0x05D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5E0[0x3C];                                     // 0x05E0(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	EK31PowerState                                _powerState;                                       // 0x061C(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61D[0xB];                                      // 0x061D(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusEffectSpawnerHelper       _effectSpawner;                                    // 0x0628(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK31SurvivorClawTrapComponent> _survivorClawTrapComponentClass;                   // 0x0678(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _powerCooldownTimer;                               // 0x0680(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_688[0x38];                                     // 0x0688(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatProperty                          _powerCooldownDuration;                            // 0x06C0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _hasteCurveBasedOnScannedSurvivors;                // 0x0748(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _canRecallDisabledDrones;                          // 0x0750(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void OnRepPowerCooldownTimer();

	void OnRepPowerState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31Power">();
	}
	static class AK31Power* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK31Power>();
	}
};
static_assert(alignof(AK31Power) == 0x000008, "Wrong alignment on AK31Power");
static_assert(sizeof(AK31Power) == 0x0007D8, "Wrong size on AK31Power");
static_assert(offsetof(AK31Power, _powerChargePresentationItemProgressComponent) == 0x000598, "Member 'AK31Power::_powerChargePresentationItemProgressComponent' has a wrong offset!");
static_assert(offsetof(AK31Power, _powerChargePresentationPowerFadeComponent) == 0x0005A0, "Member 'AK31Power::_powerChargePresentationPowerFadeComponent' has a wrong offset!");
static_assert(offsetof(AK31Power, _survivorDetectionClass) == 0x0005A8, "Member 'AK31Power::_survivorDetectionClass' has a wrong offset!");
static_assert(offsetof(AK31Power, _effects) == 0x0005B0, "Member 'AK31Power::_effects' has a wrong offset!");
static_assert(offsetof(AK31Power, _interactor) == 0x0005C0, "Member 'AK31Power::_interactor' has a wrong offset!");
static_assert(offsetof(AK31Power, _dronePoolInitializer) == 0x0005C8, "Member 'AK31Power::_dronePoolInitializer' has a wrong offset!");
static_assert(offsetof(AK31Power, _dronePool) == 0x0005D0, "Member 'AK31Power::_dronePool' has a wrong offset!");
static_assert(offsetof(AK31Power, _scanner) == 0x0005D8, "Member 'AK31Power::_scanner' has a wrong offset!");
static_assert(offsetof(AK31Power, _powerState) == 0x00061C, "Member 'AK31Power::_powerState' has a wrong offset!");
static_assert(offsetof(AK31Power, _effectSpawner) == 0x000628, "Member 'AK31Power::_effectSpawner' has a wrong offset!");
static_assert(offsetof(AK31Power, _survivorClawTrapComponentClass) == 0x000678, "Member 'AK31Power::_survivorClawTrapComponentClass' has a wrong offset!");
static_assert(offsetof(AK31Power, _powerCooldownTimer) == 0x000680, "Member 'AK31Power::_powerCooldownTimer' has a wrong offset!");
static_assert(offsetof(AK31Power, _powerCooldownDuration) == 0x0006C0, "Member 'AK31Power::_powerCooldownDuration' has a wrong offset!");
static_assert(offsetof(AK31Power, _hasteCurveBasedOnScannedSurvivors) == 0x000748, "Member 'AK31Power::_hasteCurveBasedOnScannedSurvivors' has a wrong offset!");
static_assert(offsetof(AK31Power, _canRecallDisabledDrones) == 0x000750, "Member 'AK31Power::_canRecallDisabledDrones' has a wrong offset!");

// Class TheK31.K31PowerChargePresentationItemProgressComponent
// 0x0020 (0x00D0 - 0x00B0)
class UK31PowerChargePresentationItemProgressComponent final : public UPresentationItemProgressComponent
{
public:
	uint8                                         Pad_B0[0x18];                                      // 0x00B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31Power*                              _originatingPower;                                 // 0x00C8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31PowerChargePresentationItemProgressComponent">();
	}
	static class UK31PowerChargePresentationItemProgressComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31PowerChargePresentationItemProgressComponent>();
	}
};
static_assert(alignof(UK31PowerChargePresentationItemProgressComponent) == 0x000008, "Wrong alignment on UK31PowerChargePresentationItemProgressComponent");
static_assert(sizeof(UK31PowerChargePresentationItemProgressComponent) == 0x0000D0, "Wrong size on UK31PowerChargePresentationItemProgressComponent");
static_assert(offsetof(UK31PowerChargePresentationItemProgressComponent, _originatingPower) == 0x0000C8, "Member 'UK31PowerChargePresentationItemProgressComponent::_originatingPower' has a wrong offset!");

// Class TheK31.K31RadarAnimInstance
// 0x0030 (0x0380 - 0x0350)
class UK31RadarAnimInstance final : public UAnimInstance
{
public:
	bool                                          _isRecallingADrone;                                // 0x0350(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isActivatingADrone;                               // 0x0351(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isAbleToPlaceDrone;                               // 0x0352(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isPowerOnCooldown;                                // 0x0353(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31Power*                              _owningK31Power;                                   // 0x0358(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASlasherPlayer*                         _killer;                                           // 0x0360(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x18];                                     // 0x0368(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGameEventReceived(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);
	void ResetIsActivatingADrone();
	void ResetIsRecallingADrone();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31RadarAnimInstance">();
	}
	static class UK31RadarAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31RadarAnimInstance>();
	}
};
static_assert(alignof(UK31RadarAnimInstance) == 0x000010, "Wrong alignment on UK31RadarAnimInstance");
static_assert(sizeof(UK31RadarAnimInstance) == 0x000380, "Wrong size on UK31RadarAnimInstance");
static_assert(offsetof(UK31RadarAnimInstance, _isRecallingADrone) == 0x000350, "Member 'UK31RadarAnimInstance::_isRecallingADrone' has a wrong offset!");
static_assert(offsetof(UK31RadarAnimInstance, _isActivatingADrone) == 0x000351, "Member 'UK31RadarAnimInstance::_isActivatingADrone' has a wrong offset!");
static_assert(offsetof(UK31RadarAnimInstance, _isAbleToPlaceDrone) == 0x000352, "Member 'UK31RadarAnimInstance::_isAbleToPlaceDrone' has a wrong offset!");
static_assert(offsetof(UK31RadarAnimInstance, _isPowerOnCooldown) == 0x000353, "Member 'UK31RadarAnimInstance::_isPowerOnCooldown' has a wrong offset!");
static_assert(offsetof(UK31RadarAnimInstance, _owningK31Power) == 0x000358, "Member 'UK31RadarAnimInstance::_owningK31Power' has a wrong offset!");
static_assert(offsetof(UK31RadarAnimInstance, _killer) == 0x000360, "Member 'UK31RadarAnimInstance::_killer' has a wrong offset!");

// Class TheK31.K31Scanner
// 0x01A0 (0x0248 - 0x00A8)
class UK31Scanner final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnScannerUpdated;                                  // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatProperty                          _radarRadius;                                      // 0x00D0(0x0088)(Edit, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _levelHeightThreshold;                             // 0x0158(0x0028)(Edit, NativeAccessSpecifierPrivate)
	class UTexture*                               _debugPointTexture;                                // 0x0180(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_188[0x28];                                     // 0x0188(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _owningActor;                                      // 0x01B0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B8[0x10];                                     // 0x01B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ADBDPlayer*>                       _playersShownOnRadar;                              // 0x01C8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_218[0x30];                                     // 0x0218(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnScannerUpdated__DelegateSignature();

	const TArray<struct FLinearColor> GetEncodedPoints() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31Scanner">();
	}
	static class UK31Scanner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31Scanner>();
	}
};
static_assert(alignof(UK31Scanner) == 0x000008, "Wrong alignment on UK31Scanner");
static_assert(sizeof(UK31Scanner) == 0x000248, "Wrong size on UK31Scanner");
static_assert(offsetof(UK31Scanner, OnScannerUpdated) == 0x0000A8, "Member 'UK31Scanner::OnScannerUpdated' has a wrong offset!");
static_assert(offsetof(UK31Scanner, _radarRadius) == 0x0000D0, "Member 'UK31Scanner::_radarRadius' has a wrong offset!");
static_assert(offsetof(UK31Scanner, _levelHeightThreshold) == 0x000158, "Member 'UK31Scanner::_levelHeightThreshold' has a wrong offset!");
static_assert(offsetof(UK31Scanner, _debugPointTexture) == 0x000180, "Member 'UK31Scanner::_debugPointTexture' has a wrong offset!");
static_assert(offsetof(UK31Scanner, _owningActor) == 0x0001B0, "Member 'UK31Scanner::_owningActor' has a wrong offset!");
static_assert(offsetof(UK31Scanner, _playersShownOnRadar) == 0x0001C8, "Member 'UK31Scanner::_playersShownOnRadar' has a wrong offset!");

// Class TheK31.K31SurvivorAnimInstance
// 0x0020 (0x0600 - 0x05E0)
class UK31SurvivorAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_5E0[0x8];                                      // 0x05E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _hasBeenSpottedByDrone;                            // 0x05E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInsideAnActiveDroneZone;                        // 0x05E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isClawTrapped;                                    // 0x05EA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isRemovingClawTrap;                               // 0x05EB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHackingDrone;                                   // 0x05EC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5ED[0x3];                                      // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _walkAnimSpeed;                                    // 0x05F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrawling;                                       // 0x05F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInsideCloset;                                   // 0x05F5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isDead;                                           // 0x05F6(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInteracting;                                    // 0x05F7(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInjured;                                        // 0x05F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCrouched;                                       // 0x05F9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isHooked;                                         // 0x05FA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isIdle;                                           // 0x05FB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isUsingAimItem;                                   // 0x05FC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInAir;                                          // 0x05FD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingHealed;                                    // 0x05FE(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isBeingCarried;                                   // 0x05FF(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorAnimInstance">();
	}
	static class UK31SurvivorAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorAnimInstance>();
	}
};
static_assert(alignof(UK31SurvivorAnimInstance) == 0x000010, "Wrong alignment on UK31SurvivorAnimInstance");
static_assert(sizeof(UK31SurvivorAnimInstance) == 0x000600, "Wrong size on UK31SurvivorAnimInstance");
static_assert(offsetof(UK31SurvivorAnimInstance, _hasBeenSpottedByDrone) == 0x0005E8, "Member 'UK31SurvivorAnimInstance::_hasBeenSpottedByDrone' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isInsideAnActiveDroneZone) == 0x0005E9, "Member 'UK31SurvivorAnimInstance::_isInsideAnActiveDroneZone' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isClawTrapped) == 0x0005EA, "Member 'UK31SurvivorAnimInstance::_isClawTrapped' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isRemovingClawTrap) == 0x0005EB, "Member 'UK31SurvivorAnimInstance::_isRemovingClawTrap' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isHackingDrone) == 0x0005EC, "Member 'UK31SurvivorAnimInstance::_isHackingDrone' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _walkAnimSpeed) == 0x0005F0, "Member 'UK31SurvivorAnimInstance::_walkAnimSpeed' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isCrawling) == 0x0005F4, "Member 'UK31SurvivorAnimInstance::_isCrawling' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isInsideCloset) == 0x0005F5, "Member 'UK31SurvivorAnimInstance::_isInsideCloset' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isDead) == 0x0005F6, "Member 'UK31SurvivorAnimInstance::_isDead' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isInteracting) == 0x0005F7, "Member 'UK31SurvivorAnimInstance::_isInteracting' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isInjured) == 0x0005F8, "Member 'UK31SurvivorAnimInstance::_isInjured' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isCrouched) == 0x0005F9, "Member 'UK31SurvivorAnimInstance::_isCrouched' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isHooked) == 0x0005FA, "Member 'UK31SurvivorAnimInstance::_isHooked' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isIdle) == 0x0005FB, "Member 'UK31SurvivorAnimInstance::_isIdle' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isUsingAimItem) == 0x0005FC, "Member 'UK31SurvivorAnimInstance::_isUsingAimItem' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isInAir) == 0x0005FD, "Member 'UK31SurvivorAnimInstance::_isInAir' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isBeingHealed) == 0x0005FE, "Member 'UK31SurvivorAnimInstance::_isBeingHealed' has a wrong offset!");
static_assert(offsetof(UK31SurvivorAnimInstance, _isBeingCarried) == 0x0005FF, "Member 'UK31SurvivorAnimInstance::_isBeingCarried' has a wrong offset!");

// Class TheK31.K31SurvivorClawTrapComponent
// 0x01D0 (0x0278 - 0x00A8)
class UK31SurvivorClawTrapComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimerObject*                           _batteryChargeTimer;                               // 0x00B0(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31Power*                              _originatingPower;                                 // 0x00C0(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isTrapped;                                        // 0x00C8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isBroadcasting;                                   // 0x00C9(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USurvivorRemoveClawTrapInteraction*     _removeClawTrapInteraction;                        // 0x00D0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USurvivorRemoveClawTrapInteraction> _removeClawTrapInteractionClass;                   // 0x00D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AK31ClawTrap*                           _clawTrap;                                         // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AK31ClawTrap>               _clawTrapClass;                                    // 0x00E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _clawTrapCosmeticDelayDuration;                    // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _clawTrapAttachSocket;                             // 0x00F4(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK31PlayerZoneStatus*                   _authority_playerZoneStatus;                       // 0x0100(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FClawTrapUntrapDatum                   _lastUntrapDatum;                                  // 0x0108(0x0008)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          _wasLastRemovedAutomatically;                      // 0x0110(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AK31Drone*                              _authority_originatingDrone;                       // 0x0118(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x30];                                     // 0x0120(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatProperty                          _batteryMaxCharge;                                 // 0x0150(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _survivorMaxChargeModifier;                        // 0x01D8(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_260[0x18];                                     // 0x0260(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnDamageStateChanged(ECamperDamageState OldDamageState, ECamperDamageState NewDamageState);
	void Multicast_ClawTrapAddedByDrone(class AK31Drone* OriginatingDrone);
	void OnCamperEscaped(const struct FGameplayTag& GameEventType, const struct FGameEventData& GameEventData);
	void OnIntroCompleted();
	void OnRep_IsBroadcasting();
	void OnRep_IsTrapped();
	void OnRep_OriginatingPower(class AK31Power* OldPower);
	void OnRep_RemoveClawTrapInteraction();

	float GetClawTrapCosmeticDelayDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorClawTrapComponent">();
	}
	static class UK31SurvivorClawTrapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorClawTrapComponent>();
	}
};
static_assert(alignof(UK31SurvivorClawTrapComponent) == 0x000008, "Wrong alignment on UK31SurvivorClawTrapComponent");
static_assert(sizeof(UK31SurvivorClawTrapComponent) == 0x000278, "Wrong size on UK31SurvivorClawTrapComponent");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _batteryChargeTimer) == 0x0000B0, "Member 'UK31SurvivorClawTrapComponent::_batteryChargeTimer' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _originatingPower) == 0x0000C0, "Member 'UK31SurvivorClawTrapComponent::_originatingPower' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _isTrapped) == 0x0000C8, "Member 'UK31SurvivorClawTrapComponent::_isTrapped' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _isBroadcasting) == 0x0000C9, "Member 'UK31SurvivorClawTrapComponent::_isBroadcasting' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _removeClawTrapInteraction) == 0x0000D0, "Member 'UK31SurvivorClawTrapComponent::_removeClawTrapInteraction' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _removeClawTrapInteractionClass) == 0x0000D8, "Member 'UK31SurvivorClawTrapComponent::_removeClawTrapInteractionClass' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _clawTrap) == 0x0000E0, "Member 'UK31SurvivorClawTrapComponent::_clawTrap' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _clawTrapClass) == 0x0000E8, "Member 'UK31SurvivorClawTrapComponent::_clawTrapClass' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _clawTrapCosmeticDelayDuration) == 0x0000F0, "Member 'UK31SurvivorClawTrapComponent::_clawTrapCosmeticDelayDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _clawTrapAttachSocket) == 0x0000F4, "Member 'UK31SurvivorClawTrapComponent::_clawTrapAttachSocket' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _authority_playerZoneStatus) == 0x000100, "Member 'UK31SurvivorClawTrapComponent::_authority_playerZoneStatus' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _lastUntrapDatum) == 0x000108, "Member 'UK31SurvivorClawTrapComponent::_lastUntrapDatum' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _wasLastRemovedAutomatically) == 0x000110, "Member 'UK31SurvivorClawTrapComponent::_wasLastRemovedAutomatically' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _authority_originatingDrone) == 0x000118, "Member 'UK31SurvivorClawTrapComponent::_authority_originatingDrone' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _batteryMaxCharge) == 0x000150, "Member 'UK31SurvivorClawTrapComponent::_batteryMaxCharge' has a wrong offset!");
static_assert(offsetof(UK31SurvivorClawTrapComponent, _survivorMaxChargeModifier) == 0x0001D8, "Member 'UK31SurvivorClawTrapComponent::_survivorMaxChargeModifier' has a wrong offset!");

// Class TheK31.K31SurvivorCosmeticHelperActor
// 0x0080 (0x0388 - 0x0308)
class AK31SurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	class UK31PlayerZoneStatus*                   _playerZoneStatus;                                 // 0x0308(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_310[0x30];                                     // 0x0310(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _enterActiveZoneCosmeticCooldown;                  // 0x0340(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x20];                                     // 0x0368(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnDetectedByDrone(class AK31Drone* Drone, bool IsOnCooldown);
	void Cosmetic_OnIsBroadcasting(bool IsBroadcasting);
	void Cosmetic_OnIsOverlappingActiveZoneChanged(bool IsOverlappingActiveZone);
	void Cosmetic_OnIsSurvivorDetectedAndVisibleOnScanner(bool IsSurvivorDetectedAndVisibleOnScanner);
	void Cosmetic_OnIsSurvivorImmuneToDetection(bool IsImmuneToDetection, int32 NumLockOns);
	void Cosmetic_OnIsTrappedByClawTrap(bool IsTrapped);
	void Cosmetic_UpdateLockOnProgress(float CurrentProgressPercent, bool IsFullyLockedOn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorCosmeticHelperActor">();
	}
	static class AK31SurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK31SurvivorCosmeticHelperActor>();
	}
};
static_assert(alignof(AK31SurvivorCosmeticHelperActor) == 0x000008, "Wrong alignment on AK31SurvivorCosmeticHelperActor");
static_assert(sizeof(AK31SurvivorCosmeticHelperActor) == 0x000388, "Wrong size on AK31SurvivorCosmeticHelperActor");
static_assert(offsetof(AK31SurvivorCosmeticHelperActor, _playerZoneStatus) == 0x000308, "Member 'AK31SurvivorCosmeticHelperActor::_playerZoneStatus' has a wrong offset!");
static_assert(offsetof(AK31SurvivorCosmeticHelperActor, _enterActiveZoneCosmeticCooldown) == 0x000340, "Member 'AK31SurvivorCosmeticHelperActor::_enterActiveZoneCosmeticCooldown' has a wrong offset!");

// Class TheK31.K31SurvivorDetectedEffect
// 0x00A0 (0x0420 - 0x0380)
class UK31SurvivorDetectedEffect final : public UStatusEffect
{
public:
	struct FDBDTunableRowHandle                   _hasteDuration;                                    // 0x0380(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _timeSinceLastDroneDeployedOrReversed;             // 0x03A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AK31Drone>, struct FFastTimer> _authority_droneTimerMap;                          // 0x03D0(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorDetectedEffect">();
	}
	static class UK31SurvivorDetectedEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorDetectedEffect>();
	}
};
static_assert(alignof(UK31SurvivorDetectedEffect) == 0x000008, "Wrong alignment on UK31SurvivorDetectedEffect");
static_assert(sizeof(UK31SurvivorDetectedEffect) == 0x000420, "Wrong size on UK31SurvivorDetectedEffect");
static_assert(offsetof(UK31SurvivorDetectedEffect, _hasteDuration) == 0x000380, "Member 'UK31SurvivorDetectedEffect::_hasteDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetectedEffect, _timeSinceLastDroneDeployedOrReversed) == 0x0003A8, "Member 'UK31SurvivorDetectedEffect::_timeSinceLastDroneDeployedOrReversed' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetectedEffect, _authority_droneTimerMap) == 0x0003D0, "Member 'UK31SurvivorDetectedEffect::_authority_droneTimerMap' has a wrong offset!");

// Class TheK31.K31SurvivorDetection
// 0x0720 (0x07C8 - 0x00A8)
class UK31SurvivorDetection final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _hinderedStatusEffectClass;                        // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _brokenStatusEffectClass;                          // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerInstinctStatusEffectClass;                  // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _brokenStatusEffect;                               // 0x00C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _secondsToCharge;                                  // 0x00D0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _chargeRate;                                       // 0x0158(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _chargeModifierWhenClawTrapped;                    // 0x01E0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _lockOnChargeStackPercent;                         // 0x0268(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _hinderedEffectPercent;                            // 0x02F0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _hinderedEffectDuration;                           // 0x0378(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _killerInstinctEffectDuration;                     // 0x0400(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _enableKillerInstinctRangeCheck;                   // 0x0488(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _killerInstinctEffectKillerRange;                  // 0x0510(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _immuneToDroneDetectionDuration;                   // 0x0598(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _survivorIsBelowDroneDuration;                     // 0x0620(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FStatProperty                          _showSurvivorOnRadarDuration;                      // 0x06A8(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class AK31Power*                              _originatingPower;                                 // 0x0730(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _chargingLockedOnChargeableComponent;              // 0x0738(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _immuneToDetectionTimer;                           // 0x0740(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _survivorIsBelowDroneTimer;                        // 0x0748(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTimerObject*                           _showSurvivorOnRadarTimer;                         // 0x0750(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isFullyLockedOn;                                  // 0x0758(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AK31Drone*>                      _overlappingDrones;                                // 0x0760(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AK31Drone*>                      _overlappingActiveDrones;                          // 0x0770(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                         _lastActiveTime;                                   // 0x0780(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_784[0x44];                                     // 0x0784(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnChargeCompleted(bool COMPLETED, const TArray<class AActor*>& InstigatorsForCompletion);
	void Authority_OnDamageStateChanged(ECamperDamageState OldDamageState, ECamperDamageState NewDamageState);
	void OnRep_ChargeableComponent();
	void OnRep_IsFullyLockedOn();
	void OnRep_OriginatingPower(class AK31Power* OldPower);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorDetection">();
	}
	static class UK31SurvivorDetection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorDetection>();
	}
};
static_assert(alignof(UK31SurvivorDetection) == 0x000008, "Wrong alignment on UK31SurvivorDetection");
static_assert(sizeof(UK31SurvivorDetection) == 0x0007C8, "Wrong size on UK31SurvivorDetection");
static_assert(offsetof(UK31SurvivorDetection, _hinderedStatusEffectClass) == 0x0000B0, "Member 'UK31SurvivorDetection::_hinderedStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _brokenStatusEffectClass) == 0x0000B8, "Member 'UK31SurvivorDetection::_brokenStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _killerInstinctStatusEffectClass) == 0x0000C0, "Member 'UK31SurvivorDetection::_killerInstinctStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _brokenStatusEffect) == 0x0000C8, "Member 'UK31SurvivorDetection::_brokenStatusEffect' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _secondsToCharge) == 0x0000D0, "Member 'UK31SurvivorDetection::_secondsToCharge' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _chargeRate) == 0x000158, "Member 'UK31SurvivorDetection::_chargeRate' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _chargeModifierWhenClawTrapped) == 0x0001E0, "Member 'UK31SurvivorDetection::_chargeModifierWhenClawTrapped' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _lockOnChargeStackPercent) == 0x000268, "Member 'UK31SurvivorDetection::_lockOnChargeStackPercent' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _hinderedEffectPercent) == 0x0002F0, "Member 'UK31SurvivorDetection::_hinderedEffectPercent' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _hinderedEffectDuration) == 0x000378, "Member 'UK31SurvivorDetection::_hinderedEffectDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _killerInstinctEffectDuration) == 0x000400, "Member 'UK31SurvivorDetection::_killerInstinctEffectDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _enableKillerInstinctRangeCheck) == 0x000488, "Member 'UK31SurvivorDetection::_enableKillerInstinctRangeCheck' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _killerInstinctEffectKillerRange) == 0x000510, "Member 'UK31SurvivorDetection::_killerInstinctEffectKillerRange' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _immuneToDroneDetectionDuration) == 0x000598, "Member 'UK31SurvivorDetection::_immuneToDroneDetectionDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _survivorIsBelowDroneDuration) == 0x000620, "Member 'UK31SurvivorDetection::_survivorIsBelowDroneDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _showSurvivorOnRadarDuration) == 0x0006A8, "Member 'UK31SurvivorDetection::_showSurvivorOnRadarDuration' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _originatingPower) == 0x000730, "Member 'UK31SurvivorDetection::_originatingPower' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _chargingLockedOnChargeableComponent) == 0x000738, "Member 'UK31SurvivorDetection::_chargingLockedOnChargeableComponent' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _immuneToDetectionTimer) == 0x000740, "Member 'UK31SurvivorDetection::_immuneToDetectionTimer' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _survivorIsBelowDroneTimer) == 0x000748, "Member 'UK31SurvivorDetection::_survivorIsBelowDroneTimer' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _showSurvivorOnRadarTimer) == 0x000750, "Member 'UK31SurvivorDetection::_showSurvivorOnRadarTimer' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _isFullyLockedOn) == 0x000758, "Member 'UK31SurvivorDetection::_isFullyLockedOn' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _overlappingDrones) == 0x000760, "Member 'UK31SurvivorDetection::_overlappingDrones' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _overlappingActiveDrones) == 0x000770, "Member 'UK31SurvivorDetection::_overlappingActiveDrones' has a wrong offset!");
static_assert(offsetof(UK31SurvivorDetection, _lastActiveTime) == 0x000780, "Member 'UK31SurvivorDetection::_lastActiveTime' has a wrong offset!");

// Class TheK31.K31SurvivorExposedEffect
// 0x0000 (0x0390 - 0x0390)
class UK31SurvivorExposedEffect final : public UExposedEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorExposedEffect">();
	}
	static class UK31SurvivorExposedEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorExposedEffect>();
	}
};
static_assert(alignof(UK31SurvivorExposedEffect) == 0x000008, "Wrong alignment on UK31SurvivorExposedEffect");
static_assert(sizeof(UK31SurvivorExposedEffect) == 0x000390, "Wrong size on UK31SurvivorExposedEffect");

// Class TheK31.K31SurvivorInActiveZoneCondition
// 0x0000 (0x00E0 - 0x00E0)
class UK31SurvivorInActiveZoneCondition final : public UEventDrivenModifierCondition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31SurvivorInActiveZoneCondition">();
	}
	static class UK31SurvivorInActiveZoneCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31SurvivorInActiveZoneCondition>();
	}
};
static_assert(alignof(UK31SurvivorInActiveZoneCondition) == 0x000008, "Wrong alignment on UK31SurvivorInActiveZoneCondition");
static_assert(sizeof(UK31SurvivorInActiveZoneCondition) == 0x0000E0, "Wrong size on UK31SurvivorInActiveZoneCondition");

// Class TheK31.K31TrapProximitySensor
// 0x00A8 (0x0150 - 0x00A8)
class UK31TrapProximitySensor final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x40];                                      // 0x00A8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ADBDPlayer*>                       _trappedPlayersInZone;                             // 0x00E8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_138[0x18];                                     // 0x0138(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31TrapProximitySensor">();
	}
	static class UK31TrapProximitySensor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31TrapProximitySensor>();
	}
};
static_assert(alignof(UK31TrapProximitySensor) == 0x000008, "Wrong alignment on UK31TrapProximitySensor");
static_assert(sizeof(UK31TrapProximitySensor) == 0x000150, "Wrong size on UK31TrapProximitySensor");
static_assert(offsetof(UK31TrapProximitySensor, _trappedPlayersInZone) == 0x0000E8, "Member 'UK31TrapProximitySensor::_trappedPlayersInZone' has a wrong offset!");

// Class TheK31.K31UndetectableEffect
// 0x0018 (0x0400 - 0x03E8)
class UK31UndetectableEffect final : public UBaseLingeringStatusEffect
{
public:
	uint8                                         Pad_3E8[0x18];                                     // 0x03E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31UndetectableEffect">();
	}
	static class UK31UndetectableEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31UndetectableEffect>();
	}
};
static_assert(alignof(UK31UndetectableEffect) == 0x000008, "Wrong alignment on UK31UndetectableEffect");
static_assert(sizeof(UK31UndetectableEffect) == 0x000400, "Wrong size on UK31UndetectableEffect");

// Class TheK31.K31Utilities
// 0x0000 (0x0030 - 0x0030)
class UK31Utilities final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31Utilities">();
	}
	static class UK31Utilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31Utilities>();
	}
};
static_assert(alignof(UK31Utilities) == 0x000008, "Wrong alignment on UK31Utilities");
static_assert(sizeof(UK31Utilities) == 0x000030, "Wrong size on UK31Utilities");

// Class TheK31.K31WeakPointScoreEmitter
// 0x0068 (0x00A0 - 0x0038)
class UK31WeakPointScoreEmitter final : public UPlayerScoreEmitter
{
public:
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ACamperPlayer*, struct FSurvivorWeakPointScoreDatum> _registeredSurvivors;                              // 0x0050(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	void Authority_OnDechargeBegin(class UChargeableComponent* ChargeableComponent);
	void Authority_OnDechargeEnd(class UChargeableComponent* ChargeableComponent);
	void Authority_OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K31WeakPointScoreEmitter">();
	}
	static class UK31WeakPointScoreEmitter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK31WeakPointScoreEmitter>();
	}
};
static_assert(alignof(UK31WeakPointScoreEmitter) == 0x000008, "Wrong alignment on UK31WeakPointScoreEmitter");
static_assert(sizeof(UK31WeakPointScoreEmitter) == 0x0000A0, "Wrong size on UK31WeakPointScoreEmitter");
static_assert(offsetof(UK31WeakPointScoreEmitter, _registeredSurvivors) == 0x000050, "Member 'UK31WeakPointScoreEmitter::_registeredSurvivors' has a wrong offset!");

// Class TheK31.KillerMakeUniqueSurvivorsScreamAchievement
// 0x0050 (0x00C8 - 0x0078)
class UKillerMakeUniqueSurvivorsScreamAchievement final : public UOnGameEventAchievement
{
public:
	TSet<class AActor*>                           _alreadyProcessedSurvivors;                        // 0x0078(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KillerMakeUniqueSurvivorsScreamAchievement">();
	}
	static class UKillerMakeUniqueSurvivorsScreamAchievement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKillerMakeUniqueSurvivorsScreamAchievement>();
	}
};
static_assert(alignof(UKillerMakeUniqueSurvivorsScreamAchievement) == 0x000008, "Wrong alignment on UKillerMakeUniqueSurvivorsScreamAchievement");
static_assert(sizeof(UKillerMakeUniqueSurvivorsScreamAchievement) == 0x0000C8, "Wrong size on UKillerMakeUniqueSurvivorsScreamAchievement");
static_assert(offsetof(UKillerMakeUniqueSurvivorsScreamAchievement, _alreadyProcessedSurvivors) == 0x000078, "Member 'UKillerMakeUniqueSurvivorsScreamAchievement::_alreadyProcessedSurvivors' has a wrong offset!");

// Class TheK31.RecallK31DroneAction
// 0x0000 (0x0038 - 0x0038)
class URecallK31DroneAction final : public UK31DroneChangeStateAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RecallK31DroneAction">();
	}
	static class URecallK31DroneAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecallK31DroneAction>();
	}
};
static_assert(alignof(URecallK31DroneAction) == 0x000008, "Wrong alignment on URecallK31DroneAction");
static_assert(sizeof(URecallK31DroneAction) == 0x000038, "Wrong size on URecallK31DroneAction");

// Class TheK31.ReverseK31DroneAction
// 0x0000 (0x0030 - 0x0030)
class UReverseK31DroneAction final : public UK31DroneBaseAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReverseK31DroneAction">();
	}
	static class UReverseK31DroneAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReverseK31DroneAction>();
	}
};
static_assert(alignof(UReverseK31DroneAction) == 0x000008, "Wrong alignment on UReverseK31DroneAction");
static_assert(sizeof(UReverseK31DroneAction) == 0x000030, "Wrong size on UReverseK31DroneAction");

// Class TheK31.SurvivorHackDroneInteraction
// 0x0130 (0x08B0 - 0x0780)
class USurvivorHackDroneInteraction final : public UInteractionDefinition
{
public:
	struct FDirectionalMiniGameDefinition         _miniGameDefinition;                               // 0x0778(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_798[0x28];                                     // 0x0798(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isHackingComplete;                                // 0x07C0(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _batteryStartingChargePercent;                     // 0x07C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FName                                   _playerSnapSocket;                                 // 0x07F0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _maximumTimeToAttemptDuration;                     // 0x0800(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _switchToScoutingModeDuration;                     // 0x0828(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_850[0x60];                                     // 0x0850(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnMinigameEnd(class ACamperPlayer* Survivor, EDirectionalMinigameResult Result);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorHackDroneInteraction">();
	}
	static class USurvivorHackDroneInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorHackDroneInteraction>();
	}
};
static_assert(alignof(USurvivorHackDroneInteraction) == 0x000010, "Wrong alignment on USurvivorHackDroneInteraction");
static_assert(sizeof(USurvivorHackDroneInteraction) == 0x0008B0, "Wrong size on USurvivorHackDroneInteraction");
static_assert(offsetof(USurvivorHackDroneInteraction, _miniGameDefinition) == 0x000778, "Member 'USurvivorHackDroneInteraction::_miniGameDefinition' has a wrong offset!");
static_assert(offsetof(USurvivorHackDroneInteraction, _isHackingComplete) == 0x0007C0, "Member 'USurvivorHackDroneInteraction::_isHackingComplete' has a wrong offset!");
static_assert(offsetof(USurvivorHackDroneInteraction, _batteryStartingChargePercent) == 0x0007C8, "Member 'USurvivorHackDroneInteraction::_batteryStartingChargePercent' has a wrong offset!");
static_assert(offsetof(USurvivorHackDroneInteraction, _playerSnapSocket) == 0x0007F0, "Member 'USurvivorHackDroneInteraction::_playerSnapSocket' has a wrong offset!");
static_assert(offsetof(USurvivorHackDroneInteraction, _maximumTimeToAttemptDuration) == 0x000800, "Member 'USurvivorHackDroneInteraction::_maximumTimeToAttemptDuration' has a wrong offset!");
static_assert(offsetof(USurvivorHackDroneInteraction, _switchToScoutingModeDuration) == 0x000828, "Member 'USurvivorHackDroneInteraction::_switchToScoutingModeDuration' has a wrong offset!");

// Class TheK31.SurvivorRemoveClawTrapInteraction
// 0x00D0 (0x0850 - 0x0780)
class USurvivorRemoveClawTrapInteraction final : public UInteractionDefinition
{
public:
	struct FDirectionalMiniGameDefinition         _miniGameDefinition;                               // 0x0778(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          _isHackingComplete;                                // 0x0798(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK31SurvivorClawTrapComponent*          _survivorClawTrapComponent;                        // 0x07A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _batteryRechargeOnFailedRemovalPercent;            // 0x07A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _requiredTimeToRemainStillBeforeInteractingDuration; // 0x07D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7F8[0x58];                                     // 0x07F8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnMinigameEnd(class ACamperPlayer* Survivor, EDirectionalMinigameResult Result);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorRemoveClawTrapInteraction">();
	}
	static class USurvivorRemoveClawTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorRemoveClawTrapInteraction>();
	}
};
static_assert(alignof(USurvivorRemoveClawTrapInteraction) == 0x000010, "Wrong alignment on USurvivorRemoveClawTrapInteraction");
static_assert(sizeof(USurvivorRemoveClawTrapInteraction) == 0x000850, "Wrong size on USurvivorRemoveClawTrapInteraction");
static_assert(offsetof(USurvivorRemoveClawTrapInteraction, _miniGameDefinition) == 0x000778, "Member 'USurvivorRemoveClawTrapInteraction::_miniGameDefinition' has a wrong offset!");
static_assert(offsetof(USurvivorRemoveClawTrapInteraction, _isHackingComplete) == 0x000798, "Member 'USurvivorRemoveClawTrapInteraction::_isHackingComplete' has a wrong offset!");
static_assert(offsetof(USurvivorRemoveClawTrapInteraction, _survivorClawTrapComponent) == 0x0007A0, "Member 'USurvivorRemoveClawTrapInteraction::_survivorClawTrapComponent' has a wrong offset!");
static_assert(offsetof(USurvivorRemoveClawTrapInteraction, _batteryRechargeOnFailedRemovalPercent) == 0x0007A8, "Member 'USurvivorRemoveClawTrapInteraction::_batteryRechargeOnFailedRemovalPercent' has a wrong offset!");
static_assert(offsetof(USurvivorRemoveClawTrapInteraction, _requiredTimeToRemainStillBeforeInteractingDuration) == 0x0007D0, "Member 'USurvivorRemoveClawTrapInteraction::_requiredTimeToRemainStillBeforeInteractingDuration' has a wrong offset!");

}

