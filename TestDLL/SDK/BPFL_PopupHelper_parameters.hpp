#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_PopupHelper

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function BPFL_PopupHelper.BPFL_PopupHelper_C.GetPopupHeader
// 0x0060 (0x0060 - 0x0000)
struct BPFL_PopupHelper_C_GetPopupHeader final
{
public:
	EPopupPriority                                Priority;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstance;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPopupPriority                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PopupHelper_C_GetPopupHeader) == 0x000008, "Wrong alignment on BPFL_PopupHelper_C_GetPopupHeader");
static_assert(sizeof(BPFL_PopupHelper_C_GetPopupHeader) == 0x000060, "Wrong size on BPFL_PopupHelper_C_GetPopupHeader");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Priority) == 0x000000, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Priority' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, __WorldContext) == 0x000008, "Member 'BPFL_PopupHelper_C_GetPopupHeader::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, MaterialInstance) == 0x000010, "Member 'BPFL_PopupHelper_C_GetPopupHeader::MaterialInstance' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_byte_Variable) == 0x000018, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable) == 0x000020, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_2) == 0x000030, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_3) == 0x000038, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_4) == 0x000040, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_5) == 0x000048, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, Temp_object_Variable_6) == 0x000050, "Member 'BPFL_PopupHelper_C_GetPopupHeader::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PopupHelper_C_GetPopupHeader, K2Node_Select_Default) == 0x000058, "Member 'BPFL_PopupHelper_C_GetPopupHeader::K2Node_Select_Default' has a wrong offset!");

}

