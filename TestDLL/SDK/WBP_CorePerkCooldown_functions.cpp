#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePerkCooldown

#include "Basic.hpp"

#include "WBP_CorePerkCooldown_classes.hpp"
#include "WBP_CorePerkCooldown_parameters.hpp"


namespace SDK
{

// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.UpdateRechargeablePerk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisplayed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePerkCooldown_C::UpdateRechargeablePerk(double Percent, bool IsActive, bool* IsDisplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePerkCooldown_C", "UpdateRechargeablePerk");

	Params::WBP_CorePerkCooldown_C_UpdateRechargeablePerk Parms{};

	Parms.Percent = Percent;
	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisplayed != nullptr)
		*IsDisplayed = Parms.IsDisplayed;
}


// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.UpdateNormalPerk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisplayed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePerkCooldown_C::UpdateNormalPerk(double Percent, bool* IsDisplayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePerkCooldown_C", "UpdateNormalPerk");

	Params::WBP_CorePerkCooldown_C_UpdateNormalPerk Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisplayed != nullptr)
		*IsDisplayed = Parms.IsDisplayed;
}


// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.SetPercentage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRechargeable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRechargeableActive                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePerkCooldown_C::SetPercentage(double Percent, bool IsRechargeable, bool IsRechargeableActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePerkCooldown_C", "SetPercentage");

	Params::WBP_CorePerkCooldown_C_SetPercentage Parms{};

	Parms.Percent = Percent;
	Parms.IsRechargeable = IsRechargeable;
	Parms.IsRechargeableActive = IsRechargeableActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePerkCooldown_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePerkCooldown_C", "PreConstruct");

	Params::WBP_CorePerkCooldown_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePerkCooldown.WBP_CorePerkCooldown_C.ExecuteUbergraph_WBP_CorePerkCooldown
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePerkCooldown_C::ExecuteUbergraph_WBP_CorePerkCooldown(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePerkCooldown_C", "ExecuteUbergraph_WBP_CorePerkCooldown");

	Params::WBP_CorePerkCooldown_C_ExecuteUbergraph_WBP_CorePerkCooldown Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

