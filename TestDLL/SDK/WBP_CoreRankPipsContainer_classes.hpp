#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreRankPipsContainer

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreRankPipsContainer.WBP_CoreRankPipsContainer_C
// 0x0028 (0x02D0 - 0x02A8)
class UWBP_CoreRankPipsContainer_C final : public UUserWidget
{
public:
	class UWBP_CoreRankPip_C*                     WBP_CoreRankPip;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreRankPip_C*                     WBP_CoreRankPip_1;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreRankPip_C*                     WBP_CoreRankPip_2;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreRankPip_C*                     WBP_CoreRankPip_3;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreRankPip_C*                     WBP_CoreRankPip_4;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetPipsState(int32 RankPipsCount, int32 ActivePipsCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreRankPipsContainer_C">();
	}
	static class UWBP_CoreRankPipsContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreRankPipsContainer_C>();
	}
};
static_assert(alignof(UWBP_CoreRankPipsContainer_C) == 0x000008, "Wrong alignment on UWBP_CoreRankPipsContainer_C");
static_assert(sizeof(UWBP_CoreRankPipsContainer_C) == 0x0002D0, "Wrong size on UWBP_CoreRankPipsContainer_C");
static_assert(offsetof(UWBP_CoreRankPipsContainer_C, WBP_CoreRankPip) == 0x0002A8, "Member 'UWBP_CoreRankPipsContainer_C::WBP_CoreRankPip' has a wrong offset!");
static_assert(offsetof(UWBP_CoreRankPipsContainer_C, WBP_CoreRankPip_1) == 0x0002B0, "Member 'UWBP_CoreRankPipsContainer_C::WBP_CoreRankPip_1' has a wrong offset!");
static_assert(offsetof(UWBP_CoreRankPipsContainer_C, WBP_CoreRankPip_2) == 0x0002B8, "Member 'UWBP_CoreRankPipsContainer_C::WBP_CoreRankPip_2' has a wrong offset!");
static_assert(offsetof(UWBP_CoreRankPipsContainer_C, WBP_CoreRankPip_3) == 0x0002C0, "Member 'UWBP_CoreRankPipsContainer_C::WBP_CoreRankPip_3' has a wrong offset!");
static_assert(offsetof(UWBP_CoreRankPipsContainer_C, WBP_CoreRankPip_4) == 0x0002C8, "Member 'UWBP_CoreRankPipsContainer_C::WBP_CoreRankPip_4' has a wrong offset!");

}

