#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDUIViewsMobile

#include "Basic.hpp"

#include "DBDUIViewsMobile_structs.hpp"


namespace SDK::Params
{

// Function DBDUIViewsMobile.MobileBaseUserWidget.IsInTutorialState
// 0x0001 (0x0001 - 0x0000)
struct MobileBaseUserWidget_IsInTutorialState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MobileBaseUserWidget_IsInTutorialState) == 0x000001, "Wrong alignment on MobileBaseUserWidget_IsInTutorialState");
static_assert(sizeof(MobileBaseUserWidget_IsInTutorialState) == 0x000001, "Wrong size on MobileBaseUserWidget_IsInTutorialState");
static_assert(offsetof(MobileBaseUserWidget_IsInTutorialState, ReturnValue) == 0x000000, "Member 'MobileBaseUserWidget_IsInTutorialState::ReturnValue' has a wrong offset!");

// Function DBDUIViewsMobile.MobileBaseUserWidget.PropagateOnHighlightWidgetClicked
// 0x000C (0x000C - 0x0000)
struct MobileBaseUserWidget_PropagateOnHighlightWidgetClicked final
{
public:
	class FName                                   OnBoardingID;                                      // 0x0000(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MobileBaseUserWidget_PropagateOnHighlightWidgetClicked) == 0x000004, "Wrong alignment on MobileBaseUserWidget_PropagateOnHighlightWidgetClicked");
static_assert(sizeof(MobileBaseUserWidget_PropagateOnHighlightWidgetClicked) == 0x00000C, "Wrong size on MobileBaseUserWidget_PropagateOnHighlightWidgetClicked");
static_assert(offsetof(MobileBaseUserWidget_PropagateOnHighlightWidgetClicked, OnBoardingID) == 0x000000, "Member 'MobileBaseUserWidget_PropagateOnHighlightWidgetClicked::OnBoardingID' has a wrong offset!");

// Function DBDUIViewsMobile.UMGPageScrollWidget.HandlePageButtonClicked
// 0x0004 (0x0004 - 0x0000)
struct UMGPageScrollWidget_HandlePageButtonClicked final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGPageScrollWidget_HandlePageButtonClicked) == 0x000004, "Wrong alignment on UMGPageScrollWidget_HandlePageButtonClicked");
static_assert(sizeof(UMGPageScrollWidget_HandlePageButtonClicked) == 0x000004, "Wrong size on UMGPageScrollWidget_HandlePageButtonClicked");
static_assert(offsetof(UMGPageScrollWidget_HandlePageButtonClicked, PageIndex) == 0x000000, "Member 'UMGPageScrollWidget_HandlePageButtonClicked::PageIndex' has a wrong offset!");

// Function DBDUIViewsMobile.UMGAtlantaRequestRoleButton.OnToggleActiveState
// 0x0001 (0x0001 - 0x0000)
struct UMGAtlantaRequestRoleButton_OnToggleActiveState final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAtlantaRequestRoleButton_OnToggleActiveState) == 0x000001, "Wrong alignment on UMGAtlantaRequestRoleButton_OnToggleActiveState");
static_assert(sizeof(UMGAtlantaRequestRoleButton_OnToggleActiveState) == 0x000001, "Wrong size on UMGAtlantaRequestRoleButton_OnToggleActiveState");
static_assert(offsetof(UMGAtlantaRequestRoleButton_OnToggleActiveState, IsActive) == 0x000000, "Member 'UMGAtlantaRequestRoleButton_OnToggleActiveState::IsActive' has a wrong offset!");

// Function DBDUIViewsMobile.UMGAtlantaRequestRoleButton.SetIsActive
// 0x0001 (0x0001 - 0x0000)
struct UMGAtlantaRequestRoleButton_SetIsActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAtlantaRequestRoleButton_SetIsActive) == 0x000001, "Wrong alignment on UMGAtlantaRequestRoleButton_SetIsActive");
static_assert(sizeof(UMGAtlantaRequestRoleButton_SetIsActive) == 0x000001, "Wrong size on UMGAtlantaRequestRoleButton_SetIsActive");
static_assert(offsetof(UMGAtlantaRequestRoleButton_SetIsActive, IsActive) == 0x000000, "Member 'UMGAtlantaRequestRoleButton_SetIsActive::IsActive' has a wrong offset!");

// Function DBDUIViewsMobile.UMGAtlantaRequestRoleButton.GetIsActive
// 0x0001 (0x0001 - 0x0000)
struct UMGAtlantaRequestRoleButton_GetIsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGAtlantaRequestRoleButton_GetIsActive) == 0x000001, "Wrong alignment on UMGAtlantaRequestRoleButton_GetIsActive");
static_assert(sizeof(UMGAtlantaRequestRoleButton_GetIsActive) == 0x000001, "Wrong size on UMGAtlantaRequestRoleButton_GetIsActive");
static_assert(offsetof(UMGAtlantaRequestRoleButton_GetIsActive, ReturnValue) == 0x000000, "Member 'UMGAtlantaRequestRoleButton_GetIsActive::ReturnValue' has a wrong offset!");

// Function DBDUIViewsMobile.UMGBaseFriendListContextualMenuWidget.HandleActionTriggered
// 0x0001 (0x0001 - 0x0000)
struct UMGBaseFriendListContextualMenuWidget_HandleActionTriggered final
{
public:
	EActionOnFriendType                           ActionType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGBaseFriendListContextualMenuWidget_HandleActionTriggered) == 0x000001, "Wrong alignment on UMGBaseFriendListContextualMenuWidget_HandleActionTriggered");
static_assert(sizeof(UMGBaseFriendListContextualMenuWidget_HandleActionTriggered) == 0x000001, "Wrong size on UMGBaseFriendListContextualMenuWidget_HandleActionTriggered");
static_assert(offsetof(UMGBaseFriendListContextualMenuWidget_HandleActionTriggered, ActionType) == 0x000000, "Member 'UMGBaseFriendListContextualMenuWidget_HandleActionTriggered::ActionType' has a wrong offset!");

// Function DBDUIViewsMobile.UMGBaseFriendListElement.TriggerActionOnThisFriend
// 0x0001 (0x0001 - 0x0000)
struct UMGBaseFriendListElement_TriggerActionOnThisFriend final
{
public:
	EActionOnFriendType                           ActionType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGBaseFriendListElement_TriggerActionOnThisFriend) == 0x000001, "Wrong alignment on UMGBaseFriendListElement_TriggerActionOnThisFriend");
static_assert(sizeof(UMGBaseFriendListElement_TriggerActionOnThisFriend) == 0x000001, "Wrong size on UMGBaseFriendListElement_TriggerActionOnThisFriend");
static_assert(offsetof(UMGBaseFriendListElement_TriggerActionOnThisFriend, ActionType) == 0x000000, "Member 'UMGBaseFriendListElement_TriggerActionOnThisFriend::ActionType' has a wrong offset!");

// Function DBDUIViewsMobile.UMGFriendSearchBarWidget.HandleTextInputChanged
// 0x0018 (0x0018 - 0x0000)
struct UMGFriendSearchBarWidget_HandleTextInputChanged final
{
public:
	class FText                                   TextInput;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGFriendSearchBarWidget_HandleTextInputChanged) == 0x000008, "Wrong alignment on UMGFriendSearchBarWidget_HandleTextInputChanged");
static_assert(sizeof(UMGFriendSearchBarWidget_HandleTextInputChanged) == 0x000018, "Wrong size on UMGFriendSearchBarWidget_HandleTextInputChanged");
static_assert(offsetof(UMGFriendSearchBarWidget_HandleTextInputChanged, TextInput) == 0x000000, "Member 'UMGFriendSearchBarWidget_HandleTextInputChanged::TextInput' has a wrong offset!");

// Function DBDUIViewsMobile.UMGScrollListPageButton.SetIsSelected
// 0x0001 (0x0001 - 0x0000)
struct UMGScrollListPageButton_SetIsSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UMGScrollListPageButton_SetIsSelected) == 0x000001, "Wrong alignment on UMGScrollListPageButton_SetIsSelected");
static_assert(sizeof(UMGScrollListPageButton_SetIsSelected) == 0x000001, "Wrong size on UMGScrollListPageButton_SetIsSelected");
static_assert(offsetof(UMGScrollListPageButton_SetIsSelected, Selected) == 0x000000, "Member 'UMGScrollListPageButton_SetIsSelected::Selected' has a wrong offset!");

}

