#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDGameplayPresenter

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function DBDGameplayPresenter.SurvivorStatusComponent.OnCrouchChanged
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_OnCrouchChanged final
{
public:
	bool                                          IsCrouched;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_OnCrouchChanged) == 0x000001, "Wrong alignment on SurvivorStatusComponent_OnCrouchChanged");
static_assert(sizeof(SurvivorStatusComponent_OnCrouchChanged) == 0x000001, "Wrong size on SurvivorStatusComponent_OnCrouchChanged");
static_assert(offsetof(SurvivorStatusComponent_OnCrouchChanged, IsCrouched) == 0x000000, "Member 'SurvivorStatusComponent_OnCrouchChanged::IsCrouched' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.OnRunningAndMovementChanged
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_OnRunningAndMovementChanged final
{
public:
	bool                                          IsRunningAndMoving;                                // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_OnRunningAndMovementChanged) == 0x000001, "Wrong alignment on SurvivorStatusComponent_OnRunningAndMovementChanged");
static_assert(sizeof(SurvivorStatusComponent_OnRunningAndMovementChanged) == 0x000001, "Wrong size on SurvivorStatusComponent_OnRunningAndMovementChanged");
static_assert(offsetof(SurvivorStatusComponent_OnRunningAndMovementChanged, IsRunningAndMoving) == 0x000000, "Member 'SurvivorStatusComponent_OnRunningAndMovementChanged::IsRunningAndMoving' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.OnSuvivorDamaged
// 0x0002 (0x0002 - 0x0000)
struct SurvivorStatusComponent_OnSuvivorDamaged final
{
public:
	ECamperDamageState                            OldDamageState;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            NewDamageState;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_OnSuvivorDamaged) == 0x000001, "Wrong alignment on SurvivorStatusComponent_OnSuvivorDamaged");
static_assert(sizeof(SurvivorStatusComponent_OnSuvivorDamaged) == 0x000002, "Wrong size on SurvivorStatusComponent_OnSuvivorDamaged");
static_assert(offsetof(SurvivorStatusComponent_OnSuvivorDamaged, OldDamageState) == 0x000000, "Member 'SurvivorStatusComponent_OnSuvivorDamaged::OldDamageState' has a wrong offset!");
static_assert(offsetof(SurvivorStatusComponent_OnSuvivorDamaged, NewDamageState) == 0x000001, "Member 'SurvivorStatusComponent_OnSuvivorDamaged::NewDamageState' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.GetMovementSpeed
// 0x000C (0x000C - 0x0000)
struct SurvivorStatusComponent_GetMovementSpeed final
{
public:
	float                                         CurrentMovementSpeed;                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentMovementSpeed;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumMovementSpeed;                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_GetMovementSpeed) == 0x000004, "Wrong alignment on SurvivorStatusComponent_GetMovementSpeed");
static_assert(sizeof(SurvivorStatusComponent_GetMovementSpeed) == 0x00000C, "Wrong size on SurvivorStatusComponent_GetMovementSpeed");
static_assert(offsetof(SurvivorStatusComponent_GetMovementSpeed, CurrentMovementSpeed) == 0x000000, "Member 'SurvivorStatusComponent_GetMovementSpeed::CurrentMovementSpeed' has a wrong offset!");
static_assert(offsetof(SurvivorStatusComponent_GetMovementSpeed, PercentMovementSpeed) == 0x000004, "Member 'SurvivorStatusComponent_GetMovementSpeed::PercentMovementSpeed' has a wrong offset!");
static_assert(offsetof(SurvivorStatusComponent_GetMovementSpeed, MaximumMovementSpeed) == 0x000008, "Member 'SurvivorStatusComponent_GetMovementSpeed::MaximumMovementSpeed' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsCaptured
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsCaptured final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsCaptured) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsCaptured");
static_assert(sizeof(SurvivorStatusComponent_IsCaptured) == 0x000001, "Wrong size on SurvivorStatusComponent_IsCaptured");
static_assert(offsetof(SurvivorStatusComponent_IsCaptured, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsCaptured::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsCrouching
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsCrouching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsCrouching) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsCrouching");
static_assert(sizeof(SurvivorStatusComponent_IsCrouching) == 0x000001, "Wrong size on SurvivorStatusComponent_IsCrouching");
static_assert(offsetof(SurvivorStatusComponent_IsCrouching, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsCrouching::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsDead
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsDead final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsDead) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsDead");
static_assert(sizeof(SurvivorStatusComponent_IsDead) == 0x000001, "Wrong size on SurvivorStatusComponent_IsDead");
static_assert(offsetof(SurvivorStatusComponent_IsDead, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsDead::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsDying
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsDying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsDying) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsDying");
static_assert(sizeof(SurvivorStatusComponent_IsDying) == 0x000001, "Wrong size on SurvivorStatusComponent_IsDying");
static_assert(offsetof(SurvivorStatusComponent_IsDying, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsDying::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsGettingSacrificed
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsGettingSacrificed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsGettingSacrificed) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsGettingSacrificed");
static_assert(sizeof(SurvivorStatusComponent_IsGettingSacrificed) == 0x000001, "Wrong size on SurvivorStatusComponent_IsGettingSacrificed");
static_assert(offsetof(SurvivorStatusComponent_IsGettingSacrificed, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsGettingSacrificed::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsGettingStrangled
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsGettingStrangled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsGettingStrangled) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsGettingStrangled");
static_assert(sizeof(SurvivorStatusComponent_IsGettingStrangled) == 0x000001, "Wrong size on SurvivorStatusComponent_IsGettingStrangled");
static_assert(offsetof(SurvivorStatusComponent_IsGettingStrangled, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsGettingStrangled::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsHarpooned
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsHarpooned final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsHarpooned) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsHarpooned");
static_assert(sizeof(SurvivorStatusComponent_IsHarpooned) == 0x000001, "Wrong size on SurvivorStatusComponent_IsHarpooned");
static_assert(offsetof(SurvivorStatusComponent_IsHarpooned, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsHarpooned::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsHealing
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsHealing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsHealing) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsHealing");
static_assert(sizeof(SurvivorStatusComponent_IsHealing) == 0x000001, "Wrong size on SurvivorStatusComponent_IsHealing");
static_assert(offsetof(SurvivorStatusComponent_IsHealing, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsHealing::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsHiding
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsHiding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsHiding) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsHiding");
static_assert(sizeof(SurvivorStatusComponent_IsHiding) == 0x000001, "Wrong size on SurvivorStatusComponent_IsHiding");
static_assert(offsetof(SurvivorStatusComponent_IsHiding, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsHiding::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsHooked
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsHooked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsHooked) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsHooked");
static_assert(sizeof(SurvivorStatusComponent_IsHooked) == 0x000001, "Wrong size on SurvivorStatusComponent_IsHooked");
static_assert(offsetof(SurvivorStatusComponent_IsHooked, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsHooked::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsInjured
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsInjured final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsInjured) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsInjured");
static_assert(sizeof(SurvivorStatusComponent_IsInjured) == 0x000001, "Wrong size on SurvivorStatusComponent_IsInjured");
static_assert(offsetof(SurvivorStatusComponent_IsInjured, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsInjured::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsRunning
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsRunning final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsRunning) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsRunning");
static_assert(sizeof(SurvivorStatusComponent_IsRunning) == 0x000001, "Wrong size on SurvivorStatusComponent_IsRunning");
static_assert(offsetof(SurvivorStatusComponent_IsRunning, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsRunning::ReturnValue' has a wrong offset!");

// Function DBDGameplayPresenter.SurvivorStatusComponent.IsSleeping
// 0x0001 (0x0001 - 0x0000)
struct SurvivorStatusComponent_IsSleeping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorStatusComponent_IsSleeping) == 0x000001, "Wrong alignment on SurvivorStatusComponent_IsSleeping");
static_assert(sizeof(SurvivorStatusComponent_IsSleeping) == 0x000001, "Wrong size on SurvivorStatusComponent_IsSleeping");
static_assert(offsetof(SurvivorStatusComponent_IsSleeping, ReturnValue) == 0x000000, "Member 'SurvivorStatusComponent_IsSleeping::ReturnValue' has a wrong offset!");

}

