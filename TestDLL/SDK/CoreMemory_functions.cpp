#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreMemory

#include "Basic.hpp"

#include "CoreMemory_classes.hpp"
#include "CoreMemory_parameters.hpp"


namespace SDK
{

// Function CoreMemory.CoreMemoryChallengePlayerSpecificController.OnPortalReplicated
// (Final, Native, Private)

void ACoreMemoryChallengePlayerSpecificController::OnPortalReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryChallengePlayerSpecificController", "OnPortalReplicated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryChallengePlayerSpecificController.OnRep_Controller
// (Final, Native, Private)

void ACoreMemoryChallengePlayerSpecificController::OnRep_Controller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryChallengePlayerSpecificController", "OnRep_Controller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryChallengePlayerSpecificController.StartQuest
// (Final, Native, Public)

void ACoreMemoryChallengePlayerSpecificController::StartQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryChallengePlayerSpecificController", "StartQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryController.Authority_CreatePlayerSpecificController
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryController::Authority_CreatePlayerSpecificController(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryController", "Authority_CreatePlayerSpecificController");

	Params::CoreMemoryController_Authority_CreatePlayerSpecificController Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryController.Authority_OnCharacterAdded
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryController::Authority_OnCharacterAdded(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryController", "Authority_OnCharacterAdded");

	Params::CoreMemoryController_Authority_OnCharacterAdded Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryController.OnRep_CoreMemoryPortal
// (Final, Native, Private)

void UCoreMemoryController::OnRep_CoreMemoryPortal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryController", "OnRep_CoreMemoryPortal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryDefaultCollectBehaviour.OnCollectZoneEntered
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UCoreMemoryDefaultCollectBehaviour::OnCollectZoneEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryDefaultCollectBehaviour", "OnCollectZoneEntered");

	Params::CoreMemoryDefaultCollectBehaviour_OnCollectZoneEntered Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryDefaultTriggerBehaviour.Authority_CheckLineOfSight
// (Final, Native, Private)
// Parameters:
// class ACoreMemoryFragment*              Fragment                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryDefaultTriggerBehaviour::Authority_CheckLineOfSight(const class ACoreMemoryFragment* Fragment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryDefaultTriggerBehaviour", "Authority_CheckLineOfSight");

	Params::CoreMemoryDefaultTriggerBehaviour_Authority_CheckLineOfSight Parms{};

	Parms.Fragment = Fragment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryDefaultTriggerBehaviour.Authority_OnTriggerZoneEntered
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UCoreMemoryDefaultTriggerBehaviour::Authority_OnTriggerZoneEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryDefaultTriggerBehaviour", "Authority_OnTriggerZoneEntered");

	Params::CoreMemoryDefaultTriggerBehaviour_Authority_OnTriggerZoneEntered Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryDefaultTriggerBehaviour.Authority_OnTriggerZoneExited
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryDefaultTriggerBehaviour::Authority_OnTriggerZoneExited(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryDefaultTriggerBehaviour", "Authority_OnTriggerZoneExited");

	Params::CoreMemoryDefaultTriggerBehaviour_Authority_OnTriggerZoneExited Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragment.OnRep_SpawnLocation
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACoreMemoryFragment::OnRep_SpawnLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragment", "OnRep_SpawnLocation");

	Params::CoreMemoryFragment_OnRep_SpawnLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragment.OnRep_SpawnRotation
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ACoreMemoryFragment::OnRep_SpawnRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragment", "OnRep_SpawnRotation");

	Params::CoreMemoryFragment_OnRep_SpawnRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnLocallyObservedChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsLocallyObserved                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryFragmentComponent::OnLocallyObservedChanged(bool IsLocallyObserved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnLocallyObservedChanged");

	Params::CoreMemoryFragmentComponent_OnLocallyObservedChanged Parms{};

	Parms.IsLocallyObserved = IsLocallyObserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnRep_Controller
// (Final, Native, Private)

void UCoreMemoryFragmentComponent::OnRep_Controller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnRep_Controller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnRep_IsDespawned
// (Final, Native, Private)

void UCoreMemoryFragmentComponent::OnRep_IsDespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnRep_IsDespawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnRep_OwningPlayer
// (Final, Native, Private)

void UCoreMemoryFragmentComponent::OnRep_OwningPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnRep_OwningPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnRep_WasCollected
// (Final, Native, Private)

void UCoreMemoryFragmentComponent::OnRep_WasCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnRep_WasCollected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.OnRep_WasTriggered
// (Final, Native, Private)

void UCoreMemoryFragmentComponent::OnRep_WasTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "OnRep_WasTriggered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.Server_OnFragmentCollected
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UCoreMemoryFragmentComponent::Server_OnFragmentCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "Server_OnFragmentCollected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryFragmentComponent.Multicast_FragmentDespawnCountdown
// (Net, NetReliable, Native, Event, NetMulticast, Public, Const)
// Parameters:
// float                                   FloatVal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryFragmentComponent::Multicast_FragmentDespawnCountdown(float FloatVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryFragmentComponent", "Multicast_FragmentDespawnCountdown");

	Params::CoreMemoryFragmentComponent_Multicast_FragmentDespawnCountdown Parms{};

	Parms.FloatVal = FloatVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryPortal.OnInteractionStarted
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACoreMemoryPortal::OnInteractionStarted(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryPortal", "OnInteractionStarted");

	Params::CoreMemoryPortal_OnInteractionStarted Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CoreMemory.CoreMemoryPortalComponent.GetPlayersWithActivePortal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ADBDPlayer*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ADBDPlayer*> UCoreMemoryPortalComponent::GetPlayersWithActivePortal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryPortalComponent", "GetPlayersWithActivePortal");

	Params::CoreMemoryPortalComponent_GetPlayersWithActivePortal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CoreMemory.CoreMemoryScreamBehaviour.Cosmetic_Scream
// (BlueprintCosmetic, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ACamperPlayer*                    Camper                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemoryScreamBehaviour::Cosmetic_Scream(class ACamperPlayer* Camper) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemoryScreamBehaviour", "Cosmetic_Scream");

	Params::CoreMemoryScreamBehaviour_Cosmetic_Scream Parms{};

	Parms.Camper = Camper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CoreMemory.CoreMemorySpawnedStatusEffectTrackerComponent.Authority_AddSpawnedStatusEffect
// (Final, Native, Private)
// Parameters:
// class UStatusEffect*                    StatusEffect                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACoreMemoryChallengePlayerSpecificController*PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCoreMemorySpawnedStatusEffectTrackerComponent::Authority_AddSpawnedStatusEffect(class UStatusEffect* StatusEffect, class ACoreMemoryChallengePlayerSpecificController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoreMemorySpawnedStatusEffectTrackerComponent", "Authority_AddSpawnedStatusEffect");

	Params::CoreMemorySpawnedStatusEffectTrackerComponent_Authority_AddSpawnedStatusEffect Parms{};

	Parms.StatusEffect = StatusEffect;
	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

