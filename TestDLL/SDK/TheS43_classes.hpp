#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS43

#include "Basic.hpp"

#include "GameplayTagUtilities_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS43.S43P01
// 0x00B8 (0x04D8 - 0x0420)
class US43P01 final : public UPerk
{
public:
	float                                         _vaultSpeedAmount;                                 // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _perkCooldown[0x3];                                // 0x0424(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _vaultSpeedStatusEffectClass;                      // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _vaultSpeedStatusEffect;                           // 0x0438(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_440[0x10];                                     // 0x0440(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagStateBool                          _canPerformPerk;                                   // 0x0450(0x0048)(Net, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x18];                                     // 0x0498(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UInteractionDefinition>     _perkFastVaultWindowInteractionClass;              // 0x04B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _runVaultWindowInteractionClass;                   // 0x04B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _perkFastVaultPalletLeftInteractionClass;          // 0x04C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _perkFastVaultPalletRightInteractionClass;         // 0x04C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _fastVaultPalletInteractionClass;                  // 0x04D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnDamageStateChanged(ECamperDamageState OldDamageState, ECamperDamageState CurrentDamageState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P01">();
	}
	static class US43P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P01>();
	}
};
static_assert(alignof(US43P01) == 0x000008, "Wrong alignment on US43P01");
static_assert(sizeof(US43P01) == 0x0004D8, "Wrong size on US43P01");
static_assert(offsetof(US43P01, _vaultSpeedAmount) == 0x000420, "Member 'US43P01::_vaultSpeedAmount' has a wrong offset!");
static_assert(offsetof(US43P01, _perkCooldown) == 0x000424, "Member 'US43P01::_perkCooldown' has a wrong offset!");
static_assert(offsetof(US43P01, _vaultSpeedStatusEffectClass) == 0x000430, "Member 'US43P01::_vaultSpeedStatusEffectClass' has a wrong offset!");
static_assert(offsetof(US43P01, _vaultSpeedStatusEffect) == 0x000438, "Member 'US43P01::_vaultSpeedStatusEffect' has a wrong offset!");
static_assert(offsetof(US43P01, _canPerformPerk) == 0x000450, "Member 'US43P01::_canPerformPerk' has a wrong offset!");
static_assert(offsetof(US43P01, _perkFastVaultWindowInteractionClass) == 0x0004B0, "Member 'US43P01::_perkFastVaultWindowInteractionClass' has a wrong offset!");
static_assert(offsetof(US43P01, _runVaultWindowInteractionClass) == 0x0004B8, "Member 'US43P01::_runVaultWindowInteractionClass' has a wrong offset!");
static_assert(offsetof(US43P01, _perkFastVaultPalletLeftInteractionClass) == 0x0004C0, "Member 'US43P01::_perkFastVaultPalletLeftInteractionClass' has a wrong offset!");
static_assert(offsetof(US43P01, _perkFastVaultPalletRightInteractionClass) == 0x0004C8, "Member 'US43P01::_perkFastVaultPalletRightInteractionClass' has a wrong offset!");
static_assert(offsetof(US43P01, _fastVaultPalletInteractionClass) == 0x0004D0, "Member 'US43P01::_fastVaultPalletInteractionClass' has a wrong offset!");

// Class TheS43.S43P01FastVaultInteraction
// 0x0000 (0x07E0 - 0x07E0)
class US43P01FastVaultInteraction : public UVaultFastDefintion
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P01FastVaultInteraction">();
	}
	static class US43P01FastVaultInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P01FastVaultInteraction>();
	}
};
static_assert(alignof(US43P01FastVaultInteraction) == 0x000010, "Wrong alignment on US43P01FastVaultInteraction");
static_assert(sizeof(US43P01FastVaultInteraction) == 0x0007E0, "Wrong size on US43P01FastVaultInteraction");

// Class TheS43.S43P01IconStrategy
// 0x0000 (0x0038 - 0x0038)
class US43P01IconStrategy final : public UBasePerkIconStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P01IconStrategy">();
	}
	static class US43P01IconStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P01IconStrategy>();
	}
};
static_assert(alignof(US43P01IconStrategy) == 0x000008, "Wrong alignment on US43P01IconStrategy");
static_assert(sizeof(US43P01IconStrategy) == 0x000038, "Wrong size on US43P01IconStrategy");

// Class TheS43.S43P02
// 0x0038 (0x0458 - 0x0420)
class US43P02 final : public UPerk
{
public:
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _revealKillerAuraStatusEffectClass;                // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _revealKillerAuraStatusEffect;                     // 0x0430(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _preventScreamDurationStatusEffectClass;           // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _preventScreamDurationStatusEffect;                // 0x0440(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _showAuraDuration[0x3];                            // 0x0448(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P02">();
	}
	static class US43P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P02>();
	}
};
static_assert(alignof(US43P02) == 0x000008, "Wrong alignment on US43P02");
static_assert(sizeof(US43P02) == 0x000458, "Wrong size on US43P02");
static_assert(offsetof(US43P02, _revealKillerAuraStatusEffectClass) == 0x000428, "Member 'US43P02::_revealKillerAuraStatusEffectClass' has a wrong offset!");
static_assert(offsetof(US43P02, _revealKillerAuraStatusEffect) == 0x000430, "Member 'US43P02::_revealKillerAuraStatusEffect' has a wrong offset!");
static_assert(offsetof(US43P02, _preventScreamDurationStatusEffectClass) == 0x000438, "Member 'US43P02::_preventScreamDurationStatusEffectClass' has a wrong offset!");
static_assert(offsetof(US43P02, _preventScreamDurationStatusEffect) == 0x000440, "Member 'US43P02::_preventScreamDurationStatusEffect' has a wrong offset!");
static_assert(offsetof(US43P02, _showAuraDuration) == 0x000448, "Member 'US43P02::_showAuraDuration' has a wrong offset!");

// Class TheS43.S43P02IconStrategy
// 0x0000 (0x0038 - 0x0038)
class US43P02IconStrategy final : public UBasePerkIconStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P02IconStrategy">();
	}
	static class US43P02IconStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P02IconStrategy>();
	}
};
static_assert(alignof(US43P02IconStrategy) == 0x000008, "Wrong alignment on US43P02IconStrategy");
static_assert(sizeof(US43P02IconStrategy) == 0x000038, "Wrong size on US43P02IconStrategy");

// Class TheS43.S43P03
// 0x0010 (0x0430 - 0x0420)
class US43P03 final : public UPerk
{
public:
	float                                         _genChargesRemovedOnSkillCheck[0x3];               // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S43P03">();
	}
	static class US43P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<US43P03>();
	}
};
static_assert(alignof(US43P03) == 0x000008, "Wrong alignment on US43P03");
static_assert(sizeof(US43P03) == 0x000430, "Wrong size on US43P03");
static_assert(offsetof(US43P03, _genChargesRemovedOnSkillCheck) == 0x000420, "Member 'US43P03::_genChargesRemovedOnSkillCheck' has a wrong offset!");

}

