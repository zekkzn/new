#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS42

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "DBDGameplay_classes.hpp"
#include "TheS42_structs.hpp"
#include "Engine_classes.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DataTableUtilities_structs.hpp"


namespace SDK
{

// Class TheS42.S42HuskAnimInstance
// 0x0010 (0x0360 - 0x0350)
class US42HuskAnimInstance final : public UAnimInstance
{
public:
	ES42P01SurvivorHuskState                      _huskState;                                        // 0x0350(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isFemale;                                         // 0x0351(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_352[0xE];                                      // 0x0352(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42HuskAnimInstance">();
	}
	static class US42HuskAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42HuskAnimInstance>();
	}
};
static_assert(alignof(US42HuskAnimInstance) == 0x000010, "Wrong alignment on US42HuskAnimInstance");
static_assert(sizeof(US42HuskAnimInstance) == 0x000360, "Wrong size on US42HuskAnimInstance");
static_assert(offsetof(US42HuskAnimInstance, _huskState) == 0x000350, "Member 'US42HuskAnimInstance::_huskState' has a wrong offset!");
static_assert(offsetof(US42HuskAnimInstance, _isFemale) == 0x000351, "Member 'US42HuskAnimInstance::_isFemale' has a wrong offset!");

// Class TheS42.S42P01
// 0x0060 (0x0480 - 0x0420)
class US42P01 final : public UPerk
{
public:
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UInteractionDefinition>     _generatorHuskInteraction;                         // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _totemHuskInteraction;                             // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _chestHuskInteraction;                             // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _escapeDoorHuskInteraction;                        // 0x0440(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AS42P01SurvivorHusk>        _survivorHuskClass;                                // 0x0448(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _huskDuration[0x3];                                // 0x0450(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _generatorRepairPercentCondition;                  // 0x045C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AS42P01SurvivorHusk*                    _husk;                                             // 0x0460(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _generatorsRepairProgression;                      // 0x0468(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AGenerator>              _generatorBeingRepaired;                           // 0x046C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class US42P01HuskInteraction>  _huskInteraction;                                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnLevelReadyToPlay();
	void Authority_OnRepairProgressApplied(float IndividualChargeAmount, float TotalChargeAmount, class AActor* ChargeInstigator, bool WasCoop, float DeltaTime);
	void OnRep_Husk();

	float GetHuskDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01">();
	}
	static class US42P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01>();
	}
};
static_assert(alignof(US42P01) == 0x000008, "Wrong alignment on US42P01");
static_assert(sizeof(US42P01) == 0x000480, "Wrong size on US42P01");
static_assert(offsetof(US42P01, _generatorHuskInteraction) == 0x000428, "Member 'US42P01::_generatorHuskInteraction' has a wrong offset!");
static_assert(offsetof(US42P01, _totemHuskInteraction) == 0x000430, "Member 'US42P01::_totemHuskInteraction' has a wrong offset!");
static_assert(offsetof(US42P01, _chestHuskInteraction) == 0x000438, "Member 'US42P01::_chestHuskInteraction' has a wrong offset!");
static_assert(offsetof(US42P01, _escapeDoorHuskInteraction) == 0x000440, "Member 'US42P01::_escapeDoorHuskInteraction' has a wrong offset!");
static_assert(offsetof(US42P01, _survivorHuskClass) == 0x000448, "Member 'US42P01::_survivorHuskClass' has a wrong offset!");
static_assert(offsetof(US42P01, _huskDuration) == 0x000450, "Member 'US42P01::_huskDuration' has a wrong offset!");
static_assert(offsetof(US42P01, _generatorRepairPercentCondition) == 0x00045C, "Member 'US42P01::_generatorRepairPercentCondition' has a wrong offset!");
static_assert(offsetof(US42P01, _husk) == 0x000460, "Member 'US42P01::_husk' has a wrong offset!");
static_assert(offsetof(US42P01, _generatorsRepairProgression) == 0x000468, "Member 'US42P01::_generatorsRepairProgression' has a wrong offset!");
static_assert(offsetof(US42P01, _generatorBeingRepaired) == 0x00046C, "Member 'US42P01::_generatorBeingRepaired' has a wrong offset!");
static_assert(offsetof(US42P01, _huskInteraction) == 0x000478, "Member 'US42P01::_huskInteraction' has a wrong offset!");

// Class TheS42.S42P01HuskInteraction
// 0x0030 (0x07B0 - 0x0780)
class US42P01HuskInteraction : public UInteractionDefinition
{
public:
	uint8                                         Pad_778[0x1];                                      // 0x0778(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isIllusionActive;                                 // 0x0779(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_77A[0x36];                                     // 0x077A(0x0036)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01HuskInteraction">();
	}
	static class US42P01HuskInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01HuskInteraction>();
	}
};
static_assert(alignof(US42P01HuskInteraction) == 0x000010, "Wrong alignment on US42P01HuskInteraction");
static_assert(sizeof(US42P01HuskInteraction) == 0x0007B0, "Wrong size on US42P01HuskInteraction");
static_assert(offsetof(US42P01HuskInteraction, _isIllusionActive) == 0x000779, "Member 'US42P01HuskInteraction::_isIllusionActive' has a wrong offset!");

// Class TheS42.S42P01GeneratorHuskInteraction
// 0x0000 (0x07B0 - 0x07B0)
class US42P01GeneratorHuskInteraction final : public US42P01HuskInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01GeneratorHuskInteraction">();
	}
	static class US42P01GeneratorHuskInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01GeneratorHuskInteraction>();
	}
};
static_assert(alignof(US42P01GeneratorHuskInteraction) == 0x000010, "Wrong alignment on US42P01GeneratorHuskInteraction");
static_assert(sizeof(US42P01GeneratorHuskInteraction) == 0x0007B0, "Wrong size on US42P01GeneratorHuskInteraction");

// Class TheS42.S42P01TotemHuskInteraction
// 0x0000 (0x07B0 - 0x07B0)
class US42P01TotemHuskInteraction final : public US42P01HuskInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01TotemHuskInteraction">();
	}
	static class US42P01TotemHuskInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01TotemHuskInteraction>();
	}
};
static_assert(alignof(US42P01TotemHuskInteraction) == 0x000010, "Wrong alignment on US42P01TotemHuskInteraction");
static_assert(sizeof(US42P01TotemHuskInteraction) == 0x0007B0, "Wrong size on US42P01TotemHuskInteraction");

// Class TheS42.S42P01ChestHuskInteraction
// 0x0000 (0x07B0 - 0x07B0)
class US42P01ChestHuskInteraction final : public US42P01HuskInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01ChestHuskInteraction">();
	}
	static class US42P01ChestHuskInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01ChestHuskInteraction>();
	}
};
static_assert(alignof(US42P01ChestHuskInteraction) == 0x000010, "Wrong alignment on US42P01ChestHuskInteraction");
static_assert(sizeof(US42P01ChestHuskInteraction) == 0x0007B0, "Wrong size on US42P01ChestHuskInteraction");

// Class TheS42.S42P01EscapeDoorHuskInteraction
// 0x0000 (0x07B0 - 0x07B0)
class US42P01EscapeDoorHuskInteraction final : public US42P01HuskInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01EscapeDoorHuskInteraction">();
	}
	static class US42P01EscapeDoorHuskInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P01EscapeDoorHuskInteraction>();
	}
};
static_assert(alignof(US42P01EscapeDoorHuskInteraction) == 0x000010, "Wrong alignment on US42P01EscapeDoorHuskInteraction");
static_assert(sizeof(US42P01EscapeDoorHuskInteraction) == 0x0007B0, "Wrong size on US42P01EscapeDoorHuskInteraction");

// Class TheS42.S42P01SurvivorHusk
// 0x00D8 (0x03C0 - 0x02E8)
class AS42P01SurvivorHusk final : public ABaseHusk
{
public:
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _survivorRangeFromHusk;                            // 0x0300(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _killerRangeFromHusk;                              // 0x0304(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                      _capsuleComponent;                                 // 0x0308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseActorAttackableComponent*          _huskAttackableComponent;                          // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isDestroyed;                                      // 0x0318(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ACamperPlayer*>                    _overlappingSurvivors;                             // 0x0320(0x0050)(Transient, NativeAccessSpecifierPrivate)
	ES42P01SurvivorHuskState                      _animationState;                                   // 0x0370(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADBDPlayer*>                     _playersInRange;                                   // 0x0378(0x0010)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x0388(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_390[0x30];                                     // 0x0390(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnKillerInRangeChanged(const bool IsInRange);
	void Authority_OnSurvivorInRangeChanged(class AActor* Survivor, const bool IsInRange);
	void Cosmetic_HideIllusionEvent();
	void Cosmetic_OnHuskDestroyed();
	void Cosmetic_OnHuskSpawned();
	void Cosmetic_RevealIllusionEvent();
	void OnCapsuleBeginOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCapsuleEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRep_IsDestroyed();
	void OnRep_PlayersInRange(const TArray<class ADBDPlayer*>& PreviousPlayersInRange);

	bool IsAnySurvivorOverlapping() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P01SurvivorHusk">();
	}
	static class AS42P01SurvivorHusk* GetDefaultObj()
	{
		return GetDefaultObjImpl<AS42P01SurvivorHusk>();
	}
};
static_assert(alignof(AS42P01SurvivorHusk) == 0x000008, "Wrong alignment on AS42P01SurvivorHusk");
static_assert(sizeof(AS42P01SurvivorHusk) == 0x0003C0, "Wrong size on AS42P01SurvivorHusk");
static_assert(offsetof(AS42P01SurvivorHusk, _survivorRangeFromHusk) == 0x000300, "Member 'AS42P01SurvivorHusk::_survivorRangeFromHusk' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _killerRangeFromHusk) == 0x000304, "Member 'AS42P01SurvivorHusk::_killerRangeFromHusk' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _capsuleComponent) == 0x000308, "Member 'AS42P01SurvivorHusk::_capsuleComponent' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _huskAttackableComponent) == 0x000310, "Member 'AS42P01SurvivorHusk::_huskAttackableComponent' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _isDestroyed) == 0x000318, "Member 'AS42P01SurvivorHusk::_isDestroyed' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _overlappingSurvivors) == 0x000320, "Member 'AS42P01SurvivorHusk::_overlappingSurvivors' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _animationState) == 0x000370, "Member 'AS42P01SurvivorHusk::_animationState' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _playersInRange) == 0x000378, "Member 'AS42P01SurvivorHusk::_playersInRange' has a wrong offset!");
static_assert(offsetof(AS42P01SurvivorHusk, _outlineComponent) == 0x000388, "Member 'AS42P01SurvivorHusk::_outlineComponent' has a wrong offset!");

// Class TheS42.S42P02
// 0x0150 (0x0570 - 0x0420)
class US42P02 final : public UPerk
{
public:
	TSubclassOf<class US42P02Interaction>         _performanceInteraction;                           // 0x0420(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _performanceInteractionDuration;                   // 0x0428(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cooldownDuration[0x3];                            // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _diceAnimationDuration;                            // 0x0438(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _diceAnimationDelay;                               // 0x043C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _screamDuration;                                   // 0x0440(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _s42p02StatusEffectClass;                          // 0x0448(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _statusEffectRange;                                // 0x0450(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _basicSuccessProgress;                             // 0x0454(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _mediumSuccessProgress;                            // 0x0458(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _criticalSuccessProgress;                          // 0x045C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _diceMinValue;                                     // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _diceMaxValue;                                     // 0x0464(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _criticalFailThreshold;                            // 0x0468(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _basicSuccessThreshold;                            // 0x0490(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _mediumSuccessThreshold;                           // 0x04B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _criticalSuccessThreshold;                         // 0x04E0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class AS42P02TrackSelectionManager*           _trackSelectionManager;                            // 0x0508(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _diceRandomValue;                                  // 0x0510(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionAttacherComponent*          _interactionAttacherComponent;                     // 0x0518(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class US42P02Interaction*                     _interaction;                                      // 0x0520(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBaseLingeringStatusEffect*>     _spawnedStatusEffects;                             // 0x0528(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _S42P02ChargeableComponent;                        // 0x0538(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_540[0x30];                                     // 0x0540(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnInteractionDone();
	void Authority_OnInteractionStarted();
	void Authority_OnLevelReadyToPlay();
	void Cosmetic_S42P02PerkLoadedInGame(const TArray<class ADBDPlayer*>& Order);
	void Multicast_OnPlayerScreaming(class ADBDPlayer* Player);
	void OnInteractionEntered(class ADBDPlayer* Player);
	void OnRep_DiceRandomValue();
	void OnRep_InteractionAttacherComponent();
	void OnRep_TrackSelectionManager();

	float GetCooldownDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P02">();
	}
	static class US42P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P02>();
	}
};
static_assert(alignof(US42P02) == 0x000008, "Wrong alignment on US42P02");
static_assert(sizeof(US42P02) == 0x000570, "Wrong size on US42P02");
static_assert(offsetof(US42P02, _performanceInteraction) == 0x000420, "Member 'US42P02::_performanceInteraction' has a wrong offset!");
static_assert(offsetof(US42P02, _performanceInteractionDuration) == 0x000428, "Member 'US42P02::_performanceInteractionDuration' has a wrong offset!");
static_assert(offsetof(US42P02, _cooldownDuration) == 0x00042C, "Member 'US42P02::_cooldownDuration' has a wrong offset!");
static_assert(offsetof(US42P02, _diceAnimationDuration) == 0x000438, "Member 'US42P02::_diceAnimationDuration' has a wrong offset!");
static_assert(offsetof(US42P02, _diceAnimationDelay) == 0x00043C, "Member 'US42P02::_diceAnimationDelay' has a wrong offset!");
static_assert(offsetof(US42P02, _screamDuration) == 0x000440, "Member 'US42P02::_screamDuration' has a wrong offset!");
static_assert(offsetof(US42P02, _s42p02StatusEffectClass) == 0x000448, "Member 'US42P02::_s42p02StatusEffectClass' has a wrong offset!");
static_assert(offsetof(US42P02, _statusEffectRange) == 0x000450, "Member 'US42P02::_statusEffectRange' has a wrong offset!");
static_assert(offsetof(US42P02, _basicSuccessProgress) == 0x000454, "Member 'US42P02::_basicSuccessProgress' has a wrong offset!");
static_assert(offsetof(US42P02, _mediumSuccessProgress) == 0x000458, "Member 'US42P02::_mediumSuccessProgress' has a wrong offset!");
static_assert(offsetof(US42P02, _criticalSuccessProgress) == 0x00045C, "Member 'US42P02::_criticalSuccessProgress' has a wrong offset!");
static_assert(offsetof(US42P02, _diceMinValue) == 0x000460, "Member 'US42P02::_diceMinValue' has a wrong offset!");
static_assert(offsetof(US42P02, _diceMaxValue) == 0x000464, "Member 'US42P02::_diceMaxValue' has a wrong offset!");
static_assert(offsetof(US42P02, _criticalFailThreshold) == 0x000468, "Member 'US42P02::_criticalFailThreshold' has a wrong offset!");
static_assert(offsetof(US42P02, _basicSuccessThreshold) == 0x000490, "Member 'US42P02::_basicSuccessThreshold' has a wrong offset!");
static_assert(offsetof(US42P02, _mediumSuccessThreshold) == 0x0004B8, "Member 'US42P02::_mediumSuccessThreshold' has a wrong offset!");
static_assert(offsetof(US42P02, _criticalSuccessThreshold) == 0x0004E0, "Member 'US42P02::_criticalSuccessThreshold' has a wrong offset!");
static_assert(offsetof(US42P02, _trackSelectionManager) == 0x000508, "Member 'US42P02::_trackSelectionManager' has a wrong offset!");
static_assert(offsetof(US42P02, _diceRandomValue) == 0x000510, "Member 'US42P02::_diceRandomValue' has a wrong offset!");
static_assert(offsetof(US42P02, _interactionAttacherComponent) == 0x000518, "Member 'US42P02::_interactionAttacherComponent' has a wrong offset!");
static_assert(offsetof(US42P02, _interaction) == 0x000520, "Member 'US42P02::_interaction' has a wrong offset!");
static_assert(offsetof(US42P02, _spawnedStatusEffects) == 0x000528, "Member 'US42P02::_spawnedStatusEffects' has a wrong offset!");
static_assert(offsetof(US42P02, _S42P02ChargeableComponent) == 0x000538, "Member 'US42P02::_S42P02ChargeableComponent' has a wrong offset!");

// Class TheS42.S42P02Interaction
// 0x00C0 (0x0980 - 0x08C0)
class US42P02Interaction final : public UChargeableInteractionDefinition
{
public:
	uint8                                         Pad_8C0[0x18];                                     // 0x08C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _revealAuraStatusEffectClass;                      // 0x08D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _criticalFailThreshold;                            // 0x08E0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         _uiDelayDuration;                                  // 0x0908(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationMontageDescriptor            _performanceMontageDescriptor;                     // 0x0910(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AS42P02InteractionInstrument> _instrumentClass;                                  // 0x0930(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _socketNameToAttachTo;                             // 0x0938(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _postInteractionPropLifeTime;                      // 0x0944(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AS42P02InteractionInstrument*           _instrument;                                       // 0x0948(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _revealAuraStatusEffect;                           // 0x0950(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_958[0x4];                                      // 0x0958(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _diceValue;                                        // 0x095C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_960[0x20];                                     // 0x0960(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnAnimationStarted(class ADBDPlayer* Player);
	void Cosmetic_StopSound(class ADBDPlayer* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P02Interaction">();
	}
	static class US42P02Interaction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P02Interaction>();
	}
};
static_assert(alignof(US42P02Interaction) == 0x000010, "Wrong alignment on US42P02Interaction");
static_assert(sizeof(US42P02Interaction) == 0x000980, "Wrong size on US42P02Interaction");
static_assert(offsetof(US42P02Interaction, _revealAuraStatusEffectClass) == 0x0008D8, "Member 'US42P02Interaction::_revealAuraStatusEffectClass' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _criticalFailThreshold) == 0x0008E0, "Member 'US42P02Interaction::_criticalFailThreshold' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _uiDelayDuration) == 0x000908, "Member 'US42P02Interaction::_uiDelayDuration' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _performanceMontageDescriptor) == 0x000910, "Member 'US42P02Interaction::_performanceMontageDescriptor' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _instrumentClass) == 0x000930, "Member 'US42P02Interaction::_instrumentClass' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _socketNameToAttachTo) == 0x000938, "Member 'US42P02Interaction::_socketNameToAttachTo' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _postInteractionPropLifeTime) == 0x000944, "Member 'US42P02Interaction::_postInteractionPropLifeTime' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _instrument) == 0x000948, "Member 'US42P02Interaction::_instrument' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _revealAuraStatusEffect) == 0x000950, "Member 'US42P02Interaction::_revealAuraStatusEffect' has a wrong offset!");
static_assert(offsetof(US42P02Interaction, _diceValue) == 0x00095C, "Member 'US42P02Interaction::_diceValue' has a wrong offset!");

// Class TheS42.S42P02InteractionInstrument
// 0x0000 (0x02A0 - 0x02A0)
class AS42P02InteractionInstrument final : public AActor
{
public:
	void Cosmetic_OnHideEvent(const bool IsInteractionCompleted);
	void Cosmetic_OnShowEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P02InteractionInstrument">();
	}
	static class AS42P02InteractionInstrument* GetDefaultObj()
	{
		return GetDefaultObjImpl<AS42P02InteractionInstrument>();
	}
};
static_assert(alignof(AS42P02InteractionInstrument) == 0x000008, "Wrong alignment on AS42P02InteractionInstrument");
static_assert(sizeof(AS42P02InteractionInstrument) == 0x0002A0, "Wrong size on AS42P02InteractionInstrument");

// Class TheS42.S42P02TrackSelectionManager
// 0x0010 (0x02B0 - 0x02A0)
class AS42P02TrackSelectionManager final : public AActor
{
public:
	TArray<class ADBDPlayer*>                     _equippedSurvivorsOrder;                           // 0x02A0(0x0010)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P02TrackSelectionManager">();
	}
	static class AS42P02TrackSelectionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<AS42P02TrackSelectionManager>();
	}
};
static_assert(alignof(AS42P02TrackSelectionManager) == 0x000008, "Wrong alignment on AS42P02TrackSelectionManager");
static_assert(sizeof(AS42P02TrackSelectionManager) == 0x0002B0, "Wrong size on AS42P02TrackSelectionManager");
static_assert(offsetof(AS42P02TrackSelectionManager, _equippedSurvivorsOrder) == 0x0002A0, "Member 'AS42P02TrackSelectionManager::_equippedSurvivorsOrder' has a wrong offset!");

// Class TheS42.S42P03
// 0x0020 (0x0440 - 0x0420)
class US42P03 final : public UPerk
{
public:
	float                                         _requiredTimeToRemainStillBeforeActivation[0x3];   // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _revealRange;                                      // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _revealEffect;                                     // 0x0430(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                              _stillnessStartTime;                               // 0x0438(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnHealthStateChanged(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);
	void OnIntroComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S42P03">();
	}
	static class US42P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<US42P03>();
	}
};
static_assert(alignof(US42P03) == 0x000008, "Wrong alignment on US42P03");
static_assert(sizeof(US42P03) == 0x000440, "Wrong size on US42P03");
static_assert(offsetof(US42P03, _requiredTimeToRemainStillBeforeActivation) == 0x000420, "Member 'US42P03::_requiredTimeToRemainStillBeforeActivation' has a wrong offset!");
static_assert(offsetof(US42P03, _revealRange) == 0x00042C, "Member 'US42P03::_revealRange' has a wrong offset!");
static_assert(offsetof(US42P03, _revealEffect) == 0x000430, "Member 'US42P03::_revealEffect' has a wrong offset!");
static_assert(offsetof(US42P03, _stillnessStartTime) == 0x000438, "Member 'US42P03::_stillnessStartTime' has a wrong offset!");

}

