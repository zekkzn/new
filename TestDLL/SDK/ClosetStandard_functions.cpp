#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClosetStandard

#include "Basic.hpp"

#include "ClosetStandard_classes.hpp"
#include "ClosetStandard_parameters.hpp"


namespace SDK
{

// Function ClosetStandard.ClosetStandard_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AClosetStandard_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClosetStandard.ClosetStandard_C.StopMinNearOutlineDistLerp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AClosetStandard_C::StopMinNearOutlineDistLerp(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "StopMinNearOutlineDistLerp");

	Params::ClosetStandard_C_StopMinNearOutlineDistLerp Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClosetStandard.ClosetStandard_C.StartMinNearOutlineDistLerp
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AClosetStandard_C::StartMinNearOutlineDistLerp(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "StartMinNearOutlineDistLerp");

	Params::ClosetStandard_C_StartMinNearOutlineDistLerp Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClosetStandard.ClosetStandard_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AClosetStandard_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "ReceiveEndPlay");

	Params::ClosetStandard_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClosetStandard.ClosetStandard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AClosetStandard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClosetStandard.ClosetStandard_C.OnPlayerInLockerChangedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       PlayerWhoWasInLocker                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       PlayerNowInLocker                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AClosetStandard_C::OnPlayerInLockerChangedEvent(class ADBDPlayer* PlayerWhoWasInLocker, class ADBDPlayer* PlayerNowInLocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "OnPlayerInLockerChangedEvent");

	Params::ClosetStandard_C_OnPlayerInLockerChangedEvent Parms{};

	Parms.PlayerWhoWasInLocker = PlayerWhoWasInLocker;
	Parms.PlayerNowInLocker = PlayerNowInLocker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClosetStandard.ClosetStandard_C.LerpIntersectunitOnPlayer__UpdateFunc
// (BlueprintEvent)

void AClosetStandard_C::LerpIntersectunitOnPlayer__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "LerpIntersectunitOnPlayer__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClosetStandard.ClosetStandard_C.LerpIntersectunitOnPlayer__FinishedFunc
// (BlueprintEvent)

void AClosetStandard_C::LerpIntersectunitOnPlayer__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "LerpIntersectunitOnPlayer__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClosetStandard.ClosetStandard_C.GetExposerInteriorZone
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UExposerInteriorZoneComponent*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UExposerInteriorZoneComponent* AClosetStandard_C::GetExposerInteriorZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "GetExposerInteriorZone");

	Params::ClosetStandard_C_GetExposerInteriorZone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ClosetStandard.ClosetStandard_C.ExecuteUbergraph_ClosetStandard
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AClosetStandard_C::ExecuteUbergraph_ClosetStandard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "ExecuteUbergraph_ClosetStandard");

	Params::ClosetStandard_C_ExecuteUbergraph_ClosetStandard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClosetStandard.ClosetStandard_C.EjectSurvivor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AClosetStandard_C::EjectSurvivor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "EjectSurvivor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClosetStandard.ClosetStandard_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Interactor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AClosetStandard_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "IsInterruptionPossible");

	Params::ClosetStandard_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Interactor = Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ClosetStandard.ClosetStandard_C.GetStunZone
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UPrimitiveComponent* AClosetStandard_C::GetStunZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "GetStunZone");

	Params::ClosetStandard_C_GetStunZone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ClosetStandard.ClosetStandard_C.GetInfectedParticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UParticleSystemComponent*> InfectedParticleArray                                  (Parm, OutParm, ContainsInstancedReference)

void AClosetStandard_C::GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "GetInfectedParticles");

	Params::ClosetStandard_C_GetInfectedParticles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedParticleArray != nullptr)
		*InfectedParticleArray = std::move(Parms.InfectedParticleArray);
}


// Function ClosetStandard.ClosetStandard_C.GetInfectedDecals
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UDecalComponent*>          InfectedDecals                                         (Parm, OutParm, ContainsInstancedReference)

void AClosetStandard_C::GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "GetInfectedDecals");

	Params::ClosetStandard_C_GetInfectedDecals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedDecals != nullptr)
		*InfectedDecals = std::move(Parms.InfectedDecals);
}


// Function ClosetStandard.ClosetStandard_C.GetFocalPointPosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AClosetStandard_C::GetFocalPointPosition(const class ADBDPlayer* Player, const class UInteractionDefinition* Definition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClosetStandard_C", "GetFocalPointPosition");

	Params::ClosetStandard_C_GetFocalPointPosition Parms{};

	Parms.Player = Player;
	Parms.Definition = Definition;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

