#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Three60Interruption

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function 360Interruption.360Interruption_C.IsInterruptionPossible
// 0x00B8 (0x00B8 - 0x0000)
struct Three60Interruption_C_IsInterruptionPossible final
{
public:
	const class ADBDPlayer*                       Interruptor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ADBDPlayer*                       Interruptee;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Dot_Product_Threshold;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInterruptionPossible_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Less_FloatFloat_B_ImplicitCast;           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Less_FloatFloat_A_ImplicitCast;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Three60Interruption_C_IsInterruptionPossible) == 0x000008, "Wrong alignment on Three60Interruption_C_IsInterruptionPossible");
static_assert(sizeof(Three60Interruption_C_IsInterruptionPossible) == 0x0000B8, "Wrong size on Three60Interruption_C_IsInterruptionPossible");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, Interruptor) == 0x000000, "Member 'Three60Interruption_C_IsInterruptionPossible::Interruptor' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, Interruptee) == 0x000008, "Member 'Three60Interruption_C_IsInterruptionPossible::Interruptee' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, ReturnValue) == 0x000010, "Member 'Three60Interruption_C_IsInterruptionPossible::ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, Dot_Product_Threshold) == 0x000018, "Member 'Three60Interruption_C_IsInterruptionPossible::Dot_Product_Threshold' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_IsInterruptionPossible_ReturnValue) == 0x000050, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_IsInterruptionPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A0, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A8, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Less_FloatFloat_B_ImplicitCast) == 0x0000AC, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Less_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_IsInterruptionPossible, CallFunc_Less_FloatFloat_A_ImplicitCast) == 0x0000B0, "Member 'Three60Interruption_C_IsInterruptionPossible::CallFunc_Less_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function 360Interruption.360Interruption_C.GetInterruptionSnapPointRotationForInterruptor
// 0x0070 (0x0070 - 0x0000)
struct Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor final
{
public:
	const class ADBDPlayer*                       Interruptor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ADBDPlayer*                       Interruptee;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetFeetPosition_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFeetPosition_ReturnValue_1;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor) == 0x000008, "Wrong alignment on Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor");
static_assert(sizeof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor) == 0x000070, "Wrong size on Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, Interruptor) == 0x000000, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::Interruptor' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, Interruptee) == 0x000008, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::Interruptee' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, ReturnValue) == 0x000010, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, CallFunc_GetFeetPosition_ReturnValue) == 0x000028, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::CallFunc_GetFeetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, CallFunc_GetFeetPosition_ReturnValue_1) == 0x000040, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::CallFunc_GetFeetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor, CallFunc_FindLookAtRotation_ReturnValue) == 0x000058, "Member 'Three60Interruption_C_GetInterruptionSnapPointRotationForInterruptor::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");

// Function 360Interruption.360Interruption_C.GetInterruptionSnapPointPositionForInterruptor
// 0x0078 (0x0078 - 0x0000)
struct Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor final
{
public:
	const class ADBDPlayer*                       Interruptor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ADBDPlayer*                       Interruptee;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFeetPosition_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFeetPosition_ReturnValue_1;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnOrbit_ReturnValue;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnOrbit_distance_ImplicitCast; // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor) == 0x000008, "Wrong alignment on Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor");
static_assert(sizeof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor) == 0x000078, "Wrong size on Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, Interruptor) == 0x000000, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::Interruptor' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, Interruptee) == 0x000008, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::Interruptee' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, ReturnValue) == 0x000010, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, CallFunc_GetFeetPosition_ReturnValue) == 0x000028, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::CallFunc_GetFeetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, CallFunc_GetFeetPosition_ReturnValue_1) == 0x000040, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::CallFunc_GetFeetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, CallFunc_GetClosestPointOnOrbit_ReturnValue) == 0x000058, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::CallFunc_GetClosestPointOnOrbit_ReturnValue' has a wrong offset!");
static_assert(offsetof(Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor, CallFunc_GetClosestPointOnOrbit_distance_ImplicitCast) == 0x000070, "Member 'Three60Interruption_C_GetInterruptionSnapPointPositionForInterruptor::CallFunc_GetClosestPointOnOrbit_distance_ImplicitCast' has a wrong offset!");

}

