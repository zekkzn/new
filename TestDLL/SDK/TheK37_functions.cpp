#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK37

#include "Basic.hpp"

#include "TheK37_classes.hpp"
#include "TheK37_parameters.hpp"


namespace SDK
{

// Function TheK37.K37WolfAbility.OnAttackSubstateChanged
// (Final, Native, Private)
// Parameters:
// EAttackSubstate                         Substate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37WolfAbility::OnAttackSubstateChanged(EAttackSubstate Substate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37WolfAbility", "OnAttackSubstateChanged");

	Params::K37WolfAbility_OnAttackSubstateChanged Parms{};

	Parms.Substate = Substate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37WolfAbility.OnRep_WolfBiteAttack
// (Final, Native, Private)

void UK37WolfAbility::OnRep_WolfBiteAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37WolfAbility", "OnRep_WolfBiteAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.FlamePillarExitGateMinigame.Authority_SpawnFlamePillarAtLocation
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFlamePillarExitGateMinigame::Authority_SpawnFlamePillarAtLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlamePillarExitGateMinigame", "Authority_SpawnFlamePillarAtLocation");

	Params::FlamePillarExitGateMinigame_Authority_SpawnFlamePillarAtLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.FlamePillarExitGateMinigame.Authority_StartMinigame
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFlamePillarExitGateMinigame::Authority_StartMinigame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlamePillarExitGateMinigame", "Authority_StartMinigame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.FlamePillarExitGateMinigame.GetExitArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBoxComponent*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBoxComponent* AFlamePillarExitGateMinigame::GetExitArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlamePillarExitGateMinigame", "GetExitArea");

	Params::FlamePillarExitGateMinigame_GetExitArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.IsPlayerOpeningAlreadyOpenedChest.OnRep_IsInteractionWithChestThatHasBeenOpened
// (Final, Native, Private)

void UIsPlayerOpeningAlreadyOpenedChest::OnRep_IsInteractionWithChestThatHasBeenOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IsPlayerOpeningAlreadyOpenedChest", "OnRep_IsInteractionWithChestThatHasBeenOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37BatAbility.Cosmetic_OnTeleportFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37BatAbility::Cosmetic_OnTeleportFinished(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "Cosmetic_OnTeleportFinished");

	Params::K37BatAbility_Cosmetic_OnTeleportFinished Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37BatAbility.Cosmetic_OnTeleportProgressChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ProgressPercentage                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37BatAbility::Cosmetic_OnTeleportProgressChanged(const float ProgressPercentage, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "Cosmetic_OnTeleportProgressChanged");

	Params::K37BatAbility_Cosmetic_OnTeleportProgressChanged Parms{};

	Parms.ProgressPercentage = ProgressPercentage;
	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37BatAbility.Cosmetic_OnTeleportStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37BatAbility::Cosmetic_OnTeleportStarted(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "Cosmetic_OnTeleportStarted");

	Params::K37BatAbility_Cosmetic_OnTeleportStarted Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37BatAbility.OnLevelReadyToPlay
// (Final, Native, Private)

void UK37BatAbility::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37BatAbility.OnRep_TeleportTargets
// (Final, Native, Private)

void UK37BatAbility::OnRep_TeleportTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "OnRep_TeleportTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37BatAbility.GetMaxRangeForTeleport
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37BatAbility::GetMaxRangeForTeleport() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37BatAbility", "GetMaxRangeForTeleport");

	Params::K37BatAbility_GetMaxRangeForTeleport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37ChargeChainedPounceAttackInteraction.OnRep_ReplicatedChargeableComponent
// (Final, Native, Private)

void UK37ChargeChainedPounceAttackInteraction::OnRep_ReplicatedChargeableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ChargeChainedPounceAttackInteraction", "OnRep_ReplicatedChargeableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_Despawn
// (Final, Native, Private)

void AK37FlamePillar::Authority_Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_Despawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_OnOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK37FlamePillar::Authority_OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_OnOverlap");

	Params::K37FlamePillar_Authority_OnOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_SetCurrentState
// (Final, Native, Private)
// Parameters:
// EK37FlamePillarState                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37FlamePillar::Authority_SetCurrentState(EK37FlamePillarState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_SetCurrentState");

	Params::K37FlamePillar_Authority_SetCurrentState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_StartErupting
// (Final, Native, Private)

void AK37FlamePillar::Authority_StartErupting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_StartErupting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_StartSpawning
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FTransform                       SpawnTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK37FlamePillarData*              FlamePillarData                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37FlamePillar::Authority_StartSpawning(const struct FTransform& SpawnTransform, class UK37FlamePillarData* FlamePillarData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_StartSpawning");

	Params::K37FlamePillar_Authority_StartSpawning Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.FlamePillarData = FlamePillarData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Authority_StartVanishing
// (Final, Native, Private)

void AK37FlamePillar::Authority_StartVanishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Authority_StartVanishing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.Cosmetic_OnDespawned
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK37FlamePillar::Cosmetic_OnDespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Cosmetic_OnDespawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37FlamePillar.Cosmetic_OnFlamePillarHit
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37FlamePillar::Cosmetic_OnFlamePillarHit(class ACamperPlayer* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Cosmetic_OnFlamePillarHit");

	Params::K37FlamePillar_Cosmetic_OnFlamePillarHit Parms{};

	Parms.Survivor = Survivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37FlamePillar.Cosmetic_OnStartErupting
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK37FlamePillar::Cosmetic_OnStartErupting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Cosmetic_OnStartErupting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37FlamePillar.Cosmetic_OnStartSpawning
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK37FlamePillar::Cosmetic_OnStartSpawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Cosmetic_OnStartSpawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37FlamePillar.Cosmetic_OnStartVanishing
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK37FlamePillar::Cosmetic_OnStartVanishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Cosmetic_OnStartVanishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37FlamePillar.GetDurationForFlamePillarState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EK37FlamePillarState                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK37FlamePillar::GetDurationForFlamePillarState(EK37FlamePillarState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "GetDurationForFlamePillarState");

	Params::K37FlamePillar_GetDurationForFlamePillarState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37FlamePillar.Multicast_HitSurvivor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ACamperPlayer*                    Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37FlamePillar::Multicast_HitSurvivor(class ACamperPlayer* Survivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "Multicast_HitSurvivor");

	Params::K37FlamePillar_Multicast_HitSurvivor Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.OnRep_CurrentState
// (Final, Native, Private)

void AK37FlamePillar::OnRep_CurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "OnRep_CurrentState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37FlamePillar.GetPillarHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK37FlamePillar::GetPillarHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "GetPillarHeight");

	Params::K37FlamePillar_GetPillarHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37FlamePillar.GetPillarRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK37FlamePillar::GetPillarRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "GetPillarRadius");

	Params::K37FlamePillar_GetPillarRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37FlamePillar.GetPillarSpawnHitResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHitResult AK37FlamePillar::GetPillarSpawnHitResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37FlamePillar", "GetPillarSpawnHitResult");

	Params::K37FlamePillar_GetPillarSpawnHitResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P01.Authority_OnObsessionChanged
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    NewObsession                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACamperPlayer*                    PreviousObsession                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P01::Authority_OnObsessionChanged(class ACamperPlayer* NewObsession, class ACamperPlayer* PreviousObsession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P01", "Authority_OnObsessionChanged");

	Params::K37P01_Authority_OnObsessionChanged Parms{};

	Parms.NewObsession = NewObsession;
	Parms.PreviousObsession = PreviousObsession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P01.OnRep_CurrentAffectedObsession
// (Final, Native, Private)

void UK37P01::OnRep_CurrentAffectedObsession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P01", "OnRep_CurrentAffectedObsession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P01.GetHexTotemAuraRevealRangeAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P01::GetHexTotemAuraRevealRangeAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P01", "GetHexTotemAuraRevealRangeAtLevel");

	Params::K37P01_GetHexTotemAuraRevealRangeAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P01.GetRepairSpeedPenaltyValueAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P01::GetRepairSpeedPenaltyValueAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P01", "GetRepairSpeedPenaltyValueAtLevel");

	Params::K37P01_GetRepairSpeedPenaltyValueAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P02.Authority_OnChestIsOpenedChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsOpened                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASearchable*                      Chest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P02::Authority_OnChestIsOpenedChanged(bool IsOpened, class ASearchable* Chest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "Authority_OnChestIsOpenedChanged");

	Params::K37P02_Authority_OnChestIsOpenedChanged Parms{};

	Parms.IsOpened = IsOpened;
	Parms.Chest = Chest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P02.Authority_OnCloseChestInteractionFinished
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HasInteractionStarted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P02::Authority_OnCloseChestInteractionFinished(class ADBDPlayer* Player, bool HasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "Authority_OnCloseChestInteractionFinished");

	Params::K37P02_Authority_OnCloseChestInteractionFinished Parms{};

	Parms.Player = Player;
	Parms.HasInteractionStarted = HasInteractionStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P02.Authority_OnCooldownTimerDone
// (Final, Native, Private)

void UK37P02::Authority_OnCooldownTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "Authority_OnCooldownTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P02.Authority_PlayerInRangeFromChestChanged
// (Final, Native, Private)
// Parameters:
// class AActor*                           Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInRange                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASearchable*                      Chest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P02::Authority_PlayerInRangeFromChestChanged(class AActor* Player, const bool IsInRange, class ASearchable* Chest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "Authority_PlayerInRangeFromChestChanged");

	Params::K37P02_Authority_PlayerInRangeFromChestChanged Parms{};

	Parms.Player = Player;
	Parms.IsInRange = IsInRange;
	Parms.Chest = Chest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P02.GetChestAuraRevealDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P02::GetChestAuraRevealDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "GetChestAuraRevealDuration");

	Params::K37P02_GetChestAuraRevealDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P02.GetChestAuraRevealRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P02::GetChestAuraRevealRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "GetChestAuraRevealRange");

	Params::K37P02_GetChestAuraRevealRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P02.GetCooldownDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P02::GetCooldownDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P02", "GetCooldownDurationAtLevel");

	Params::K37P02_GetCooldownDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37P03.Authority_OnInteractableBlockChanged
// (Final, Native, Private)
// Parameters:
// class AInteractable*                    Interactable                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P03::Authority_OnInteractableBlockChanged(class AInteractable* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P03", "Authority_OnInteractableBlockChanged");

	Params::K37P03_Authority_OnInteractableBlockChanged Parms{};

	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P03.Authority_OnInteractorLockChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsLocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AInteractable*                    Interactable                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P03::Authority_OnInteractorLockChanged(bool IsLocked, class ADBDPlayer* Player, class AInteractable* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P03", "Authority_OnInteractorLockChanged");

	Params::K37P03_Authority_OnInteractorLockChanged Parms{};

	Parms.IsLocked = IsLocked;
	Parms.Player = Player;
	Parms.Interactable = Interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P03.Authority_OnMontageEnded
// (Final, Native, Private)
// Parameters:
// struct FAnimationMontageDescriptor      Montage                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    Interrupted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P03::Authority_OnMontageEnded(const struct FAnimationMontageDescriptor& Montage, bool Interrupted, class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P03", "Authority_OnMontageEnded");

	Params::K37P03_Authority_OnMontageEnded Parms{};

	Parms.Montage = std::move(Montage);
	Parms.Interrupted = Interrupted;
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P03.Multicast_OnPlayerReacting
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37P03::Multicast_OnPlayerReacting(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P03", "Multicast_OnPlayerReacting");

	Params::K37P03_Multicast_OnPlayerReacting Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37P03.GetBlockDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK37P03::GetBlockDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37P03", "GetBlockDuration");

	Params::K37P03_GetBlockDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37PowerAddon17.Authority_SpawnARandomFlamePillar
// (Final, Native, Private)

void UK37PowerAddon17::Authority_SpawnARandomFlamePillar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37PowerAddon17", "Authority_SpawnARandomFlamePillar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37PowerAddon17.Authority_StopSpawningFlamePillars
// (Final, Native, Private)

void UK37PowerAddon17::Authority_StopSpawningFlamePillars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37PowerAddon17", "Authority_StopSpawningFlamePillars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37ScentTrailParticle.Cosmetic_OnScentTrailParticleCollected
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK37ScentTrailParticle::Cosmetic_OnScentTrailParticleCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "Cosmetic_OnScentTrailParticleCollected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37ScentTrailParticle.Cosmetic_OnScentTrailParticleLifetimeEnded
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK37ScentTrailParticle::Cosmetic_OnScentTrailParticleLifetimeEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "Cosmetic_OnScentTrailParticleLifetimeEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37ScentTrailParticle.Cosmetic_OnScentTrailParticleSpawned
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK37ScentTrailParticle::Cosmetic_OnScentTrailParticleSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "Cosmetic_OnScentTrailParticleSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK37.K37ScentTrailParticle.Cosmetic_OnVisibilityChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37ScentTrailParticle::Cosmetic_OnVisibilityChanged(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "Cosmetic_OnVisibilityChanged");

	Params::K37ScentTrailParticle_Cosmetic_OnVisibilityChanged Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37ScentTrailParticle.Cosmetic_UpdateScentTrailParticleLifetimeState
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   RemainingTimerPercent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37ScentTrailParticle::Cosmetic_UpdateScentTrailParticleLifetimeState(float RemainingTimerPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "Cosmetic_UpdateScentTrailParticleLifetimeState");

	Params::K37ScentTrailParticle_Cosmetic_UpdateScentTrailParticleLifetimeState Parms{};

	Parms.RemainingTimerPercent = RemainingTimerPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK37.K37ScentTrailParticle.GetScentTrailAngle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK37ScentTrailParticle::GetScentTrailAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "GetScentTrailAngle");

	Params::K37ScentTrailParticle_GetScentTrailAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37ScentTrailParticle.OnRep_LifetimeTimer
// (Final, Native, Private)

void AK37ScentTrailParticle::OnRep_LifetimeTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "OnRep_LifetimeTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37ScentTrailParticle.OnRep_SpawningData
// (Final, Native, Private)

void AK37ScentTrailParticle::OnRep_SpawningData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "OnRep_SpawningData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37ScentTrailParticle.OnScentParticleCollisionZoneOverlapped
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AK37ScentTrailParticle::OnScentParticleCollisionZoneOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "OnScentParticleCollisionZoneOverlapped");

	Params::K37ScentTrailParticle_OnScentParticleCollisionZoneOverlapped Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37ScentTrailParticle.OnScentTrailParticleAcquiredChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsAcquired                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK37ScentTrailParticle::OnScentTrailParticleAcquiredChanged(const bool IsAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37ScentTrailParticle", "OnScentTrailParticleAcquiredChanged");

	Params::K37ScentTrailParticle_OnScentTrailParticleAcquiredChanged Parms{};

	Parms.IsAcquired = IsAcquired;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37SurvivorScentTrailParticleSpawner.Authority_OnIsRunningAndMovingChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsRunningAndMoving                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37SurvivorScentTrailParticleSpawner::Authority_OnIsRunningAndMovingChanged(const bool IsRunningAndMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37SurvivorScentTrailParticleSpawner", "Authority_OnIsRunningAndMovingChanged");

	Params::K37SurvivorScentTrailParticleSpawner_Authority_OnIsRunningAndMovingChanged Parms{};

	Parms.IsRunningAndMoving = IsRunningAndMoving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37SurvivorScentTrailParticleSpawner.OnRep_ScentParticleSpawnTimerRemainingTime
// (Final, Native, Private, Const)

void UK37SurvivorScentTrailParticleSpawner::OnRep_ScentParticleSpawnTimerRemainingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37SurvivorScentTrailParticleSpawner", "OnRep_ScentParticleSpawnTimerRemainingTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37TeleportInteraction.Server_SetTeleportTarget
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UTargetableComponent*             Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK37TeleportInteraction::Server_SetTeleportTarget(class UTargetableComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37TeleportInteraction", "Server_SetTeleportTarget");

	Params::K37TeleportInteraction_Server_SetTeleportTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37VampireAbility.Authority_StartCastingFlamePillars
// (Final, Native, Public)

void UK37VampireAbility::Authority_StartCastingFlamePillars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37VampireAbility", "Authority_StartCastingFlamePillars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37VampireAbility.Authority_TrySpawningNextFlamePillar
// (Final, Native, Protected)

void UK37VampireAbility::Authority_TrySpawningNextFlamePillar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37VampireAbility", "Authority_TrySpawningNextFlamePillar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK37.K37VampireAbility.Authority_TrySpawnFlamePillarNearLocation
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK37FlamePillarData*              FlamePillarData                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK37FlamePillar*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK37FlamePillar* UK37VampireAbility::Authority_TrySpawnFlamePillarNearLocation(const struct FVector& Location, class UK37FlamePillarData* FlamePillarData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37VampireAbility", "Authority_TrySpawnFlamePillarNearLocation");

	Params::K37VampireAbility_Authority_TrySpawnFlamePillarNearLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.FlamePillarData = FlamePillarData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK37.K37VampireAbility.OnRep_ChargeableComponent
// (Final, Native, Private, Const)

void UK37VampireAbility::OnRep_ChargeableComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K37VampireAbility", "OnRep_ChargeableComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

