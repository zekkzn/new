#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmallMeatLocker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.UseEnergyToolbox
// 0x0060 (0x0060 - 0x0000)
struct BP_SmallMeatLocker_C_UseEnergyToolbox final
{
public:
	class UChargeableInteractionDefinition*       Definition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Initial_Charge;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterInventoryComponent*           CallFunc_GetCharacterInventoryComponent_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChargeAmountForTime_ReturnValue;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACollectable*                           CallFunc_GetItem_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IToolBoxInterface>     K2Node_DynamicCast_AsTool_Box_Interface;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChargerComponent*                      CallFunc_GetChargerComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChargeAmountForTime_deltaSeconds_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_UseEnergyToolbox) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_UseEnergyToolbox");
static_assert(sizeof(BP_SmallMeatLocker_C_UseEnergyToolbox) == 0x000060, "Wrong size on BP_SmallMeatLocker_C_UseEnergyToolbox");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, Definition) == 0x000000, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::Definition' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, Player) == 0x000008, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, Initial_Charge) == 0x000010, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::Initial_Charge' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_GetCharacterInventoryComponent_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_GetCharacterInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_GetChargeAmountForTime_ReturnValue) == 0x000020, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_GetChargeAmountForTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_GetItem_ReturnValue) == 0x000028, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_DoesImplementInterface_ReturnValue) == 0x000030, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, K2Node_DynamicCast_AsTool_Box_Interface) == 0x000038, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::K2Node_DynamicCast_AsTool_Box_Interface' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_GetChargerComponent_ReturnValue) == 0x000050, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_GetChargerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_UseEnergyToolbox, CallFunc_GetChargeAmountForTime_deltaSeconds_ImplicitCast) == 0x000058, "Member 'BP_SmallMeatLocker_C_UseEnergyToolbox::CallFunc_GetChargeAmountForTime_deltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.StopMontages
// 0x0020 (0x0020 - 0x0000)
struct BP_SmallMeatLocker_C_StopMontages final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_StopMontages) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_StopMontages");
static_assert(sizeof(BP_SmallMeatLocker_C_StopMontages) == 0x000020, "Wrong size on BP_SmallMeatLocker_C_StopMontages");
static_assert(offsetof(BP_SmallMeatLocker_C_StopMontages, Player) == 0x000000, "Member 'BP_SmallMeatLocker_C_StopMontages::Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_StopMontages, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_SmallMeatLocker_C_StopMontages::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_StopMontages, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000010, "Member 'BP_SmallMeatLocker_C_StopMontages::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_StopMontages, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_StopMontages::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.ReflectVectorAroundPlaneWithNormal
// 0x0098 (0x0098 - 0x0000)
struct BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal final
{
public:
	struct FVector                                VectorToReflect;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReflectedVector;                                   // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal");
static_assert(sizeof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal) == 0x000098, "Wrong size on BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, VectorToReflect) == 0x000000, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::VectorToReflect' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, Normal) == 0x000018, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::Normal' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, ReflectedVector) == 0x000030, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::ReflectedVector' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x000088, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x000090, "Member 'BP_SmallMeatLocker_C_ReflectVectorAroundPlaneWithNormal::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.ExecuteUbergraph_BP_SmallMeatLocker
// 0x0180 (0x0180 - 0x0000)
struct BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractor*                            CallFunc_GetInteractor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            CallFunc_GetInteractor_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FScoreEventData                        K2Node_MakeStruct_ScoreEventData;                  // 0x00A8(0x0018)(NoDestructor)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	struct FScoreEventData                        K2Node_MakeStruct_ScoreEventData_1;                // 0x00D8(0x0018)(NoDestructor)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetInteractingPlayer_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerState*                        K2Node_DynamicCast_AsDBDPlayer_State;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Success;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Bonus;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_ComponentBoundEvent_Player;                 // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TriggerLoudNoise;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_hadInput;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         K2Node_ComponentBoundEvent_type;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_ChargeChange;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Success_1;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Bonus_1;                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_ComponentBoundEvent_Player_1;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TriggerLoudNoise_1;     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_hadInput_1;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         K2Node_ComponentBoundEvent_type_1;                 // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_ChargeChange_1;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker");
static_assert(sizeof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker) == 0x000180, "Wrong size on BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, EntryPoint) == 0x000000, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_GetInteractor_ReturnValue) == 0x000008, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_GetInteractor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_GetInteractor_ReturnValue_1) == 0x000010, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_GetInteractor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_MakeStruct_ScoreEventData) == 0x0000A8, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_MakeStruct_ScoreEventData' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_MakeStruct_ScoreEventData_1) == 0x0000D8, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_MakeStruct_ScoreEventData_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_GetInteractingPlayer_ReturnValue) == 0x000100, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_GetInteractingPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_DynamicCast_AsDBDPlayer_State) == 0x000108, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_DynamicCast_AsDBDPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000130, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000148, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Success) == 0x000150, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Bonus) == 0x000151, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Bonus' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Player) == 0x000158, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_TriggerLoudNoise) == 0x000160, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_hadInput) == 0x000161, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_hadInput' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_type) == 0x000162, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_type' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_ChargeChange) == 0x000164, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_ChargeChange' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Success_1) == 0x000168, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Success_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Bonus_1) == 0x000169, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Bonus_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_Player_1) == 0x000170, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_TriggerLoudNoise_1) == 0x000178, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_TriggerLoudNoise_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_hadInput_1) == 0x000179, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_hadInput_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_type_1) == 0x00017A, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_type_1' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker, K2Node_ComponentBoundEvent_ChargeChange_1) == 0x00017C, "Member 'BP_SmallMeatLocker_C_ExecuteUbergraph_BP_SmallMeatLocker::K2Node_ComponentBoundEvent_ChargeChange_1' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.BndEvt__Break Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bonus;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadInput;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         Type;                                              // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeChange;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(sizeof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature) == 0x000018, "Wrong size on BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, Success) == 0x000000, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, Bonus) == 0x000001, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::Bonus' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, Player) == 0x000008, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, TriggerLoudNoise) == 0x000010, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, HadInput) == 0x000011, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::HadInput' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, Type) == 0x000012, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature, ChargeChange) == 0x000014, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_335_ChargeableSkillCheckResponse__DelegateSignature::ChargeChange' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.BndEvt__Break Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bonus;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadInput;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         Type;                                              // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeChange;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(sizeof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature) == 0x000018, "Wrong size on BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, Success) == 0x000000, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, Bonus) == 0x000001, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::Bonus' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, Player) == 0x000008, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, TriggerLoudNoise) == 0x000010, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, HadInput) == 0x000011, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::HadInput' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, Type) == 0x000012, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature, ChargeChange) == 0x000014, "Member 'BP_SmallMeatLocker_C_BndEvt__Break_Chargeable_K2Node_ComponentBoundEvent_330_ChargeableSkillCheckResponse__DelegateSignature::ChargeChange' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.IsBroken
// 0x0002 (0x0002 - 0x0000)
struct BP_SmallMeatLocker_C_IsBroken final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBroken_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_IsBroken) == 0x000001, "Wrong alignment on BP_SmallMeatLocker_C_IsBroken");
static_assert(sizeof(BP_SmallMeatLocker_C_IsBroken) == 0x000002, "Wrong size on BP_SmallMeatLocker_C_IsBroken");
static_assert(offsetof(BP_SmallMeatLocker_C_IsBroken, ReturnValue) == 0x000000, "Member 'BP_SmallMeatLocker_C_IsBroken::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_IsBroken, CallFunc_GetIsBroken_ReturnValue) == 0x000001, "Member 'BP_SmallMeatLocker_C_IsBroken::CallFunc_GetIsBroken_ReturnValue' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.Has Toolbox
// 0x0028 (0x0028 - 0x0000)
struct BP_SmallMeatLocker_C_Has_Toolbox final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Possible;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterInventoryComponent*           CallFunc_GetCharacterInventoryComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACollectable*                           CallFunc_GetItem_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_Has_Toolbox) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_Has_Toolbox");
static_assert(sizeof(BP_SmallMeatLocker_C_Has_Toolbox) == 0x000028, "Wrong size on BP_SmallMeatLocker_C_Has_Toolbox");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, Player) == 0x000000, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::Player' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, Is_Possible) == 0x000008, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::Is_Possible' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, Ret) == 0x000009, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::Ret' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, CallFunc_GetCharacterInventoryComponent_ReturnValue) == 0x000010, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::CallFunc_GetCharacterInventoryComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, CallFunc_GetItem_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_Has_Toolbox, CallFunc_DoesImplementInterface_ReturnValue) == 0x000020, "Member 'BP_SmallMeatLocker_C_Has_Toolbox::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.GetHookPosition
// 0x0050 (0x0050 - 0x0000)
struct BP_SmallMeatLocker_C_GetHookPosition final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHookPosition_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_GetHookPosition) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_GetHookPosition");
static_assert(sizeof(BP_SmallMeatLocker_C_GetHookPosition) == 0x000050, "Wrong size on BP_SmallMeatLocker_C_GetHookPosition");
static_assert(offsetof(BP_SmallMeatLocker_C_GetHookPosition, ReturnValue) == 0x000000, "Member 'BP_SmallMeatLocker_C_GetHookPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetHookPosition, CallFunc_GetHookPosition_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_GetHookPosition::CallFunc_GetHookPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetHookPosition, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SmallMeatLocker_C_GetHookPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetHookPosition, CallFunc_GetSocketLocation_ReturnValue) == 0x000038, "Member 'BP_SmallMeatLocker_C_GetHookPosition::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.GetEntity
// 0x0020 (0x0020 - 0x0000)
struct BP_SmallMeatLocker_C_GetEntity final
{
public:
	class AEntity*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetChildActor_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AEntity*                                K2Node_DynamicCast_AsEntity;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_GetEntity) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_GetEntity");
static_assert(sizeof(BP_SmallMeatLocker_C_GetEntity) == 0x000020, "Wrong size on BP_SmallMeatLocker_C_GetEntity");
static_assert(offsetof(BP_SmallMeatLocker_C_GetEntity, ReturnValue) == 0x000000, "Member 'BP_SmallMeatLocker_C_GetEntity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetEntity, CallFunc_K2_GetChildActor_ReturnValue) == 0x000008, "Member 'BP_SmallMeatLocker_C_GetEntity::CallFunc_K2_GetChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetEntity, K2Node_DynamicCast_AsEntity) == 0x000010, "Member 'BP_SmallMeatLocker_C_GetEntity::K2Node_DynamicCast_AsEntity' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetEntity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SmallMeatLocker_C_GetEntity::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.GetAnimInstance
// 0x0010 (0x0010 - 0x0000)
struct BP_SmallMeatLocker_C_GetAnimInstance final
{
public:
	class UAnimInstance*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_GetAnimInstance) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_GetAnimInstance");
static_assert(sizeof(BP_SmallMeatLocker_C_GetAnimInstance) == 0x000010, "Wrong size on BP_SmallMeatLocker_C_GetAnimInstance");
static_assert(offsetof(BP_SmallMeatLocker_C_GetAnimInstance, ReturnValue) == 0x000000, "Member 'BP_SmallMeatLocker_C_GetAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_GetAnimInstance, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_SmallMeatLocker_C_GetAnimInstance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function BP_SmallMeatLocker.BP_SmallMeatLocker_C.FireHookSoundEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_SmallMeatLocker_C_FireHookSoundEvent final
{
public:
	class FName                                   NoiseRangeTunable;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ADBDPlayer*                       SoundInstigator;                                   // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SmallMeatLocker_C_FireHookSoundEvent) == 0x000008, "Wrong alignment on BP_SmallMeatLocker_C_FireHookSoundEvent");
static_assert(sizeof(BP_SmallMeatLocker_C_FireHookSoundEvent) == 0x000038, "Wrong size on BP_SmallMeatLocker_C_FireHookSoundEvent");
static_assert(offsetof(BP_SmallMeatLocker_C_FireHookSoundEvent, NoiseRangeTunable) == 0x000000, "Member 'BP_SmallMeatLocker_C_FireHookSoundEvent::NoiseRangeTunable' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_FireHookSoundEvent, SoundInstigator) == 0x000010, "Member 'BP_SmallMeatLocker_C_FireHookSoundEvent::SoundInstigator' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_FireHookSoundEvent, CallFunc_GetTunableValue_ReturnValue) == 0x000018, "Member 'BP_SmallMeatLocker_C_FireHookSoundEvent::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SmallMeatLocker_C_FireHookSoundEvent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_SmallMeatLocker_C_FireHookSoundEvent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

