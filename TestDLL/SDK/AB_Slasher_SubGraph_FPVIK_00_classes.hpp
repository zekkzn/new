#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Slasher_SubGraph_FPVIK_00

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AB_Slasher_SubGraph_FPVIK_00_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_Slasher_SubGraph_FPVIK_00.AB_Slasher_SubGraph_FPVIK_00_C
// 0x0870 (0x0BC0 - 0x0350)
class UAB_Slasher_SubGraph_FPVIK_00_C final : public UAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_Slasher_SubGraph_FPVIK_00::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0390(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x03B0(0x02B0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x0660(0x02B0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0910(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0930(0x0048)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0978(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A48(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0B50(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B80(0x0030)()
	bool                                          _firstPersonView;                                  // 0x0BB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_Slasher_SubGraph_FPVIK_00(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Slasher_SubGraph_FPVIK_00_C">();
	}
	static class UAB_Slasher_SubGraph_FPVIK_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Slasher_SubGraph_FPVIK_00_C>();
	}
};
static_assert(alignof(UAB_Slasher_SubGraph_FPVIK_00_C) == 0x000010, "Wrong alignment on UAB_Slasher_SubGraph_FPVIK_00_C");
static_assert(sizeof(UAB_Slasher_SubGraph_FPVIK_00_C) == 0x000BC0, "Wrong size on UAB_Slasher_SubGraph_FPVIK_00_C");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, UberGraphFrame) == 0x000350, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, __AnimBlueprintMutables) == 0x000358, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_Root) == 0x000370, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_LocalToComponentSpace) == 0x000390, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_TwoBoneIK_1) == 0x0003B0, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_TwoBoneIK) == 0x000660, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_ComponentToLocalSpace) == 0x000910, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_BlendListByBool) == 0x000930, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_SubInput) == 0x000978, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_SaveCachedPose) == 0x000A48, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_UseCachedPose_1) == 0x000B50, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, AnimGraphNode_UseCachedPose) == 0x000B80, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_Slasher_SubGraph_FPVIK_00_C, _firstPersonView) == 0x000BB0, "Member 'UAB_Slasher_SubGraph_FPVIK_00_C::_firstPersonView' has a wrong offset!");

}

