#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreDailyRitualsPopupWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isAfterTrial;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget) == 0x000004, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget) == 0x000008, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget, EntryPoint) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget, K2Node_Event_isAfterTrial) == 0x000004, "Member 'WBP_CoreDailyRitualsPopupWidget_C_ExecuteUbergraph_WBP_CoreDailyRitualsPopupWidget::K2Node_Event_isAfterTrial' has a wrong offset!");

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.GetAfterTrialProgressionButtonPadding
// 0x0060 (0x0060 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding final
{
public:
	double                                        Param_Padding;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Padding_ImplicitCast;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding) == 0x000008, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding) == 0x000060, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, Param_Padding) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::Param_Padding' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000018, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, K2Node_FunctionResult_Padding_ImplicitCast) == 0x000050, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::K2Node_FunctionResult_Padding_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_Subtract_FloatFloat_B_ImplicitCast) == 0x000058, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_Subtract_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding, CallFunc_Subtract_FloatFloat_A_ImplicitCast) == 0x00005C, "Member 'WBP_CoreDailyRitualsPopupWidget_C_GetAfterTrialProgressionButtonPadding::CallFunc_Subtract_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.SetBackground
// 0x0010 (0x0010 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_SetBackground final
{
public:
	bool                                          IsAfterTrial;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_SetBackground) == 0x000008, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_SetBackground");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_SetBackground) == 0x000010, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_SetBackground");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetBackground, IsAfterTrial) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetBackground::IsAfterTrial' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetBackground, Temp_bool_Variable) == 0x000001, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetBackground::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetBackground, K2Node_Select_Default) == 0x000008, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetBackground::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.SetDailyRitualDetailAlignment
// 0x0018 (0x0018 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment final
{
public:
	bool                                          IsAfterTrial;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment) == 0x000008, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment) == 0x000018, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, IsAfterTrial) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::IsAfterTrial' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, Temp_bool_Variable) == 0x000001, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, Temp_byte_Variable) == 0x000002, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000008, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment, K2Node_Select_Default) == 0x000010, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetDailyRitualDetailAlignment::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.SetProgressionButtonAlignmentAndPadding
// 0x0040 (0x0040 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding final
{
public:
	bool                                          IsAfterTrial;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAfterTrialProgressionButtonPadding_Padding; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding) == 0x000008, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding) == 0x000040, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, IsAfterTrial) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::IsAfterTrial' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, Temp_byte_Variable) == 0x000001, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, Temp_bool_Variable) == 0x000003, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, CallFunc_GetAfterTrialProgressionButtonPadding_Padding) == 0x000008, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::CallFunc_GetAfterTrialProgressionButtonPadding_Padding' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, K2Node_Select_Default) == 0x000018, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000030, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding, K2Node_MakeStruct_Left_ImplicitCast) == 0x000038, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetProgressionButtonAlignmentAndPadding::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function WBP_CoreDailyRitualsPopupWidget.WBP_CoreDailyRitualsPopupWidget_C.SetVisuals
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreDailyRitualsPopupWidget_C_SetVisuals final
{
public:
	bool                                          IsAfterTrial;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreDailyRitualsPopupWidget_C_SetVisuals) == 0x000001, "Wrong alignment on WBP_CoreDailyRitualsPopupWidget_C_SetVisuals");
static_assert(sizeof(WBP_CoreDailyRitualsPopupWidget_C_SetVisuals) == 0x000001, "Wrong size on WBP_CoreDailyRitualsPopupWidget_C_SetVisuals");
static_assert(offsetof(WBP_CoreDailyRitualsPopupWidget_C_SetVisuals, IsAfterTrial) == 0x000000, "Member 'WBP_CoreDailyRitualsPopupWidget_C_SetVisuals::IsAfterTrial' has a wrong offset!");

}

