#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreOnHoverBorder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreOnHoverBorder.WBP_CoreOnHoverBorder_C
// 0x00B0 (0x03D0 - 0x0320)
class UWBP_CoreOnHoverBorder_C final : public UCoreOnHoverBorderWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              Border;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HoverDuration;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PressedDuration;                                   // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCoreButtonWidget*                      Button;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstance;                                  // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        PreviewProgress;                                   // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviewThickness;                                  // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PreviewWidth;                                      // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PreviewHeight;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	double                                        WidthRatio;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightRatio;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WidthRatio2;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightRatio2;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoUnhoverCollapse;                               // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTiling;                                         // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ImageSize;                                         // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectOffsetX;                                     // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectOffsetY;                                     // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimationCompleted();
	void BindToButton(class UCoreButtonWidget* buttonToBindOn);
	void Construct();
	void Destruct();
	void EndOfAnimationEvent(class UUITweenInstance* Tween);
	void ExecuteUbergraph_WBP_CoreOnHoverBorder(int32 EntryPoint);
	void ForceBorderSize(int32 Thickness, const struct FVector2D& DesiredSize);
	void OnClicked(class UCoreButtonWidget* buttonTarget);
	void OnHovered(class UCoreButtonWidget* buttonTarget);
	void OnPressed(class UCoreButtonWidget* buttonTarget);
	void OnReleased(class UCoreButtonWidget* buttonTarget);
	void OnUnhovered(class UCoreButtonWidget* buttonTarget);
	void PlayHoveredAnimation(bool PlayForward);
	void PlayPressedAnimation(bool PlayForward);
	void PreConstruct(bool IsDesignTime);
	void PrintPreviewRatios();
	void UnbindFromButton();
	void UpdateBorderSize(int32 Thickness, const struct FVector2D& DesiredSize);
	void UpdateColors(const struct FLinearColor& ProgressBarColor, const struct FLinearColor& BackgroundColor);
	void UpdateMaterialColors(const struct FLinearColor& ProgressBarColor, const struct FLinearColor& BackgroundColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreOnHoverBorder_C">();
	}
	static class UWBP_CoreOnHoverBorder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreOnHoverBorder_C>();
	}
};
static_assert(alignof(UWBP_CoreOnHoverBorder_C) == 0x000008, "Wrong alignment on UWBP_CoreOnHoverBorder_C");
static_assert(sizeof(UWBP_CoreOnHoverBorder_C) == 0x0003D0, "Wrong size on UWBP_CoreOnHoverBorder_C");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, UberGraphFrame) == 0x000320, "Member 'UWBP_CoreOnHoverBorder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, Border) == 0x000328, "Member 'UWBP_CoreOnHoverBorder_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, DynamicMaterial) == 0x000330, "Member 'UWBP_CoreOnHoverBorder_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, HoverDuration) == 0x000338, "Member 'UWBP_CoreOnHoverBorder_C::HoverDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, PressedDuration) == 0x000340, "Member 'UWBP_CoreOnHoverBorder_C::PressedDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, Button) == 0x000348, "Member 'UWBP_CoreOnHoverBorder_C::Button' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, MaterialInstance) == 0x000350, "Member 'UWBP_CoreOnHoverBorder_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, PreviewProgress) == 0x000358, "Member 'UWBP_CoreOnHoverBorder_C::PreviewProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, PreviewThickness) == 0x000360, "Member 'UWBP_CoreOnHoverBorder_C::PreviewThickness' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, PreviewWidth) == 0x000368, "Member 'UWBP_CoreOnHoverBorder_C::PreviewWidth' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, PreviewHeight) == 0x000378, "Member 'UWBP_CoreOnHoverBorder_C::PreviewHeight' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, WidthRatio) == 0x000388, "Member 'UWBP_CoreOnHoverBorder_C::WidthRatio' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, HeightRatio) == 0x000390, "Member 'UWBP_CoreOnHoverBorder_C::HeightRatio' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, WidthRatio2) == 0x000398, "Member 'UWBP_CoreOnHoverBorder_C::WidthRatio2' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, HeightRatio2) == 0x0003A0, "Member 'UWBP_CoreOnHoverBorder_C::HeightRatio2' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, AutoUnhoverCollapse) == 0x0003A8, "Member 'UWBP_CoreOnHoverBorder_C::AutoUnhoverCollapse' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, UseTiling) == 0x0003A9, "Member 'UWBP_CoreOnHoverBorder_C::UseTiling' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, ImageSize) == 0x0003B0, "Member 'UWBP_CoreOnHoverBorder_C::ImageSize' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, EffectOffsetX) == 0x0003C0, "Member 'UWBP_CoreOnHoverBorder_C::EffectOffsetX' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOnHoverBorder_C, EffectOffsetY) == 0x0003C8, "Member 'UWBP_CoreOnHoverBorder_C::EffectOffsetY' has a wrong offset!");

}

