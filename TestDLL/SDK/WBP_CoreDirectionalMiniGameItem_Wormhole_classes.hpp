#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreDirectionalMiniGameItem_Wormhole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreDirectionalMiniGameItem_Wormhole.WBP_CoreDirectionalMiniGameItem_Wormhole_C
// 0x0098 (0x03D0 - 0x0338)
class UWBP_CoreDirectionalMiniGameItem_Wormhole_C final : public UCoreHudDirectionalMiniGameItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GoodEnding;                                        // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WrongEnding;                                       // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Idle;                                              // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GoodInput;                                         // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WrongInput;                                        // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Background;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Border;                                            // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Glow;                                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Icon;                                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EDirectionalInputKey                          CachedDirection;                                   // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SuccessColor;                                      // 0x038C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               BorderMaterial;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               IconNoInputMaterial;                               // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               IconCrossMaterial;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               IconArrowMaterial;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EDirectionalInputKey                          Direction;                                         // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DebugShowIconMaterial;                             // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateResult(bool IsSuccessful);
	void UpdateMaterial(class UMaterialInstanceDynamic* DynamicMaterial);
	void UpdateFinaleVisualState(bool IsSuccessful);
	void RotateIcon(EDirectionalInputKey Param_Direction);
	void RevealDirection(bool WithAnimation);
	void PreConstruct(bool IsDesignTime);
	void Init(EDirectionalInputKey Param_Direction);
	void Finished_FFA24A434EE68D7995F75DB186044D83();
	void Finished_C4D01C7D42F5D77C1F870AA6237465C8();
	void Finished_8984E0ED48BB8DFA0871AB92D61187C7();
	void ExecuteUbergraph_WBP_CoreDirectionalMiniGameItem_Wormhole(int32 EntryPoint);
	void CreateDynamicMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreDirectionalMiniGameItem_Wormhole_C">();
	}
	static class UWBP_CoreDirectionalMiniGameItem_Wormhole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreDirectionalMiniGameItem_Wormhole_C>();
	}
};
static_assert(alignof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C) == 0x000008, "Wrong alignment on UWBP_CoreDirectionalMiniGameItem_Wormhole_C");
static_assert(sizeof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C) == 0x0003D0, "Wrong size on UWBP_CoreDirectionalMiniGameItem_Wormhole_C");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, UberGraphFrame) == 0x000338, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, GoodEnding) == 0x000340, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::GoodEnding' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, WrongEnding) == 0x000348, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::WrongEnding' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Idle) == 0x000350, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Idle' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, GoodInput) == 0x000358, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::GoodInput' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, WrongInput) == 0x000360, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::WrongInput' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Background) == 0x000368, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Border) == 0x000370, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Glow) == 0x000378, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Glow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Icon) == 0x000380, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, CachedDirection) == 0x000388, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::CachedDirection' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, SuccessColor) == 0x00038C, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::SuccessColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, BorderMaterial) == 0x0003A0, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::BorderMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, IconNoInputMaterial) == 0x0003A8, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::IconNoInputMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, IconCrossMaterial) == 0x0003B0, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::IconCrossMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, IconArrowMaterial) == 0x0003B8, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::IconArrowMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, Direction) == 0x0003C0, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::Direction' has a wrong offset!");
static_assert(offsetof(UWBP_CoreDirectionalMiniGameItem_Wormhole_C, DebugShowIconMaterial) == 0x0003C8, "Member 'UWBP_CoreDirectionalMiniGameItem_Wormhole_C::DebugShowIconMaterial' has a wrong offset!");

}

