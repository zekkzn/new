#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToolBox

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ToolBox.ToolBox_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct ToolBox_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on ToolBox_C_ReceiveEndPlay");
static_assert(sizeof(ToolBox_C_ReceiveEndPlay) == 0x000001, "Wrong size on ToolBox_C_ReceiveEndPlay");
static_assert(offsetof(ToolBox_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'ToolBox_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function ToolBox.ToolBox_C.OnDropped
// 0x0008 (0x0008 - 0x0000)
struct ToolBox_C_OnDropped final
{
public:
	class ADBDPlayer*                             DroppingPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_OnDropped) == 0x000008, "Wrong alignment on ToolBox_C_OnDropped");
static_assert(sizeof(ToolBox_C_OnDropped) == 0x000008, "Wrong size on ToolBox_C_OnDropped");
static_assert(offsetof(ToolBox_C_OnDropped, DroppingPlayer) == 0x000000, "Member 'ToolBox_C_OnDropped::DroppingPlayer' has a wrong offset!");

// Function ToolBox.ToolBox_C.OnCollectorSet
// 0x0008 (0x0008 - 0x0000)
struct ToolBox_C_OnCollectorSet final
{
public:
	class ADBDPlayer*                             Collector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_OnCollectorSet) == 0x000008, "Wrong alignment on ToolBox_C_OnCollectorSet");
static_assert(sizeof(ToolBox_C_OnCollectorSet) == 0x000008, "Wrong size on ToolBox_C_OnCollectorSet");
static_assert(offsetof(ToolBox_C_OnCollectorSet, Collector) == 0x000000, "Member 'ToolBox_C_OnCollectorSet::Collector' has a wrong offset!");

// Function ToolBox.ToolBox_C.GetChargerComponent
// 0x0008 (0x0008 - 0x0000)
struct ToolBox_C_GetChargerComponent final
{
public:
	class UChargerComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_GetChargerComponent) == 0x000008, "Wrong alignment on ToolBox_C_GetChargerComponent");
static_assert(sizeof(ToolBox_C_GetChargerComponent) == 0x000008, "Wrong size on ToolBox_C_GetChargerComponent");
static_assert(offsetof(ToolBox_C_GetChargerComponent, ReturnValue) == 0x000000, "Member 'ToolBox_C_GetChargerComponent::ReturnValue' has a wrong offset!");

// Function ToolBox.ToolBox_C.ExecuteUbergraph_ToolBox
// 0x00E0 (0x00E0 - 0x0000)
struct ToolBox_C_ExecuteUbergraph_ToolBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_collector;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Empty;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_droppingPlayer;                       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_ExecuteUbergraph_ToolBox) == 0x000010, "Wrong alignment on ToolBox_C_ExecuteUbergraph_ToolBox");
static_assert(sizeof(ToolBox_C_ExecuteUbergraph_ToolBox) == 0x0000E0, "Wrong size on ToolBox_C_ExecuteUbergraph_ToolBox");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, EntryPoint) == 0x000000, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, Temp_delegate_Variable) == 0x000004, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, Temp_delegate_Variable_1) == 0x000018, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, Temp_struct_Variable) == 0x000030, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, K2Node_Event_collector) == 0x000090, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::K2Node_Event_collector' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, CallFunc_AddComponent_ReturnValue) == 0x000098, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, K2Node_ComponentBoundEvent_Empty) == 0x0000A0, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::K2Node_ComponentBoundEvent_Empty' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, CallFunc_PostAkEvent_ReturnValue) == 0x0000A4, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, K2Node_Event_droppingPlayer) == 0x0000A8, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::K2Node_Event_droppingPlayer' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000B0, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000D0, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToolBox_C_ExecuteUbergraph_ToolBox, K2Node_Event_EndPlayReason) == 0x0000D8, "Member 'ToolBox_C_ExecuteUbergraph_ToolBox::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function ToolBox.ToolBox_C.BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature) == 0x000001, "Wrong alignment on ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature");
static_assert(sizeof(ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature) == 0x000001, "Wrong size on ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature");
static_assert(offsetof(ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature, Empty) == 0x000000, "Member 'ToolBox_C_BndEvt__Charger_K2Node_ComponentBoundEvent_106_ChargeStateChangeDelegate__DelegateSignature::Empty' has a wrong offset!");

// Function ToolBox.ToolBox_C.AuthorityUseCharge
// 0x0010 (0x0010 - 0x0000)
struct ToolBox_C_AuthorityUseCharge final
{
public:
	double                                        Charge_Used;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UseEnergy_seconds_ImplicitCast;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_AuthorityUseCharge) == 0x000008, "Wrong alignment on ToolBox_C_AuthorityUseCharge");
static_assert(sizeof(ToolBox_C_AuthorityUseCharge) == 0x000010, "Wrong size on ToolBox_C_AuthorityUseCharge");
static_assert(offsetof(ToolBox_C_AuthorityUseCharge, Charge_Used) == 0x000000, "Member 'ToolBox_C_AuthorityUseCharge::Charge_Used' has a wrong offset!");
static_assert(offsetof(ToolBox_C_AuthorityUseCharge, CallFunc_UseEnergy_seconds_ImplicitCast) == 0x000008, "Member 'ToolBox_C_AuthorityUseCharge::CallFunc_UseEnergy_seconds_ImplicitCast' has a wrong offset!");

// Function ToolBox.ToolBox_C.GetUsePercentLeft
// 0x0008 (0x0008 - 0x0000)
struct ToolBox_C_GetUsePercentLeft final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedEnergyLevel_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToolBox_C_GetUsePercentLeft) == 0x000004, "Wrong alignment on ToolBox_C_GetUsePercentLeft");
static_assert(sizeof(ToolBox_C_GetUsePercentLeft) == 0x000008, "Wrong size on ToolBox_C_GetUsePercentLeft");
static_assert(offsetof(ToolBox_C_GetUsePercentLeft, ReturnValue) == 0x000000, "Member 'ToolBox_C_GetUsePercentLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(ToolBox_C_GetUsePercentLeft, CallFunc_GetNormalizedEnergyLevel_ReturnValue) == 0x000004, "Member 'ToolBox_C_GetUsePercentLeft::CallFunc_GetNormalizedEnergyLevel_ReturnValue' has a wrong offset!");

}

