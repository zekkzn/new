#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDInteraction

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function DBDInteraction.GeneratorRepairInteraction.Authority_OnSkillCheckResponseAuthority
// 0x0018 (0x0018 - 0x0000)
struct GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Bonus;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillCheckCustomType                         Type;                                              // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority");
static_assert(sizeof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority) == 0x000018, "Wrong size on GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority");
static_assert(offsetof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority, Success) == 0x000000, "Member 'GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority::Success' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority, Bonus) == 0x000001, "Member 'GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority::Bonus' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority, Player) == 0x000008, "Member 'GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority::Player' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority, TriggerLoudNoise) == 0x000010, "Member 'GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority, Type) == 0x000011, "Member 'GeneratorRepairInteraction_Authority_OnSkillCheckResponseAuthority::Type' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.SetIsObstructed
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_SetIsObstructed final
{
public:
	bool                                          Obstructed;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_SetIsObstructed) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_SetIsObstructed");
static_assert(sizeof(GeneratorRepairInteraction_SetIsObstructed) == 0x000001, "Wrong size on GeneratorRepairInteraction_SetIsObstructed");
static_assert(offsetof(GeneratorRepairInteraction_SetIsObstructed, Obstructed) == 0x000000, "Member 'GeneratorRepairInteraction_SetIsObstructed::Obstructed' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.GetInteractionChargeSpeedMultiplier_Implementation
// 0x0010 (0x0010 - 0x0000)
struct GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation final
{
public:
	const class ADBDPlayer*                       Character;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(sizeof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000010, "Wrong size on GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(offsetof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation, Character) == 0x000000, "Member 'GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation::Character' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation, ReturnValue) == 0x000008, "Member 'GeneratorRepairInteraction_GetInteractionChargeSpeedMultiplier_Implementation::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.GetOwningGenerator
// 0x0008 (0x0008 - 0x0000)
struct GeneratorRepairInteraction_GetOwningGenerator final
{
public:
	class AGenerator*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_GetOwningGenerator) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_GetOwningGenerator");
static_assert(sizeof(GeneratorRepairInteraction_GetOwningGenerator) == 0x000008, "Wrong size on GeneratorRepairInteraction_GetOwningGenerator");
static_assert(offsetof(GeneratorRepairInteraction_GetOwningGenerator, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_GetOwningGenerator::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsBeingRepaired
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_IsBeingRepaired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_IsBeingRepaired) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_IsBeingRepaired");
static_assert(sizeof(GeneratorRepairInteraction_IsBeingRepaired) == 0x000001, "Wrong size on GeneratorRepairInteraction_IsBeingRepaired");
static_assert(offsetof(GeneratorRepairInteraction_IsBeingRepaired, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_IsBeingRepaired::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsInteractionPossibleInternal
// 0x0010 (0x0010 - 0x0000)
struct GeneratorRepairInteraction_IsInteractionPossibleInternal final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorRepairInteraction_IsInteractionPossibleInternal) == 0x000008, "Wrong alignment on GeneratorRepairInteraction_IsInteractionPossibleInternal");
static_assert(sizeof(GeneratorRepairInteraction_IsInteractionPossibleInternal) == 0x000010, "Wrong size on GeneratorRepairInteraction_IsInteractionPossibleInternal");
static_assert(offsetof(GeneratorRepairInteraction_IsInteractionPossibleInternal, Player) == 0x000000, "Member 'GeneratorRepairInteraction_IsInteractionPossibleInternal::Player' has a wrong offset!");
static_assert(offsetof(GeneratorRepairInteraction_IsInteractionPossibleInternal, ReturnValue) == 0x000008, "Member 'GeneratorRepairInteraction_IsInteractionPossibleInternal::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorRepairInteraction.IsObstructed
// 0x0001 (0x0001 - 0x0000)
struct GeneratorRepairInteraction_IsObstructed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorRepairInteraction_IsObstructed) == 0x000001, "Wrong alignment on GeneratorRepairInteraction_IsObstructed");
static_assert(sizeof(GeneratorRepairInteraction_IsObstructed) == 0x000001, "Wrong size on GeneratorRepairInteraction_IsObstructed");
static_assert(offsetof(GeneratorRepairInteraction_IsObstructed, ReturnValue) == 0x000000, "Member 'GeneratorRepairInteraction_IsObstructed::ReturnValue' has a wrong offset!");

// Function DBDInteraction.ThrowInteraction.InitThrowCancellationExitTime
// 0x0004 (0x0004 - 0x0000)
struct ThrowInteraction_InitThrowCancellationExitTime final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowInteraction_InitThrowCancellationExitTime) == 0x000004, "Wrong alignment on ThrowInteraction_InitThrowCancellationExitTime");
static_assert(sizeof(ThrowInteraction_InitThrowCancellationExitTime) == 0x000004, "Wrong size on ThrowInteraction_InitThrowCancellationExitTime");
static_assert(offsetof(ThrowInteraction_InitThrowCancellationExitTime, Value) == 0x000000, "Member 'ThrowInteraction_InitThrowCancellationExitTime::Value' has a wrong offset!");

// Function DBDInteraction.ThrowInteraction.HasCancelledThrow
// 0x0001 (0x0001 - 0x0000)
struct ThrowInteraction_HasCancelledThrow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowInteraction_HasCancelledThrow) == 0x000001, "Wrong alignment on ThrowInteraction_HasCancelledThrow");
static_assert(sizeof(ThrowInteraction_HasCancelledThrow) == 0x000001, "Wrong size on ThrowInteraction_HasCancelledThrow");
static_assert(offsetof(ThrowInteraction_HasCancelledThrow, ReturnValue) == 0x000000, "Member 'ThrowInteraction_HasCancelledThrow::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BaseStalkModeInteraction.CanStalk
// 0x0001 (0x0001 - 0x0000)
struct BaseStalkModeInteraction_CanStalk final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseStalkModeInteraction_CanStalk) == 0x000001, "Wrong alignment on BaseStalkModeInteraction_CanStalk");
static_assert(sizeof(BaseStalkModeInteraction_CanStalk) == 0x000001, "Wrong size on BaseStalkModeInteraction_CanStalk");
static_assert(offsetof(BaseStalkModeInteraction_CanStalk, ReturnValue) == 0x000000, "Member 'BaseStalkModeInteraction_CanStalk::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BaseStalkModeInteraction.GetStalkerComponent
// 0x0008 (0x0008 - 0x0000)
struct BaseStalkModeInteraction_GetStalkerComponent final
{
public:
	class UStalkerComponent*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseStalkModeInteraction_GetStalkerComponent) == 0x000008, "Wrong alignment on BaseStalkModeInteraction_GetStalkerComponent");
static_assert(sizeof(BaseStalkModeInteraction_GetStalkerComponent) == 0x000008, "Wrong size on BaseStalkModeInteraction_GetStalkerComponent");
static_assert(offsetof(BaseStalkModeInteraction_GetStalkerComponent, ReturnValue) == 0x000000, "Member 'BaseStalkModeInteraction_GetStalkerComponent::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BaseTotemInteraction.GetTotem
// 0x0008 (0x0008 - 0x0000)
struct BaseTotemInteraction_GetTotem final
{
public:
	class ATotem*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseTotemInteraction_GetTotem) == 0x000008, "Wrong alignment on BaseTotemInteraction_GetTotem");
static_assert(sizeof(BaseTotemInteraction_GetTotem) == 0x000008, "Wrong size on BaseTotemInteraction_GetTotem");
static_assert(offsetof(BaseTotemInteraction_GetTotem, ReturnValue) == 0x000000, "Member 'BaseTotemInteraction_GetTotem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.CollectItemInteraction.GetItem
// 0x0008 (0x0008 - 0x0000)
struct CollectItemInteraction_GetItem final
{
public:
	class ACollectable*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectItemInteraction_GetItem) == 0x000008, "Wrong alignment on CollectItemInteraction_GetItem");
static_assert(sizeof(CollectItemInteraction_GetItem) == 0x000008, "Wrong size on CollectItemInteraction_GetItem");
static_assert(offsetof(CollectItemInteraction_GetItem, ReturnValue) == 0x000000, "Member 'CollectItemInteraction_GetItem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.CollectItemInteraction.GetItemToReplace
// 0x0010 (0x0010 - 0x0000)
struct CollectItemInteraction_GetItemToReplace final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACollectable*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CollectItemInteraction_GetItemToReplace) == 0x000008, "Wrong alignment on CollectItemInteraction_GetItemToReplace");
static_assert(sizeof(CollectItemInteraction_GetItemToReplace) == 0x000010, "Wrong size on CollectItemInteraction_GetItemToReplace");
static_assert(offsetof(CollectItemInteraction_GetItemToReplace, Player) == 0x000000, "Member 'CollectItemInteraction_GetItemToReplace::Player' has a wrong offset!");
static_assert(offsetof(CollectItemInteraction_GetItemToReplace, ReturnValue) == 0x000008, "Member 'CollectItemInteraction_GetItemToReplace::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BasicChargeableInteraction.GetChargeTime
// 0x0004 (0x0004 - 0x0000)
struct BasicChargeableInteraction_GetChargeTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BasicChargeableInteraction_GetChargeTime) == 0x000004, "Wrong alignment on BasicChargeableInteraction_GetChargeTime");
static_assert(sizeof(BasicChargeableInteraction_GetChargeTime) == 0x000004, "Wrong size on BasicChargeableInteraction_GetChargeTime");
static_assert(offsetof(BasicChargeableInteraction_GetChargeTime, ReturnValue) == 0x000000, "Member 'BasicChargeableInteraction_GetChargeTime::ReturnValue' has a wrong offset!");

// Function DBDInteraction.BaseLockerInteraction.GetLocker
// 0x0008 (0x0008 - 0x0000)
struct BaseLockerInteraction_GetLocker final
{
public:
	class ALocker*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BaseLockerInteraction_GetLocker) == 0x000008, "Wrong alignment on BaseLockerInteraction_GetLocker");
static_assert(sizeof(BaseLockerInteraction_GetLocker) == 0x000008, "Wrong size on BaseLockerInteraction_GetLocker");
static_assert(offsetof(BaseLockerInteraction_GetLocker, ReturnValue) == 0x000000, "Member 'BaseLockerInteraction_GetLocker::ReturnValue' has a wrong offset!");

// Function DBDInteraction.DestroyBreakableWallWithPowerInteraction.CustomizePropertiesForBlight
// 0x0008 (0x0008 - 0x0000)
struct DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight final
{
public:
	class ADBDPlayer*                             Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight) == 0x000008, "Wrong alignment on DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight");
static_assert(sizeof(DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight) == 0x000008, "Wrong size on DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight");
static_assert(offsetof(DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight, Killer) == 0x000000, "Member 'DestroyBreakableWallWithPowerInteraction_CustomizePropertiesForBlight::Killer' has a wrong offset!");

// Function DBDInteraction.SearchChestInteractionBase.FireChestScoreEvent
// 0x0008 (0x0008 - 0x0000)
struct SearchChestInteractionBase_FireChestScoreEvent final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SearchChestInteractionBase_FireChestScoreEvent) == 0x000008, "Wrong alignment on SearchChestInteractionBase_FireChestScoreEvent");
static_assert(sizeof(SearchChestInteractionBase_FireChestScoreEvent) == 0x000008, "Wrong size on SearchChestInteractionBase_FireChestScoreEvent");
static_assert(offsetof(SearchChestInteractionBase_FireChestScoreEvent, Player) == 0x000000, "Member 'SearchChestInteractionBase_FireChestScoreEvent::Player' has a wrong offset!");

// Function DBDInteraction.AntiCampSelfUnhook.GetAntiCampTrapImmunityDuration
// 0x0004 (0x0004 - 0x0000)
struct AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration) == 0x000004, "Wrong alignment on AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration");
static_assert(sizeof(AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration) == 0x000004, "Wrong size on AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration");
static_assert(offsetof(AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration, ReturnValue) == 0x000000, "Member 'AntiCampSelfUnhook_GetAntiCampTrapImmunityDuration::ReturnValue' has a wrong offset!");

// Function DBDInteraction.DropItemInteraction.GetItem
// 0x0008 (0x0008 - 0x0000)
struct DropItemInteraction_GetItem final
{
public:
	class ACollectable*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DropItemInteraction_GetItem) == 0x000008, "Wrong alignment on DropItemInteraction_GetItem");
static_assert(sizeof(DropItemInteraction_GetItem) == 0x000008, "Wrong size on DropItemInteraction_GetItem");
static_assert(offsetof(DropItemInteraction_GetItem, ReturnValue) == 0x000000, "Member 'DropItemInteraction_GetItem::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorToolboxRepairInteraction.GetInteractionTextWhenEmpty
// 0x0010 (0x0010 - 0x0000)
struct GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty) == 0x000008, "Wrong alignment on GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty");
static_assert(sizeof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty) == 0x000010, "Wrong size on GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty");
static_assert(offsetof(GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty, ReturnValue) == 0x000000, "Member 'GeneratorToolboxRepairInteraction_GetInteractionTextWhenEmpty::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GeneratorToolboxRepairInteraction.HasChargedToolBox
// 0x0010 (0x0010 - 0x0000)
struct GeneratorToolboxRepairInteraction_HasChargedToolBox final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GeneratorToolboxRepairInteraction_HasChargedToolBox) == 0x000008, "Wrong alignment on GeneratorToolboxRepairInteraction_HasChargedToolBox");
static_assert(sizeof(GeneratorToolboxRepairInteraction_HasChargedToolBox) == 0x000010, "Wrong size on GeneratorToolboxRepairInteraction_HasChargedToolBox");
static_assert(offsetof(GeneratorToolboxRepairInteraction_HasChargedToolBox, Player) == 0x000000, "Member 'GeneratorToolboxRepairInteraction_HasChargedToolBox::Player' has a wrong offset!");
static_assert(offsetof(GeneratorToolboxRepairInteraction_HasChargedToolBox, ReturnValue) == 0x000008, "Member 'GeneratorToolboxRepairInteraction_HasChargedToolBox::ReturnValue' has a wrong offset!");

// Function DBDInteraction.GenericStunInteractionDefinition.DispatchStunEvent
// 0x0008 (0x0008 - 0x0000)
struct GenericStunInteractionDefinition_DispatchStunEvent final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GenericStunInteractionDefinition_DispatchStunEvent) == 0x000008, "Wrong alignment on GenericStunInteractionDefinition_DispatchStunEvent");
static_assert(sizeof(GenericStunInteractionDefinition_DispatchStunEvent) == 0x000008, "Wrong size on GenericStunInteractionDefinition_DispatchStunEvent");
static_assert(offsetof(GenericStunInteractionDefinition_DispatchStunEvent, Player) == 0x000000, "Member 'GenericStunInteractionDefinition_DispatchStunEvent::Player' has a wrong offset!");

// Function DBDInteraction.HealInteraction.Authority_OnHealChargeApplied
// 0x0018 (0x0018 - 0x0000)
struct HealInteraction_Authority_OnHealChargeApplied final
{
public:
	float                                         IndividualChargeAmount;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalChargeAmount;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ChargeInstigator;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WasCoop;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_Authority_OnHealChargeApplied) == 0x000008, "Wrong alignment on HealInteraction_Authority_OnHealChargeApplied");
static_assert(sizeof(HealInteraction_Authority_OnHealChargeApplied) == 0x000018, "Wrong size on HealInteraction_Authority_OnHealChargeApplied");
static_assert(offsetof(HealInteraction_Authority_OnHealChargeApplied, IndividualChargeAmount) == 0x000000, "Member 'HealInteraction_Authority_OnHealChargeApplied::IndividualChargeAmount' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnHealChargeApplied, TotalChargeAmount) == 0x000004, "Member 'HealInteraction_Authority_OnHealChargeApplied::TotalChargeAmount' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnHealChargeApplied, ChargeInstigator) == 0x000008, "Member 'HealInteraction_Authority_OnHealChargeApplied::ChargeInstigator' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnHealChargeApplied, WasCoop) == 0x000010, "Member 'HealInteraction_Authority_OnHealChargeApplied::WasCoop' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnHealChargeApplied, DeltaTime) == 0x000014, "Member 'HealInteraction_Authority_OnHealChargeApplied::DeltaTime' has a wrong offset!");

// Function DBDInteraction.HealInteraction.Authority_OnPlayerHealed
// 0x0010 (0x0010 - 0x0000)
struct HealInteraction_Authority_OnPlayerHealed final
{
public:
	class ADBDPlayer*                             HealingPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADBDPlayer*                             HealedPlayer;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_Authority_OnPlayerHealed) == 0x000008, "Wrong alignment on HealInteraction_Authority_OnPlayerHealed");
static_assert(sizeof(HealInteraction_Authority_OnPlayerHealed) == 0x000010, "Wrong size on HealInteraction_Authority_OnPlayerHealed");
static_assert(offsetof(HealInteraction_Authority_OnPlayerHealed, HealingPlayer) == 0x000000, "Member 'HealInteraction_Authority_OnPlayerHealed::HealingPlayer' has a wrong offset!");
static_assert(offsetof(HealInteraction_Authority_OnPlayerHealed, HealedPlayer) == 0x000008, "Member 'HealInteraction_Authority_OnPlayerHealed::HealedPlayer' has a wrong offset!");

// Function DBDInteraction.HealInteraction.Authority_OnSurvivorHealed
// 0x0018 (0x0018 - 0x0000)
struct HealInteraction_Authority_OnSurvivorHealed final
{
public:
	struct FCamperHealResult                      HealResult;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_Authority_OnSurvivorHealed) == 0x000008, "Wrong alignment on HealInteraction_Authority_OnSurvivorHealed");
static_assert(sizeof(HealInteraction_Authority_OnSurvivorHealed) == 0x000018, "Wrong size on HealInteraction_Authority_OnSurvivorHealed");
static_assert(offsetof(HealInteraction_Authority_OnSurvivorHealed, HealResult) == 0x000000, "Member 'HealInteraction_Authority_OnSurvivorHealed::HealResult' has a wrong offset!");

// Function DBDInteraction.HealInteraction.GetHealScorePercent
// 0x0008 (0x0008 - 0x0000)
struct HealInteraction_GetHealScorePercent final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_GetHealScorePercent) == 0x000004, "Wrong alignment on HealInteraction_GetHealScorePercent");
static_assert(sizeof(HealInteraction_GetHealScorePercent) == 0x000008, "Wrong size on HealInteraction_GetHealScorePercent");
static_assert(offsetof(HealInteraction_GetHealScorePercent, Delta) == 0x000000, "Member 'HealInteraction_GetHealScorePercent::Delta' has a wrong offset!");
static_assert(offsetof(HealInteraction_GetHealScorePercent, ReturnValue) == 0x000004, "Member 'HealInteraction_GetHealScorePercent::ReturnValue' has a wrong offset!");

// Function DBDInteraction.HealInteraction.GetTargetSurvivor
// 0x0008 (0x0008 - 0x0000)
struct HealInteraction_GetTargetSurvivor final
{
public:
	class ACamperPlayer*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HealInteraction_GetTargetSurvivor) == 0x000008, "Wrong alignment on HealInteraction_GetTargetSurvivor");
static_assert(sizeof(HealInteraction_GetTargetSurvivor) == 0x000008, "Wrong size on HealInteraction_GetTargetSurvivor");
static_assert(offsetof(HealInteraction_GetTargetSurvivor, ReturnValue) == 0x000000, "Member 'HealInteraction_GetTargetSurvivor::ReturnValue' has a wrong offset!");

// Function DBDInteraction.HealInteraction.HasChargedMedkit
// 0x0010 (0x0010 - 0x0000)
struct HealInteraction_HasChargedMedkit final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HealInteraction_HasChargedMedkit) == 0x000008, "Wrong alignment on HealInteraction_HasChargedMedkit");
static_assert(sizeof(HealInteraction_HasChargedMedkit) == 0x000010, "Wrong size on HealInteraction_HasChargedMedkit");
static_assert(offsetof(HealInteraction_HasChargedMedkit, Player) == 0x000000, "Member 'HealInteraction_HasChargedMedkit::Player' has a wrong offset!");
static_assert(offsetof(HealInteraction_HasChargedMedkit, ReturnValue) == 0x000008, "Member 'HealInteraction_HasChargedMedkit::ReturnValue' has a wrong offset!");

// Function DBDInteraction.HookSurvivorDefinition.GetMeatHook
// 0x0008 (0x0008 - 0x0000)
struct HookSurvivorDefinition_GetMeatHook final
{
public:
	class AMeatHook*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HookSurvivorDefinition_GetMeatHook) == 0x000008, "Wrong alignment on HookSurvivorDefinition_GetMeatHook");
static_assert(sizeof(HookSurvivorDefinition_GetMeatHook) == 0x000008, "Wrong size on HookSurvivorDefinition_GetMeatHook");
static_assert(offsetof(HookSurvivorDefinition_GetMeatHook, ReturnValue) == 0x000000, "Member 'HookSurvivorDefinition_GetMeatHook::ReturnValue' has a wrong offset!");

// Function DBDInteraction.InstallBrandNewPartInteraction.Multicast_OnTriggerSkillCheck
// 0x0008 (0x0008 - 0x0000)
struct InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck) == 0x000008, "Wrong alignment on InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck");
static_assert(sizeof(InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck) == 0x000008, "Wrong size on InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck");
static_assert(offsetof(InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck, Player) == 0x000000, "Member 'InstallBrandNewPartInteraction_Multicast_OnTriggerSkillCheck::Player' has a wrong offset!");

// Function DBDInteraction.LinkedVomitInteraction.GetVomitStateComponent
// 0x0008 (0x0008 - 0x0000)
struct LinkedVomitInteraction_GetVomitStateComponent final
{
public:
	class UVomitStateComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkedVomitInteraction_GetVomitStateComponent) == 0x000008, "Wrong alignment on LinkedVomitInteraction_GetVomitStateComponent");
static_assert(sizeof(LinkedVomitInteraction_GetVomitStateComponent) == 0x000008, "Wrong size on LinkedVomitInteraction_GetVomitStateComponent");
static_assert(offsetof(LinkedVomitInteraction_GetVomitStateComponent, ReturnValue) == 0x000000, "Member 'LinkedVomitInteraction_GetVomitStateComponent::ReturnValue' has a wrong offset!");

// Function DBDInteraction.LinkedVomitInteraction.IsVomiting
// 0x0001 (0x0001 - 0x0000)
struct LinkedVomitInteraction_IsVomiting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinkedVomitInteraction_IsVomiting) == 0x000001, "Wrong alignment on LinkedVomitInteraction_IsVomiting");
static_assert(sizeof(LinkedVomitInteraction_IsVomiting) == 0x000001, "Wrong size on LinkedVomitInteraction_IsVomiting");
static_assert(offsetof(LinkedVomitInteraction_IsVomiting, ReturnValue) == 0x000000, "Member 'LinkedVomitInteraction_IsVomiting::ReturnValue' has a wrong offset!");

// Function DBDInteraction.SeanceRitualInteraction.GetInteractionChargeSpeedMultiplier_Implementation
// 0x0010 (0x0010 - 0x0000)
struct SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation final
{
public:
	const class ADBDPlayer*                       Character;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000008, "Wrong alignment on SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(sizeof(SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation) == 0x000010, "Wrong size on SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation");
static_assert(offsetof(SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation, Character) == 0x000000, "Member 'SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation::Character' has a wrong offset!");
static_assert(offsetof(SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation, ReturnValue) == 0x000008, "Member 'SeanceRitualInteraction_GetInteractionChargeSpeedMultiplier_Implementation::ReturnValue' has a wrong offset!");

// Function DBDInteraction.SeanceRitualInteraction.GetOwningRitualSpot
// 0x0008 (0x0008 - 0x0000)
struct SeanceRitualInteraction_GetOwningRitualSpot final
{
public:
	class ASeanceRitualSpot*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeanceRitualInteraction_GetOwningRitualSpot) == 0x000008, "Wrong alignment on SeanceRitualInteraction_GetOwningRitualSpot");
static_assert(sizeof(SeanceRitualInteraction_GetOwningRitualSpot) == 0x000008, "Wrong size on SeanceRitualInteraction_GetOwningRitualSpot");
static_assert(offsetof(SeanceRitualInteraction_GetOwningRitualSpot, ReturnValue) == 0x000000, "Member 'SeanceRitualInteraction_GetOwningRitualSpot::ReturnValue' has a wrong offset!");

// Function DBDInteraction.SeanceRitualInteraction.IsInteractionPossibleInternal
// 0x0010 (0x0010 - 0x0000)
struct SeanceRitualInteraction_IsInteractionPossibleInternal final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeanceRitualInteraction_IsInteractionPossibleInternal) == 0x000008, "Wrong alignment on SeanceRitualInteraction_IsInteractionPossibleInternal");
static_assert(sizeof(SeanceRitualInteraction_IsInteractionPossibleInternal) == 0x000010, "Wrong size on SeanceRitualInteraction_IsInteractionPossibleInternal");
static_assert(offsetof(SeanceRitualInteraction_IsInteractionPossibleInternal, Player) == 0x000000, "Member 'SeanceRitualInteraction_IsInteractionPossibleInternal::Player' has a wrong offset!");
static_assert(offsetof(SeanceRitualInteraction_IsInteractionPossibleInternal, ReturnValue) == 0x000008, "Member 'SeanceRitualInteraction_IsInteractionPossibleInternal::ReturnValue' has a wrong offset!");

// Function DBDInteraction.UnhookReplicationComponent.Multicast_SetPlayerBeingUnhooked
// 0x0010 (0x0010 - 0x0000)
struct UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked final
{
public:
	class UUnhook*                                UnhookInteraction;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          PlayerBeingUnhooked;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked) == 0x000008, "Wrong alignment on UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked");
static_assert(sizeof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked) == 0x000010, "Wrong size on UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked");
static_assert(offsetof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked, UnhookInteraction) == 0x000000, "Member 'UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked::UnhookInteraction' has a wrong offset!");
static_assert(offsetof(UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked, PlayerBeingUnhooked) == 0x000008, "Member 'UnhookReplicationComponent_Multicast_SetPlayerBeingUnhooked::PlayerBeingUnhooked' has a wrong offset!");

}

