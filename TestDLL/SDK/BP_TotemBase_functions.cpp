#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TotemBase

#include "Basic.hpp"

#include "BP_TotemBase_classes.hpp"
#include "BP_TotemBase_parameters.hpp"


namespace SDK
{

// Function BP_TotemBase.BP_TotemBase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.TML_EntityBlockerDissolve__UpdateFunc
// (BlueprintEvent)

void ABP_TotemBase_C::TML_EntityBlockerDissolve__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "TML_EntityBlockerDissolve__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.TML_EntityBlockerDissolve__FinishedFunc
// (BlueprintEvent)

void ABP_TotemBase_C::TML_EntityBlockerDissolve__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "TML_EntityBlockerDissolve__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.TML_BoonLightBeamController__UpdateFunc
// (BlueprintEvent)

void ABP_TotemBase_C::TML_BoonLightBeamController__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "TML_BoonLightBeamController__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.TML_BoonLightBeamController__FinishedFunc
// (BlueprintEvent)

void ABP_TotemBase_C::TML_BoonLightBeamController__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "TML_BoonLightBeamController__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Switch Oni Weapons To Normal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Switch_Oni_Weapons_To_Normal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Switch Oni Weapons To Normal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Switch Kanobo to Normal Mode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Switch_Kanobo_to_Normal_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Switch Kanobo to Normal Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Switch Kanobo To Demon Mode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Switch_Kanobo_To_Demon_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Switch Kanobo To Demon Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Survivor_BoonRadius_Exit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Survivor_BoonRadius_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Survivor_BoonRadius_Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Survivor_BoonRadius_Enter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Survivor_BoonRadius_Enter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Survivor_BoonRadius_Enter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Stop Travelling PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Stop_Travelling_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Stop Travelling PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Stop Travelling Dissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Stop_Travelling_Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Stop Travelling Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Stop Saliva VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Stop_Saliva_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Stop Saliva VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Stop Pounce VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Stop_Pounce_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Stop Pounce VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.StartDeathBedRelocateVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::StartDeathBedRelocateVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "StartDeathBedRelocateVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.StartDeathBedDissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::StartDeathBedDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "StartDeathBedDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Start Travelling PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Start_Travelling_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Start Travelling PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Start Travelling Dissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Start_Travelling_Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Start Travelling Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Start Saliva VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Start_Saliva_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Start Saliva VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Start Pounce VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Start_Pounce_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Start Pounce VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.SpawnFullScreenBlood
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::SpawnFullScreenBlood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "SpawnFullScreenBlood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.SpawnFakeBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::SpawnFakeBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "SpawnFakeBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ShowSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ShowSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ShowSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ShowGunBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ShowGunBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ShowGunBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ShowDemonCosmetic
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ShowDemonCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ShowDemonCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Show Oni Katana
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Show_Oni_Katana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Show Oni Katana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.SetPlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::SetPlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "SetPlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.SetHighlightedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::SetHighlightedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "SetHighlightedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ReturnToDemonMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ReturnToDemonMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ReturnToDemonMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ReturnOniToNormal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ReturnOniToNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ReturnOniToNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ReceiveEndPlay");

	Params::BP_TotemBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TotemBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.PostCleanseAkEventss
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETotemState                             OldTotemState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::PostCleanseAkEventss(ETotemState OldTotemState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "PostCleanseAkEventss");

	Params::BP_TotemBase_C_PostCleanseAkEventss Parms{};

	Parms.OldTotemState = OldTotemState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.OnUnblockTotemCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::OnUnblockTotemCosmetic(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnUnblockTotemCosmetic");

	Params::BP_TotemBase_C_OnUnblockTotemCosmetic Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.OnTotemStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETotemState                             OldTotemState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETotemState                             NewTotemState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::OnTotemStateChanged(const ETotemState OldTotemState, const ETotemState NewTotemState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnTotemStateChanged");

	Params::BP_TotemBase_C_OnTotemStateChanged Parms{};

	Parms.OldTotemState = OldTotemState;
	Parms.NewTotemState = NewTotemState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.OnHexUnbound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::OnHexUnbound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnHexUnbound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.OnHexBound
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::OnHexBound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnHexBound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.OnCleanseTotem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATotem*                           Totem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ETotemState                             OldTotemState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::OnCleanseTotem(class ATotem* Totem, const ETotemState OldTotemState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnCleanseTotem");

	Params::BP_TotemBase_C_OnCleanseTotem Parms{};

	Parms.Totem = Totem;
	Parms.OldTotemState = OldTotemState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.OnBoonUnbound
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::OnBoonUnbound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnBoonUnbound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.OnBoonBound
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::OnBoonBound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnBoonBound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.OnBlockTotemCosmetic
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::OnBlockTotemCosmetic(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "OnBlockTotemCosmetic");

	Params::BP_TotemBase_C_OnBlockTotemCosmetic Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.On Execution
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::On_Execution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "On Execution");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Killer_LungeAttack_Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Killer_LungeAttack_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Killer_LungeAttack_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Killer_LungeAttack_End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Killer_LungeAttack_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Killer_LungeAttack_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_WrongLandingVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WrongLanding                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K22_WrongLandingVignette(bool WrongLanding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_WrongLandingVignette");

	Params::BP_TotemBase_C_K22_WrongLandingVignette Parms{};

	Parms.WrongLanding = WrongLanding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_WrongLanding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Wrong_Landing                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K22_WrongLanding(bool Wrong_Landing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_WrongLanding");

	Params::BP_TotemBase_C_K22_WrongLanding Parms{};

	Parms.Wrong_Landing = Wrong_Landing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_SpawnWipeVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_SpawnWipeVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_SpawnWipeVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_ReleaseBrother
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_ReleaseBrother()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_ReleaseBrother");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_QuickDissolveBrother
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_QuickDissolveBrother()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_QuickDissolveBrother");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_MembraneRecovery
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_MembraneRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_MembraneRecovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_MembraneDelete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_MembraneDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_MembraneDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_JumpTrail_Deactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_JumpTrail_Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_JumpTrail_Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_JumpTrail_Activate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_JumpTrail_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_JumpTrail_Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_Jump_Inactive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_Jump_Inactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_Jump_Inactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_Jump_Active
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_Jump_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_Jump_Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_IsAttachedLocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttachedLocker                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K22_IsAttachedLocker(bool IsAttachedLocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_IsAttachedLocker");

	Params::BP_TotemBase_C_K22_IsAttachedLocker Parms{};

	Parms.IsAttachedLocker = IsAttachedLocker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightSuccessfulAttackStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_HighlightSuccessfulAttackStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightSuccessfulAttackStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightSuccessfulAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_HighlightSuccessfulAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightSuccessfulAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightDormantMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDormantMain_                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K22_HighlightDormantMain(bool IsDormantMain_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightDormantMain");

	Params::BP_TotemBase_C_K22_HighlightDormantMain Parms{};

	Parms.IsDormantMain_ = IsDormantMain_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightMissJump_Stop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_HighlightMissJump_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightMissJump_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightDormant
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDormant_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K22_HighlightDormant(bool IsDormant_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightDormant");

	Params::BP_TotemBase_C_K22_HighlightDormant Parms{};

	Parms.IsDormant_ = IsDormant_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_HighlightMissJump
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_HighlightMissJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_HighlightMissJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_DetachedFromSurvivor_VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_DetachedFromSurvivor_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_DetachedFromSurvivor_VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_BrotherDissolveLocker
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_BrotherDissolveLocker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_BrotherDissolveLocker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_BabyRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_BabyRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_BabyRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_BabyBloodDissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_BabyBloodDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_BabyBloodDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_AttachedToSurvivor_VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_AttachedToSurvivor_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_AttachedToSurvivor_VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_Killer_RemoveVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_Killer_RemoveVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_Killer_RemoveVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_Killer_PlaceVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_Killer_PlaceVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_Killer_PlaceVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_Killer_BombSmokeColor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_Killer_BombSmokeColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_Killer_BombSmokeColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_Killer_AntidoteEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_Killer_AntidoteEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_Killer_AntidoteEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_Killer_AntidoteBegin
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_Killer_AntidoteBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_Killer_AntidoteBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_GetToxinVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBombType                               Bomb_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::K12_GetToxinVignette(EBombType Bomb_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_GetToxinVignette");

	Params::BP_TotemBase_C_K12_GetToxinVignette Parms{};

	Parms.Bomb_Type = Bomb_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.K12_GetAntidoteVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K12_GetAntidoteVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K12_GetAntidoteVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K22_DormantAttachedSlasher
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K22_DormantAttachedSlasher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K22_DormantAttachedSlasher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K05_TrapImpactOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K05_TrapImpactOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K05_TrapImpactOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K05_TrapImpact
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K05_TrapImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K05_TrapImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K05_SetTrap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K05_SetTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K05_SetTrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K05_BloodDrops
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K05_BloodDrops()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K05_BloodDrops");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K04_TelekinesisOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K04_TelekinesisOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K04_TelekinesisOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K04_TelekinesisOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K04_TelekinesisOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K04_TelekinesisOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K04_InvisibleOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K04_InvisibleOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K04_InvisibleOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.K04_InvisibleOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::K04_InvisibleOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "K04_InvisibleOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HideSyringeOnStun
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::HideSyringeOnStun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HideSyringeOnStun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HideSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::HideSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HideSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HideGunBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::HideGunBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HideGunBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HideDemonCosmetic
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::HideDemonCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HideDemonCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Hide Oni Katana_TPV
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Hide_Oni_Katana_TPV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Hide Oni Katana_TPV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Hide Oni Katana
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Hide_Oni_Katana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Hide Oni Katana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HexTotem_PlayVAT__UpdateFunc
// (BlueprintEvent)

void ABP_TotemBase_C::HexTotem_PlayVAT__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HexTotem_PlayVAT__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.HexTotem_PlayVAT__FinishedFunc
// (BlueprintEvent)

void ABP_TotemBase_C::HexTotem_PlayVAT__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "HexTotem_PlayVAT__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ExecuteUbergraph_BP_TotemBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::ExecuteUbergraph_BP_TotemBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ExecuteUbergraph_BP_TotemBase");

	Params::BP_TotemBase_C_ExecuteUbergraph_BP_TotemBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.DisableDemonMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::DisableDemonMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "DisableDemonMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Destroy Blood Orb
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Destroy_Blood_Orb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Destroy Blood Orb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.DeactivateKnockoutVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::DeactivateKnockoutVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "DeactivateKnockoutVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Camper_AntidoteBoostVignette_Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Camper_AntidoteBoostVignette_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Camper_AntidoteBoostVignette_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Camper_AntidoteBoostVignette_End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Camper_AntidoteBoostVignette_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Camper_AntidoteBoostVignette_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.Boon_Unbound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::Boon_Unbound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "Boon_Unbound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.AnimateLiquidSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::AnimateLiquidSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "AnimateLiquidSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.AddBloodDrippingGKMoriMale
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::AddBloodDrippingGKMoriMale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "AddBloodDrippingGKMoriMale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateVignetteOnWallCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivateVignetteOnWallCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateVignetteOnWallCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateSacrificeCamBlood
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivateSacrificeCamBlood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateSacrificeCamBlood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivatePounceStateVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivatePounceStateVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivatePounceStateVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivatePlayerLightningVFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         LightningFX                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Intense                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::ActivatePlayerLightningVFX(const class UMaterialInstanceDynamic*& LightningFX, bool Intense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivatePlayerLightningVFX");

	Params::BP_TotemBase_C_ActivatePlayerLightningVFX Parms{};

	Parms.LightningFX = LightningFX;
	Parms.Intense = Intense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivatePlayerGlitchVFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         GlitchFX                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Face                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Madness                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::ActivatePlayerGlitchVFX(const class UMaterialInstanceDynamic*& GlitchFX, const bool Face, bool Madness, bool Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivatePlayerGlitchVFX");

	Params::BP_TotemBase_C_ActivatePlayerGlitchVFX Parms{};

	Parms.GlitchFX = GlitchFX;
	Parms.Face = Face;
	Parms.Madness = Madness;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivatePlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivatePlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivatePlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateLocalPlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivateLocalPlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateLocalPlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateKnockoutVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivateKnockoutVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateKnockoutVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateEndGameVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TotemBase_C::ActivateEndGameVignette(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateEndGameVignette");

	Params::BP_TotemBase_C_ActivateEndGameVignette Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TotemBase.BP_TotemBase_C.ActivateAttemptEscapeVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_TotemBase_C::ActivateAttemptEscapeVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "ActivateAttemptEscapeVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TotemBase.BP_TotemBase_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Interactor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_TotemBase_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "IsInterruptionPossible");

	Params::BP_TotemBase_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Interactor = Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TotemBase.BP_TotemBase_C.GetMainInteractor
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UInteractor*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UInteractor* ABP_TotemBase_C::GetMainInteractor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetMainInteractor");

	Params::BP_TotemBase_C_GetMainInteractor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TotemBase.BP_TotemBase_C.GetInfectedParticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UParticleSystemComponent*> InfectedParticleArray                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_TotemBase_C::GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetInfectedParticles");

	Params::BP_TotemBase_C_GetInfectedParticles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedParticleArray != nullptr)
		*InfectedParticleArray = std::move(Parms.InfectedParticleArray);
}


// Function BP_TotemBase.BP_TotemBase_C.GetInfectedDecals
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UDecalComponent*>          InfectedDecals                                         (Parm, OutParm, ContainsInstancedReference)

void ABP_TotemBase_C::GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetInfectedDecals");

	Params::BP_TotemBase_C_GetInfectedDecals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedDecals != nullptr)
		*InfectedDecals = std::move(Parms.InfectedDecals);
}


// Function BP_TotemBase.BP_TotemBase_C.GetCleanseTotemInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UChargeableInteractionDefinition* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UChargeableInteractionDefinition* ABP_TotemBase_C::GetCleanseTotemInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetCleanseTotemInteraction");

	Params::BP_TotemBase_C_GetCleanseTotemInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TotemBase.BP_TotemBase_C.GetBlessTotemInteraction
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UChargeableInteractionDefinition* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UChargeableInteractionDefinition* ABP_TotemBase_C::GetBlessTotemInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetBlessTotemInteraction");

	Params::BP_TotemBase_C_GetBlessTotemInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TotemBase.BP_TotemBase_C.GetAkAudioComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UAkComponent*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UAkComponent* ABP_TotemBase_C::GetAkAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TotemBase_C", "GetAkAudioComponent");

	Params::BP_TotemBase_C_GetAkAudioComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

