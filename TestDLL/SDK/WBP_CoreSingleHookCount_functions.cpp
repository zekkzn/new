#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreSingleHookCount

#include "Basic.hpp"

#include "WBP_CoreSingleHookCount_classes.hpp"
#include "WBP_CoreSingleHookCount_parameters.hpp"


namespace SDK
{

// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.UpdateState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESingleHookState                        HookState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreSingleHookCount_C::UpdateState(ESingleHookState HookState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreSingleHookCount_C", "UpdateState");

	Params::WBP_CoreSingleHookCount_C_UpdateState Parms{};

	Parms.HookState = HookState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.playSingleHookAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_CoreSingleHookCount_C::PlaySingleHookAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreSingleHookCount_C", "playSingleHookAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.InitHookSegment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSmallVersion                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreSingleHookCount_C::InitHookSegment(bool IsSmallVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreSingleHookCount_C", "InitHookSegment");

	Params::WBP_CoreSingleHookCount_C_InitHookSegment Parms{};

	Parms.IsSmallVersion = IsSmallVersion;

	UObject::ProcessEvent(Func, &Parms);
}

}

