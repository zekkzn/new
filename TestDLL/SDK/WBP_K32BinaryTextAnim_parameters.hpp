#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K32BinaryTextAnim

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_K32BinaryTextAnim_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_K32BinaryTextAnim_C_PreConstruct");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_PreConstruct) == 0x000001, "Wrong size on WBP_K32BinaryTextAnim_C_PreConstruct");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.SwitchMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_K32BinaryTextAnim_C_SwitchMode final
{
public:
	bool                                          IsInAllienMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_SwitchMode) == 0x000001, "Wrong alignment on WBP_K32BinaryTextAnim_C_SwitchMode");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_SwitchMode) == 0x000001, "Wrong size on WBP_K32BinaryTextAnim_C_SwitchMode");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_SwitchMode, IsInAllienMode) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_SwitchMode::IsInAllienMode' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.SetBinaryTextColor
// 0x0010 (0x0010 - 0x0000)
struct WBP_K32BinaryTextAnim_C_SetBinaryTextColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_SetBinaryTextColor) == 0x000004, "Wrong alignment on WBP_K32BinaryTextAnim_C_SetBinaryTextColor");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_SetBinaryTextColor) == 0x000010, "Wrong size on WBP_K32BinaryTextAnim_C_SetBinaryTextColor");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_SetBinaryTextColor, Color) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_SetBinaryTextColor::Color' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.ResetText
// 0x0018 (0x0018 - 0x0000)
struct WBP_K32BinaryTextAnim_C_ResetText final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_ResetText) == 0x000008, "Wrong alignment on WBP_K32BinaryTextAnim_C_ResetText");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_ResetText) == 0x000018, "Wrong size on WBP_K32BinaryTextAnim_C_ResetText");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ResetText, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_ResetText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.RemoveFirstLine
// 0x0030 (0x0030 - 0x0000)
struct WBP_K32BinaryTextAnim_C_RemoveFirstLine final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_RemoveFirstLine) == 0x000008, "Wrong alignment on WBP_K32BinaryTextAnim_C_RemoveFirstLine");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_RemoveFirstLine) == 0x000030, "Wrong size on WBP_K32BinaryTextAnim_C_RemoveFirstLine");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_RemoveFirstLine, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_RemoveFirstLine::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_RemoveFirstLine, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WBP_K32BinaryTextAnim_C_RemoveFirstLine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_RemoveFirstLine, CallFunc_RightChop_ReturnValue) == 0x000020, "Member 'WBP_K32BinaryTextAnim_C_RemoveFirstLine::CallFunc_RightChop_ReturnValue' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.PrepareNextLine
// 0x0028 (0x0028 - 0x0000)
struct WBP_K32BinaryTextAnim_C_PrepareNextLine final
{
public:
	bool                                          IsSWitching;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_PrepareNextLine) == 0x000008, "Wrong alignment on WBP_K32BinaryTextAnim_C_PrepareNextLine");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_PrepareNextLine) == 0x000028, "Wrong size on WBP_K32BinaryTextAnim_C_PrepareNextLine");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, IsSWitching) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::IsSWitching' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, CallFunc_Len_ReturnValue) == 0x000018, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_PrepareNextLine, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'WBP_K32BinaryTextAnim_C_PrepareNextLine::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.ExecuteUbergraph_WBP_K32BinaryTextAnim
// 0x0090 (0x0090 - 0x0000)
struct WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInAllienMode;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0044(0x0014)()
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URichTextBlockScalableImageDecorator*   K2Node_DynamicCast_AsRich_Text_Block_Scalable_Image_Decorator; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim) == 0x000008, "Wrong alignment on WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim) == 0x000090, "Wrong size on WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, EntryPoint) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_Len_ReturnValue) == 0x00000C, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_CustomEvent_IsInAllienMode) == 0x000025, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_CustomEvent_IsInAllienMode' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_Event_IsDesignTime) == 0x000026, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000030, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_CustomEvent_Color) == 0x000034, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_MakeStruct_SlateColor) == 0x000044, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000058, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_DynamicCast_AsRich_Text_Block_Scalable_Image_Decorator) == 0x000060, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_DynamicCast_AsRich_Text_Block_Scalable_Image_Decorator' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000070, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000078, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_Delay_Duration_ImplicitCast) == 0x000084, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000088, "Member 'WBP_K32BinaryTextAnim_C_ExecuteUbergraph_WBP_K32BinaryTextAnim::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function WBP_K32BinaryTextAnim.WBP_K32BinaryTextAnim_C.AddCharacter
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_K32BinaryTextAnim_C_AddCharacter final
{
public:
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0010(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32BinaryTextAnim_C_AddCharacter) == 0x000008, "Wrong alignment on WBP_K32BinaryTextAnim_C_AddCharacter");
static_assert(sizeof(WBP_K32BinaryTextAnim_C_AddCharacter) == 0x0000C8, "Wrong size on WBP_K32BinaryTextAnim_C_AddCharacter");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Len_ReturnValue) == 0x000000, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, Temp_int_Variable) == 0x00000C, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000010, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_RandomInteger_ReturnValue) == 0x000034, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_MakeLiteralString_ReturnValue) == 0x000040, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_K32BinaryTextAnim_C_AddCharacter, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'WBP_K32BinaryTextAnim_C_AddCharacter::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

}

