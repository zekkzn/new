#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptableToolsFramework

#include "Basic.hpp"


namespace SDK
{

// Enum ScriptableToolsFramework.EToolsFrameworkOutcomePins
// NumValues: 0x0003
enum class EToolsFrameworkOutcomePins : uint8
{
	Success                                  = 0,
	Failure                                  = 1,
	EToolsFrameworkOutcomePins_MAX           = 2,
};

// Enum ScriptableToolsFramework.EScriptableToolShutdownType
// NumValues: 0x0003
enum class EScriptableToolShutdownType : uint8
{
	Complete                                 = 0,
	AcceptCancel                             = 1,
	EScriptableToolShutdownType_MAX          = 2,
};

// Enum ScriptableToolsFramework.EScriptableToolGizmoMode
// NumValues: 0x0006
enum class EScriptableToolGizmoMode : uint8
{
	TranslationOnly                          = 0,
	RotationOnly                             = 1,
	ScaleOnly                                = 2,
	Combined                                 = 3,
	FromViewportSettings                     = 4,
	EScriptableToolGizmoMode_MAX             = 5,
};

// Enum ScriptableToolsFramework.EScriptableToolGizmoCoordinateSystem
// NumValues: 0x0004
enum class EScriptableToolGizmoCoordinateSystem : uint8
{
	World                                    = 0,
	Local                                    = 1,
	FromViewportSettings                     = 2,
	EScriptableToolGizmoCoordinateSystem_MAX = 3,
};

// Enum ScriptableToolsFramework.EScriptableToolGizmoTranslation
// NumValues: 0x0009
enum class EScriptableToolGizmoTranslation : uint8
{
	None                                     = 0,
	TranslateAxisX                           = 2,
	TranslateAxisY                           = 4,
	TranslateAxisZ                           = 8,
	TranslatePlaneXY                         = 16,
	TranslatePlaneXZ                         = 32,
	TranslatePlaneYZ                         = 64,
	All                                      = 255,
	EScriptableToolGizmoTranslation_MAX      = 256,
};

// Enum ScriptableToolsFramework.EScriptableToolGizmoRotation
// NumValues: 0x0006
enum class EScriptableToolGizmoRotation : uint8
{
	None                                     = 0,
	RotateAxisX                              = 2,
	RotateAxisY                              = 4,
	RotateAxisZ                              = 8,
	All                                      = 255,
	EScriptableToolGizmoRotation_MAX         = 256,
};

// Enum ScriptableToolsFramework.EScriptableToolGizmoScale
// NumValues: 0x000A
enum class EScriptableToolGizmoScale : uint8
{
	None                                     = 0,
	ScaleAxisX                               = 2,
	ScaleAxisY                               = 4,
	ScaleAxisZ                               = 8,
	ScalePlaneXY                             = 16,
	ScalePlaneXZ                             = 32,
	ScalePlaneYZ                             = 64,
	ScaleUniform                             = 128,
	All                                      = 255,
	EScriptableToolGizmoScale_MAX            = 256,
};

// ScriptStruct ScriptableToolsFramework.ScriptableToolModifierStates
// 0x0003 (0x0003 - 0x0000)
struct FScriptableToolModifierStates final
{
public:
	bool                                          bShiftDown;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCtrlDown;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAltDown;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScriptableToolModifierStates) == 0x000001, "Wrong alignment on FScriptableToolModifierStates");
static_assert(sizeof(FScriptableToolModifierStates) == 0x000003, "Wrong size on FScriptableToolModifierStates");
static_assert(offsetof(FScriptableToolModifierStates, bShiftDown) == 0x000000, "Member 'FScriptableToolModifierStates::bShiftDown' has a wrong offset!");
static_assert(offsetof(FScriptableToolModifierStates, bCtrlDown) == 0x000001, "Member 'FScriptableToolModifierStates::bCtrlDown' has a wrong offset!");
static_assert(offsetof(FScriptableToolModifierStates, bAltDown) == 0x000002, "Member 'FScriptableToolModifierStates::bAltDown' has a wrong offset!");

// ScriptStruct ScriptableToolsFramework.ScriptableToolGizmoOptions
// 0x0018 (0x0018 - 0x0000)
struct FScriptableToolGizmoOptions final
{
public:
	EScriptableToolGizmoMode                      GizmoMode;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TranslationParts;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RotationParts;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScaleParts;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScriptableToolGizmoCoordinateSystem          CoordSystem;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapTranslation;                                  // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapRotation;                                     // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRepositionable;                                   // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNegativeScaling;                             // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FScriptableToolGizmoOptions) == 0x000004, "Wrong alignment on FScriptableToolGizmoOptions");
static_assert(sizeof(FScriptableToolGizmoOptions) == 0x000018, "Wrong size on FScriptableToolGizmoOptions");
static_assert(offsetof(FScriptableToolGizmoOptions, GizmoMode) == 0x000000, "Member 'FScriptableToolGizmoOptions::GizmoMode' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, TranslationParts) == 0x000004, "Member 'FScriptableToolGizmoOptions::TranslationParts' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, RotationParts) == 0x000008, "Member 'FScriptableToolGizmoOptions::RotationParts' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, ScaleParts) == 0x00000C, "Member 'FScriptableToolGizmoOptions::ScaleParts' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, CoordSystem) == 0x000010, "Member 'FScriptableToolGizmoOptions::CoordSystem' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, bSnapTranslation) == 0x000011, "Member 'FScriptableToolGizmoOptions::bSnapTranslation' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, bSnapRotation) == 0x000012, "Member 'FScriptableToolGizmoOptions::bSnapRotation' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, bRepositionable) == 0x000013, "Member 'FScriptableToolGizmoOptions::bRepositionable' has a wrong offset!");
static_assert(offsetof(FScriptableToolGizmoOptions, bAllowNegativeScaling) == 0x000014, "Member 'FScriptableToolGizmoOptions::bAllowNegativeScaling' has a wrong offset!");

}

