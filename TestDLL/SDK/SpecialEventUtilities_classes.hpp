#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventUtilities

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "SpecialEventUtilities_structs.hpp"


namespace SDK
{

// Class SpecialEventUtilities.RespawnableInteractable
// 0x0028 (0x03D0 - 0x03A8)
class ARespawnableInteractable : public AInteractable
{
public:
	FMulticastInlineDelegateProperty_             OnInteractionEnded;                                // 0x03A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnIsInteractingChanged;                            // 0x03B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          _isHidden;                                         // 0x03C8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHidden();
	void OnRep_IsHidden();
	void OnUnhidden();

	bool IsHidden() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableInteractable">();
	}
	static class ARespawnableInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARespawnableInteractable>();
	}
};
static_assert(alignof(ARespawnableInteractable) == 0x000008, "Wrong alignment on ARespawnableInteractable");
static_assert(sizeof(ARespawnableInteractable) == 0x0003D0, "Wrong size on ARespawnableInteractable");
static_assert(offsetof(ARespawnableInteractable, OnInteractionEnded) == 0x0003A8, "Member 'ARespawnableInteractable::OnInteractionEnded' has a wrong offset!");
static_assert(offsetof(ARespawnableInteractable, OnIsInteractingChanged) == 0x0003B8, "Member 'ARespawnableInteractable::OnIsInteractingChanged' has a wrong offset!");
static_assert(offsetof(ARespawnableInteractable, _isHidden) == 0x0003C8, "Member 'ARespawnableInteractable::_isHidden' has a wrong offset!");

// Class SpecialEventUtilities.RespawningEventComponent
// 0x0010 (0x00B8 - 0x00A8)
class URespawningEventComponent : public UActorComponent
{
public:
	class URespawnableStrategy*                   _respawnableStrategy;                              // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URespawnablePositioner*                 _respawnablePositioner;                            // 0x00B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnIsInteractingWithAnyRespawnableInteractableChanged(class ARespawnableInteractable* RespawnableInteractable, bool IsInteracting);
	void DBD_ForceRespawnSpecialEventObject();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawningEventComponent">();
	}
	static class URespawningEventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawningEventComponent>();
	}
};
static_assert(alignof(URespawningEventComponent) == 0x000008, "Wrong alignment on URespawningEventComponent");
static_assert(sizeof(URespawningEventComponent) == 0x0000B8, "Wrong size on URespawningEventComponent");
static_assert(offsetof(URespawningEventComponent, _respawnableStrategy) == 0x0000A8, "Member 'URespawningEventComponent::_respawnableStrategy' has a wrong offset!");
static_assert(offsetof(URespawningEventComponent, _respawnablePositioner) == 0x0000B0, "Member 'URespawningEventComponent::_respawnablePositioner' has a wrong offset!");

// Class SpecialEventUtilities.DebugTimedRespawnableTriggerCountdownTimer
// 0x0008 (0x00B0 - 0x00A8)
class UDebugTimedRespawnableTriggerCountdownTimer final : public UActorComponent
{
public:
	float                                         _countdownTimeRemaining;                           // 0x00A8(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_CountdownTimeRemaining();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugTimedRespawnableTriggerCountdownTimer">();
	}
	static class UDebugTimedRespawnableTriggerCountdownTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugTimedRespawnableTriggerCountdownTimer>();
	}
};
static_assert(alignof(UDebugTimedRespawnableTriggerCountdownTimer) == 0x000008, "Wrong alignment on UDebugTimedRespawnableTriggerCountdownTimer");
static_assert(sizeof(UDebugTimedRespawnableTriggerCountdownTimer) == 0x0000B0, "Wrong size on UDebugTimedRespawnableTriggerCountdownTimer");
static_assert(offsetof(UDebugTimedRespawnableTriggerCountdownTimer, _countdownTimeRemaining) == 0x0000A8, "Member 'UDebugTimedRespawnableTriggerCountdownTimer::_countdownTimeRemaining' has a wrong offset!");

// Class SpecialEventUtilities.DisableActorOnEventsComponent
// 0x0020 (0x00C8 - 0x00A8)
class UDisableActorOnEventsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   _triggerEvents;                                    // 0x00B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisableActorOnEventsComponent">();
	}
	static class UDisableActorOnEventsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisableActorOnEventsComponent>();
	}
};
static_assert(alignof(UDisableActorOnEventsComponent) == 0x000008, "Wrong alignment on UDisableActorOnEventsComponent");
static_assert(sizeof(UDisableActorOnEventsComponent) == 0x0000C8, "Wrong size on UDisableActorOnEventsComponent");
static_assert(offsetof(UDisableActorOnEventsComponent, _triggerEvents) == 0x0000B8, "Member 'UDisableActorOnEventsComponent::_triggerEvents' has a wrong offset!");

// Class SpecialEventUtilities.RespawnableTrigger
// 0x0000 (0x00A8 - 0x00A8)
class URespawnableTrigger : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableTrigger">();
	}
	static class URespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnableTrigger>();
	}
};
static_assert(alignof(URespawnableTrigger) == 0x000008, "Wrong alignment on URespawnableTrigger");
static_assert(sizeof(URespawnableTrigger) == 0x0000A8, "Wrong size on URespawnableTrigger");

// Class SpecialEventUtilities.InteractionRespawnableTrigger
// 0x0008 (0x00B0 - 0x00A8)
class UInteractionRespawnableTrigger : public URespawnableTrigger
{
public:
	class URespawningEventComponent*              _respawningEventComponent;                         // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Authority_OnInteractionEnded(class ARespawnableInteractable* RespawnableInteractable);
	void Authority_OnNewRespawnableSubscribed(class ARespawnableInteractable* NewRespawnableInteractable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InteractionRespawnableTrigger">();
	}
	static class UInteractionRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionRespawnableTrigger>();
	}
};
static_assert(alignof(UInteractionRespawnableTrigger) == 0x000008, "Wrong alignment on UInteractionRespawnableTrigger");
static_assert(sizeof(UInteractionRespawnableTrigger) == 0x0000B0, "Wrong size on UInteractionRespawnableTrigger");
static_assert(offsetof(UInteractionRespawnableTrigger, _respawningEventComponent) == 0x0000A8, "Member 'UInteractionRespawnableTrigger::_respawningEventComponent' has a wrong offset!");

// Class SpecialEventUtilities.PlayerEventDispatcher
// 0x0090 (0x0138 - 0x00A8)
class UPlayerEventDispatcher final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x90];                                      // 0x00A8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerEventDispatcher">();
	}
	static class UPlayerEventDispatcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerEventDispatcher>();
	}
};
static_assert(alignof(UPlayerEventDispatcher) == 0x000008, "Wrong alignment on UPlayerEventDispatcher");
static_assert(sizeof(UPlayerEventDispatcher) == 0x000138, "Wrong size on UPlayerEventDispatcher");

// Class SpecialEventUtilities.RespawnablePositioner
// 0x0028 (0x00D0 - 0x00A8)
class URespawnablePositioner final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnIsInteractingWithAnyRespawnableInteractableChangedEvent; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ARespawnableInteractable*>       _respawnableInteractables;                         // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnIsInteractingChangedEvent(class ARespawnableInteractable* RespawnableInteractable, bool IsInteracting);

	const TArray<class ARespawnableInteractable*> Authority_GetRespawnables() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnablePositioner">();
	}
	static class URespawnablePositioner* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnablePositioner>();
	}
};
static_assert(alignof(URespawnablePositioner) == 0x000008, "Wrong alignment on URespawnablePositioner");
static_assert(sizeof(URespawnablePositioner) == 0x0000D0, "Wrong size on URespawnablePositioner");
static_assert(offsetof(URespawnablePositioner, OnIsInteractingWithAnyRespawnableInteractableChangedEvent) == 0x0000A8, "Member 'URespawnablePositioner::OnIsInteractingWithAnyRespawnableInteractableChangedEvent' has a wrong offset!");
static_assert(offsetof(URespawnablePositioner, _respawnableInteractables) == 0x0000B8, "Member 'URespawnablePositioner::_respawnableInteractables' has a wrong offset!");

// Class SpecialEventUtilities.RespawnableStrategy
// 0x0000 (0x00A8 - 0x00A8)
class URespawnableStrategy : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnableStrategy">();
	}
	static class URespawnableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnableStrategy>();
	}
};
static_assert(alignof(URespawnableStrategy) == 0x000008, "Wrong alignment on URespawnableStrategy");
static_assert(sizeof(URespawnableStrategy) == 0x0000A8, "Wrong size on URespawnableStrategy");

// Class SpecialEventUtilities.RespawnAtRandomLocationStrategy
// 0x0000 (0x00A8 - 0x00A8)
class URespawnAtRandomLocationStrategy final : public URespawnableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnAtRandomLocationStrategy">();
	}
	static class URespawnAtRandomLocationStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnAtRandomLocationStrategy>();
	}
};
static_assert(alignof(URespawnAtRandomLocationStrategy) == 0x000008, "Wrong alignment on URespawnAtRandomLocationStrategy");
static_assert(sizeof(URespawnAtRandomLocationStrategy) == 0x0000A8, "Wrong size on URespawnAtRandomLocationStrategy");

// Class SpecialEventUtilities.RespawnFurthestFromPlayersStrategy
// 0x0010 (0x00B8 - 0x00A8)
class URespawnFurthestFromPlayersStrategy final : public URespawnableStrategy
{
public:
	float                                         _collisionCapsuleHalfHeight;                       // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _collisionCapsuleRadius;                           // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawnFurthestFromPlayersStrategy">();
	}
	static class URespawnFurthestFromPlayersStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawnFurthestFromPlayersStrategy>();
	}
};
static_assert(alignof(URespawnFurthestFromPlayersStrategy) == 0x000008, "Wrong alignment on URespawnFurthestFromPlayersStrategy");
static_assert(sizeof(URespawnFurthestFromPlayersStrategy) == 0x0000B8, "Wrong size on URespawnFurthestFromPlayersStrategy");
static_assert(offsetof(URespawnFurthestFromPlayersStrategy, _collisionCapsuleHalfHeight) == 0x0000A8, "Member 'URespawnFurthestFromPlayersStrategy::_collisionCapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(URespawnFurthestFromPlayersStrategy, _collisionCapsuleRadius) == 0x0000AC, "Member 'URespawnFurthestFromPlayersStrategy::_collisionCapsuleRadius' has a wrong offset!");

// Class SpecialEventUtilities.RespawningEventUtilities
// 0x0000 (0x0030 - 0x0030)
class URespawningEventUtilities final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RespawningEventUtilities">();
	}
	static class URespawningEventUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<URespawningEventUtilities>();
	}
};
static_assert(alignof(URespawningEventUtilities) == 0x000008, "Wrong alignment on URespawningEventUtilities");
static_assert(sizeof(URespawningEventUtilities) == 0x000030, "Wrong size on URespawningEventUtilities");

// Class SpecialEventUtilities.SpecialEventInteractableCooldownComponent
// 0x0070 (0x0118 - 0x00A8)
class USpecialEventInteractableCooldownComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _cooldownTime;                                     // 0x00B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          _isOnCooldown;                                     // 0x00E0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E1[0x37];                                      // 0x00E1(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_IsOnCooldown() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventInteractableCooldownComponent">();
	}
	static class USpecialEventInteractableCooldownComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventInteractableCooldownComponent>();
	}
};
static_assert(alignof(USpecialEventInteractableCooldownComponent) == 0x000008, "Wrong alignment on USpecialEventInteractableCooldownComponent");
static_assert(sizeof(USpecialEventInteractableCooldownComponent) == 0x000118, "Wrong size on USpecialEventInteractableCooldownComponent");
static_assert(offsetof(USpecialEventInteractableCooldownComponent, _cooldownTime) == 0x0000B8, "Member 'USpecialEventInteractableCooldownComponent::_cooldownTime' has a wrong offset!");
static_assert(offsetof(USpecialEventInteractableCooldownComponent, _isOnCooldown) == 0x0000E0, "Member 'USpecialEventInteractableCooldownComponent::_isOnCooldown' has a wrong offset!");

// Class SpecialEventUtilities.SpecialEventPlayerComponent
// 0x0020 (0x00C8 - 0x00A8)
class USpecialEventPlayerComponent final : public UActorComponent
{
public:
	TArray<struct FComponentToAddInfo>            _componentsAddToSurvivor;                          // 0x00A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FComponentToAddInfo>            _componentsAddToKiller;                            // 0x00B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventPlayerComponent">();
	}
	static class USpecialEventPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventPlayerComponent>();
	}
};
static_assert(alignof(USpecialEventPlayerComponent) == 0x000008, "Wrong alignment on USpecialEventPlayerComponent");
static_assert(sizeof(USpecialEventPlayerComponent) == 0x0000C8, "Wrong size on USpecialEventPlayerComponent");
static_assert(offsetof(USpecialEventPlayerComponent, _componentsAddToSurvivor) == 0x0000A8, "Member 'USpecialEventPlayerComponent::_componentsAddToSurvivor' has a wrong offset!");
static_assert(offsetof(USpecialEventPlayerComponent, _componentsAddToKiller) == 0x0000B8, "Member 'USpecialEventPlayerComponent::_componentsAddToKiller' has a wrong offset!");

// Class SpecialEventUtilities.SpecialEventVFXHelperComponent
// 0x0130 (0x01D8 - 0x00A8)
class USpecialEventVFXHelperComponent final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnHideVFXTagAddedOrRemoved;                        // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnHideVignetteTagAddedOrRemoved;                   // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnLocallyObservedChanged;                          // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  _hideVFXTags;                                      // 0x00D8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _killerOnlyHideVFXTags;                            // 0x00F8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _survivorOnlyHideVFXTags;                          // 0x0118(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _hideVignetteTags;                                 // 0x0138(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UActorComponent>>    _componentsToSpawnOnHusk;                          // 0x0158(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_168[0x70];                                     // 0x0168(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideVfxTagAddedOrRemovedDelegate__DelegateSignature(bool Added);
	void HideVignetteTagAddedOrRemovedDelegate__DelegateSignature(bool Added);
	void LocallyObservedChangedDelegate__DelegateSignature();
	void RegisterListeners();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecialEventVFXHelperComponent">();
	}
	static class USpecialEventVFXHelperComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecialEventVFXHelperComponent>();
	}
};
static_assert(alignof(USpecialEventVFXHelperComponent) == 0x000008, "Wrong alignment on USpecialEventVFXHelperComponent");
static_assert(sizeof(USpecialEventVFXHelperComponent) == 0x0001D8, "Wrong size on USpecialEventVFXHelperComponent");
static_assert(offsetof(USpecialEventVFXHelperComponent, OnHideVFXTagAddedOrRemoved) == 0x0000A8, "Member 'USpecialEventVFXHelperComponent::OnHideVFXTagAddedOrRemoved' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, OnHideVignetteTagAddedOrRemoved) == 0x0000B8, "Member 'USpecialEventVFXHelperComponent::OnHideVignetteTagAddedOrRemoved' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, OnLocallyObservedChanged) == 0x0000C8, "Member 'USpecialEventVFXHelperComponent::OnLocallyObservedChanged' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, _hideVFXTags) == 0x0000D8, "Member 'USpecialEventVFXHelperComponent::_hideVFXTags' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, _killerOnlyHideVFXTags) == 0x0000F8, "Member 'USpecialEventVFXHelperComponent::_killerOnlyHideVFXTags' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, _survivorOnlyHideVFXTags) == 0x000118, "Member 'USpecialEventVFXHelperComponent::_survivorOnlyHideVFXTags' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, _hideVignetteTags) == 0x000138, "Member 'USpecialEventVFXHelperComponent::_hideVignetteTags' has a wrong offset!");
static_assert(offsetof(USpecialEventVFXHelperComponent, _componentsToSpawnOnHusk) == 0x000158, "Member 'USpecialEventVFXHelperComponent::_componentsToSpawnOnHusk' has a wrong offset!");

// Class SpecialEventUtilities.TimedInteractionRespawnableTrigger
// 0x0038 (0x00E8 - 0x00B0)
class UTimedInteractionRespawnableTrigger final : public UInteractionRespawnableTrigger
{
public:
	uint8                                         Pad_B0[0x38];                                      // 0x00B0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimedInteractionRespawnableTrigger">();
	}
	static class UTimedInteractionRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimedInteractionRespawnableTrigger>();
	}
};
static_assert(alignof(UTimedInteractionRespawnableTrigger) == 0x000008, "Wrong alignment on UTimedInteractionRespawnableTrigger");
static_assert(sizeof(UTimedInteractionRespawnableTrigger) == 0x0000E8, "Wrong size on UTimedInteractionRespawnableTrigger");

// Class SpecialEventUtilities.TimedRespawnableTrigger
// 0x0048 (0x00F0 - 0x00A8)
class UTimedRespawnableTrigger final : public URespawnableTrigger
{
public:
	class URespawningEventComponent*              _respawningEventComponent;                         // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x40];                                      // 0x00B0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimedRespawnableTrigger">();
	}
	static class UTimedRespawnableTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimedRespawnableTrigger>();
	}
};
static_assert(alignof(UTimedRespawnableTrigger) == 0x000008, "Wrong alignment on UTimedRespawnableTrigger");
static_assert(sizeof(UTimedRespawnableTrigger) == 0x0000F0, "Wrong size on UTimedRespawnableTrigger");
static_assert(offsetof(UTimedRespawnableTrigger, _respawningEventComponent) == 0x0000A8, "Member 'UTimedRespawnableTrigger::_respawningEventComponent' has a wrong offset!");

}

