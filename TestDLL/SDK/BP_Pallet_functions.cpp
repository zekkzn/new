#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pallet

#include "Basic.hpp"

#include "BP_Pallet_classes.hpp"
#include "BP_Pallet_parameters.hpp"


namespace SDK
{

// Function BP_Pallet.BP_Pallet_C.VFX Entity Pallet
// (BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::VFX_Entity_Pallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "VFX Entity Pallet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.UpdatePalletMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::UpdatePalletMeshVisibility(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "UpdatePalletMeshVisibility");

	Params::BP_Pallet_C_UpdatePalletMeshVisibility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.TML_Pallet_Repair__UpdateFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_Pallet_Repair__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_Pallet_Repair__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_Pallet_Repair__FinishedFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_Pallet_Repair__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_Pallet_Repair__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_Pallet_Repair__Cast Shadow__EventFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_Pallet_Repair__Cast_Shadow__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_Pallet_Repair__Cast Shadow__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_pallet_explode_anim__UpdateFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_pallet_explode_anim__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_pallet_explode_anim__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_pallet_explode_anim__FinishedFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_pallet_explode_anim__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_pallet_explode_anim__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_pallet_explode_anim__Event_smoke_debris__EventFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_pallet_explode_anim__Event_smoke_debris__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_pallet_explode_anim__Event_smoke_debris__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_pallet_explode_anim__Event shadow cast__EventFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_pallet_explode_anim__Event_shadow_cast__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_pallet_explode_anim__Event shadow cast__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_pallet_explode_anim__Event Embers dissolve__EventFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_pallet_explode_anim__Event_Embers_dissolve__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_pallet_explode_anim__Event Embers dissolve__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_EntityPallet__UpdateFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_EntityPallet__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_EntityPallet__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_EntityPallet__FinishedFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_EntityPallet__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_EntityPallet__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_DissolvePullDownPallet__UpdateFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_DissolvePullDownPallet__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_DissolvePullDownPallet__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_DissolvePullDownPallet__Shadow__EventFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_DissolvePullDownPallet__Shadow__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_DissolvePullDownPallet__Shadow__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.TML_DissolvePullDownPallet__FinishedFunc
// (BlueprintEvent)

void ABP_Pallet_C::TML_DissolvePullDownPallet__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "TML_DissolvePullDownPallet__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_Pallet_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_Pallet_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.ResetVfxSfx
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::ResetVfxSfx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ResetVfxSfx");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.ResetPallet
// (Event, Protected, BlueprintEvent)

void ABP_Pallet_C::ResetPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ResetPallet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Pallet_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.PulldownPallet
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::PulldownPallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "PulldownPallet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.PostAkEventPullDownBlocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    AkAudioEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::PostAkEventPullDownBlocker(class UAkAudioEvent* AkAudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "PostAkEventPullDownBlocker");

	Params::BP_Pallet_C_PostAkEventPullDownBlocker Parms{};

	Parms.AkAudioEvent = AkAudioEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.Pallet Explode Dissolve
// (BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Pallet_Explode_Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Pallet Explode Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.OnPulldownDestroyed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       DestroyingPlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::OnPulldownDestroyed(class ADBDPlayer* DestroyingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "OnPulldownDestroyed");

	Params::BP_Pallet_C_OnPulldownDestroyed Parms{};

	Parms.DestroyingPlayer = DestroyingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.OnPalletStunHit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABP_Pallet_C::OnPalletStunHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "OnPalletStunHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.OnPalletPulledUp_BP
// (Event, Protected, BlueprintEvent)

void ABP_Pallet_C::OnPalletPulledUp_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "OnPalletPulledUp_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.OnFallen
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::OnFallen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "OnFallen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Local_OnFallen
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Local_OnFallen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Local_OnFallen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.GetZoneForRestrictedPlacement
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UPrimitiveComponent* ABP_Pallet_C::GetZoneForRestrictedPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetZoneForRestrictedPlacement");

	Params::BP_Pallet_C_GetZoneForRestrictedPlacement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pallet.BP_Pallet_C.GetAssociatedKiller
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       DBDPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASlasherPlayer*                   SlasherPlayer                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::GetAssociatedKiller(class ADBDPlayer* DBDPlayer, class ASlasherPlayer** SlasherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetAssociatedKiller");

	Params::BP_Pallet_C_GetAssociatedKiller Parms{};

	Parms.DBDPlayer = DBDPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (SlasherPlayer != nullptr)
		*SlasherPlayer = Parms.SlasherPlayer;
}


// Function BP_Pallet.BP_Pallet_C.ExplodeStunPallet
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::ExplodeStunPallet(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ExplodeStunPallet");

	Params::BP_Pallet_C_ExplodeStunPallet Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.ExplodeByEntity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::ExplodeByEntity(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ExplodeByEntity");

	Params::BP_Pallet_C_ExplodeByEntity Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.Explode Vfx Sfx
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Explode_Vfx_Sfx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Explode Vfx Sfx");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Explode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::Explode(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Explode");

	Params::BP_Pallet_C_Explode Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.ExecuteUbergraph_BP_Pallet
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::ExecuteUbergraph_BP_Pallet(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ExecuteUbergraph_BP_Pallet");

	Params::BP_Pallet_C_ExecuteUbergraph_BP_Pallet Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.Event Repair Pallet Cancelled
// (BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Event_Repair_Pallet_Cancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Event Repair Pallet Cancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Event Repair Pallet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RepairTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::Event_Repair_Pallet(double RepairTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Event Repair Pallet");

	Params::BP_Pallet_C_Event_Repair_Pallet Parms{};

	Parms.RepairTime = RepairTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.EntityExplodePallet
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::EntityExplodePallet(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "EntityExplodePallet");

	Params::BP_Pallet_C_EntityExplodePallet Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.EnableAutomaticPalletThrow
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::EnableAutomaticPalletThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "EnableAutomaticPalletThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.DisableMainCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::DisableMainCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "DisableMainCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkResult                               Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::CustomEvent_1(EAkResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "CustomEvent_1");

	Params::BP_Pallet_C_CustomEvent_1 Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.Cosmetic_PalletPullDownFXImmediateHide
// (BlueprintCosmetic, Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Cosmetic_PalletPullDownFXImmediateHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Cosmetic_PalletPullDownFXImmediateHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Cosmetic_OnPalletPulldownBlockedByEntityShow
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Cosmetic_OnPalletPulldownBlockedByEntityShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Cosmetic_OnPalletPulldownBlockedByEntityShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.Cosmetic_OnPalletPulldownBlockedByEntityHide
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Pallet_C::Cosmetic_OnPalletPulldownBlockedByEntityHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "Cosmetic_OnPalletPulldownBlockedByEntityHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pallet.BP_Pallet_C.BP_ExplodePallet
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::BP_ExplodePallet(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "BP_ExplodePallet");

	Params::BP_Pallet_C_BP_ExplodePallet Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.BndEvt__TestTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Pallet_C::BndEvt__TestTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "BndEvt__TestTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Pallet_C_BndEvt__TestTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.ActivateNavLinks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceActivation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pallet_C::ActivateNavLinks(bool Activate, bool ForceActivation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "ActivateNavLinks");

	Params::BP_Pallet_C_ActivateNavLinks Parms{};

	Parms.Activate = Activate;
	Parms.ForceActivation = ForceActivation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pallet.BP_Pallet_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Interactor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Pallet_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "IsInterruptionPossible");

	Params::BP_Pallet_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Interactor = Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pallet.BP_Pallet_C.GetPalletSkeletalMeshComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ABP_Pallet_C::GetPalletSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetPalletSkeletalMeshComponent");

	Params::BP_Pallet_C_GetPalletSkeletalMeshComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pallet.BP_Pallet_C.GetInfectedParticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UParticleSystemComponent*> InfectedParticleArray                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_Pallet_C::GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetInfectedParticles");

	Params::BP_Pallet_C_GetInfectedParticles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedParticleArray != nullptr)
		*InfectedParticleArray = std::move(Parms.InfectedParticleArray);
}


// Function BP_Pallet.BP_Pallet_C.GetInfectedDecals
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UDecalComponent*>          InfectedDecals                                         (Parm, OutParm, ContainsInstancedReference)

void ABP_Pallet_C::GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetInfectedDecals");

	Params::BP_Pallet_C_GetInfectedDecals Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InfectedDecals != nullptr)
		*InfectedDecals = std::move(Parms.InfectedDecals);
}


// Function BP_Pallet.BP_Pallet_C.GetFocalPointPosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Pallet_C::GetFocalPointPosition(const class ADBDPlayer* Player, const class UInteractionDefinition* Definition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetFocalPointPosition");

	Params::BP_Pallet_C_GetFocalPointPosition Parms{};

	Parms.Player = Player;
	Parms.Definition = Definition;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pallet.BP_Pallet_C.GetDestructibleAreaPrimitiveComponents
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UPrimitiveComponent*>      Prims                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_Pallet_C::GetDestructibleAreaPrimitiveComponents(TArray<class UPrimitiveComponent*>* Prims) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pallet_C", "GetDestructibleAreaPrimitiveComponents");

	Params::BP_Pallet_C_GetDestructibleAreaPrimitiveComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Prims != nullptr)
		*Prims = std::move(Parms.Prims);
}

}

