#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK34

#include "Basic.hpp"

#include "TheK34_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function TheK34.K34DodsonComponent.IsDodson
// 0x0001 (0x0001 - 0x0000)
struct K34DodsonComponent_IsDodson final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34DodsonComponent_IsDodson) == 0x000001, "Wrong alignment on K34DodsonComponent_IsDodson");
static_assert(sizeof(K34DodsonComponent_IsDodson) == 0x000001, "Wrong size on K34DodsonComponent_IsDodson");
static_assert(offsetof(K34DodsonComponent_IsDodson, ReturnValue) == 0x000000, "Member 'K34DodsonComponent_IsDodson::ReturnValue' has a wrong offset!");

// Function TheK34.K34DodsonComponent.GetDodsonActor
// 0x0008 (0x0008 - 0x0000)
struct K34DodsonComponent_GetDodsonActor final
{
public:
	class AK34Dodson*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34DodsonComponent_GetDodsonActor) == 0x000008, "Wrong alignment on K34DodsonComponent_GetDodsonActor");
static_assert(sizeof(K34DodsonComponent_GetDodsonActor) == 0x000008, "Wrong size on K34DodsonComponent_GetDodsonActor");
static_assert(offsetof(K34DodsonComponent_GetDodsonActor, ReturnValue) == 0x000000, "Member 'K34DodsonComponent_GetDodsonActor::ReturnValue' has a wrong offset!");

// Function TheK34.K34Footstep.Cosmetic_TriggerFootstepVisibility
// 0x0002 (0x0002 - 0x0000)
struct K34Footstep_Cosmetic_TriggerFootstepVisibility final
{
public:
	EK34Foot                                      FootType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsVisible;                                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Footstep_Cosmetic_TriggerFootstepVisibility) == 0x000001, "Wrong alignment on K34Footstep_Cosmetic_TriggerFootstepVisibility");
static_assert(sizeof(K34Footstep_Cosmetic_TriggerFootstepVisibility) == 0x000002, "Wrong size on K34Footstep_Cosmetic_TriggerFootstepVisibility");
static_assert(offsetof(K34Footstep_Cosmetic_TriggerFootstepVisibility, FootType) == 0x000000, "Member 'K34Footstep_Cosmetic_TriggerFootstepVisibility::FootType' has a wrong offset!");
static_assert(offsetof(K34Footstep_Cosmetic_TriggerFootstepVisibility, IsVisible) == 0x000001, "Member 'K34Footstep_Cosmetic_TriggerFootstepVisibility::IsVisible' has a wrong offset!");

// Function TheK34.K34Footstep.GetOwningActorsVelocity
// 0x0018 (0x0018 - 0x0000)
struct K34Footstep_GetOwningActorsVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Footstep_GetOwningActorsVelocity) == 0x000008, "Wrong alignment on K34Footstep_GetOwningActorsVelocity");
static_assert(sizeof(K34Footstep_GetOwningActorsVelocity) == 0x000018, "Wrong size on K34Footstep_GetOwningActorsVelocity");
static_assert(offsetof(K34Footstep_GetOwningActorsVelocity, ReturnValue) == 0x000000, "Member 'K34Footstep_GetOwningActorsVelocity::ReturnValue' has a wrong offset!");

// Function TheK34.K34FXInterface.Cosmetic_ScamperEnd
// 0x0002 (0x0002 - 0x0000)
struct K34FXInterface_Cosmetic_ScamperEnd final
{
public:
	bool                                          IsOnPallet;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsChaining;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34FXInterface_Cosmetic_ScamperEnd) == 0x000001, "Wrong alignment on K34FXInterface_Cosmetic_ScamperEnd");
static_assert(sizeof(K34FXInterface_Cosmetic_ScamperEnd) == 0x000002, "Wrong size on K34FXInterface_Cosmetic_ScamperEnd");
static_assert(offsetof(K34FXInterface_Cosmetic_ScamperEnd, IsOnPallet) == 0x000000, "Member 'K34FXInterface_Cosmetic_ScamperEnd::IsOnPallet' has a wrong offset!");
static_assert(offsetof(K34FXInterface_Cosmetic_ScamperEnd, IsChaining) == 0x000001, "Member 'K34FXInterface_Cosmetic_ScamperEnd::IsChaining' has a wrong offset!");

// Function TheK34.K34FXInterface.Cosmetic_ScamperStart
// 0x0002 (0x0002 - 0x0000)
struct K34FXInterface_Cosmetic_ScamperStart final
{
public:
	bool                                          IsOnPallet;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsChaining;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34FXInterface_Cosmetic_ScamperStart) == 0x000001, "Wrong alignment on K34FXInterface_Cosmetic_ScamperStart");
static_assert(sizeof(K34FXInterface_Cosmetic_ScamperStart) == 0x000002, "Wrong size on K34FXInterface_Cosmetic_ScamperStart");
static_assert(offsetof(K34FXInterface_Cosmetic_ScamperStart, IsOnPallet) == 0x000000, "Member 'K34FXInterface_Cosmetic_ScamperStart::IsOnPallet' has a wrong offset!");
static_assert(offsetof(K34FXInterface_Cosmetic_ScamperStart, IsChaining) == 0x000001, "Member 'K34FXInterface_Cosmetic_ScamperStart::IsChaining' has a wrong offset!");

// Function TheK34.K34P01.Authority_OnTotemStateChanged
// 0x0002 (0x0002 - 0x0000)
struct K34P01_Authority_OnTotemStateChanged final
{
public:
	ETotemState                                   OldState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETotemState                                   NewState;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P01_Authority_OnTotemStateChanged) == 0x000001, "Wrong alignment on K34P01_Authority_OnTotemStateChanged");
static_assert(sizeof(K34P01_Authority_OnTotemStateChanged) == 0x000002, "Wrong size on K34P01_Authority_OnTotemStateChanged");
static_assert(offsetof(K34P01_Authority_OnTotemStateChanged, OldState) == 0x000000, "Member 'K34P01_Authority_OnTotemStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(K34P01_Authority_OnTotemStateChanged, NewState) == 0x000001, "Member 'K34P01_Authority_OnTotemStateChanged::NewState' has a wrong offset!");

// Function TheK34.K34P01.Client_UpdateHudIcon
// 0x0004 (0x0004 - 0x0000)
struct K34P01_Client_UpdateHudIcon final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P01_Client_UpdateHudIcon) == 0x000004, "Wrong alignment on K34P01_Client_UpdateHudIcon");
static_assert(sizeof(K34P01_Client_UpdateHudIcon) == 0x000004, "Wrong size on K34P01_Client_UpdateHudIcon");
static_assert(offsetof(K34P01_Client_UpdateHudIcon, Percent) == 0x000000, "Member 'K34P01_Client_UpdateHudIcon::Percent' has a wrong offset!");

// Function TheK34.K34P01.GetBlindedEffectTime
// 0x0004 (0x0004 - 0x0000)
struct K34P01_GetBlindedEffectTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P01_GetBlindedEffectTime) == 0x000004, "Wrong alignment on K34P01_GetBlindedEffectTime");
static_assert(sizeof(K34P01_GetBlindedEffectTime) == 0x000004, "Wrong size on K34P01_GetBlindedEffectTime");
static_assert(offsetof(K34P01_GetBlindedEffectTime, ReturnValue) == 0x000000, "Member 'K34P01_GetBlindedEffectTime::ReturnValue' has a wrong offset!");

// Function TheK34.K34P01.GetStunnedOrBlindedCount
// 0x0004 (0x0004 - 0x0000)
struct K34P01_GetStunnedOrBlindedCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P01_GetStunnedOrBlindedCount) == 0x000004, "Wrong alignment on K34P01_GetStunnedOrBlindedCount");
static_assert(sizeof(K34P01_GetStunnedOrBlindedCount) == 0x000004, "Wrong size on K34P01_GetStunnedOrBlindedCount");
static_assert(offsetof(K34P01_GetStunnedOrBlindedCount, ReturnValue) == 0x000000, "Member 'K34P01_GetStunnedOrBlindedCount::ReturnValue' has a wrong offset!");

// Function TheK34.K34P01.GetStunnedOrBlindedTimesRequiredByLevel
// 0x0004 (0x0004 - 0x0000)
struct K34P01_GetStunnedOrBlindedTimesRequiredByLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P01_GetStunnedOrBlindedTimesRequiredByLevel) == 0x000004, "Wrong alignment on K34P01_GetStunnedOrBlindedTimesRequiredByLevel");
static_assert(sizeof(K34P01_GetStunnedOrBlindedTimesRequiredByLevel) == 0x000004, "Wrong size on K34P01_GetStunnedOrBlindedTimesRequiredByLevel");
static_assert(offsetof(K34P01_GetStunnedOrBlindedTimesRequiredByLevel, ReturnValue) == 0x000000, "Member 'K34P01_GetStunnedOrBlindedTimesRequiredByLevel::ReturnValue' has a wrong offset!");

// Function TheK34.K34P02.BP_RevealAndMakeSurvivorScream
// 0x0008 (0x0008 - 0x0000)
struct K34P02_BP_RevealAndMakeSurvivorScream final
{
public:
	class ACamperPlayer*                          SurvivorPlayer;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P02_BP_RevealAndMakeSurvivorScream) == 0x000008, "Wrong alignment on K34P02_BP_RevealAndMakeSurvivorScream");
static_assert(sizeof(K34P02_BP_RevealAndMakeSurvivorScream) == 0x000008, "Wrong size on K34P02_BP_RevealAndMakeSurvivorScream");
static_assert(offsetof(K34P02_BP_RevealAndMakeSurvivorScream, SurvivorPlayer) == 0x000000, "Member 'K34P02_BP_RevealAndMakeSurvivorScream::SurvivorPlayer' has a wrong offset!");

// Function TheK34.K34P02.Multicast_RevealAndMakeSurvivorScream
// 0x0008 (0x0008 - 0x0000)
struct K34P02_Multicast_RevealAndMakeSurvivorScream final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P02_Multicast_RevealAndMakeSurvivorScream) == 0x000008, "Wrong alignment on K34P02_Multicast_RevealAndMakeSurvivorScream");
static_assert(sizeof(K34P02_Multicast_RevealAndMakeSurvivorScream) == 0x000008, "Wrong size on K34P02_Multicast_RevealAndMakeSurvivorScream");
static_assert(offsetof(K34P02_Multicast_RevealAndMakeSurvivorScream, Survivor) == 0x000000, "Member 'K34P02_Multicast_RevealAndMakeSurvivorScream::Survivor' has a wrong offset!");

// Function TheK34.K34P02.GetAuraRevealEffectTimeAtLevel
// 0x0004 (0x0004 - 0x0000)
struct K34P02_GetAuraRevealEffectTimeAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P02_GetAuraRevealEffectTimeAtLevel) == 0x000004, "Wrong alignment on K34P02_GetAuraRevealEffectTimeAtLevel");
static_assert(sizeof(K34P02_GetAuraRevealEffectTimeAtLevel) == 0x000004, "Wrong size on K34P02_GetAuraRevealEffectTimeAtLevel");
static_assert(offsetof(K34P02_GetAuraRevealEffectTimeAtLevel, ReturnValue) == 0x000000, "Member 'K34P02_GetAuraRevealEffectTimeAtLevel::ReturnValue' has a wrong offset!");

// Function TheK34.K34P02.GetExposedEffectTimeAtLevel
// 0x0004 (0x0004 - 0x0000)
struct K34P02_GetExposedEffectTimeAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P02_GetExposedEffectTimeAtLevel) == 0x000004, "Wrong alignment on K34P02_GetExposedEffectTimeAtLevel");
static_assert(sizeof(K34P02_GetExposedEffectTimeAtLevel) == 0x000004, "Wrong size on K34P02_GetExposedEffectTimeAtLevel");
static_assert(offsetof(K34P02_GetExposedEffectTimeAtLevel, ReturnValue) == 0x000000, "Member 'K34P02_GetExposedEffectTimeAtLevel::ReturnValue' has a wrong offset!");

// Function TheK34.K34P03.GetGeneratorRangeFromPlayer
// 0x0004 (0x0004 - 0x0000)
struct K34P03_GetGeneratorRangeFromPlayer final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P03_GetGeneratorRangeFromPlayer) == 0x000004, "Wrong alignment on K34P03_GetGeneratorRangeFromPlayer");
static_assert(sizeof(K34P03_GetGeneratorRangeFromPlayer) == 0x000004, "Wrong size on K34P03_GetGeneratorRangeFromPlayer");
static_assert(offsetof(K34P03_GetGeneratorRangeFromPlayer, ReturnValue) == 0x000000, "Member 'K34P03_GetGeneratorRangeFromPlayer::ReturnValue' has a wrong offset!");

// Function TheK34.K34P03.GetHasteEffectAmount
// 0x0004 (0x0004 - 0x0000)
struct K34P03_GetHasteEffectAmount final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P03_GetHasteEffectAmount) == 0x000004, "Wrong alignment on K34P03_GetHasteEffectAmount");
static_assert(sizeof(K34P03_GetHasteEffectAmount) == 0x000004, "Wrong size on K34P03_GetHasteEffectAmount");
static_assert(offsetof(K34P03_GetHasteEffectAmount, ReturnValue) == 0x000000, "Member 'K34P03_GetHasteEffectAmount::ReturnValue' has a wrong offset!");

// Function TheK34.K34P03.GetHasteLingerTimeAtLevel
// 0x0004 (0x0004 - 0x0000)
struct K34P03_GetHasteLingerTimeAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P03_GetHasteLingerTimeAtLevel) == 0x000004, "Wrong alignment on K34P03_GetHasteLingerTimeAtLevel");
static_assert(sizeof(K34P03_GetHasteLingerTimeAtLevel) == 0x000004, "Wrong size on K34P03_GetHasteLingerTimeAtLevel");
static_assert(offsetof(K34P03_GetHasteLingerTimeAtLevel, ReturnValue) == 0x000000, "Member 'K34P03_GetHasteLingerTimeAtLevel::ReturnValue' has a wrong offset!");

// Function TheK34.K34P03.HasAnyGeneratorsInRange
// 0x0001 (0x0001 - 0x0000)
struct K34P03_HasAnyGeneratorsInRange final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34P03_HasAnyGeneratorsInRange) == 0x000001, "Wrong alignment on K34P03_HasAnyGeneratorsInRange");
static_assert(sizeof(K34P03_HasAnyGeneratorsInRange) == 0x000001, "Wrong size on K34P03_HasAnyGeneratorsInRange");
static_assert(offsetof(K34P03_HasAnyGeneratorsInRange, ReturnValue) == 0x000000, "Member 'K34P03_HasAnyGeneratorsInRange::ReturnValue' has a wrong offset!");

// Function TheK34.K34Power.GetOwningKiller
// 0x0008 (0x0008 - 0x0000)
struct K34Power_GetOwningKiller final
{
public:
	class ASlasherPlayer*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Power_GetOwningKiller) == 0x000008, "Wrong alignment on K34Power_GetOwningKiller");
static_assert(sizeof(K34Power_GetOwningKiller) == 0x000008, "Wrong size on K34Power_GetOwningKiller");
static_assert(offsetof(K34Power_GetOwningKiller, ReturnValue) == 0x000000, "Member 'K34Power_GetOwningKiller::ReturnValue' has a wrong offset!");

// Function TheK34.K34Power.OnFootstepAddedToPool
// 0x0008 (0x0008 - 0x0000)
struct K34Power_OnFootstepAddedToPool final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Power_OnFootstepAddedToPool) == 0x000008, "Wrong alignment on K34Power_OnFootstepAddedToPool");
static_assert(sizeof(K34Power_OnFootstepAddedToPool) == 0x000008, "Wrong size on K34Power_OnFootstepAddedToPool");
static_assert(offsetof(K34Power_OnFootstepAddedToPool, Actor) == 0x000000, "Member 'K34Power_OnFootstepAddedToPool::Actor' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.GetOwningPlayer
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeDistraction_GetOwningPlayer final
{
public:
	class ADBDPlayer*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_GetOwningPlayer) == 0x000008, "Wrong alignment on K34TipToeDistraction_GetOwningPlayer");
static_assert(sizeof(K34TipToeDistraction_GetOwningPlayer) == 0x000008, "Wrong size on K34TipToeDistraction_GetOwningPlayer");
static_assert(offsetof(K34TipToeDistraction_GetOwningPlayer, ReturnValue) == 0x000000, "Member 'K34TipToeDistraction_GetOwningPlayer::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.Multicast_OnSpawned
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeDistraction_Multicast_OnSpawned final
{
public:
	class ADBDPlayer*                             OwningPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_Multicast_OnSpawned) == 0x000008, "Wrong alignment on K34TipToeDistraction_Multicast_OnSpawned");
static_assert(sizeof(K34TipToeDistraction_Multicast_OnSpawned) == 0x000008, "Wrong size on K34TipToeDistraction_Multicast_OnSpawned");
static_assert(offsetof(K34TipToeDistraction_Multicast_OnSpawned, OwningPlayer) == 0x000000, "Member 'K34TipToeDistraction_Multicast_OnSpawned::OwningPlayer' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.Multicast_ShowDistractionDebug
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeDistraction_Multicast_ShowDistractionDebug final
{
public:
	float                                         HalfSize;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_Multicast_ShowDistractionDebug) == 0x000004, "Wrong alignment on K34TipToeDistraction_Multicast_ShowDistractionDebug");
static_assert(sizeof(K34TipToeDistraction_Multicast_ShowDistractionDebug) == 0x000008, "Wrong size on K34TipToeDistraction_Multicast_ShowDistractionDebug");
static_assert(offsetof(K34TipToeDistraction_Multicast_ShowDistractionDebug, HalfSize) == 0x000000, "Member 'K34TipToeDistraction_Multicast_ShowDistractionDebug::HalfSize' has a wrong offset!");
static_assert(offsetof(K34TipToeDistraction_Multicast_ShowDistractionDebug, Radius) == 0x000004, "Member 'K34TipToeDistraction_Multicast_ShowDistractionDebug::Radius' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.GetAkComponent
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeDistraction_GetAkComponent final
{
public:
	class UAkComponent*                           ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_GetAkComponent) == 0x000008, "Wrong alignment on K34TipToeDistraction_GetAkComponent");
static_assert(sizeof(K34TipToeDistraction_GetAkComponent) == 0x000008, "Wrong size on K34TipToeDistraction_GetAkComponent");
static_assert(offsetof(K34TipToeDistraction_GetAkComponent, ReturnValue) == 0x000000, "Member 'K34TipToeDistraction_GetAkComponent::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.GetCustomizedAudio
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeDistraction_GetCustomizedAudio final
{
public:
	class UCustomizedAudioComponent*              ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_GetCustomizedAudio) == 0x000008, "Wrong alignment on K34TipToeDistraction_GetCustomizedAudio");
static_assert(sizeof(K34TipToeDistraction_GetCustomizedAudio) == 0x000008, "Wrong size on K34TipToeDistraction_GetCustomizedAudio");
static_assert(offsetof(K34TipToeDistraction_GetCustomizedAudio, ReturnValue) == 0x000000, "Member 'K34TipToeDistraction_GetCustomizedAudio::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeDistraction.GetFootAudioSurfaceName
// 0x0010 (0x0010 - 0x0000)
struct K34TipToeDistraction_GetFootAudioSurfaceName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeDistraction_GetFootAudioSurfaceName) == 0x000008, "Wrong alignment on K34TipToeDistraction_GetFootAudioSurfaceName");
static_assert(sizeof(K34TipToeDistraction_GetFootAudioSurfaceName) == 0x000010, "Wrong size on K34TipToeDistraction_GetFootAudioSurfaceName");
static_assert(offsetof(K34TipToeDistraction_GetFootAudioSurfaceName, ReturnValue) == 0x000000, "Member 'K34TipToeDistraction_GetFootAudioSurfaceName::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.Authority_ReduceDuration
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_Authority_ReduceDuration final
{
public:
	float                                         ReductionPercentage;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_Authority_ReduceDuration) == 0x000004, "Wrong alignment on K34TipToeModeComponent_Authority_ReduceDuration");
static_assert(sizeof(K34TipToeModeComponent_Authority_ReduceDuration) == 0x000004, "Wrong size on K34TipToeModeComponent_Authority_ReduceDuration");
static_assert(offsetof(K34TipToeModeComponent_Authority_ReduceDuration, ReductionPercentage) == 0x000000, "Member 'K34TipToeModeComponent_Authority_ReduceDuration::ReductionPercentage' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.Authority_SetIsInTipToeMode
// 0x0002 (0x0002 - 0x0000)
struct K34TipToeModeComponent_Authority_SetIsInTipToeMode final
{
public:
	bool                                          Param_IsInTipToeMode;                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerExitEvent;                                  // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_Authority_SetIsInTipToeMode) == 0x000001, "Wrong alignment on K34TipToeModeComponent_Authority_SetIsInTipToeMode");
static_assert(sizeof(K34TipToeModeComponent_Authority_SetIsInTipToeMode) == 0x000002, "Wrong size on K34TipToeModeComponent_Authority_SetIsInTipToeMode");
static_assert(offsetof(K34TipToeModeComponent_Authority_SetIsInTipToeMode, Param_IsInTipToeMode) == 0x000000, "Member 'K34TipToeModeComponent_Authority_SetIsInTipToeMode::Param_IsInTipToeMode' has a wrong offset!");
static_assert(offsetof(K34TipToeModeComponent_Authority_SetIsInTipToeMode, TriggerExitEvent) == 0x000001, "Member 'K34TipToeModeComponent_Authority_SetIsInTipToeMode::TriggerExitEvent' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.GetTipToeModeDuration
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_GetTipToeModeDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_GetTipToeModeDuration) == 0x000004, "Wrong alignment on K34TipToeModeComponent_GetTipToeModeDuration");
static_assert(sizeof(K34TipToeModeComponent_GetTipToeModeDuration) == 0x000004, "Wrong size on K34TipToeModeComponent_GetTipToeModeDuration");
static_assert(offsetof(K34TipToeModeComponent_GetTipToeModeDuration, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_GetTipToeModeDuration::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.IsInTipToeMode
// 0x0001 (0x0001 - 0x0000)
struct K34TipToeModeComponent_IsInTipToeMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_IsInTipToeMode) == 0x000001, "Wrong alignment on K34TipToeModeComponent_IsInTipToeMode");
static_assert(sizeof(K34TipToeModeComponent_IsInTipToeMode) == 0x000001, "Wrong size on K34TipToeModeComponent_IsInTipToeMode");
static_assert(offsetof(K34TipToeModeComponent_IsInTipToeMode, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_IsInTipToeMode::ReturnValue' has a wrong offset!");

// DelegateFunction TheK34.K34TipToeModeComponent.OnDistractionSpawned__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature final
{
public:
	class AK34TipToeDistraction*                  K34Distraction;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature) == 0x000008, "Wrong alignment on K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature");
static_assert(sizeof(K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature) == 0x000008, "Wrong size on K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature");
static_assert(offsetof(K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature, K34Distraction) == 0x000000, "Member 'K34TipToeModeComponent_OnDistractionSpawned__DelegateSignature::K34Distraction' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.Authority_ReduceCooldown
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_Authority_ReduceCooldown final
{
public:
	float                                         ReductionPercentage;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_Authority_ReduceCooldown) == 0x000004, "Wrong alignment on K34TipToeModeComponent_Authority_ReduceCooldown");
static_assert(sizeof(K34TipToeModeComponent_Authority_ReduceCooldown) == 0x000004, "Wrong size on K34TipToeModeComponent_Authority_ReduceCooldown");
static_assert(offsetof(K34TipToeModeComponent_Authority_ReduceCooldown, ReductionPercentage) == 0x000000, "Member 'K34TipToeModeComponent_Authority_ReduceCooldown::ReductionPercentage' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.CanEnterTipToeMode
// 0x0001 (0x0001 - 0x0000)
struct K34TipToeModeComponent_CanEnterTipToeMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_CanEnterTipToeMode) == 0x000001, "Wrong alignment on K34TipToeModeComponent_CanEnterTipToeMode");
static_assert(sizeof(K34TipToeModeComponent_CanEnterTipToeMode) == 0x000001, "Wrong size on K34TipToeModeComponent_CanEnterTipToeMode");
static_assert(offsetof(K34TipToeModeComponent_CanEnterTipToeMode, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_CanEnterTipToeMode::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.GetKiller
// 0x0008 (0x0008 - 0x0000)
struct K34TipToeModeComponent_GetKiller final
{
public:
	class ASlasherPlayer*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_GetKiller) == 0x000008, "Wrong alignment on K34TipToeModeComponent_GetKiller");
static_assert(sizeof(K34TipToeModeComponent_GetKiller) == 0x000008, "Wrong size on K34TipToeModeComponent_GetKiller");
static_assert(offsetof(K34TipToeModeComponent_GetKiller, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_GetKiller::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.GetRemainingTipToeModeCooldownDuration
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration) == 0x000004, "Wrong alignment on K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration");
static_assert(sizeof(K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration) == 0x000004, "Wrong size on K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration");
static_assert(offsetof(K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_GetRemainingTipToeModeCooldownDuration::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.GetRemainingTipToeModeDuration
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_GetRemainingTipToeModeDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_GetRemainingTipToeModeDuration) == 0x000004, "Wrong alignment on K34TipToeModeComponent_GetRemainingTipToeModeDuration");
static_assert(sizeof(K34TipToeModeComponent_GetRemainingTipToeModeDuration) == 0x000004, "Wrong size on K34TipToeModeComponent_GetRemainingTipToeModeDuration");
static_assert(offsetof(K34TipToeModeComponent_GetRemainingTipToeModeDuration, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_GetRemainingTipToeModeDuration::ReturnValue' has a wrong offset!");

// Function TheK34.K34TipToeModeComponent.GetTipToeModeCooldownDuration
// 0x0004 (0x0004 - 0x0000)
struct K34TipToeModeComponent_GetTipToeModeCooldownDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34TipToeModeComponent_GetTipToeModeCooldownDuration) == 0x000004, "Wrong alignment on K34TipToeModeComponent_GetTipToeModeCooldownDuration");
static_assert(sizeof(K34TipToeModeComponent_GetTipToeModeCooldownDuration) == 0x000004, "Wrong size on K34TipToeModeComponent_GetTipToeModeCooldownDuration");
static_assert(offsetof(K34TipToeModeComponent_GetTipToeModeCooldownDuration, ReturnValue) == 0x000000, "Member 'K34TipToeModeComponent_GetTipToeModeCooldownDuration::ReturnValue' has a wrong offset!");

// Function TheK34.K34Utilities.GetK34Power
// 0x0010 (0x0010 - 0x0000)
struct K34Utilities_GetK34Power final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AK34Power*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Utilities_GetK34Power) == 0x000008, "Wrong alignment on K34Utilities_GetK34Power");
static_assert(sizeof(K34Utilities_GetK34Power) == 0x000010, "Wrong size on K34Utilities_GetK34Power");
static_assert(offsetof(K34Utilities_GetK34Power, Player) == 0x000000, "Member 'K34Utilities_GetK34Power::Player' has a wrong offset!");
static_assert(offsetof(K34Utilities_GetK34Power, ReturnValue) == 0x000008, "Member 'K34Utilities_GetK34Power::ReturnValue' has a wrong offset!");

// Function TheK34.K34Utilities.GetK34VFXFeetPool
// 0x0010 (0x0010 - 0x0000)
struct K34Utilities_GetK34VFXFeetPool final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAuthoritativeActorPoolComponent*       ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K34Utilities_GetK34VFXFeetPool) == 0x000008, "Wrong alignment on K34Utilities_GetK34VFXFeetPool");
static_assert(sizeof(K34Utilities_GetK34VFXFeetPool) == 0x000010, "Wrong size on K34Utilities_GetK34VFXFeetPool");
static_assert(offsetof(K34Utilities_GetK34VFXFeetPool, Player) == 0x000000, "Member 'K34Utilities_GetK34VFXFeetPool::Player' has a wrong offset!");
static_assert(offsetof(K34Utilities_GetK34VFXFeetPool, ReturnValue) == 0x000008, "Member 'K34Utilities_GetK34VFXFeetPool::ReturnValue' has a wrong offset!");

}

