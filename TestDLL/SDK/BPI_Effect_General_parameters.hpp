#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Effect_General

#include "Basic.hpp"

#include "TheClown_structs.hpp"


namespace SDK::Params
{

// Function BPI_Effect_General.BPI_Effect_General_C.ActivateEndGameVignette
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_ActivateEndGameVignette final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_ActivateEndGameVignette) == 0x000001, "Wrong alignment on BPI_Effect_General_C_ActivateEndGameVignette");
static_assert(sizeof(BPI_Effect_General_C_ActivateEndGameVignette) == 0x000001, "Wrong size on BPI_Effect_General_C_ActivateEndGameVignette");
static_assert(offsetof(BPI_Effect_General_C_ActivateEndGameVignette, IsActive) == 0x000000, "Member 'BPI_Effect_General_C_ActivateEndGameVignette::IsActive' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.ActivatePlayerGlitchVFX
// 0x0010 (0x0010 - 0x0000)
struct BPI_Effect_General_C_ActivatePlayerGlitchVFX final
{
public:
	const class UMaterialInstanceDynamic*         GlitchFX;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Face;                                              // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Madness;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Killer;                                            // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_ActivatePlayerGlitchVFX) == 0x000008, "Wrong alignment on BPI_Effect_General_C_ActivatePlayerGlitchVFX");
static_assert(sizeof(BPI_Effect_General_C_ActivatePlayerGlitchVFX) == 0x000010, "Wrong size on BPI_Effect_General_C_ActivatePlayerGlitchVFX");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerGlitchVFX, GlitchFX) == 0x000000, "Member 'BPI_Effect_General_C_ActivatePlayerGlitchVFX::GlitchFX' has a wrong offset!");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerGlitchVFX, Face) == 0x000008, "Member 'BPI_Effect_General_C_ActivatePlayerGlitchVFX::Face' has a wrong offset!");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerGlitchVFX, Madness) == 0x000009, "Member 'BPI_Effect_General_C_ActivatePlayerGlitchVFX::Madness' has a wrong offset!");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerGlitchVFX, Killer) == 0x00000A, "Member 'BPI_Effect_General_C_ActivatePlayerGlitchVFX::Killer' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.ActivatePlayerLightningVFX
// 0x0010 (0x0010 - 0x0000)
struct BPI_Effect_General_C_ActivatePlayerLightningVFX final
{
public:
	const class UMaterialInstanceDynamic*         LightningFX;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Intense;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_ActivatePlayerLightningVFX) == 0x000008, "Wrong alignment on BPI_Effect_General_C_ActivatePlayerLightningVFX");
static_assert(sizeof(BPI_Effect_General_C_ActivatePlayerLightningVFX) == 0x000010, "Wrong size on BPI_Effect_General_C_ActivatePlayerLightningVFX");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerLightningVFX, LightningFX) == 0x000000, "Member 'BPI_Effect_General_C_ActivatePlayerLightningVFX::LightningFX' has a wrong offset!");
static_assert(offsetof(BPI_Effect_General_C_ActivatePlayerLightningVFX, Intense) == 0x000008, "Member 'BPI_Effect_General_C_ActivatePlayerLightningVFX::Intense' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K12_GetToxinVignette
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K12_GetToxinVignette final
{
public:
	EBombType                                     Bomb_Type;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K12_GetToxinVignette) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K12_GetToxinVignette");
static_assert(sizeof(BPI_Effect_General_C_K12_GetToxinVignette) == 0x000001, "Wrong size on BPI_Effect_General_C_K12_GetToxinVignette");
static_assert(offsetof(BPI_Effect_General_C_K12_GetToxinVignette, Bomb_Type) == 0x000000, "Member 'BPI_Effect_General_C_K12_GetToxinVignette::Bomb_Type' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K22_HighlightDormant
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K22_HighlightDormant final
{
public:
	bool                                          IsDormant_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K22_HighlightDormant) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K22_HighlightDormant");
static_assert(sizeof(BPI_Effect_General_C_K22_HighlightDormant) == 0x000001, "Wrong size on BPI_Effect_General_C_K22_HighlightDormant");
static_assert(offsetof(BPI_Effect_General_C_K22_HighlightDormant, IsDormant_) == 0x000000, "Member 'BPI_Effect_General_C_K22_HighlightDormant::IsDormant_' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K22_HighlightDormantMain
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K22_HighlightDormantMain final
{
public:
	bool                                          IsDormantMain_;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K22_HighlightDormantMain) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K22_HighlightDormantMain");
static_assert(sizeof(BPI_Effect_General_C_K22_HighlightDormantMain) == 0x000001, "Wrong size on BPI_Effect_General_C_K22_HighlightDormantMain");
static_assert(offsetof(BPI_Effect_General_C_K22_HighlightDormantMain, IsDormantMain_) == 0x000000, "Member 'BPI_Effect_General_C_K22_HighlightDormantMain::IsDormantMain_' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K22_IsAttachedLocker
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K22_IsAttachedLocker final
{
public:
	bool                                          IsAttachedLocker;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K22_IsAttachedLocker) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K22_IsAttachedLocker");
static_assert(sizeof(BPI_Effect_General_C_K22_IsAttachedLocker) == 0x000001, "Wrong size on BPI_Effect_General_C_K22_IsAttachedLocker");
static_assert(offsetof(BPI_Effect_General_C_K22_IsAttachedLocker, IsAttachedLocker) == 0x000000, "Member 'BPI_Effect_General_C_K22_IsAttachedLocker::IsAttachedLocker' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K22_WrongLanding
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K22_WrongLanding final
{
public:
	bool                                          Wrong_Landing;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K22_WrongLanding) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K22_WrongLanding");
static_assert(sizeof(BPI_Effect_General_C_K22_WrongLanding) == 0x000001, "Wrong size on BPI_Effect_General_C_K22_WrongLanding");
static_assert(offsetof(BPI_Effect_General_C_K22_WrongLanding, Wrong_Landing) == 0x000000, "Member 'BPI_Effect_General_C_K22_WrongLanding::Wrong_Landing' has a wrong offset!");

// Function BPI_Effect_General.BPI_Effect_General_C.K22_WrongLandingVignette
// 0x0001 (0x0001 - 0x0000)
struct BPI_Effect_General_C_K22_WrongLandingVignette final
{
public:
	bool                                          WrongLanding;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Effect_General_C_K22_WrongLandingVignette) == 0x000001, "Wrong alignment on BPI_Effect_General_C_K22_WrongLandingVignette");
static_assert(sizeof(BPI_Effect_General_C_K22_WrongLandingVignette) == 0x000001, "Wrong size on BPI_Effect_General_C_K22_WrongLandingVignette");
static_assert(offsetof(BPI_Effect_General_C_K22_WrongLandingVignette, WrongLanding) == 0x000000, "Member 'BPI_Effect_General_C_K22_WrongLandingVignette::WrongLanding' has a wrong offset!");

}

