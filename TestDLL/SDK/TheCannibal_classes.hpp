#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheCannibal

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"
#include "DBDCompetence_classes.hpp"
#include "TheHillbilly_classes.hpp"
#include "StatSystem_structs.hpp"
#include "GameplayTagUtilities_structs.hpp"
#include "Engine_classes.hpp"
#include "DBDAttack_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DBDGameplay_structs.hpp"


namespace SDK
{

// Class TheCannibal.BBQAndChili
// 0x0020 (0x0440 - 0x0420)
class UBBQAndChili final : public UPerk
{
public:
	float                                         _auraRevealDuration;                               // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minDistanceToHookedPlayerByLevel[0x3];            // 0x0424(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _survivorImposedEffectClass;                       // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetMinDistanceToKillerByLevel(int32 Level);

	float GetAuraRevealDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BBQAndChili">();
	}
	static class UBBQAndChili* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBBQAndChili>();
	}
};
static_assert(alignof(UBBQAndChili) == 0x000008, "Wrong alignment on UBBQAndChili");
static_assert(sizeof(UBBQAndChili) == 0x000440, "Wrong size on UBBQAndChili");
static_assert(offsetof(UBBQAndChili, _auraRevealDuration) == 0x000420, "Member 'UBBQAndChili::_auraRevealDuration' has a wrong offset!");
static_assert(offsetof(UBBQAndChili, _minDistanceToHookedPlayerByLevel) == 0x000424, "Member 'UBBQAndChili::_minDistanceToHookedPlayerByLevel' has a wrong offset!");
static_assert(offsetof(UBBQAndChili, _survivorImposedEffectClass) == 0x000430, "Member 'UBBQAndChili::_survivorImposedEffectClass' has a wrong offset!");

// Class TheCannibal.CannibalChainsawHitEventAddon
// 0x0000 (0x02F8 - 0x02F8)
class UCannibalChainsawHitEventAddon : public UOnEventBaseAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawHitEventAddon">();
	}
	static class UCannibalChainsawHitEventAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawHitEventAddon>();
	}
};
static_assert(alignof(UCannibalChainsawHitEventAddon) == 0x000008, "Wrong alignment on UCannibalChainsawHitEventAddon");
static_assert(sizeof(UCannibalChainsawHitEventAddon) == 0x0002F8, "Wrong size on UCannibalChainsawHitEventAddon");

// Class TheCannibal.CannibalAddonBegrimedChains
// 0x0000 (0x02F8 - 0x02F8)
class UCannibalAddonBegrimedChains final : public UCannibalChainsawHitEventAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalAddonBegrimedChains">();
	}
	static class UCannibalAddonBegrimedChains* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalAddonBegrimedChains>();
	}
};
static_assert(alignof(UCannibalAddonBegrimedChains) == 0x000008, "Wrong alignment on UCannibalAddonBegrimedChains");
static_assert(sizeof(UCannibalAddonBegrimedChains) == 0x0002F8, "Wrong size on UCannibalAddonBegrimedChains");

// Class TheCannibal.CannibalAnalyticsComponent
// 0x0020 (0x0108 - 0x00E8)
class UCannibalAnalyticsComponent final : public UChainsawAnalyticsBaseComponent
{
public:
	uint8                                         Pad_E8[0x20];                                      // 0x00E8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalAnalyticsComponent">();
	}
	static class UCannibalAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalAnalyticsComponent>();
	}
};
static_assert(alignof(UCannibalAnalyticsComponent) == 0x000008, "Wrong alignment on UCannibalAnalyticsComponent");
static_assert(sizeof(UCannibalAnalyticsComponent) == 0x000108, "Wrong size on UCannibalAnalyticsComponent");

// Class TheCannibal.CannibalChainsawAttack
// 0x00D0 (0x0610 - 0x0540)
class UCannibalChainsawAttack final : public UBaseChainsawAttack
{
public:
	uint8                                         Pad_538[0x10];                                     // 0x0538(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagStateBool                          _isInTantrum;                                      // 0x0548(0x0048)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_590[0x24];                                     // 0x0590(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _immuneToSuccessiveChainsawHitsDuration;           // 0x05B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ADBDPlayer*, float>                _lastChainsawHitTimes;                             // 0x05B8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttack">();
	}
	static class UCannibalChainsawAttack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttack>();
	}
};
static_assert(alignof(UCannibalChainsawAttack) == 0x000010, "Wrong alignment on UCannibalChainsawAttack");
static_assert(sizeof(UCannibalChainsawAttack) == 0x000610, "Wrong size on UCannibalChainsawAttack");
static_assert(offsetof(UCannibalChainsawAttack, _isInTantrum) == 0x000548, "Member 'UCannibalChainsawAttack::_isInTantrum' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawAttack, _immuneToSuccessiveChainsawHitsDuration) == 0x0005B4, "Member 'UCannibalChainsawAttack::_immuneToSuccessiveChainsawHitsDuration' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawAttack, _lastChainsawHitTimes) == 0x0005B8, "Member 'UCannibalChainsawAttack::_lastChainsawHitTimes' has a wrong offset!");

// Class TheCannibal.CannibalChainsawAttackOpenSubstate
// 0x0018 (0x0180 - 0x0168)
class UCannibalChainsawAttackOpenSubstate final : public UBaseChainsawAttackOpenSubstate
{
public:
	uint8                                         Pad_168[0x18];                                     // 0x0168(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttackOpenSubstate">();
	}
	static class UCannibalChainsawAttackOpenSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttackOpenSubstate>();
	}
};
static_assert(alignof(UCannibalChainsawAttackOpenSubstate) == 0x000008, "Wrong alignment on UCannibalChainsawAttackOpenSubstate");
static_assert(sizeof(UCannibalChainsawAttackOpenSubstate) == 0x000180, "Wrong size on UCannibalChainsawAttackOpenSubstate");

// Class TheCannibal.CannibalChainsawAttackHittingSubstate
// 0x0000 (0x01A0 - 0x01A0)
class UCannibalChainsawAttackHittingSubstate final : public UPounceAttackHittingSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttackHittingSubstate">();
	}
	static class UCannibalChainsawAttackHittingSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttackHittingSubstate>();
	}
};
static_assert(alignof(UCannibalChainsawAttackHittingSubstate) == 0x000008, "Wrong alignment on UCannibalChainsawAttackHittingSubstate");
static_assert(sizeof(UCannibalChainsawAttackHittingSubstate) == 0x0001A0, "Wrong size on UCannibalChainsawAttackHittingSubstate");

// Class TheCannibal.CannibalChainsawAttackSuccessSubstate
// 0x0000 (0x0118 - 0x0118)
class UCannibalChainsawAttackSuccessSubstate final : public UBaseChainsawAttackSuccessSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttackSuccessSubstate">();
	}
	static class UCannibalChainsawAttackSuccessSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttackSuccessSubstate>();
	}
};
static_assert(alignof(UCannibalChainsawAttackSuccessSubstate) == 0x000008, "Wrong alignment on UCannibalChainsawAttackSuccessSubstate");
static_assert(sizeof(UCannibalChainsawAttackSuccessSubstate) == 0x000118, "Wrong size on UCannibalChainsawAttackSuccessSubstate");

// Class TheCannibal.CannibalChainsawAttackMissSubstate
// 0x0018 (0x0138 - 0x0120)
class UCannibalChainsawAttackMissSubstate final : public UBaseChainsawAttackMissSubstate
{
public:
	uint8                                         Pad_120[0x18];                                     // 0x0120(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttackMissSubstate">();
	}
	static class UCannibalChainsawAttackMissSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttackMissSubstate>();
	}
};
static_assert(alignof(UCannibalChainsawAttackMissSubstate) == 0x000008, "Wrong alignment on UCannibalChainsawAttackMissSubstate");
static_assert(sizeof(UCannibalChainsawAttackMissSubstate) == 0x000138, "Wrong size on UCannibalChainsawAttackMissSubstate");

// Class TheCannibal.CannibalChainsawAttackObstructSubstate
// 0x0078 (0x01A0 - 0x0128)
class UCannibalChainsawAttackObstructSubstate final : public UBaseChainsawAttackObstructSubstate
{
public:
	struct FTagStateBool                          _isInTantrum;                                      // 0x0128(0x0048)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0x30];                                     // 0x0170(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawAttackObstructSubstate">();
	}
	static class UCannibalChainsawAttackObstructSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawAttackObstructSubstate>();
	}
};
static_assert(alignof(UCannibalChainsawAttackObstructSubstate) == 0x000008, "Wrong alignment on UCannibalChainsawAttackObstructSubstate");
static_assert(sizeof(UCannibalChainsawAttackObstructSubstate) == 0x0001A0, "Wrong size on UCannibalChainsawAttackObstructSubstate");
static_assert(offsetof(UCannibalChainsawAttackObstructSubstate, _isInTantrum) == 0x000128, "Member 'UCannibalChainsawAttackObstructSubstate::_isInTantrum' has a wrong offset!");

// Class TheCannibal.CannibalChainsawPowerComponent
// 0x0608 (0x06B0 - 0x00A8)
class UCannibalChainsawPowerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPowerChargeComponent*                  _chainsawPowerCharge;                              // 0x00B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPowerChargeComponent*                  _chainsawPowerDischarge;                           // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPowerChargeComponent*                  _tantrumPowerCharge;                               // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C8[0xC8];                                      // 0x00C8(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagStateBool                          _isInTantrum;                                      // 0x0190(0x0048)(Net, Transient, NativeAccessSpecifierPrivate)
	int32                                         _numPowerCharges;                                  // 0x01D8(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _numPowerChargesConsumed;                          // 0x01DC(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E0[0x8];                                      // 0x01E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTunableStat                           _chainsawDashDuration;                             // 0x01E8(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _chainsawPowerMaxCharge;                           // 0x0268(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _chainsawChargeRate;                               // 0x02E8(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _chainsawMaxNumberOfCharges;                       // 0x0368(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _chainsawCooldownIncreaseRate;                     // 0x03E8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _chainsawCooldownDuration;                         // 0x0410(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _chainsawMaxCooldownDuration;                      // 0x0490(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _tantrumChargeRate;                                // 0x04B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _tantrumDischargeRate;                             // 0x04E0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _tantrumMaxCharge;                                 // 0x0508(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _tantrumDurationIncreaseRate;                      // 0x0588(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _tantrumDuration;                                  // 0x05B0(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTunableStat                           _tantrumMaxDuration;                               // 0x0630(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Authority_OnChainsawPowerChargeFull();
	void Local_OnTantrumPowerChargeFull();
	void Multicast_OnTantrumPowerChargeFull();
	void OnLevelReadyToPlay();
	void OnRep_NumPowerCharges(int32 PreviousNumPowerCharges);
	void Server_OnTantrumPowerChargeFull();

	int32 GetNumberOfChainsawPowerCharges() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawPowerComponent">();
	}
	static class UCannibalChainsawPowerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawPowerComponent>();
	}
};
static_assert(alignof(UCannibalChainsawPowerComponent) == 0x000008, "Wrong alignment on UCannibalChainsawPowerComponent");
static_assert(sizeof(UCannibalChainsawPowerComponent) == 0x0006B0, "Wrong size on UCannibalChainsawPowerComponent");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawPowerCharge) == 0x0000B0, "Member 'UCannibalChainsawPowerComponent::_chainsawPowerCharge' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawPowerDischarge) == 0x0000B8, "Member 'UCannibalChainsawPowerComponent::_chainsawPowerDischarge' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumPowerCharge) == 0x0000C0, "Member 'UCannibalChainsawPowerComponent::_tantrumPowerCharge' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _isInTantrum) == 0x000190, "Member 'UCannibalChainsawPowerComponent::_isInTantrum' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _numPowerCharges) == 0x0001D8, "Member 'UCannibalChainsawPowerComponent::_numPowerCharges' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _numPowerChargesConsumed) == 0x0001DC, "Member 'UCannibalChainsawPowerComponent::_numPowerChargesConsumed' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawDashDuration) == 0x0001E8, "Member 'UCannibalChainsawPowerComponent::_chainsawDashDuration' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawPowerMaxCharge) == 0x000268, "Member 'UCannibalChainsawPowerComponent::_chainsawPowerMaxCharge' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawChargeRate) == 0x0002E8, "Member 'UCannibalChainsawPowerComponent::_chainsawChargeRate' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawMaxNumberOfCharges) == 0x000368, "Member 'UCannibalChainsawPowerComponent::_chainsawMaxNumberOfCharges' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawCooldownIncreaseRate) == 0x0003E8, "Member 'UCannibalChainsawPowerComponent::_chainsawCooldownIncreaseRate' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawCooldownDuration) == 0x000410, "Member 'UCannibalChainsawPowerComponent::_chainsawCooldownDuration' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _chainsawMaxCooldownDuration) == 0x000490, "Member 'UCannibalChainsawPowerComponent::_chainsawMaxCooldownDuration' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumChargeRate) == 0x0004B8, "Member 'UCannibalChainsawPowerComponent::_tantrumChargeRate' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumDischargeRate) == 0x0004E0, "Member 'UCannibalChainsawPowerComponent::_tantrumDischargeRate' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumMaxCharge) == 0x000508, "Member 'UCannibalChainsawPowerComponent::_tantrumMaxCharge' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumDurationIncreaseRate) == 0x000588, "Member 'UCannibalChainsawPowerComponent::_tantrumDurationIncreaseRate' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumDuration) == 0x0005B0, "Member 'UCannibalChainsawPowerComponent::_tantrumDuration' has a wrong offset!");
static_assert(offsetof(UCannibalChainsawPowerComponent, _tantrumMaxDuration) == 0x000630, "Member 'UCannibalChainsawPowerComponent::_tantrumMaxDuration' has a wrong offset!");

// Class TheCannibal.CannibalChainsawRevInteraction
// 0x00B0 (0x09F0 - 0x0940)
class UCannibalChainsawRevInteraction final : public UChainsawRevInteraction
{
public:
	uint8                                         Pad_940[0xB0];                                     // 0x0940(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalChainsawRevInteraction">();
	}
	static class UCannibalChainsawRevInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalChainsawRevInteraction>();
	}
};
static_assert(alignof(UCannibalChainsawRevInteraction) == 0x000010, "Wrong alignment on UCannibalChainsawRevInteraction");
static_assert(sizeof(UCannibalChainsawRevInteraction) == 0x0009F0, "Wrong size on UCannibalChainsawRevInteraction");

// Class TheCannibal.CannibalPowerPresentationItemProgressComponent
// 0x0008 (0x00B8 - 0x00B0)
class UCannibalPowerPresentationItemProgressComponent final : public UPresentationItemProgressComponent
{
public:
	class UCannibalChainsawPowerComponent*        _cannibalPowerChainsawComponent;                   // 0x00B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetCannibalChainsawPowerComponent(class UCannibalChainsawPowerComponent* CannibalPowerChainsawComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CannibalPowerPresentationItemProgressComponent">();
	}
	static class UCannibalPowerPresentationItemProgressComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCannibalPowerPresentationItemProgressComponent>();
	}
};
static_assert(alignof(UCannibalPowerPresentationItemProgressComponent) == 0x000008, "Wrong alignment on UCannibalPowerPresentationItemProgressComponent");
static_assert(sizeof(UCannibalPowerPresentationItemProgressComponent) == 0x0000B8, "Wrong size on UCannibalPowerPresentationItemProgressComponent");
static_assert(offsetof(UCannibalPowerPresentationItemProgressComponent, _cannibalPowerChainsawComponent) == 0x0000B0, "Member 'UCannibalPowerPresentationItemProgressComponent::_cannibalPowerChainsawComponent' has a wrong offset!");

// Class TheCannibal.CarburetorTuningGuideAddon
// 0x0018 (0x0310 - 0x02F8)
class UCarburetorTuningGuideAddon final : public UOnEventBaseAddon
{
public:
	uint8                                         Pad_2F8[0x18];                                     // 0x02F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CarburetorTuningGuideAddon">();
	}
	static class UCarburetorTuningGuideAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCarburetorTuningGuideAddon>();
	}
};
static_assert(alignof(UCarburetorTuningGuideAddon) == 0x000008, "Wrong alignment on UCarburetorTuningGuideAddon");
static_assert(sizeof(UCarburetorTuningGuideAddon) == 0x000310, "Wrong size on UCarburetorTuningGuideAddon");

// Class TheCannibal.FranklinsDemise
// 0x0010 (0x0430 - 0x0420)
class UFranklinsDemise final : public UPerk
{
public:
	float                                         _timeBeforeItemIsConsumed[0x3];                    // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnPlayerHitCosmetic(class ACamperPlayer* HitPlayer, class ACollectable* ItemToDrop);
	void Multicast_DroppedEvent(class ACamperPlayer* HitPlayer, class ACollectable* ItemToDrop);

	float GetTimeBeforeItemIsConsumedAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FranklinsDemise">();
	}
	static class UFranklinsDemise* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFranklinsDemise>();
	}
};
static_assert(alignof(UFranklinsDemise) == 0x000008, "Wrong alignment on UFranklinsDemise");
static_assert(sizeof(UFranklinsDemise) == 0x000430, "Wrong size on UFranklinsDemise");
static_assert(offsetof(UFranklinsDemise, _timeBeforeItemIsConsumed) == 0x000420, "Member 'UFranklinsDemise::_timeBeforeItemIsConsumed' has a wrong offset!");

// Class TheCannibal.IridescentLeatherAddon
// 0x0018 (0x0310 - 0x02F8)
class UIridescentLeatherAddon final : public UCannibalChainsawHitEventAddon
{
public:
	uint8                                         Pad_2F8[0x18];                                     // 0x02F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IridescentLeatherAddon">();
	}
	static class UIridescentLeatherAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIridescentLeatherAddon>();
	}
};
static_assert(alignof(UIridescentLeatherAddon) == 0x000008, "Wrong alignment on UIridescentLeatherAddon");
static_assert(sizeof(UIridescentLeatherAddon) == 0x000310, "Wrong size on UIridescentLeatherAddon");

// Class TheCannibal.Knockout
// 0x0058 (0x0478 - 0x0420)
class UKnockout final : public UPerk
{
public:
	float                                         _slowAndBlindDuration[0x3];                        // 0x0420(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _crawlSpeedPenalty[0x3];                           // 0x042C(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _auraDisruptionRange[0x3];                         // 0x0438(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForAllSurvivorsStatusEffectImposer    _slowAndBlindEffectImposer;                        // 0x0448(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FForAllSurvivorsStatusEffectImposer    _hideAuraEffectImposer;                            // 0x0460(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Knockout">();
	}
	static class UKnockout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKnockout>();
	}
};
static_assert(alignof(UKnockout) == 0x000008, "Wrong alignment on UKnockout");
static_assert(sizeof(UKnockout) == 0x000478, "Wrong size on UKnockout");
static_assert(offsetof(UKnockout, _slowAndBlindDuration) == 0x000420, "Member 'UKnockout::_slowAndBlindDuration' has a wrong offset!");
static_assert(offsetof(UKnockout, _crawlSpeedPenalty) == 0x00042C, "Member 'UKnockout::_crawlSpeedPenalty' has a wrong offset!");
static_assert(offsetof(UKnockout, _auraDisruptionRange) == 0x000438, "Member 'UKnockout::_auraDisruptionRange' has a wrong offset!");
static_assert(offsetof(UKnockout, _slowAndBlindEffectImposer) == 0x000448, "Member 'UKnockout::_slowAndBlindEffectImposer' has a wrong offset!");
static_assert(offsetof(UKnockout, _hideAuraEffectImposer) == 0x000460, "Member 'UKnockout::_hideAuraEffectImposer' has a wrong offset!");

// Class TheCannibal.KnockOutSlowAndBlindEffect
// 0x0008 (0x0388 - 0x0380)
class UKnockOutSlowAndBlindEffect final : public UStatusEffect
{
public:
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLocallyObservedChanged(class ADBDPlayer* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KnockOutSlowAndBlindEffect">();
	}
	static class UKnockOutSlowAndBlindEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKnockOutSlowAndBlindEffect>();
	}
};
static_assert(alignof(UKnockOutSlowAndBlindEffect) == 0x000008, "Wrong alignment on UKnockOutSlowAndBlindEffect");
static_assert(sizeof(UKnockOutSlowAndBlindEffect) == 0x000388, "Wrong size on UKnockOutSlowAndBlindEffect");

// Class TheCannibal.ShopLubricantAddon
// 0x0010 (0x0308 - 0x02F8)
class UShopLubricantAddon final : public UOnEventBaseAddon
{
public:
	float                                         _auraBlockingDuration;                             // 0x02F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _auraVisibleDistance;                              // 0x02FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _hiddenFromOtherSurvivorsWhileDyingEffectClass;    // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShopLubricantAddon">();
	}
	static class UShopLubricantAddon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShopLubricantAddon>();
	}
};
static_assert(alignof(UShopLubricantAddon) == 0x000008, "Wrong alignment on UShopLubricantAddon");
static_assert(sizeof(UShopLubricantAddon) == 0x000308, "Wrong size on UShopLubricantAddon");
static_assert(offsetof(UShopLubricantAddon, _auraBlockingDuration) == 0x0002F8, "Member 'UShopLubricantAddon::_auraBlockingDuration' has a wrong offset!");
static_assert(offsetof(UShopLubricantAddon, _auraVisibleDistance) == 0x0002FC, "Member 'UShopLubricantAddon::_auraVisibleDistance' has a wrong offset!");
static_assert(offsetof(UShopLubricantAddon, _hiddenFromOtherSurvivorsWhileDyingEffectClass) == 0x000300, "Member 'UShopLubricantAddon::_hiddenFromOtherSurvivorsWhileDyingEffectClass' has a wrong offset!");

}

