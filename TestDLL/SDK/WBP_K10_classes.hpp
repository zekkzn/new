#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K10

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_K10.WBP_K10_C
// 0x0050 (0x0388 - 0x0338)
class UWBP_K10_C final : public UCorePlayerStatusKillerEffectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AsleepIntro;                                       // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              AsleepIcon;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SleepBG;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SleepGague;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SleepHand;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              SleepImmunity;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SleepOverlay;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SleepTimerGroup;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNightmareStatusData*                   CacheData;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void SetNightmareVisibility(ESleepingUIState Sleep_State, double& Sleep_Immunity);
	void SetNightmareData(class UNightmareStatusData* KillerData);
	void SetKillerData(const struct FPlayerStatusViewData& Data);
	void ExecuteUbergraph_WBP_K10(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_K10_C">();
	}
	static class UWBP_K10_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_K10_C>();
	}
};
static_assert(alignof(UWBP_K10_C) == 0x000008, "Wrong alignment on UWBP_K10_C");
static_assert(sizeof(UWBP_K10_C) == 0x000388, "Wrong size on UWBP_K10_C");
static_assert(offsetof(UWBP_K10_C, UberGraphFrame) == 0x000338, "Member 'UWBP_K10_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, AsleepIntro) == 0x000340, "Member 'UWBP_K10_C::AsleepIntro' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, AsleepIcon) == 0x000348, "Member 'UWBP_K10_C::AsleepIcon' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepBG) == 0x000350, "Member 'UWBP_K10_C::SleepBG' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepGague) == 0x000358, "Member 'UWBP_K10_C::SleepGague' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepHand) == 0x000360, "Member 'UWBP_K10_C::SleepHand' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepImmunity) == 0x000368, "Member 'UWBP_K10_C::SleepImmunity' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepOverlay) == 0x000370, "Member 'UWBP_K10_C::SleepOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, SleepTimerGroup) == 0x000378, "Member 'UWBP_K10_C::SleepTimerGroup' has a wrong offset!");
static_assert(offsetof(UWBP_K10_C, CacheData) == 0x000380, "Member 'UWBP_K10_C::CacheData' has a wrong offset!");

}

