#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IndNeonLight

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IndNeonLight.BP_IndNeonLight_C
// 0x0028 (0x02C8 - 0x02A0)
class ABP_IndNeonLight_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URectLightComponent*                    RectLight;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Neon;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Light01;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_IndNeonLight(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void CustomEvent_1(EAkResult Result);
	void Bank_Unloaded(EAkResult Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IndNeonLight_C">();
	}
	static class ABP_IndNeonLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IndNeonLight_C>();
	}
};
static_assert(alignof(ABP_IndNeonLight_C) == 0x000008, "Wrong alignment on ABP_IndNeonLight_C");
static_assert(sizeof(ABP_IndNeonLight_C) == 0x0002C8, "Wrong size on ABP_IndNeonLight_C");
static_assert(offsetof(ABP_IndNeonLight_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_IndNeonLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IndNeonLight_C, RectLight) == 0x0002A8, "Member 'ABP_IndNeonLight_C::RectLight' has a wrong offset!");
static_assert(offsetof(ABP_IndNeonLight_C, SpotLight) == 0x0002B0, "Member 'ABP_IndNeonLight_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_IndNeonLight_C, Ak_Audio_Neon) == 0x0002B8, "Member 'ABP_IndNeonLight_C::Ak_Audio_Neon' has a wrong offset!");
static_assert(offsetof(ABP_IndNeonLight_C, SM_Light01) == 0x0002C0, "Member 'ABP_IndNeonLight_C::SM_Light01' has a wrong offset!");

}

