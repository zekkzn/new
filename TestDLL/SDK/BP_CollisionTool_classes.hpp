#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollisionTool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_CollisionShape_structs.hpp"
#include "ENUM_CollisionProfile_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CollisionTool.BP_CollisionTool_C
// 0x0048 (0x02E8 - 0x02A0)
class ABP_CollisionTool_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ENUM_CollisionShape                           Collision_shape;                                   // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CollisionProfile                         Collision_profile;                                 // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Box_collision_size;                                // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sphere_collision_size;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Capsule_height_size;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Capsule_radius_size;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveActorOnReleased(const struct FKey& ButtonReleased);
	void ReceiveActorOnClicked(const struct FKey& ButtonPressed);
	void ExecuteUbergraph_BP_CollisionTool(int32 EntryPoint);
	void Assign_collision_channels(class UPrimitiveComponent* Primitive_component_reference);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CollisionTool_C">();
	}
	static class ABP_CollisionTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CollisionTool_C>();
	}
};
static_assert(alignof(ABP_CollisionTool_C) == 0x000008, "Wrong alignment on ABP_CollisionTool_C");
static_assert(sizeof(ABP_CollisionTool_C) == 0x0002E8, "Wrong size on ABP_CollisionTool_C");
static_assert(offsetof(ABP_CollisionTool_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_CollisionTool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Scene) == 0x0002A8, "Member 'ABP_CollisionTool_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Collision_shape) == 0x0002B0, "Member 'ABP_CollisionTool_C::Collision_shape' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Collision_profile) == 0x0002B1, "Member 'ABP_CollisionTool_C::Collision_profile' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Box_collision_size) == 0x0002B8, "Member 'ABP_CollisionTool_C::Box_collision_size' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Sphere_collision_size) == 0x0002D0, "Member 'ABP_CollisionTool_C::Sphere_collision_size' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Capsule_height_size) == 0x0002D8, "Member 'ABP_CollisionTool_C::Capsule_height_size' has a wrong offset!");
static_assert(offsetof(ABP_CollisionTool_C, Capsule_radius_size) == 0x0002E0, "Member 'ABP_CollisionTool_C::Capsule_radius_size' has a wrong offset!");

}

