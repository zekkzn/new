#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreArchiveNodeTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreArchiveNodeTooltip.WBP_CoreArchiveNodeTooltip_C
// 0x0048 (0x03C8 - 0x0380)
class UWBP_CoreArchiveNodeTooltip_C final : public UArchiveNodeTooltipWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSlateColor                            LockedColor;                                       // 0x0388(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OwnedColor;                                        // 0x039C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            EquippedColor;                                     // 0x03B0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetNodeType(EArchiveNodeType Type);
	void SetColor(uint8 Type);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_CoreArchiveNodeTooltip(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreArchiveNodeTooltip_C">();
	}
	static class UWBP_CoreArchiveNodeTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreArchiveNodeTooltip_C>();
	}
};
static_assert(alignof(UWBP_CoreArchiveNodeTooltip_C) == 0x000008, "Wrong alignment on UWBP_CoreArchiveNodeTooltip_C");
static_assert(sizeof(UWBP_CoreArchiveNodeTooltip_C) == 0x0003C8, "Wrong size on UWBP_CoreArchiveNodeTooltip_C");
static_assert(offsetof(UWBP_CoreArchiveNodeTooltip_C, UberGraphFrame) == 0x000380, "Member 'UWBP_CoreArchiveNodeTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchiveNodeTooltip_C, LockedColor) == 0x000388, "Member 'UWBP_CoreArchiveNodeTooltip_C::LockedColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchiveNodeTooltip_C, OwnedColor) == 0x00039C, "Member 'UWBP_CoreArchiveNodeTooltip_C::OwnedColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchiveNodeTooltip_C, EquippedColor) == 0x0003B0, "Member 'UWBP_CoreArchiveNodeTooltip_C::EquippedColor' has a wrong offset!");

}

