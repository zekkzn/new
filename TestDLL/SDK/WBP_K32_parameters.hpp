#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K32

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_K32.WBP_K32_C.SetKillerData
// 0x0098 (0x0098 - 0x0000)
struct WBP_K32_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_K32_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_K32_C_SetKillerData");
static_assert(sizeof(WBP_K32_C_SetKillerData) == 0x000098, "Wrong size on WBP_K32_C_SetKillerData");
static_assert(offsetof(WBP_K32_C_SetKillerData, Data) == 0x000000, "Member 'WBP_K32_C_SetKillerData::Data' has a wrong offset!");

// Function WBP_K32.WBP_K32_C.ExecuteUbergraph_WBP_K32
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_K32_C_ExecuteUbergraph_WBP_K32 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	class UK32StatusData*                         K2Node_DynamicCast_AsK32Status_Data;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K32_C_ExecuteUbergraph_WBP_K32) == 0x000008, "Wrong alignment on WBP_K32_C_ExecuteUbergraph_WBP_K32");
static_assert(sizeof(WBP_K32_C_ExecuteUbergraph_WBP_K32) == 0x0000B0, "Wrong size on WBP_K32_C_ExecuteUbergraph_WBP_K32");
static_assert(offsetof(WBP_K32_C_ExecuteUbergraph_WBP_K32, EntryPoint) == 0x000000, "Member 'WBP_K32_C_ExecuteUbergraph_WBP_K32::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K32_C_ExecuteUbergraph_WBP_K32, K2Node_Event_data) == 0x000008, "Member 'WBP_K32_C_ExecuteUbergraph_WBP_K32::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_K32_C_ExecuteUbergraph_WBP_K32, K2Node_DynamicCast_AsK32Status_Data) == 0x0000A0, "Member 'WBP_K32_C_ExecuteUbergraph_WBP_K32::K2Node_DynamicCast_AsK32Status_Data' has a wrong offset!");
static_assert(offsetof(WBP_K32_C_ExecuteUbergraph_WBP_K32, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_K32_C_ExecuteUbergraph_WBP_K32::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

