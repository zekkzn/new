#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePlayerStatus

#include "Basic.hpp"

#include "WBP_CorePlayerStatus_classes.hpp"
#include "WBP_CorePlayerStatus_parameters.hpp"


namespace SDK
{

// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.UpdateSurvivorSpecificPingIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConnectionQuality                      ConnectionQuality                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::UpdateSurvivorSpecificPingIcon(const EConnectionQuality& ConnectionQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "UpdateSurvivorSpecificPingIcon");

	Params::WBP_CorePlayerStatus_C_UpdateSurvivorSpecificPingIcon Parms{};

	Parms.ConnectionQuality = ConnectionQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.UpdateSurvivorActivityProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::UpdateSurvivorActivityProgress(const float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "UpdateSurvivorActivityProgress");

	Params::WBP_CorePlayerStatus_C_UpdateSurvivorActivityProgress Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.TriggerAfflictionHit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::TriggerAfflictionHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "TriggerAfflictionHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ShowSurvivorActivity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Param_ActivityIcon                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// bool                                    ShouldDisplayProgress                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::ShowSurvivorActivity(const TSoftObjectPtr<class UTexture2D>& Param_ActivityIcon, const bool ShouldDisplayProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ShowSurvivorActivity");

	Params::WBP_CorePlayerStatus_C_ShowSurvivorActivity Parms{};

	Parms.Param_ActivityIcon = Param_ActivityIcon;
	Parms.ShouldDisplayProgress = ShouldDisplayProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetVisual
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerStatusViewData            Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePlayerStatus_C::SetVisual(struct FPlayerStatusViewData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetVisual");

	Params::WBP_CorePlayerStatus_C_SetVisual Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTimerProgressVisual
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimerValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDeepWound                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetTimerProgressVisual(double TimerValue, bool IsDeepWound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetTimerProgressVisual");

	Params::WBP_CorePlayerStatus_C_SetTimerProgressVisual Parms{};

	Parms.TimerValue = TimerValue;
	Parms.IsDeepWound = IsDeepWound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTimerProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDeepWound                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetTimerProgress(float Value, bool IsDeepWound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetTimerProgress");

	Params::WBP_CorePlayerStatus_C_SetTimerProgress Parms{};

	Parms.Value = Value;
	Parms.IsDeepWound = IsDeepWound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetTemplate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerStatusTemplate                   Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetTemplate(EPlayerStatusTemplate Template)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetTemplate");

	Params::WBP_CorePlayerStatus_C_SetTemplate Parms{};

	Parms.Template = Template;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetStatusIcon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerStatus                           PlayerStatusState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Player_Portrait                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Player_Portrait_Icon_Overwrite                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCalamariMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetStatusIcon(EPlayerStatus PlayerStatusState, class UTexture2D* Player_Portrait, class UTexture2D* Player_Portrait_Icon_Overwrite, bool IsCalamariMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetStatusIcon");

	Params::WBP_CorePlayerStatus_C_SetStatusIcon Parms{};

	Parms.PlayerStatusState = PlayerStatusState;
	Parms.Player_Portrait = Player_Portrait;
	Parms.Player_Portrait_Icon_Overwrite = Player_Portrait_Icon_Overwrite;
	Parms.IsCalamariMode = IsCalamariMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPlayerPortrait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       PortraitIcon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetPlayerPortrait(class UTexture2D* PortraitIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetPlayerPortrait");

	Params::WBP_CorePlayerStatus_C_SetPlayerPortrait Parms{};

	Parms.PortraitIcon = PortraitIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPlayerName
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PlayerNameMaxCharacters                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetPlayerName(const class FString& PlayerName, int32 PlayerNameMaxCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetPlayerName");

	Params::WBP_CorePlayerStatus_C_SetPlayerName Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.PlayerNameMaxCharacters = PlayerNameMaxCharacters;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetPingVisual
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConnectionQuality                      Ping                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetPingVisual(EConnectionQuality Ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetPingVisual");

	Params::WBP_CorePlayerStatus_C_SetPingVisual Parms{};

	Parms.Ping = Ping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetObsessionState
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EObsessionUIState                       Obsession_State                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetObsessionState(EObsessionUIState Obsession_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetObsessionState");

	Params::WBP_CorePlayerStatus_C_SetObsessionState Parms{};

	Parms.Obsession_State = Obsession_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetName
// (BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::SetName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetKillerData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerStatusViewData            Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_CorePlayerStatus_C::SetKillerData(const struct FPlayerStatusViewData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetKillerData");

	Params::WBP_CorePlayerStatus_C_SetKillerData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetHookStrikeVisual
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDBDImage*                        HookStrikeImage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsKiller                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetHookStrikeVisual(class UDBDImage* HookStrikeImage, bool IsOn, bool IsKiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetHookStrikeVisual");

	Params::WBP_CorePlayerStatus_C_SetHookStrikeVisual Parms{};

	Parms.HookStrikeImage = HookStrikeImage;
	Parms.IsOn = IsOn;
	Parms.IsKiller = IsKiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetEventIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventBannerLabel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetEventIcon(const class FString& EventBannerLabel, bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetEventIcon");

	Params::WBP_CorePlayerStatus_C_SetEventIcon Parms{};

	Parms.EventBannerLabel = std::move(EventBannerLabel);
	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerStatusViewData            Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePlayerStatus_C::SetData(const struct FPlayerStatusViewData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetData");

	Params::WBP_CorePlayerStatus_C_SetData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetClassIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Param_ClassIcon                                        (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
// bool                                    IsCalamariMode                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Player_Killer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Local_Player_Killer                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetClassIcon(TSoftObjectPtr<class UTexture2D> Param_ClassIcon, const bool IsCalamariMode, bool Is_Player_Killer, bool Is_Local_Player_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetClassIcon");

	Params::WBP_CorePlayerStatus_C_SetClassIcon Parms{};

	Parms.Param_ClassIcon = Param_ClassIcon;
	Parms.IsCalamariMode = IsCalamariMode;
	Parms.Is_Player_Killer = Is_Player_Killer;
	Parms.Is_Local_Player_Killer = Is_Local_Player_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetBrokenIcon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBroken                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetBrokenIcon(bool IsBroken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetBrokenIcon");

	Params::WBP_CorePlayerStatus_C_SetBrokenIcon Parms{};

	Parms.IsBroken = IsBroken;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.SetBotTag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::SetBotTag(bool IsBot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "SetBotTag");

	Params::WBP_CorePlayerStatus_C_SetBotTag Parms{};

	Parms.IsBot = IsBot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Set Hooked Count
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DrainStage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Killer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::Set_Hooked_Count(int32 DrainStage, bool Is_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Set Hooked Count");

	Params::WBP_CorePlayerStatus_C_Set_Hooked_Count Parms{};

	Parms.DrainStage = DrainStage;
	Parms.Is_Killer = Is_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PreConstruct");

	Params::WBP_CorePlayerStatus_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayUpdateAnimations
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerStatusViewData            Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePlayerStatus_C::PlayUpdateAnimations(struct FPlayerStatusViewData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayUpdateAnimations");

	Params::WBP_CorePlayerStatus_C_PlayUpdateAnimations Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayTimerBarAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLooping                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::PlayTimerBarAnimation(bool IsLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayTimerBarAnimation");

	Params::WBP_CorePlayerStatus_C_PlayTimerBarAnimation Parms{};

	Parms.IsLooping = IsLooping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayTimerAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::PlayTimerAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayTimerAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayHookEscapeFailedAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::PlayHookEscapeFailedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayHookEscapeFailedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayFocusAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::PlayFocusAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayFocusAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Player Injured Intro Animation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Loop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 Animation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::Player_Injured_Intro_Animation(int32 Loop, class UWidgetAnimation** Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Player Injured Intro Animation");

	Params::WBP_CorePlayerStatus_C_Player_Injured_Intro_Animation Parms{};

	Parms.Loop = Loop;

	UObject::ProcessEvent(Func, &Parms);

	if (Animation != nullptr)
		*Animation = Parms.Animation;
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Player Injured Idle Animation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Loops                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RestoreState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 Animation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::Player_Injured_Idle_Animation(int32 Loops, bool RestoreState, class UWidgetAnimation** Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Player Injured Idle Animation");

	Params::WBP_CorePlayerStatus_C_Player_Injured_Idle_Animation Parms{};

	Parms.Loops = Loops;
	Parms.RestoreState = RestoreState;

	UObject::ProcessEvent(Func, &Parms);

	if (Animation != nullptr)
		*Animation = Parms.Animation;
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.PlayBloodSplatterAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerStatus                           StatusState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::PlayBloodSplatterAnimation(EPlayerStatus StatusState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "PlayBloodSplatterAnimation");

	Params::WBP_CorePlayerStatus_C_PlayBloodSplatterAnimation Parms{};

	Parms.StatusState = StatusState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Play Injured Player Intro
// (BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::Play_Injured_Player_Intro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Play Injured Player Intro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Play Bot Name Animation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::Play_Bot_Name_Animation(bool IsBot, const class FString& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Play Bot Name Animation");

	Params::WBP_CorePlayerStatus_C_Play_Bot_Name_Animation Parms{};

	Parms.IsBot = IsBot;
	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.OnPlayFocusAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TweenDelay                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::OnPlayFocusAnimation(bool Forward, double TweenDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "OnPlayFocusAnimation");

	Params::WBP_CorePlayerStatus_C_OnPlayFocusAnimation Parms{};

	Parms.Forward = Forward;
	Parms.TweenDelay = TweenDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.HideSurvivorActivity
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::HideSurvivorActivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "HideSurvivorActivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetStatusIconTexture
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerStatus                           PlayerStatusState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCalamariMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       IconTexture                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::GetStatusIconTexture(EPlayerStatus PlayerStatusState, bool IsCalamariMode, class UTexture2D** IconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "GetStatusIconTexture");

	Params::WBP_CorePlayerStatus_C_GetStatusIconTexture Parms{};

	Parms.PlayerStatusState = PlayerStatusState;
	Parms.IsCalamariMode = IsCalamariMode;

	UObject::ProcessEvent(Func, &Parms);

	if (IconTexture != nullptr)
		*IconTexture = Parms.IconTexture;
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodImageTopBottom
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerStatus                           Player_Status                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::GetBloodImageTopBottom(EPlayerStatus Player_Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "GetBloodImageTopBottom");

	Params::WBP_CorePlayerStatus_C_GetBloodImageTopBottom Parms{};

	Parms.Player_Status = Player_Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodAnimationAssets
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerStatus                           State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 Animation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::GetBloodAnimationAssets(EPlayerStatus State, class UTexture2D** Texture, class UWidgetAnimation** Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "GetBloodAnimationAssets");

	Params::WBP_CorePlayerStatus_C_GetBloodAnimationAssets Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Texture != nullptr)
		*Texture = Parms.Texture;

	if (Animation != nullptr)
		*Animation = Parms.Animation;
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.GetBloodAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerStatus                           PlayerStatus                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 Animation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::GetBloodAnimation(EPlayerStatus PlayerStatus, class UWidgetAnimation** Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "GetBloodAnimation");

	Params::WBP_CorePlayerStatus_C_GetBloodAnimation Parms{};

	Parms.PlayerStatus = PlayerStatus;

	UObject::ProcessEvent(Func, &Parms);

	if (Animation != nullptr)
		*Animation = Parms.Animation;
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Finished_2F445E62418C04231C6746B2B335C514
// (BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::Finished_2F445E62418C04231C6746B2B335C514()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Finished_2F445E62418C04231C6746B2B335C514");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Finish Intro Animation
// (BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::Finish_Intro_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Finish Intro Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ExecuteUbergraph_WBP_CorePlayerStatus
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::ExecuteUbergraph_WBP_CorePlayerStatus(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ExecuteUbergraph_WBP_CorePlayerStatus");

	Params::WBP_CorePlayerStatus_C_ExecuteUbergraph_WBP_CorePlayerStatus Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Event Bot Name Change
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::Event_Bot_Name_Change(const class FString& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Event Bot Name Change");

	Params::WBP_CorePlayerStatus_C_Event_Bot_Name_Change Parms{};

	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.EnableChasesMode
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChased                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::EnableChasesMode(const bool IsChased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "EnableChasesMode");

	Params::WBP_CorePlayerStatus_C_EnableChasesMode Parms{};

	Parms.IsChased = IsChased;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.DimObsessionAndChaseClaws
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableLeftClaw                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableRightClaw                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePlayerStatus_C::DimObsessionAndChaseClaws(const bool DisableLeftClaw, const bool DisableRightClaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "DimObsessionAndChaseClaws");

	Params::WBP_CorePlayerStatus_C_DimObsessionAndChaseClaws Parms{};

	Parms.DisableLeftClaw = DisableLeftClaw;
	Parms.DisableRightClaw = DisableRightClaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_CorePlayerStatus_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ClearVisual
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::ClearVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ClearVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ClearKillerVisual
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::ClearKillerVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ClearKillerVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ClearData
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePlayerStatus_C::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ClearData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePlayerStatus.WBP_CorePlayerStatus_C.ShouldPlayFocusAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_CorePlayerStatus_C::ShouldPlayFocusAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePlayerStatus_C", "ShouldPlayFocusAnimation");

	Params::WBP_CorePlayerStatus_C_ShouldPlayFocusAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

