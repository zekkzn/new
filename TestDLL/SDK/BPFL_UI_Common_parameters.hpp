#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UI_Common

#include "Basic.hpp"

#include "DBDUIViewsCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPFL_UI_Common.BPFL_UI_Common_C.RemapValueRange
// 0x0078 (0x0078 - 0x0000)
struct BPFL_UI_Common_C_RemapValueRange final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputLow;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputHigh;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetLow;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetHigh;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast_1;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast_1;     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast_2;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_B_ImplicitCast;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast_2;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Result_ImplicitCast;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UI_Common_C_RemapValueRange) == 0x000008, "Wrong alignment on BPFL_UI_Common_C_RemapValueRange");
static_assert(sizeof(BPFL_UI_Common_C_RemapValueRange) == 0x000078, "Wrong size on BPFL_UI_Common_C_RemapValueRange");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, Value) == 0x000000, "Member 'BPFL_UI_Common_C_RemapValueRange::Value' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, InputLow) == 0x000008, "Member 'BPFL_UI_Common_C_RemapValueRange::InputLow' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, InputHigh) == 0x000010, "Member 'BPFL_UI_Common_C_RemapValueRange::InputHigh' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, TargetLow) == 0x000018, "Member 'BPFL_UI_Common_C_RemapValueRange::TargetLow' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, TargetHigh) == 0x000020, "Member 'BPFL_UI_Common_C_RemapValueRange::TargetHigh' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, __WorldContext) == 0x000028, "Member 'BPFL_UI_Common_C_RemapValueRange::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, Result) == 0x000030, "Member 'BPFL_UI_Common_C_RemapValueRange::Result' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000040, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_A_ImplicitCast) == 0x000050, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_B_ImplicitCast) == 0x000054, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_B_ImplicitCast_1) == 0x000058, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_A_ImplicitCast_1) == 0x00005C, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_B_ImplicitCast_2) == 0x000060, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Add_FloatFloat_B_ImplicitCast) == 0x000064, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Add_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, CallFunc_Subtract_FloatFloat_A_ImplicitCast_2) == 0x000068, "Member 'BPFL_UI_Common_C_RemapValueRange::CallFunc_Subtract_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_RemapValueRange, K2Node_FunctionResult_Result_ImplicitCast) == 0x000070, "Member 'BPFL_UI_Common_C_RemapValueRange::K2Node_FunctionResult_Result_ImplicitCast' has a wrong offset!");

// Function BPFL_UI_Common.BPFL_UI_Common_C.SetConditionalButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct BPFL_UI_Common_C_SetConditionalButtonVisibility final
{
public:
	class UCoreButtonWidget*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonWidgetVisibility                       TrueVisibility;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonWidgetVisibility                       FalseVisibility;                                   // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UI_Common_C_SetConditionalButtonVisibility) == 0x000008, "Wrong alignment on BPFL_UI_Common_C_SetConditionalButtonVisibility");
static_assert(sizeof(BPFL_UI_Common_C_SetConditionalButtonVisibility) == 0x000018, "Wrong size on BPFL_UI_Common_C_SetConditionalButtonVisibility");
static_assert(offsetof(BPFL_UI_Common_C_SetConditionalButtonVisibility, Button) == 0x000000, "Member 'BPFL_UI_Common_C_SetConditionalButtonVisibility::Button' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetConditionalButtonVisibility, Condition) == 0x000008, "Member 'BPFL_UI_Common_C_SetConditionalButtonVisibility::Condition' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetConditionalButtonVisibility, TrueVisibility) == 0x000009, "Member 'BPFL_UI_Common_C_SetConditionalButtonVisibility::TrueVisibility' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetConditionalButtonVisibility, FalseVisibility) == 0x00000A, "Member 'BPFL_UI_Common_C_SetConditionalButtonVisibility::FalseVisibility' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetConditionalButtonVisibility, __WorldContext) == 0x000010, "Member 'BPFL_UI_Common_C_SetConditionalButtonVisibility::__WorldContext' has a wrong offset!");

// Function BPFL_UI_Common.BPFL_UI_Common_C.SetImageSize
// 0x0100 (0x0100 - 0x0000)
struct BPFL_UI_Common_C_SetImageSize final
{
public:
	class UDBDImage*                              Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0020(0x00D0)()
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_UI_Common_C_SetImageSize) == 0x000010, "Wrong alignment on BPFL_UI_Common_C_SetImageSize");
static_assert(sizeof(BPFL_UI_Common_C_SetImageSize) == 0x000100, "Wrong size on BPFL_UI_Common_C_SetImageSize");
static_assert(offsetof(BPFL_UI_Common_C_SetImageSize, Image) == 0x000000, "Member 'BPFL_UI_Common_C_SetImageSize::Image' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetImageSize, Size) == 0x000008, "Member 'BPFL_UI_Common_C_SetImageSize::Size' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetImageSize, __WorldContext) == 0x000018, "Member 'BPFL_UI_Common_C_SetImageSize::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetImageSize, K2Node_MakeStruct_SlateBrush) == 0x000020, "Member 'BPFL_UI_Common_C_SetImageSize::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BPFL_UI_Common_C_SetImageSize, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0000F0, "Member 'BPFL_UI_Common_C_SetImageSize::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

}

