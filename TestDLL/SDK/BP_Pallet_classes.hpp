#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pallet

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Pallet.BP_Pallet_C
// 0x0338 (0x0838 - 0x0500)
class ABP_Pallet_C final : public APallet
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_S43P01VaultFastOverPulldownLeft_C*  BP_S43P01VaultFastOverPulldown_Left;               // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_S43P01VaultFastOverPulldownLeft_C*  BP_S43P01VaultFastOverPulldown_Right;              // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          VaultZoneLeft;                                     // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          VaultZoneRight;                                    // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Right;                                             // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Left;                                              // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_K34CrawlUnderPalletInteraction_C*   K34CrawlUnderPalletInteractionRight;               // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_K34CrawlUnderPalletInteraction_C*   K34CrawlUnderPalletInteractionLeft;                // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class US39P02TrapInteraction_C*               TrapPalletInteractionRight;                        // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class US39P02TrapInteraction_C*               TrapPalletInteractionLeft;                         // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDOutlineComponent*                   DBDOutline;                                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_MK_InfectedObject_Pallet;                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Entity_Pallet;                                  // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDSkeletalMeshComponentBudgeted*      PalletMesh;                                        // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PalletZoneForRestrictedPlacement;                  // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UK29KillerVault_C*                      K29KillerVaultOverPalletLeft;                      // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UK29KillerVault_C*                      K29KillerVaultOverPalletRight;                     // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          StunBoxLeft;                                       // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          StunBoxRight;                                      // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownWhileCarriedByKiller_C*        PulldownWhileCarriedByKillerInteraction;           // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PullDownWhileCarriedByKillerZone;                  // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pallet_destroy_broken;                             // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Pallet_Entity_Pulldown;                          // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Entity_Pallet_Pulldown;                         // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Pallet_Destroy_VAT;                             // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialHelper*                        MaterialHelper;                                    // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkVault;                                      // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PalletPullUpInterruption_C*         PalletPullUpInterruptionLeft;                      // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PalletPullUpInterruption_C*         PalletPullUpInterruptionRight;                     // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PalletPullUpInteraction_C*          PalletPullUpInteractionLeft;                       // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PalletPullUpInteraction_C*          PalletPullUpInteractionRight;                      // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   PalletPullUpChargeable;                            // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ColliderDown_WorldDynamic;                         // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFrenzySlasherVaultOverPulldown_C*      FrenzySlasherVaultOverPulldownRight;               // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFrenzySlasherVaultOverPulldown_C*      FrenzySlasherVaultOverPulldownLeft;                // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TestTriggerBox;                                    // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionFront_C*              VaultFastInterruptionFrontLeft;                    // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionBack_C*               VaultFastInterruptionBackLeft;                     // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionFront_C*              VaultFastInterruptionFrontRight;                   // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionBack_C*               VaultFastInterruptionBackRight;                    // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionFront_C*              VaultInterruptionFrontRight;                       // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionBack_C*               VaultInterruptionBackRight;                        // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionFront_C*              VaultInterruptionFrontLeft;                        // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultInterruptionBack_C*               VaultInterruptionBackLeft;                         // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Pallet_Destroy;                                  // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Validator02;                                       // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Validator01;                                       // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEntityDestroyPulldown_C*               EntityDestroyPulldownRight;                        // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEntityDestroyPulldown_C*               EntityDestroyPulldownLeft;                         // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PullDownStationaryZoneRight;                       // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PullDownStationaryZoneLeft;                        // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownAcrossDefinition_C*            PulldownAcrossLeft;                                // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownAcrossDefinition_C*            PulldownAcrossRight;                               // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDefinition_C*                  PulldownDefinitionRight;                           // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultFastOverPulldown_C*               VaultFastOverPulldownRight;                        // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultOverPulldown_C*                   VaultOverPulldownRight;                            // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDefinition_C*                  PulldownDefinitionRightStationary;                 // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDefinition_C*                  PulldownDefinitionLeft;                            // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultFastOverPulldown_C*               VaultFastOverPulldownLeft;                         // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultOverPulldown_C*                   VaultOverPulldownLeft;                             // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDefinition_C*                  PulldownDefinitionLeftStationary;                  // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalletOutlineUpdateStrategy*           PalletOutlineUpdateStrategy;                       // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UVaultableComponent*                    Vaultable;                                         // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PushBox;                                           // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Debris;                                          // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FocalPoint;                                        // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            MainInteractor;                                    // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PullDownAcrossZoneLeft;                            // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDestroyWithPowerAttack_C*      PulldownDestroyWithPowerAttackRight;               // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDestroyPulldownDefinition_C*           DestroyRight;                                      // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DestroyRightZone;                                  // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPulldownDestroyWithPowerAttack_C*      PulldownDestroyWithPowerAttackLeft;                // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDestroyPulldownDefinition_C*           DestroyLeft;                                       // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DestroyLeftZone;                                   // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PullDownAcrossZoneRight;                           // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ColliderUp;                                        // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Pallet;                                   // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ColliderDown_Pawn;                                 // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StunCenter;                                        // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Pallet_Repair_Dissolve_5B69DB7C4EAAD0630298B28A692414C6; // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Pallet_Repair_Frame_Animation_5B69DB7C4EAAD0630298B28A692414C6; // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Pallet_Repair__Direction_5B69DB7C4EAAD0630298B28A692414C6; // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Pallet_Repair;                                 // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_DissolveControl_3C06FC3F4A294B9083731688ED669E5A; // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_3C06FC3F4A294B9083731688ED669E5A; // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_EntityPallet_DissolveControl_36E296FF40B6A832ADBE35A079541DAD; // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_EntityPallet__Direction_36E296FF40B6A832ADBE35A079541DAD; // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B5[0x3];                                      // 0x07B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_EntityPallet;                                  // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_DissolvePullDownPallet_Dissolve_Controller_38AB76D34FB0C6FD954CADA63B854699; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_DissolvePullDownPallet__Direction_38AB76D34FB0C6FD954CADA63B854699; // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_DissolvePullDownPallet;                        // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_pallet_explode_anim_Frame_animation_513B382442A3A7CEA9161CBBC110A0A3; // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_pallet_explode_anim_Opacity_Dissolve_513B382442A3A7CEA9161CBBC110A0A3; // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_pallet_explode_anim__Direction_513B382442A3A7CEA9161CBBC110A0A3; // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_pallet_explode_anim;                           // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        PercentSpeedThresholdForPulldownAcross;            // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PushForce;                                         // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SlasherOutlineColor;                               // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PushbackRelativeToPullerDuration;                  // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Offset;                                            // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          PalletObjectBlockerStartAudioEvent;                // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          PalletObjectBlockerStopAudioEvent;                 // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ExplodeSFX;                                        // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Fall_Duration;                                     // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void VFX_Entity_Pallet();
	void UserConstructionScript();
	void UpdatePalletMeshVisibility(bool Visibility);
	void TML_Pallet_Repair__UpdateFunc();
	void TML_Pallet_Repair__FinishedFunc();
	void TML_Pallet_Repair__Cast_Shadow__EventFunc();
	void TML_pallet_explode_anim__UpdateFunc();
	void TML_pallet_explode_anim__FinishedFunc();
	void TML_pallet_explode_anim__Event_smoke_debris__EventFunc();
	void TML_pallet_explode_anim__Event_shadow_cast__EventFunc();
	void TML_pallet_explode_anim__Event_Embers_dissolve__EventFunc();
	void TML_EntityPallet__UpdateFunc();
	void TML_EntityPallet__FinishedFunc();
	void TML_DissolvePullDownPallet__UpdateFunc();
	void TML_DissolvePullDownPallet__Shadow__EventFunc();
	void TML_DissolvePullDownPallet__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void ResetVfxSfx();
	void ResetPallet();
	void ReceiveBeginPlay();
	void PulldownPallet();
	void PostAkEventPullDownBlocker(class UAkAudioEvent* AkAudioEvent);
	void Pallet_Explode_Dissolve();
	void OnPulldownDestroyed(class ADBDPlayer* DestroyingPlayer);
	void OnPalletStunHit();
	void OnPalletPulledUp_BP();
	void OnFallen();
	void Local_OnFallen();
	class UPrimitiveComponent* GetZoneForRestrictedPlacement();
	void GetAssociatedKiller(class ADBDPlayer* DBDPlayer, class ASlasherPlayer** SlasherPlayer);
	void ExplodeStunPallet(class ADBDPlayer* Player);
	void ExplodeByEntity(class ADBDPlayer* Player);
	void Explode_Vfx_Sfx();
	void Explode(class ADBDPlayer* Player);
	void ExecuteUbergraph_BP_Pallet(int32 EntryPoint);
	void Event_Repair_Pallet_Cancelled();
	void Event_Repair_Pallet(double RepairTime);
	void EntityExplodePallet(class ADBDPlayer* Player);
	void EnableAutomaticPalletThrow();
	void DisableMainCollision();
	void CustomEvent_1(EAkResult Result);
	void Cosmetic_PalletPullDownFXImmediateHide();
	void Cosmetic_OnPalletPulldownBlockedByEntityShow();
	void Cosmetic_OnPalletPulldownBlockedByEntityHide();
	void BP_ExplodePallet(class ADBDPlayer* Player);
	void BndEvt__TestTriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ActivateNavLinks(bool Activate, bool ForceActivation);

	bool IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const;
	class USkeletalMeshComponent* GetPalletSkeletalMeshComponent() const;
	void GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const;
	void GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const;
	struct FVector GetFocalPointPosition(const class ADBDPlayer* Player, const class UInteractionDefinition* Definition) const;
	void GetDestructibleAreaPrimitiveComponents(TArray<class UPrimitiveComponent*>* Prims) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Pallet_C">();
	}
	static class ABP_Pallet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Pallet_C>();
	}
};
static_assert(alignof(ABP_Pallet_C) == 0x000008, "Wrong alignment on ABP_Pallet_C");
static_assert(sizeof(ABP_Pallet_C) == 0x000838, "Wrong size on ABP_Pallet_C");
static_assert(offsetof(ABP_Pallet_C, UberGraphFrame) == 0x000500, "Member 'ABP_Pallet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, BP_S43P01VaultFastOverPulldown_Left) == 0x000508, "Member 'ABP_Pallet_C::BP_S43P01VaultFastOverPulldown_Left' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, BP_S43P01VaultFastOverPulldown_Right) == 0x000510, "Member 'ABP_Pallet_C::BP_S43P01VaultFastOverPulldown_Right' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultZoneLeft) == 0x000518, "Member 'ABP_Pallet_C::VaultZoneLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultZoneRight) == 0x000520, "Member 'ABP_Pallet_C::VaultZoneRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Right) == 0x000528, "Member 'ABP_Pallet_C::Right' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Left) == 0x000530, "Member 'ABP_Pallet_C::Left' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, K34CrawlUnderPalletInteractionRight) == 0x000538, "Member 'ABP_Pallet_C::K34CrawlUnderPalletInteractionRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, K34CrawlUnderPalletInteractionLeft) == 0x000540, "Member 'ABP_Pallet_C::K34CrawlUnderPalletInteractionLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TrapPalletInteractionRight) == 0x000548, "Member 'ABP_Pallet_C::TrapPalletInteractionRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TrapPalletInteractionLeft) == 0x000550, "Member 'ABP_Pallet_C::TrapPalletInteractionLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, DBDOutline) == 0x000558, "Member 'ABP_Pallet_C::DBDOutline' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, P_MK_InfectedObject_Pallet) == 0x000560, "Member 'ABP_Pallet_C::P_MK_InfectedObject_Pallet' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, SM_Entity_Pallet) == 0x000568, "Member 'ABP_Pallet_C::SM_Entity_Pallet' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletMesh) == 0x000570, "Member 'ABP_Pallet_C::PalletMesh' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletZoneForRestrictedPlacement) == 0x000578, "Member 'ABP_Pallet_C::PalletZoneForRestrictedPlacement' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, K29KillerVaultOverPalletLeft) == 0x000580, "Member 'ABP_Pallet_C::K29KillerVaultOverPalletLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, K29KillerVaultOverPalletRight) == 0x000588, "Member 'ABP_Pallet_C::K29KillerVaultOverPalletRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, StunBoxLeft) == 0x000590, "Member 'ABP_Pallet_C::StunBoxLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, StunBoxRight) == 0x000598, "Member 'ABP_Pallet_C::StunBoxRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownWhileCarriedByKillerInteraction) == 0x0005A0, "Member 'ABP_Pallet_C::PulldownWhileCarriedByKillerInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PullDownWhileCarriedByKillerZone) == 0x0005A8, "Member 'ABP_Pallet_C::PullDownWhileCarriedByKillerZone' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Pallet_destroy_broken) == 0x0005B0, "Member 'ABP_Pallet_C::Pallet_destroy_broken' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, P_Pallet_Entity_Pulldown) == 0x0005B8, "Member 'ABP_Pallet_C::P_Pallet_Entity_Pulldown' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, SM_Entity_Pallet_Pulldown) == 0x0005C0, "Member 'ABP_Pallet_C::SM_Entity_Pallet_Pulldown' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, SM_Pallet_Destroy_VAT) == 0x0005C8, "Member 'ABP_Pallet_C::SM_Pallet_Destroy_VAT' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, MaterialHelper) == 0x0005D0, "Member 'ABP_Pallet_C::MaterialHelper' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, NavLinkVault) == 0x0005D8, "Member 'ABP_Pallet_C::NavLinkVault' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletPullUpInterruptionLeft) == 0x0005E0, "Member 'ABP_Pallet_C::PalletPullUpInterruptionLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletPullUpInterruptionRight) == 0x0005E8, "Member 'ABP_Pallet_C::PalletPullUpInterruptionRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletPullUpInteractionLeft) == 0x0005F0, "Member 'ABP_Pallet_C::PalletPullUpInteractionLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletPullUpInteractionRight) == 0x0005F8, "Member 'ABP_Pallet_C::PalletPullUpInteractionRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletPullUpChargeable) == 0x000600, "Member 'ABP_Pallet_C::PalletPullUpChargeable' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, ColliderDown_WorldDynamic) == 0x000608, "Member 'ABP_Pallet_C::ColliderDown_WorldDynamic' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Root) == 0x000610, "Member 'ABP_Pallet_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, FrenzySlasherVaultOverPulldownRight) == 0x000618, "Member 'ABP_Pallet_C::FrenzySlasherVaultOverPulldownRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, FrenzySlasherVaultOverPulldownLeft) == 0x000620, "Member 'ABP_Pallet_C::FrenzySlasherVaultOverPulldownLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TestTriggerBox) == 0x000628, "Member 'ABP_Pallet_C::TestTriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastInterruptionFrontLeft) == 0x000630, "Member 'ABP_Pallet_C::VaultFastInterruptionFrontLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastInterruptionBackLeft) == 0x000638, "Member 'ABP_Pallet_C::VaultFastInterruptionBackLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastInterruptionFrontRight) == 0x000640, "Member 'ABP_Pallet_C::VaultFastInterruptionFrontRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastInterruptionBackRight) == 0x000648, "Member 'ABP_Pallet_C::VaultFastInterruptionBackRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultInterruptionFrontRight) == 0x000650, "Member 'ABP_Pallet_C::VaultInterruptionFrontRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultInterruptionBackRight) == 0x000658, "Member 'ABP_Pallet_C::VaultInterruptionBackRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultInterruptionFrontLeft) == 0x000660, "Member 'ABP_Pallet_C::VaultInterruptionFrontLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultInterruptionBackLeft) == 0x000668, "Member 'ABP_Pallet_C::VaultInterruptionBackLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, P_Pallet_Destroy) == 0x000670, "Member 'ABP_Pallet_C::P_Pallet_Destroy' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Validator02) == 0x000678, "Member 'ABP_Pallet_C::Validator02' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Validator01) == 0x000680, "Member 'ABP_Pallet_C::Validator01' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, EntityDestroyPulldownRight) == 0x000688, "Member 'ABP_Pallet_C::EntityDestroyPulldownRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, EntityDestroyPulldownLeft) == 0x000690, "Member 'ABP_Pallet_C::EntityDestroyPulldownLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PullDownStationaryZoneRight) == 0x000698, "Member 'ABP_Pallet_C::PullDownStationaryZoneRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PullDownStationaryZoneLeft) == 0x0006A0, "Member 'ABP_Pallet_C::PullDownStationaryZoneLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownAcrossLeft) == 0x0006A8, "Member 'ABP_Pallet_C::PulldownAcrossLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownAcrossRight) == 0x0006B0, "Member 'ABP_Pallet_C::PulldownAcrossRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDefinitionRight) == 0x0006B8, "Member 'ABP_Pallet_C::PulldownDefinitionRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastOverPulldownRight) == 0x0006C0, "Member 'ABP_Pallet_C::VaultFastOverPulldownRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultOverPulldownRight) == 0x0006C8, "Member 'ABP_Pallet_C::VaultOverPulldownRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDefinitionRightStationary) == 0x0006D0, "Member 'ABP_Pallet_C::PulldownDefinitionRightStationary' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDefinitionLeft) == 0x0006D8, "Member 'ABP_Pallet_C::PulldownDefinitionLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultFastOverPulldownLeft) == 0x0006E0, "Member 'ABP_Pallet_C::VaultFastOverPulldownLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, VaultOverPulldownLeft) == 0x0006E8, "Member 'ABP_Pallet_C::VaultOverPulldownLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDefinitionLeftStationary) == 0x0006F0, "Member 'ABP_Pallet_C::PulldownDefinitionLeftStationary' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletOutlineUpdateStrategy) == 0x0006F8, "Member 'ABP_Pallet_C::PalletOutlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Vaultable) == 0x000700, "Member 'ABP_Pallet_C::Vaultable' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PushBox) == 0x000708, "Member 'ABP_Pallet_C::PushBox' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, P_Debris) == 0x000710, "Member 'ABP_Pallet_C::P_Debris' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, FocalPoint) == 0x000718, "Member 'ABP_Pallet_C::FocalPoint' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, MainInteractor) == 0x000720, "Member 'ABP_Pallet_C::MainInteractor' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PullDownAcrossZoneLeft) == 0x000728, "Member 'ABP_Pallet_C::PullDownAcrossZoneLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDestroyWithPowerAttackRight) == 0x000730, "Member 'ABP_Pallet_C::PulldownDestroyWithPowerAttackRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, DestroyRight) == 0x000738, "Member 'ABP_Pallet_C::DestroyRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, DestroyRightZone) == 0x000740, "Member 'ABP_Pallet_C::DestroyRightZone' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PulldownDestroyWithPowerAttackLeft) == 0x000748, "Member 'ABP_Pallet_C::PulldownDestroyWithPowerAttackLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, DestroyLeft) == 0x000750, "Member 'ABP_Pallet_C::DestroyLeft' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, DestroyLeftZone) == 0x000758, "Member 'ABP_Pallet_C::DestroyLeftZone' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PullDownAcrossZoneRight) == 0x000760, "Member 'ABP_Pallet_C::PullDownAcrossZoneRight' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, ColliderUp) == 0x000768, "Member 'ABP_Pallet_C::ColliderUp' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Ak_Audio_Pallet) == 0x000770, "Member 'ABP_Pallet_C::Ak_Audio_Pallet' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, ColliderDown_Pawn) == 0x000778, "Member 'ABP_Pallet_C::ColliderDown_Pawn' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, StunCenter) == 0x000780, "Member 'ABP_Pallet_C::StunCenter' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_Pallet_Repair_Dissolve_5B69DB7C4EAAD0630298B28A692414C6) == 0x000788, "Member 'ABP_Pallet_C::TML_Pallet_Repair_Dissolve_5B69DB7C4EAAD0630298B28A692414C6' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_Pallet_Repair_Frame_Animation_5B69DB7C4EAAD0630298B28A692414C6) == 0x00078C, "Member 'ABP_Pallet_C::TML_Pallet_Repair_Frame_Animation_5B69DB7C4EAAD0630298B28A692414C6' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_Pallet_Repair__Direction_5B69DB7C4EAAD0630298B28A692414C6) == 0x000790, "Member 'ABP_Pallet_C::TML_Pallet_Repair__Direction_5B69DB7C4EAAD0630298B28A692414C6' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_Pallet_Repair) == 0x000798, "Member 'ABP_Pallet_C::TML_Pallet_Repair' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Timeline_0_DissolveControl_3C06FC3F4A294B9083731688ED669E5A) == 0x0007A0, "Member 'ABP_Pallet_C::Timeline_0_DissolveControl_3C06FC3F4A294B9083731688ED669E5A' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Timeline_0__Direction_3C06FC3F4A294B9083731688ED669E5A) == 0x0007A4, "Member 'ABP_Pallet_C::Timeline_0__Direction_3C06FC3F4A294B9083731688ED669E5A' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Timeline_0) == 0x0007A8, "Member 'ABP_Pallet_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_EntityPallet_DissolveControl_36E296FF40B6A832ADBE35A079541DAD) == 0x0007B0, "Member 'ABP_Pallet_C::TML_EntityPallet_DissolveControl_36E296FF40B6A832ADBE35A079541DAD' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_EntityPallet__Direction_36E296FF40B6A832ADBE35A079541DAD) == 0x0007B4, "Member 'ABP_Pallet_C::TML_EntityPallet__Direction_36E296FF40B6A832ADBE35A079541DAD' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_EntityPallet) == 0x0007B8, "Member 'ABP_Pallet_C::TML_EntityPallet' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_DissolvePullDownPallet_Dissolve_Controller_38AB76D34FB0C6FD954CADA63B854699) == 0x0007C0, "Member 'ABP_Pallet_C::TML_DissolvePullDownPallet_Dissolve_Controller_38AB76D34FB0C6FD954CADA63B854699' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_DissolvePullDownPallet__Direction_38AB76D34FB0C6FD954CADA63B854699) == 0x0007C4, "Member 'ABP_Pallet_C::TML_DissolvePullDownPallet__Direction_38AB76D34FB0C6FD954CADA63B854699' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_DissolvePullDownPallet) == 0x0007C8, "Member 'ABP_Pallet_C::TML_DissolvePullDownPallet' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_pallet_explode_anim_Frame_animation_513B382442A3A7CEA9161CBBC110A0A3) == 0x0007D0, "Member 'ABP_Pallet_C::TML_pallet_explode_anim_Frame_animation_513B382442A3A7CEA9161CBBC110A0A3' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_pallet_explode_anim_Opacity_Dissolve_513B382442A3A7CEA9161CBBC110A0A3) == 0x0007D4, "Member 'ABP_Pallet_C::TML_pallet_explode_anim_Opacity_Dissolve_513B382442A3A7CEA9161CBBC110A0A3' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_pallet_explode_anim__Direction_513B382442A3A7CEA9161CBBC110A0A3) == 0x0007D8, "Member 'ABP_Pallet_C::TML_pallet_explode_anim__Direction_513B382442A3A7CEA9161CBBC110A0A3' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, TML_pallet_explode_anim) == 0x0007E0, "Member 'ABP_Pallet_C::TML_pallet_explode_anim' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PercentSpeedThresholdForPulldownAcross) == 0x0007E8, "Member 'ABP_Pallet_C::PercentSpeedThresholdForPulldownAcross' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PushForce) == 0x0007F0, "Member 'ABP_Pallet_C::PushForce' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, SlasherOutlineColor) == 0x0007F8, "Member 'ABP_Pallet_C::SlasherOutlineColor' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PushbackRelativeToPullerDuration) == 0x000808, "Member 'ABP_Pallet_C::PushbackRelativeToPullerDuration' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Offset) == 0x000810, "Member 'ABP_Pallet_C::Offset' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletObjectBlockerStartAudioEvent) == 0x000818, "Member 'ABP_Pallet_C::PalletObjectBlockerStartAudioEvent' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, PalletObjectBlockerStopAudioEvent) == 0x000820, "Member 'ABP_Pallet_C::PalletObjectBlockerStopAudioEvent' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, ExplodeSFX) == 0x000828, "Member 'ABP_Pallet_C::ExplodeSFX' has a wrong offset!");
static_assert(offsetof(ABP_Pallet_C, Fall_Duration) == 0x000830, "Member 'ABP_Pallet_C::Fall_Duration' has a wrong offset!");

}

