#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VFX_FunctionLib_Blood

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.CreatePP_BloodMaterial
// 0x0028 (0x0028 - 0x0000)
struct VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PostProcessMaterialInstance;                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        BloodOpacity;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_SlasherBlood;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial");
static_assert(sizeof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial) == 0x000028, "Wrong size on VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial");
static_assert(offsetof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial, __WorldContext) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial, PostProcessMaterialInstance) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial::PostProcessMaterialInstance' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial, BloodOpacity) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial::BloodOpacity' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial, PP_SlasherBlood) == 0x000018, "Member 'VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial::PP_SlasherBlood' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'VFX_FunctionLib_Blood_C_CreatePP_BloodMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.GetBloodFramePlayRate
// 0x0018 (0x0018 - 0x0000)
struct VFX_FunctionLib_Blood_C_GetBloodFramePlayRate final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_GetBloodFramePlayRate) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_GetBloodFramePlayRate");
static_assert(sizeof(VFX_FunctionLib_Blood_C_GetBloodFramePlayRate) == 0x000018, "Wrong size on VFX_FunctionLib_Blood_C_GetBloodFramePlayRate");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetBloodFramePlayRate, __WorldContext) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_GetBloodFramePlayRate::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetBloodFramePlayRate, ReturnValue) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_GetBloodFramePlayRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetBloodFramePlayRate, PlayRate) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_GetBloodFramePlayRate::PlayRate' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.GetDecalTransform
// 0x01B0 (0x01B0 - 0x0000)
struct VFX_FunctionLib_Blood_C_GetDecalTransform final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_GetDecalTransform) == 0x000010, "Wrong alignment on VFX_FunctionLib_Blood_C_GetDecalTransform");
static_assert(sizeof(VFX_FunctionLib_Blood_C_GetDecalTransform) == 0x0001B0, "Wrong size on VFX_FunctionLib_Blood_C_GetDecalTransform");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, Mesh) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::Mesh' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, __WorldContext) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, ReturnValue) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_RandomFloatInRange_ReturnValue) == 0x000070, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_X) == 0x0000A8, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_GetSocketLocation_ReturnValue) == 0x0000C0, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000D8, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_ComposeRotators_ReturnValue) == 0x000108, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_MakeVector_ReturnValue) == 0x000120, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetDecalTransform, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001A0, "Member 'VFX_FunctionLib_Blood_C_GetDecalTransform::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.GetSlasherBloodOpacityPlayrate
// 0x0018 (0x0018 - 0x0000)
struct VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate");
static_assert(sizeof(VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate) == 0x000018, "Wrong size on VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate, __WorldContext) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate, ReturnValue) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate::ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate, PlayRate) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_GetSlasherBloodOpacityPlayrate::PlayRate' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.ManagePostProcessParameters
// 0x0040 (0x0040 - 0x0000)
struct VFX_FunctionLib_Blood_C_ManagePostProcessParameters final
{
public:
	bool                                          Remove;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       Camera;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                PostProcessMaterial;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_ManagePostProcessParameters");
static_assert(sizeof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters) == 0x000040, "Wrong size on VFX_FunctionLib_Blood_C_ManagePostProcessParameters");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, Remove) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::Remove' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, Camera) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::Camera' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, PostProcessMaterial) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::PostProcessMaterial' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, __WorldContext) == 0x000018, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, K2Node_MakeStruct_WeightedBlendable) == 0x000020, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, CallFunc_Array_AddUnique_ReturnValue) == 0x000034, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_ManagePostProcessParameters, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'VFX_FunctionLib_Blood_C_ManagePostProcessParameters::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.RandomizeBloodLayer
// 0x0098 (0x0098 - 0x0000)
struct VFX_FunctionLib_Blood_C_RandomizeBloodLayer final
{
public:
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   OffsetX_MaterialParameter;                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OffsetY_MaterialParameter;                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Texture_MaterialParameter;                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Scale_Parameter;                                   // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Dimension_1;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       BloodTexturesLayers;                               // 0x0048(0x0010)(Edit, BlueprintVisible)
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_RandomizeBloodLayer");
static_assert(sizeof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer) == 0x000098, "Wrong size on VFX_FunctionLib_Blood_C_RandomizeBloodLayer");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, MaterialInstance) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::MaterialInstance' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, OffsetX_MaterialParameter) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::OffsetX_MaterialParameter' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, OffsetY_MaterialParameter) == 0x000014, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::OffsetY_MaterialParameter' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, Texture_MaterialParameter) == 0x000020, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::Texture_MaterialParameter' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, Scale_Parameter) == 0x00002C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::Scale_Parameter' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, Dimension_1) == 0x000038, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::Dimension_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, __WorldContext) == 0x000040, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, BloodTexturesLayers) == 0x000048, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::BloodTexturesLayers' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_Array_Get_Item) == 0x000058, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000068, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000070, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, K2Node_MakeArray_Array) == 0x000078, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000088, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00008C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodLayer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000090, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodLayer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.RandomizeBloodPostProcess
// 0x00B0 (0x00B0 - 0x0000)
struct VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess final
{
public:
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             DBDPlayer;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TextureIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Random5Textures;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AmountOfTextures;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerRole                                   CallFunc_GetPlayerRole_ReturnValue;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetRandomValuesFromArray_ReturnValue;     // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_4;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess");
static_assert(sizeof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess) == 0x0000B0, "Wrong size on VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, MaterialInstance) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::MaterialInstance' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, DBDPlayer) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::DBDPlayer' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, __WorldContext) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, TextureIndex) == 0x000018, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::TextureIndex' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Random5Textures) == 0x000020, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Random5Textures' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, AmountOfTextures) == 0x000030, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::AmountOfTextures' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable) == 0x000040, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_GetPlayerRole_ReturnValue) == 0x000045, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_GetPlayerRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000046, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, K2Node_MakeArray_Array) == 0x000048, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_1) == 0x000068, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_2) == 0x00006C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Array_Get_Item) == 0x000070, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_3) == 0x000074, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_GetRandomValuesFromArray_ReturnValue) == 0x000078, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_GetRandomValuesFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_4) == 0x000088, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_4) == 0x00008C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_5) == 0x000090, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_6) == 0x000094, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Add_IntInt_ReturnValue_7) == 0x000098, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_5) == 0x00009C, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_6) == 0x0000A0, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, CallFunc_Array_Get_Item_1) == 0x0000A4, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess, Temp_int_Variable_7) == 0x0000A8, "Member 'VFX_FunctionLib_Blood_C_RandomizeBloodPostProcess::Temp_int_Variable_7' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.SpawnBleedEffect
// 0x0020 (0x0020 - 0x0000)
struct VFX_FunctionLib_Blood_C_SpawnBleedEffect final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_SpawnBleedEffect) == 0x000008, "Wrong alignment on VFX_FunctionLib_Blood_C_SpawnBleedEffect");
static_assert(sizeof(VFX_FunctionLib_Blood_C_SpawnBleedEffect) == 0x000020, "Wrong size on VFX_FunctionLib_Blood_C_SpawnBleedEffect");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBleedEffect, Mesh) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_SpawnBleedEffect::Mesh' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBleedEffect, __WorldContext) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_SpawnBleedEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBleedEffect, ParticleSystem) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_SpawnBleedEffect::ParticleSystem' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBleedEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'VFX_FunctionLib_Blood_C_SpawnBleedEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function VFX_FunctionLib_Blood.VFX_FunctionLib_Blood_C.SpawnBloodSpurtsParticles
// 0x0160 (0x0160 - 0x0000)
struct VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles final
{
public:
	class USceneComponent*                        Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraSystem*>                 Niagara_Emitters_Blood_Random;                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class UParticleSystem*>                P_BloodDrip;                                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class UParticleSystem*>                P_BloodSpurts;                                     // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class UNiagaraSystem*>                 K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class ADBDPlayerCameraManager*                CallFunc_GetLocalDBDCameraManager_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystem*>                K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystem*>                K2Node_MakeArray_Array_2;                          // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles) == 0x000010, "Wrong alignment on VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles");
static_assert(sizeof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles) == 0x000160, "Wrong size on VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, Mesh) == 0x000000, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::Mesh' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, __WorldContext) == 0x000008, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::__WorldContext' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, ReturnValue) == 0x000010, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, Niagara_Emitters_Blood_Random) == 0x000018, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::Niagara_Emitters_Blood_Random' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, P_BloodDrip) == 0x000028, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::P_BloodDrip' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, P_BloodSpurts) == 0x000038, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::P_BloodSpurts' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, K2Node_MakeArray_Array) == 0x000048, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_GetLocalDBDCameraManager_ReturnValue) == 0x000058, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_GetLocalDBDCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_GetCameraRotation_ReturnValue) == 0x000068, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_GetSocketTransform_ReturnValue) == 0x000080, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, K2Node_MakeArray_Array_2) == 0x000138, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_Array_LastIndex_ReturnValue) == 0x000148, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_RandomInteger_ReturnValue) == 0x00014C, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_Array_Get_Item) == 0x000150, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000158, "Member 'VFX_FunctionLib_Blood_C_SpawnBloodSpurtsParticles::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

}

