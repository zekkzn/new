#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlashlightFXComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.VerifyInitialization
// 0x0002 (0x0002 - 0x0000)
struct BP_FlashlightFXComponent_C_VerifyInitialization final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_VerifyInitialization) == 0x000001, "Wrong alignment on BP_FlashlightFXComponent_C_VerifyInitialization");
static_assert(sizeof(BP_FlashlightFXComponent_C_VerifyInitialization) == 0x000002, "Wrong size on BP_FlashlightFXComponent_C_VerifyInitialization");
static_assert(offsetof(BP_FlashlightFXComponent_C_VerifyInitialization, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FlashlightFXComponent_C_VerifyInitialization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_VerifyInitialization, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_FlashlightFXComponent_C_VerifyInitialization::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.UpdateCurrentBeamParticles
// 0x0010 (0x0010 - 0x0000)
struct BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles final
{
public:
	class ADBDPlayer*                             CallFunc_GetCollector_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyObserved_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles) == 0x000008, "Wrong alignment on BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles");
static_assert(sizeof(BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles) == 0x000010, "Wrong size on BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles");
static_assert(offsetof(BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles, CallFunc_GetCollector_ReturnValue) == 0x000000, "Member 'BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles::CallFunc_GetCollector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles, CallFunc_IsLocallyObserved_ReturnValue) == 0x000008, "Member 'BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles::CallFunc_IsLocallyObserved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FlashlightFXComponent_C_UpdateCurrentBeamParticles::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.UpdateConeEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_FlashlightFXComponent_C_UpdateConeEvent final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfAngle;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_UpdateConeEvent) == 0x000004, "Wrong alignment on BP_FlashlightFXComponent_C_UpdateConeEvent");
static_assert(sizeof(BP_FlashlightFXComponent_C_UpdateConeEvent) == 0x000008, "Wrong size on BP_FlashlightFXComponent_C_UpdateConeEvent");
static_assert(offsetof(BP_FlashlightFXComponent_C_UpdateConeEvent, Length) == 0x000000, "Member 'BP_FlashlightFXComponent_C_UpdateConeEvent::Length' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_UpdateConeEvent, HalfAngle) == 0x000004, "Member 'BP_FlashlightFXComponent_C_UpdateConeEvent::HalfAngle' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.Update Glow Colour
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FlashlightFXComponent_C_Update_Glow_Colour final
{
public:
	double                                        Emissive_Intensity;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlindingSuccessRatio_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_B_ImplicitCast;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x00AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_Update_Glow_Colour) == 0x000008, "Wrong alignment on BP_FlashlightFXComponent_C_Update_Glow_Colour");
static_assert(sizeof(BP_FlashlightFXComponent_C_Update_Glow_Colour) == 0x0000B0, "Wrong size on BP_FlashlightFXComponent_C_Update_Glow_Colour");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, Emissive_Intensity) == 0x000000, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::Emissive_Intensity' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_GetBlindingSuccessRatio_ReturnValue) == 0x000008, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_GetBlindingSuccessRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_ReturnValue_2) == 0x000038, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_ReturnValue_3) == 0x000040, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000068, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x000080, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000088, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000090, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x000098, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x0000A0, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_Multiply_FloatFloat_B_ImplicitCast) == 0x0000A8, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_Multiply_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_Update_Glow_Colour, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x0000AC, "Member 'BP_FlashlightFXComponent_C_Update_Glow_Colour::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.SetParticlesActive
// 0x0001 (0x0001 - 0x0000)
struct BP_FlashlightFXComponent_C_SetParticlesActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_SetParticlesActive) == 0x000001, "Wrong alignment on BP_FlashlightFXComponent_C_SetParticlesActive");
static_assert(sizeof(BP_FlashlightFXComponent_C_SetParticlesActive) == 0x000001, "Wrong size on BP_FlashlightFXComponent_C_SetParticlesActive");
static_assert(offsetof(BP_FlashlightFXComponent_C_SetParticlesActive, Active) == 0x000000, "Member 'BP_FlashlightFXComponent_C_SetParticlesActive::Active' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.OnCollectorLocallyObservedChangedEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent final
{
public:
	bool                                          Param_IsLocallyObserved;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent) == 0x000001, "Wrong alignment on BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent");
static_assert(sizeof(BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent) == 0x000001, "Wrong size on BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent");
static_assert(offsetof(BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent, Param_IsLocallyObserved) == 0x000000, "Member 'BP_FlashlightFXComponent_C_OnCollectorLocallyObservedChangedEvent::Param_IsLocallyObserved' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.OnCollectedEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_FlashlightFXComponent_C_OnCollectedEvent final
{
public:
	class ADBDPlayer*                             Collector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_OnCollectedEvent) == 0x000008, "Wrong alignment on BP_FlashlightFXComponent_C_OnCollectedEvent");
static_assert(sizeof(BP_FlashlightFXComponent_C_OnCollectedEvent) == 0x000008, "Wrong size on BP_FlashlightFXComponent_C_OnCollectedEvent");
static_assert(offsetof(BP_FlashlightFXComponent_C_OnCollectedEvent, Collector) == 0x000000, "Member 'BP_FlashlightFXComponent_C_OnCollectedEvent::Collector' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.ExecuteUbergraph_BP_FlashlightFXComponent
// 0x0118 (0x0118 - 0x0000)
struct BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyObserved_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isLocallyObserved;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_Event_collector;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_length;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_halfAngle;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyObserved_Result;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Lenght_ImplicitCast;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_1;  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_A_ImplicitCast;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_4;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_2;  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_3;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_4;  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast_5;  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x0100(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_5;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2; // 0x0110(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent) == 0x000008, "Wrong alignment on BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent");
static_assert(sizeof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent) == 0x000118, "Wrong size on BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, EntryPoint) == 0x000000, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_IsLocallyObserved_ReturnValue) == 0x000004, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_IsLocallyObserved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, K2Node_Event_isLocallyObserved) == 0x000005, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::K2Node_Event_isLocallyObserved' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, K2Node_Event_collector) == 0x000008, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::K2Node_Event_collector' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, K2Node_Event_length) == 0x000018, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::K2Node_Event_length' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, K2Node_Event_halfAngle) == 0x00001C, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::K2Node_Event_halfAngle' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000028, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000038, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_IsLocallyObserved_Result) == 0x000054, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_IsLocallyObserved_Result' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue_1) == 0x000070, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue_2) == 0x000078, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue_3) == 0x000080, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue_4) == 0x000088, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_GetFloatValue_ReturnValue_1) == 0x000090, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_ReturnValue_5) == 0x000098, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x0000A0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, K2Node_VariableSet_Lenght_ImplicitCast) == 0x0000A8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::K2Node_VariableSet_Lenght_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast_1) == 0x0000B0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Divide_FloatFloat_A_ImplicitCast) == 0x0000B4, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Divide_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_FClamp_Value_ImplicitCast) == 0x0000B8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x0000C0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0000C8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000D0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0000D8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x0000E0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast_4) == 0x0000E8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast_2) == 0x0000F0, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast_3) == 0x0000F4, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast_4) == 0x0000F8, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetVariableFloat_InValue_ImplicitCast_5) == 0x0000FC, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetVariableFloat_InValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x000100, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_Lerp_Alpha_ImplicitCast_5) == 0x000108, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_Lerp_Alpha_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2) == 0x000110, "Member 'BP_FlashlightFXComponent_C_ExecuteUbergraph_BP_FlashlightFXComponent::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_2' has a wrong offset!");

// Function BP_FlashlightFXComponent.BP_FlashlightFXComponent_C.IsLocallyObserved
// 0x0030 (0x0030 - 0x0000)
struct BP_FlashlightFXComponent_C_IsLocallyObserved final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AInteractable*                          K2Node_DynamicCast_AsInteractable;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetPlayerOwner_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyObserved_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightFXComponent_C_IsLocallyObserved) == 0x000008, "Wrong alignment on BP_FlashlightFXComponent_C_IsLocallyObserved");
static_assert(sizeof(BP_FlashlightFXComponent_C_IsLocallyObserved) == 0x000030, "Wrong size on BP_FlashlightFXComponent_C_IsLocallyObserved");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, Result) == 0x000000, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::Result' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, K2Node_DynamicCast_AsInteractable) == 0x000010, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::K2Node_DynamicCast_AsInteractable' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, CallFunc_GetPlayerOwner_ReturnValue) == 0x000020, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::CallFunc_GetPlayerOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, CallFunc_IsLocallyObserved_ReturnValue) == 0x000028, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::CallFunc_IsLocallyObserved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightFXComponent_C_IsLocallyObserved, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_FlashlightFXComponent_C_IsLocallyObserved::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

