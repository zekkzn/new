#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TileBase01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TileBase01.TileBase01_C
// 0x01A0 (0x0600 - 0x0460)
class ATileBase01_C : public ATile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Breakables;                                        // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        GeneratorDrivenObjects;                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Audio;                                             // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PullObjects;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          BottomLeftSpawner;                                 // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          TopLeftSpawner;                                    // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          TopRightSpawner;                                   // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          BottomRightSpawner;                                // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        QuadrantSpawners;                                  // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EdgeObjectBlocker;                                 // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VaultObjects;                                      // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Crows;                                             // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EdgeObjects;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Lockers;                                           // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HideGrass;                                         // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Blockers;                                          // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Gameplay;                                          // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Lights;                                            // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Effect_Mist04;                                  // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Effect_Mist03;                                  // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Effect_Mist02;                                  // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Effect_Mist01;                                  // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Mist__BP_Effect_Mist_;                             // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FX;                                                // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Deco;                                              // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          SearchableSpawner;                                 // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          SmallMeatLockerSpawner;                            // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          HatchSpawner;                                      // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow6;                                            // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        InteractableSpawn01;                               // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow7;                                            // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          HexSpawner01;                                      // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SurvivorItemSpawn01;                               // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow5;                                            // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        KillerItemSpawn01;                                 // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow4;                                            // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        KillerSpawn01;                                     // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow2;                                            // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SurvivorSpawn04;                                   // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow1;                                            // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SurvivorSpawn03;                                   // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SurvivorSpawn02;                                   // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow3;                                            // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SurvivorSpawn01;                                   // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnPoints;                                       // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TotalWeight;                                       // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SelectedWeight;                                    // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTileSpawnPoint*                        SelectedSpawnPoint;                                // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TileBase01(int32 EntryPoint);
	void KNY_StartSnowstorm();
	void OnLevelLoaded();
	void ReceiveTick(float DeltaSeconds);
	void SelectSpawnPoint(TArray<class UTileSpawnPoint*>& Array);
	void SetGeneratorDrivenObjects(class UTileSpawnPoint* SpawnPoint, class AActor* SpawnedObject);
	void SetGeneratorDrivenScoreEvent(const TArray<class AActor*>& Generators);
	void SetupGeneratorDrivenElements(class AActor* GeneratorSpawnPoint, TArray<class UChildActorComponent*>& GeneratorDrivenElements);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TileBase01_C">();
	}
	static class ATileBase01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATileBase01_C>();
	}
};
static_assert(alignof(ATileBase01_C) == 0x000008, "Wrong alignment on ATileBase01_C");
static_assert(sizeof(ATileBase01_C) == 0x000600, "Wrong size on ATileBase01_C");
static_assert(offsetof(ATileBase01_C, UberGraphFrame) == 0x000460, "Member 'ATileBase01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Breakables) == 0x000468, "Member 'ATileBase01_C::Breakables' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, GeneratorDrivenObjects) == 0x000470, "Member 'ATileBase01_C::GeneratorDrivenObjects' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Audio) == 0x000478, "Member 'ATileBase01_C::Audio' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, PullObjects) == 0x000480, "Member 'ATileBase01_C::PullObjects' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BottomLeftSpawner) == 0x000488, "Member 'ATileBase01_C::BottomLeftSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, TopLeftSpawner) == 0x000490, "Member 'ATileBase01_C::TopLeftSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, TopRightSpawner) == 0x000498, "Member 'ATileBase01_C::TopRightSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BottomRightSpawner) == 0x0004A0, "Member 'ATileBase01_C::BottomRightSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, QuadrantSpawners) == 0x0004A8, "Member 'ATileBase01_C::QuadrantSpawners' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, EdgeObjectBlocker) == 0x0004B0, "Member 'ATileBase01_C::EdgeObjectBlocker' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, VaultObjects) == 0x0004B8, "Member 'ATileBase01_C::VaultObjects' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Crows) == 0x0004C0, "Member 'ATileBase01_C::Crows' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, EdgeObjects) == 0x0004C8, "Member 'ATileBase01_C::EdgeObjects' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Lockers) == 0x0004D0, "Member 'ATileBase01_C::Lockers' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, HideGrass) == 0x0004D8, "Member 'ATileBase01_C::HideGrass' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Blockers) == 0x0004E0, "Member 'ATileBase01_C::Blockers' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Gameplay) == 0x0004E8, "Member 'ATileBase01_C::Gameplay' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Lights) == 0x0004F0, "Member 'ATileBase01_C::Lights' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BP_Effect_Mist04) == 0x0004F8, "Member 'ATileBase01_C::BP_Effect_Mist04' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BP_Effect_Mist03) == 0x000500, "Member 'ATileBase01_C::BP_Effect_Mist03' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BP_Effect_Mist02) == 0x000508, "Member 'ATileBase01_C::BP_Effect_Mist02' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, BP_Effect_Mist01) == 0x000510, "Member 'ATileBase01_C::BP_Effect_Mist01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Mist__BP_Effect_Mist_) == 0x000518, "Member 'ATileBase01_C::Mist__BP_Effect_Mist_' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, FX) == 0x000520, "Member 'ATileBase01_C::FX' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Deco) == 0x000528, "Member 'ATileBase01_C::Deco' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SearchableSpawner) == 0x000530, "Member 'ATileBase01_C::SearchableSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SmallMeatLockerSpawner) == 0x000538, "Member 'ATileBase01_C::SmallMeatLockerSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, HatchSpawner) == 0x000540, "Member 'ATileBase01_C::HatchSpawner' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow6) == 0x000548, "Member 'ATileBase01_C::Arrow6' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, InteractableSpawn01) == 0x000550, "Member 'ATileBase01_C::InteractableSpawn01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow7) == 0x000558, "Member 'ATileBase01_C::Arrow7' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, HexSpawner01) == 0x000560, "Member 'ATileBase01_C::HexSpawner01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SurvivorItemSpawn01) == 0x000568, "Member 'ATileBase01_C::SurvivorItemSpawn01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow5) == 0x000570, "Member 'ATileBase01_C::Arrow5' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, KillerItemSpawn01) == 0x000578, "Member 'ATileBase01_C::KillerItemSpawn01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow4) == 0x000580, "Member 'ATileBase01_C::Arrow4' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, KillerSpawn01) == 0x000588, "Member 'ATileBase01_C::KillerSpawn01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow2) == 0x000590, "Member 'ATileBase01_C::Arrow2' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SurvivorSpawn04) == 0x000598, "Member 'ATileBase01_C::SurvivorSpawn04' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow1) == 0x0005A0, "Member 'ATileBase01_C::Arrow1' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SurvivorSpawn03) == 0x0005A8, "Member 'ATileBase01_C::SurvivorSpawn03' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow) == 0x0005B0, "Member 'ATileBase01_C::Arrow' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SurvivorSpawn02) == 0x0005B8, "Member 'ATileBase01_C::SurvivorSpawn02' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Arrow3) == 0x0005C0, "Member 'ATileBase01_C::Arrow3' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SurvivorSpawn01) == 0x0005C8, "Member 'ATileBase01_C::SurvivorSpawn01' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SpawnPoints) == 0x0005D0, "Member 'ATileBase01_C::SpawnPoints' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Root) == 0x0005D8, "Member 'ATileBase01_C::Root' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, Initialized) == 0x0005E0, "Member 'ATileBase01_C::Initialized' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, TotalWeight) == 0x0005E8, "Member 'ATileBase01_C::TotalWeight' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SelectedWeight) == 0x0005F0, "Member 'ATileBase01_C::SelectedWeight' has a wrong offset!");
static_assert(offsetof(ATileBase01_C, SelectedSpawnPoint) == 0x0005F8, "Member 'ATileBase01_C::SelectedSpawnPoint' has a wrong offset!");

}

