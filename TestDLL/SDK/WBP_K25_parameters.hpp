#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K25

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_K25.WBP_K25_C.SetKillerData
// 0x0098 (0x0098 - 0x0000)
struct WBP_K25_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_K25_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_K25_C_SetKillerData");
static_assert(sizeof(WBP_K25_C_SetKillerData) == 0x000098, "Wrong size on WBP_K25_C_SetKillerData");
static_assert(offsetof(WBP_K25_C_SetKillerData, Data) == 0x000000, "Member 'WBP_K25_C_SetKillerData::Data' has a wrong offset!");

// Function WBP_K25.WBP_K25_C.SetCenobiteVisibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_K25_C_SetCenobiteVisibility final
{
public:
	EPlayerStatus                                 PlayerStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK25StatusData*                         KillerData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          StateChange;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K25_C_SetCenobiteVisibility) == 0x000008, "Wrong alignment on WBP_K25_C_SetCenobiteVisibility");
static_assert(sizeof(WBP_K25_C_SetCenobiteVisibility) == 0x000020, "Wrong size on WBP_K25_C_SetCenobiteVisibility");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, PlayerStatus) == 0x000000, "Member 'WBP_K25_C_SetCenobiteVisibility::PlayerStatus' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, KillerData) == 0x000008, "Member 'WBP_K25_C_SetCenobiteVisibility::KillerData' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, StateChange) == 0x000010, "Member 'WBP_K25_C_SetCenobiteVisibility::StateChange' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_MakeLiteralByte_ReturnValue) == 0x000011, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000013, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000015, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000017, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000018, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'WBP_K25_C_SetCenobiteVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WBP_K25.WBP_K25_C.SetCenobiteData
// 0x0040 (0x0040 - 0x0000)
struct WBP_K25_C_SetCenobiteData final
{
public:
	EPlayerStatus                                 PlayerStatus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK25StatusData*                         KillerData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K25_C_SetCenobiteData) == 0x000008, "Wrong alignment on WBP_K25_C_SetCenobiteData");
static_assert(sizeof(WBP_K25_C_SetCenobiteData) == 0x000040, "Wrong size on WBP_K25_C_SetCenobiteData");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, PlayerStatus) == 0x000000, "Member 'WBP_K25_C_SetCenobiteData::PlayerStatus' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, KillerData) == 0x000008, "Member 'WBP_K25_C_SetCenobiteData::KillerData' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000020, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_BooleanNAND_ReturnValue) == 0x000030, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_SetCenobiteData, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_K25_C_SetCenobiteData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_K25.WBP_K25_C.ExecuteUbergraph_WBP_K25
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_K25_C_ExecuteUbergraph_WBP_K25 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	class UK25StatusData*                         K2Node_DynamicCast_AsK25Status_Data;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UK25StatusData*                         CallFunc_SpawnObject_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K25_C_ExecuteUbergraph_WBP_K25) == 0x000008, "Wrong alignment on WBP_K25_C_ExecuteUbergraph_WBP_K25");
static_assert(sizeof(WBP_K25_C_ExecuteUbergraph_WBP_K25) == 0x0000B8, "Wrong size on WBP_K25_C_ExecuteUbergraph_WBP_K25");
static_assert(offsetof(WBP_K25_C_ExecuteUbergraph_WBP_K25, EntryPoint) == 0x000000, "Member 'WBP_K25_C_ExecuteUbergraph_WBP_K25::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_ExecuteUbergraph_WBP_K25, K2Node_Event_data) == 0x000008, "Member 'WBP_K25_C_ExecuteUbergraph_WBP_K25::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_ExecuteUbergraph_WBP_K25, K2Node_DynamicCast_AsK25Status_Data) == 0x0000A0, "Member 'WBP_K25_C_ExecuteUbergraph_WBP_K25::K2Node_DynamicCast_AsK25Status_Data' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_ExecuteUbergraph_WBP_K25, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_K25_C_ExecuteUbergraph_WBP_K25::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K25_C_ExecuteUbergraph_WBP_K25, CallFunc_SpawnObject_ReturnValue) == 0x0000B0, "Member 'WBP_K25_C_ExecuteUbergraph_WBP_K25::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

}

