#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreHUD_Objectives

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.UpdateSpacers
// 0x000A (0x000A - 0x0000)
struct WBP_CoreHUD_Objectives_C_UpdateSpacers final
{
public:
	bool                                          IsHooksVisible;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExitVisible;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGeneratorVisible;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHatchVisible;                                    // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_UpdateSpacers) == 0x000001, "Wrong alignment on WBP_CoreHUD_Objectives_C_UpdateSpacers");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_UpdateSpacers) == 0x00000A, "Wrong size on WBP_CoreHUD_Objectives_C_UpdateSpacers");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, IsHooksVisible) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::IsHooksVisible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, IsExitVisible) == 0x000001, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::IsExitVisible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, IsGeneratorVisible) == 0x000002, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::IsGeneratorVisible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, IsHatchVisible) == 0x000003, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::IsHatchVisible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_IsVisible_ReturnValue_1) == 0x000008, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateSpacers, CallFunc_IsVisible_ReturnValue_2) == 0x000009, "Member 'WBP_CoreHUD_Objectives_C_UpdateSpacers::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.UpdateGeneratorsObjective
// 0x0003 (0x0003 - 0x0000)
struct WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective) == 0x000001, "Wrong alignment on WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective) == 0x000003, "Wrong size on WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'WBP_CoreHUD_Objectives_C_UpdateGeneratorsObjective::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.UpdateExitObjective
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreHUD_Objectives_C_UpdateExitObjective final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_UpdateExitObjective) == 0x000001, "Wrong alignment on WBP_CoreHUD_Objectives_C_UpdateExitObjective");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_UpdateExitObjective) == 0x000004, "Wrong size on WBP_CoreHUD_Objectives_C_UpdateExitObjective");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateExitObjective, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_UpdateExitObjective::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateExitObjective, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_CoreHUD_Objectives_C_UpdateExitObjective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateExitObjective, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000002, "Member 'WBP_CoreHUD_Objectives_C_UpdateExitObjective::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_UpdateExitObjective, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WBP_CoreHUD_Objectives_C_UpdateExitObjective::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.SetTutorialHighlight
// 0x0002 (0x0002 - 0x0000)
struct WBP_CoreHUD_Objectives_C_SetTutorialHighlight final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudComponent                                 ComponentId;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_SetTutorialHighlight) == 0x000001, "Wrong alignment on WBP_CoreHUD_Objectives_C_SetTutorialHighlight");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_SetTutorialHighlight) == 0x000002, "Wrong size on WBP_CoreHUD_Objectives_C_SetTutorialHighlight");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetTutorialHighlight, Show) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_SetTutorialHighlight::Show' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetTutorialHighlight, ComponentId) == 0x000001, "Member 'WBP_CoreHUD_Objectives_C_SetTutorialHighlight::ComponentId' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.SetHudObjectiveData
// 0x000C (0x000C - 0x0000)
struct WBP_CoreHUD_Objectives_C_SetHudObjectiveData final
{
public:
	struct FHudObjectivesViewData                 HudObjectiveViewData;                              // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_SetHudObjectiveData) == 0x000004, "Wrong alignment on WBP_CoreHUD_Objectives_C_SetHudObjectiveData");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_SetHudObjectiveData) == 0x00000C, "Wrong size on WBP_CoreHUD_Objectives_C_SetHudObjectiveData");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHudObjectiveData, HudObjectiveViewData) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_SetHudObjectiveData::HudObjectiveViewData' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.PlayCustomFocusAnimation
// 0x0038 (0x0038 - 0x0000)
struct WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayFocusAnimation_ReturnValue;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUITweenInstance*                       CallFunc_ToOpacity_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation) == 0x000008, "Wrong alignment on WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation) == 0x000038, "Wrong size on WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_ShouldPlayFocusAnimation_ReturnValue) == 0x00000C, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_ShouldPlayFocusAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation, CallFunc_ToOpacity_ReturnValue) == 0x000030, "Member 'WBP_CoreHUD_Objectives_C_PlayCustomFocusAnimation::CallFunc_ToOpacity_ReturnValue' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.InitWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreHUD_Objectives_C_InitWidget final
{
public:
	EGameType                                     GameType;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfSegments;                                  // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_InitWidget) == 0x000004, "Wrong alignment on WBP_CoreHUD_Objectives_C_InitWidget");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_InitWidget) == 0x000008, "Wrong size on WBP_CoreHUD_Objectives_C_InitWidget");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitWidget, GameType) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_InitWidget::GameType' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitWidget, NumberOfSegments) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_InitWidget::NumberOfSegments' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.InitFocusableChildrenArray
// 0x0014 (0x0014 - 0x0000)
struct WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray) == 0x000004, "Wrong alignment on WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray) == 0x000014, "Wrong size on WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray, CallFunc_Array_Add_ReturnValue_2) == 0x000008, "Member 'WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray, CallFunc_Array_Add_ReturnValue_3) == 0x00000C, "Member 'WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray, CallFunc_Array_Add_ReturnValue_4) == 0x000010, "Member 'WBP_CoreHUD_Objectives_C_InitFocusableChildrenArray::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.ExecuteUbergraph_WBP_CoreHUD_Objectives
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_currentHookCount;                     // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_maxHookCount;                         // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_initialMaxHookCount;                  // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<int32>                                   K2Node_Event_assistedHookIndices;                  // 0x0010(0x0050)(ConstParm)
	bool                                          K2Node_Event_isFinisherMoriAvailable;              // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHookCountViewInterface> CallFunc_SetData_self_CastInput;                   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_show;                                 // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHudComponent                                 K2Node_Event_componentId;                          // 0x0079(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHudObjectivesViewData                 K2Node_Event_hudObjectiveViewData;                 // 0x007C(0x000C)(ConstParm, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHookCountViewInterface> CallFunc_ClearData_self_CastInput;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameType                                     K2Node_Event_gameType;                             // 0x00A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_numberOfSegments;                     // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_visible;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHookCountViewInterface> CallFunc_InitWidget_self_CastInput;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IHookCountViewInterface> CallFunc_SetHookCountVisibility_self_CastInput;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives) == 0x000008, "Wrong alignment on WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives) == 0x0000D0, "Wrong size on WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, EntryPoint) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_currentHookCount) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_currentHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_maxHookCount) == 0x000008, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_maxHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_initialMaxHookCount) == 0x00000C, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_initialMaxHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_assistedHookIndices) == 0x000010, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_assistedHookIndices' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_isFinisherMoriAvailable) == 0x000060, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_isFinisherMoriAvailable' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, CallFunc_SetData_self_CastInput) == 0x000068, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::CallFunc_SetData_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_show) == 0x000078, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_show' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_componentId) == 0x000079, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_componentId' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_SwitchEnum_CmpSuccess) == 0x00007A, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_hudObjectiveViewData) == 0x00007C, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_hudObjectiveViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000088, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, CallFunc_ClearData_self_CastInput) == 0x000090, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::CallFunc_ClearData_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_gameType) == 0x0000A0, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_gameType' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_numberOfSegments) == 0x0000A4, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_numberOfSegments' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, K2Node_Event_visible) == 0x0000A8, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::K2Node_Event_visible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, CallFunc_InitWidget_self_CastInput) == 0x0000B0, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::CallFunc_InitWidget_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives, CallFunc_SetHookCountVisibility_self_CastInput) == 0x0000C0, "Member 'WBP_CoreHUD_Objectives_C_ExecuteUbergraph_WBP_CoreHUD_Objectives::CallFunc_SetHookCountVisibility_self_CastInput' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.SetHookCountVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreHUD_Objectives_C_SetHookCountVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_SetHookCountVisibility) == 0x000001, "Wrong alignment on WBP_CoreHUD_Objectives_C_SetHookCountVisibility");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_SetHookCountVisibility) == 0x000001, "Wrong size on WBP_CoreHUD_Objectives_C_SetHookCountVisibility");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountVisibility, Visible) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountVisibility::Visible' has a wrong offset!");

// Function WBP_CoreHUD_Objectives.WBP_CoreHUD_Objectives_C.SetHookCountData
// 0x0068 (0x0068 - 0x0000)
struct WBP_CoreHUD_Objectives_C_SetHookCountData final
{
public:
	int32                                         CurrentHookCount;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHookCount;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialMaxHookCount;                               // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   AssistedHookIndices;                               // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsFinisherMoriAvailable;                           // 0x0060(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHUD_Objectives_C_SetHookCountData) == 0x000008, "Wrong alignment on WBP_CoreHUD_Objectives_C_SetHookCountData");
static_assert(sizeof(WBP_CoreHUD_Objectives_C_SetHookCountData) == 0x000068, "Wrong size on WBP_CoreHUD_Objectives_C_SetHookCountData");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountData, CurrentHookCount) == 0x000000, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountData::CurrentHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountData, MaxHookCount) == 0x000004, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountData::MaxHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountData, InitialMaxHookCount) == 0x000008, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountData::InitialMaxHookCount' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountData, AssistedHookIndices) == 0x000010, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountData::AssistedHookIndices' has a wrong offset!");
static_assert(offsetof(WBP_CoreHUD_Objectives_C_SetHookCountData, IsFinisherMoriAvailable) == 0x000060, "Member 'WBP_CoreHUD_Objectives_C_SetHookCountData::IsFinisherMoriAvailable' has a wrong offset!");

}

