#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDAudio

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_classes.hpp"
#include "DBDAudio_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "StatSystem_structs.hpp"


namespace SDK
{

// Class DBDAudio.LoadAsyncBankData
// 0x0010 (0x0040 - 0x0030)
class ULoadAsyncBankData final : public UObject
{
public:
	class UAkAudioBank*                           Bank;                                              // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBankLoader*                       SoundBankLoader;                                   // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadAsyncBankData">();
	}
	static class ULoadAsyncBankData* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadAsyncBankData>();
	}
};
static_assert(alignof(ULoadAsyncBankData) == 0x000008, "Wrong alignment on ULoadAsyncBankData");
static_assert(sizeof(ULoadAsyncBankData) == 0x000040, "Wrong size on ULoadAsyncBankData");
static_assert(offsetof(ULoadAsyncBankData, Bank) == 0x000030, "Member 'ULoadAsyncBankData::Bank' has a wrong offset!");
static_assert(offsetof(ULoadAsyncBankData, SoundBankLoader) == 0x000038, "Member 'ULoadAsyncBankData::SoundBankLoader' has a wrong offset!");

// Class DBDAudio.AmbienceBoxComponent
// 0x0000 (0x05D0 - 0x05D0)
class UAmbienceBoxComponent : public UBoxComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AmbienceBoxComponent">();
	}
	static class UAmbienceBoxComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmbienceBoxComponent>();
	}
};
static_assert(alignof(UAmbienceBoxComponent) == 0x000010, "Wrong alignment on UAmbienceBoxComponent");
static_assert(sizeof(UAmbienceBoxComponent) == 0x0005D0, "Wrong size on UAmbienceBoxComponent");

// Class DBDAudio.AnimNotify_PostInteractionSoundEvent
// 0x0040 (0x0080 - 0x0040)
class UAnimNotify_PostInteractionSoundEvent : public UAnimNotify
{
public:
	class UAkAudioEvent*                          SoundEvent;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InteractionAudioClass;                             // 0x0048(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotify_PostInteractionSoundEvent">();
	}
	static class UAnimNotify_PostInteractionSoundEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PostInteractionSoundEvent>();
	}
};
static_assert(alignof(UAnimNotify_PostInteractionSoundEvent) == 0x000008, "Wrong alignment on UAnimNotify_PostInteractionSoundEvent");
static_assert(sizeof(UAnimNotify_PostInteractionSoundEvent) == 0x000080, "Wrong size on UAnimNotify_PostInteractionSoundEvent");
static_assert(offsetof(UAnimNotify_PostInteractionSoundEvent, SoundEvent) == 0x000040, "Member 'UAnimNotify_PostInteractionSoundEvent::SoundEvent' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PostInteractionSoundEvent, InteractionAudioClass) == 0x000048, "Member 'UAnimNotify_PostInteractionSoundEvent::InteractionAudioClass' has a wrong offset!");

// Class DBDAudio.AudioCustomMeshComponent
// 0x0000 (0x0680 - 0x0680)
#pragma pack(push, 0x1)
class alignas(0x10) UAudioCustomMeshComponent : public UStaticMeshComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioCustomMeshComponent">();
	}
	static class UAudioCustomMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioCustomMeshComponent>();
	}
};
#pragma pack(pop)
static_assert(alignof(UAudioCustomMeshComponent) == 0x000010, "Wrong alignment on UAudioCustomMeshComponent");
static_assert(sizeof(UAudioCustomMeshComponent) == 0x000680, "Wrong size on UAudioCustomMeshComponent");

// Class DBDAudio.AudioEventMapper
// 0x0070 (0x00A0 - 0x0030)
class UAudioEventMapper final : public UObject
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FAudioEventReference> _eventsByName;                                     // 0x0048(0x0050)(Transient, NativeAccessSpecifierPrivate)
	class UObjectLibrary*                         _eventLibrary;                                     // 0x0098(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioEventMapper">();
	}
	static class UAudioEventMapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioEventMapper>();
	}
};
static_assert(alignof(UAudioEventMapper) == 0x000008, "Wrong alignment on UAudioEventMapper");
static_assert(sizeof(UAudioEventMapper) == 0x0000A0, "Wrong size on UAudioEventMapper");
static_assert(offsetof(UAudioEventMapper, _eventsByName) == 0x000048, "Member 'UAudioEventMapper::_eventsByName' has a wrong offset!");
static_assert(offsetof(UAudioEventMapper, _eventLibrary) == 0x000098, "Member 'UAudioEventMapper::_eventLibrary' has a wrong offset!");

// Class DBDAudio.AudioUtilities
// 0x0000 (0x0030 - 0x0030)
class UAudioUtilities final : public UBlueprintFunctionLibrary
{
public:
	static void DBD_LoadAudioBank(class UAkAudioBank* Bank);
	static void DBD_LoadAudioBankPersistent(class UAkAudioBank* Bank);
	static void DBD_LoadAudioBankPersistentWithCallback(class UAkAudioBank* Bank, const TDelegate<void(EAkResult Result)>& bankLoadedCallback);
	static EAkResult DBD_LoadAudioBankSynchronous(class UAkAudioBank* Bank);
	static void DBD_LoadAudioBankWithCallback(class UAkAudioBank* Bank, const TDelegate<void(EAkResult Result)>& bankLoadedCallback);
	static void DBD_UnloadAudioBank(class UAkAudioBank* Bank);
	static void DBD_UnloadAudioBankWithCallback(class UAkAudioBank* Bank, const TDelegate<void(EAkResult Result)>& bankUnloadedCallback);
	static void PostAkAudioEvent(class UAkAudioEvent* AudioEvent);
	static void PostEventByNameOnComponent(class UAkComponent* Component, const class FString& AudioEventName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioUtilities">();
	}
	static class UAudioUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioUtilities>();
	}
};
static_assert(alignof(UAudioUtilities) == 0x000008, "Wrong alignment on UAudioUtilities");
static_assert(sizeof(UAudioUtilities) == 0x000030, "Wrong size on UAudioUtilities");

// Class DBDAudio.DBDAudioSubsystem
// 0x0018 (0x0050 - 0x0038)
class UDBDAudioSubsystem final : public UEngineSubsystem
{
public:
	class UAudioEventMapper*                      _audioEventMapper;                                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundBankLoader*                       _soundBankLoader;                                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWwiseConnector*                        _wwiseConnector;                                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDAudioSubsystem">();
	}
	static class UDBDAudioSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDAudioSubsystem>();
	}
};
static_assert(alignof(UDBDAudioSubsystem) == 0x000008, "Wrong alignment on UDBDAudioSubsystem");
static_assert(sizeof(UDBDAudioSubsystem) == 0x000050, "Wrong size on UDBDAudioSubsystem");
static_assert(offsetof(UDBDAudioSubsystem, _audioEventMapper) == 0x000038, "Member 'UDBDAudioSubsystem::_audioEventMapper' has a wrong offset!");
static_assert(offsetof(UDBDAudioSubsystem, _soundBankLoader) == 0x000040, "Member 'UDBDAudioSubsystem::_soundBankLoader' has a wrong offset!");
static_assert(offsetof(UDBDAudioSubsystem, _wwiseConnector) == 0x000048, "Member 'UDBDAudioSubsystem::_wwiseConnector' has a wrong offset!");

// Class DBDAudio.InteractionAudioComponent
// 0x0068 (0x0110 - 0x00A8)
class UInteractionAudioComponent : public UActorComponent
{
public:
	class UAkComponent*                           _audioComponent;                                   // 0x00A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNonTunableStat                        _audioRadius;                                      // 0x00B0(0x0060)(Edit, NativeAccessSpecifierPrivate)

public:
	bool PostAkEvent(class UAkAudioEvent* AkEvent);

	float GetCalculatedAudioRadius() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InteractionAudioComponent">();
	}
	static class UInteractionAudioComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInteractionAudioComponent>();
	}
};
static_assert(alignof(UInteractionAudioComponent) == 0x000008, "Wrong alignment on UInteractionAudioComponent");
static_assert(sizeof(UInteractionAudioComponent) == 0x000110, "Wrong size on UInteractionAudioComponent");
static_assert(offsetof(UInteractionAudioComponent, _audioComponent) == 0x0000A8, "Member 'UInteractionAudioComponent::_audioComponent' has a wrong offset!");
static_assert(offsetof(UInteractionAudioComponent, _audioRadius) == 0x0000B0, "Member 'UInteractionAudioComponent::_audioRadius' has a wrong offset!");

// Class DBDAudio.SoundBankLoader
// 0x0090 (0x00C0 - 0x0030)
class USoundBankLoader final : public UObject
{
public:
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULoadAsyncBankData*>             _asyncAudioBanksPendingLoadData;                   // 0x0060(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FBankTrackingData> _audioBanks;                                       // 0x0070(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SoundBankLoader">();
	}
	static class USoundBankLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundBankLoader>();
	}
};
static_assert(alignof(USoundBankLoader) == 0x000008, "Wrong alignment on USoundBankLoader");
static_assert(sizeof(USoundBankLoader) == 0x0000C0, "Wrong size on USoundBankLoader");
static_assert(offsetof(USoundBankLoader, _asyncAudioBanksPendingLoadData) == 0x000060, "Member 'USoundBankLoader::_asyncAudioBanksPendingLoadData' has a wrong offset!");
static_assert(offsetof(USoundBankLoader, _audioBanks) == 0x000070, "Member 'USoundBankLoader::_audioBanks' has a wrong offset!");

// Class DBDAudio.WwiseConnector
// 0x0008 (0x0038 - 0x0030)
class UWwiseConnector final : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WwiseConnector">();
	}
	static class UWwiseConnector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWwiseConnector>();
	}
};
static_assert(alignof(UWwiseConnector) == 0x000008, "Wrong alignment on UWwiseConnector");
static_assert(sizeof(UWwiseConnector) == 0x000038, "Wrong size on UWwiseConnector");

}

