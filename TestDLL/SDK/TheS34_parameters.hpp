#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS34

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function TheS34.S34P01.Authority_OnAccumulateRedirectedCharge
// 0x0008 (0x0008 - 0x0000)
struct S34P01_Authority_OnAccumulateRedirectedCharge final
{
public:
	float                                         ChargeAmount;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCharge;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Authority_OnAccumulateRedirectedCharge) == 0x000004, "Wrong alignment on S34P01_Authority_OnAccumulateRedirectedCharge");
static_assert(sizeof(S34P01_Authority_OnAccumulateRedirectedCharge) == 0x000008, "Wrong size on S34P01_Authority_OnAccumulateRedirectedCharge");
static_assert(offsetof(S34P01_Authority_OnAccumulateRedirectedCharge, ChargeAmount) == 0x000000, "Member 'S34P01_Authority_OnAccumulateRedirectedCharge::ChargeAmount' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnAccumulateRedirectedCharge, MaxCharge) == 0x000004, "Member 'S34P01_Authority_OnAccumulateRedirectedCharge::MaxCharge' has a wrong offset!");

// Function TheS34.S34P01.Authority_OnSkillCheckResponse
// 0x0018 (0x0018 - 0x0000)
struct S34P01_Authority_OnSkillCheckResponse final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Bonus;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HadInput;                                          // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillCheckCustomType                         Type;                                              // 0x0012(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeChange;                                      // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Authority_OnSkillCheckResponse) == 0x000008, "Wrong alignment on S34P01_Authority_OnSkillCheckResponse");
static_assert(sizeof(S34P01_Authority_OnSkillCheckResponse) == 0x000018, "Wrong size on S34P01_Authority_OnSkillCheckResponse");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, Success) == 0x000000, "Member 'S34P01_Authority_OnSkillCheckResponse::Success' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, Bonus) == 0x000001, "Member 'S34P01_Authority_OnSkillCheckResponse::Bonus' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, Player) == 0x000008, "Member 'S34P01_Authority_OnSkillCheckResponse::Player' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, TriggerLoudNoise) == 0x000010, "Member 'S34P01_Authority_OnSkillCheckResponse::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, HadInput) == 0x000011, "Member 'S34P01_Authority_OnSkillCheckResponse::HadInput' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, Type) == 0x000012, "Member 'S34P01_Authority_OnSkillCheckResponse::Type' has a wrong offset!");
static_assert(offsetof(S34P01_Authority_OnSkillCheckResponse, ChargeChange) == 0x000014, "Member 'S34P01_Authority_OnSkillCheckResponse::ChargeChange' has a wrong offset!");

// Function TheS34.S34P01.Cosmetic_OnFullCharge
// 0x0008 (0x0008 - 0x0000)
struct S34P01_Cosmetic_OnFullCharge final
{
public:
	class ADBDPlayer*                             OwningPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Cosmetic_OnFullCharge) == 0x000008, "Wrong alignment on S34P01_Cosmetic_OnFullCharge");
static_assert(sizeof(S34P01_Cosmetic_OnFullCharge) == 0x000008, "Wrong size on S34P01_Cosmetic_OnFullCharge");
static_assert(offsetof(S34P01_Cosmetic_OnFullCharge, OwningPlayer) == 0x000000, "Member 'S34P01_Cosmetic_OnFullCharge::OwningPlayer' has a wrong offset!");

// Function TheS34.S34P01.Cosmetic_OnStartChargingPerk
// 0x0008 (0x0008 - 0x0000)
struct S34P01_Cosmetic_OnStartChargingPerk final
{
public:
	class ADBDPlayer*                             OwningPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Cosmetic_OnStartChargingPerk) == 0x000008, "Wrong alignment on S34P01_Cosmetic_OnStartChargingPerk");
static_assert(sizeof(S34P01_Cosmetic_OnStartChargingPerk) == 0x000008, "Wrong size on S34P01_Cosmetic_OnStartChargingPerk");
static_assert(offsetof(S34P01_Cosmetic_OnStartChargingPerk, OwningPlayer) == 0x000000, "Member 'S34P01_Cosmetic_OnStartChargingPerk::OwningPlayer' has a wrong offset!");

// Function TheS34.S34P01.Cosmetic_OnStopChargingPerk
// 0x0008 (0x0008 - 0x0000)
struct S34P01_Cosmetic_OnStopChargingPerk final
{
public:
	class ADBDPlayer*                             OwningPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Cosmetic_OnStopChargingPerk) == 0x000008, "Wrong alignment on S34P01_Cosmetic_OnStopChargingPerk");
static_assert(sizeof(S34P01_Cosmetic_OnStopChargingPerk) == 0x000008, "Wrong size on S34P01_Cosmetic_OnStopChargingPerk");
static_assert(offsetof(S34P01_Cosmetic_OnStopChargingPerk, OwningPlayer) == 0x000000, "Member 'S34P01_Cosmetic_OnStopChargingPerk::OwningPlayer' has a wrong offset!");

// Function TheS34.S34P01.Cosmetic_OnUseCharge
// 0x0008 (0x0008 - 0x0000)
struct S34P01_Cosmetic_OnUseCharge final
{
public:
	class ADBDPlayer*                             OwningPlayer;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Cosmetic_OnUseCharge) == 0x000008, "Wrong alignment on S34P01_Cosmetic_OnUseCharge");
static_assert(sizeof(S34P01_Cosmetic_OnUseCharge) == 0x000008, "Wrong size on S34P01_Cosmetic_OnUseCharge");
static_assert(offsetof(S34P01_Cosmetic_OnUseCharge, OwningPlayer) == 0x000000, "Member 'S34P01_Cosmetic_OnUseCharge::OwningPlayer' has a wrong offset!");

// Function TheS34.S34P01.OnDamageStateChanged
// 0x0002 (0x0002 - 0x0000)
struct S34P01_OnDamageStateChanged final
{
public:
	ECamperDamageState                            OldDamageState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            CurrentDamageState;                                // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_OnDamageStateChanged) == 0x000001, "Wrong alignment on S34P01_OnDamageStateChanged");
static_assert(sizeof(S34P01_OnDamageStateChanged) == 0x000002, "Wrong size on S34P01_OnDamageStateChanged");
static_assert(offsetof(S34P01_OnDamageStateChanged, OldDamageState) == 0x000000, "Member 'S34P01_OnDamageStateChanged::OldDamageState' has a wrong offset!");
static_assert(offsetof(S34P01_OnDamageStateChanged, CurrentDamageState) == 0x000001, "Member 'S34P01_OnDamageStateChanged::CurrentDamageState' has a wrong offset!");

// Function TheS34.S34P01.Server_AbilityTwoPressed
// 0x0001 (0x0001 - 0x0000)
struct S34P01_Server_AbilityTwoPressed final
{
public:
	bool                                          IsPressed;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_Server_AbilityTwoPressed) == 0x000001, "Wrong alignment on S34P01_Server_AbilityTwoPressed");
static_assert(sizeof(S34P01_Server_AbilityTwoPressed) == 0x000001, "Wrong size on S34P01_Server_AbilityTwoPressed");
static_assert(offsetof(S34P01_Server_AbilityTwoPressed, IsPressed) == 0x000000, "Member 'S34P01_Server_AbilityTwoPressed::IsPressed' has a wrong offset!");

// Function TheS34.S34P01.GetInitialCountdownAtLevel
// 0x0004 (0x0004 - 0x0000)
struct S34P01_GetInitialCountdownAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_GetInitialCountdownAtLevel) == 0x000004, "Wrong alignment on S34P01_GetInitialCountdownAtLevel");
static_assert(sizeof(S34P01_GetInitialCountdownAtLevel) == 0x000004, "Wrong size on S34P01_GetInitialCountdownAtLevel");
static_assert(offsetof(S34P01_GetInitialCountdownAtLevel, ReturnValue) == 0x000000, "Member 'S34P01_GetInitialCountdownAtLevel::ReturnValue' has a wrong offset!");

// Function TheS34.S34P01.IsPerkActive
// 0x0001 (0x0001 - 0x0000)
struct S34P01_IsPerkActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P01_IsPerkActive) == 0x000001, "Wrong alignment on S34P01_IsPerkActive");
static_assert(sizeof(S34P01_IsPerkActive) == 0x000001, "Wrong size on S34P01_IsPerkActive");
static_assert(offsetof(S34P01_IsPerkActive, ReturnValue) == 0x000000, "Member 'S34P01_IsPerkActive::ReturnValue' has a wrong offset!");

// Function TheS34.S34P03.Authority_OnOwnerDamageStateChanged
// 0x0002 (0x0002 - 0x0000)
struct S34P03_Authority_OnOwnerDamageStateChanged final
{
public:
	ECamperDamageState                            OldDamageState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            NewDamageState;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P03_Authority_OnOwnerDamageStateChanged) == 0x000001, "Wrong alignment on S34P03_Authority_OnOwnerDamageStateChanged");
static_assert(sizeof(S34P03_Authority_OnOwnerDamageStateChanged) == 0x000002, "Wrong size on S34P03_Authority_OnOwnerDamageStateChanged");
static_assert(offsetof(S34P03_Authority_OnOwnerDamageStateChanged, OldDamageState) == 0x000000, "Member 'S34P03_Authority_OnOwnerDamageStateChanged::OldDamageState' has a wrong offset!");
static_assert(offsetof(S34P03_Authority_OnOwnerDamageStateChanged, NewDamageState) == 0x000001, "Member 'S34P03_Authority_OnOwnerDamageStateChanged::NewDamageState' has a wrong offset!");

// Function TheS34.S34P03.GetCooldownDurationAtLevel
// 0x0004 (0x0004 - 0x0000)
struct S34P03_GetCooldownDurationAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P03_GetCooldownDurationAtLevel) == 0x000004, "Wrong alignment on S34P03_GetCooldownDurationAtLevel");
static_assert(sizeof(S34P03_GetCooldownDurationAtLevel) == 0x000004, "Wrong size on S34P03_GetCooldownDurationAtLevel");
static_assert(offsetof(S34P03_GetCooldownDurationAtLevel, ReturnValue) == 0x000000, "Member 'S34P03_GetCooldownDurationAtLevel::ReturnValue' has a wrong offset!");

// Function TheS34.S34P03.GetRepairSpeedAtLevel
// 0x0004 (0x0004 - 0x0000)
struct S34P03_GetRepairSpeedAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S34P03_GetRepairSpeedAtLevel) == 0x000004, "Wrong alignment on S34P03_GetRepairSpeedAtLevel");
static_assert(sizeof(S34P03_GetRepairSpeedAtLevel) == 0x000004, "Wrong size on S34P03_GetRepairSpeedAtLevel");
static_assert(offsetof(S34P03_GetRepairSpeedAtLevel, ReturnValue) == 0x000000, "Member 'S34P03_GetRepairSpeedAtLevel::ReturnValue' has a wrong offset!");

}

