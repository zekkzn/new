#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProceduralLevel

#include "Basic.hpp"

#include "ProceduralLevel_classes.hpp"
#include "ProceduralLevel_parameters.hpp"


namespace SDK
{

// Function ProceduralLevel.ProceduralLevel_C.CameraUpdateTimeline__FinishedFunc
// (BlueprintEvent)

void AProceduralLevel_C::CameraUpdateTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "CameraUpdateTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.CameraUpdateTimeline__UpdateFunc
// (BlueprintEvent)

void AProceduralLevel_C::CameraUpdateTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "CameraUpdateTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.ExecuteUbergraph_ProceduralLevel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::ExecuteUbergraph_ProceduralLevel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "ExecuteUbergraph_ProceduralLevel");

	Params::ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProceduralLevel.ProceduralLevel_C.FadeInTimeline__FinishedFunc
// (BlueprintEvent)

void AProceduralLevel_C::FadeInTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "FadeInTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.FadeInTimeline__UpdateFunc
// (BlueprintEvent)

void AProceduralLevel_C::FadeInTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "FadeInTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.FinalizeIntro
// (Public, BlueprintCallable, BlueprintEvent)

void AProceduralLevel_C::FinalizeIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "FinalizeIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.GetLocalPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Param_PlayerCam                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Param_PlayerPawn                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayerController*             Param_PlayerController                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerCameraManager*             Param_PlayerCameraManager                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::GetLocalPlayer(class UCameraComponent** Param_PlayerCam, class ADBDPlayer** Param_PlayerPawn, class ADBDPlayerController** Param_PlayerController, class APlayerCameraManager** Param_PlayerCameraManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "GetLocalPlayer");

	Params::ProceduralLevel_C_GetLocalPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PlayerCam != nullptr)
		*Param_PlayerCam = Parms.Param_PlayerCam;

	if (Param_PlayerPawn != nullptr)
		*Param_PlayerPawn = Parms.Param_PlayerPawn;

	if (Param_PlayerController != nullptr)
		*Param_PlayerController = Parms.Param_PlayerController;

	if (Param_PlayerCameraManager != nullptr)
		*Param_PlayerCameraManager = Parms.Param_PlayerCameraManager;
}


// Function ProceduralLevel.ProceduralLevel_C.IsLevelReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AProceduralLevel_C::IsLevelReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "IsLevelReady");

	Params::ProceduralLevel_C_IsLevelReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ProceduralLevel.ProceduralLevel_C.KillerIntroCameraPanInTimeline__FinishedFunc
// (BlueprintEvent)

void AProceduralLevel_C::KillerIntroCameraPanInTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "KillerIntroCameraPanInTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.KillerIntroCameraPanInTimeline__UpdateFunc
// (BlueprintEvent)

void AProceduralLevel_C::KillerIntroCameraPanInTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "KillerIntroCameraPanInTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.OnLocalPlayerGameStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADBDPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGameState                              NewGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::OnLocalPlayerGameStateChanged(class ADBDPlayerState* PlayerState, EGameState NewGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "OnLocalPlayerGameStateChanged");

	Params::ProceduralLevel_C_OnLocalPlayerGameStateChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.NewGameState = NewGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProceduralLevel.ProceduralLevel_C.OnLocalPlayerStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::OnLocalPlayerStateChanged(const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "OnLocalPlayerStateChanged");

	Params::ProceduralLevel_C_OnLocalPlayerStateChanged Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProceduralLevel.ProceduralLevel_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProceduralLevel_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "ReceiveTick");

	Params::ProceduralLevel_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProceduralLevel.ProceduralLevel_C.SetupIntro
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AProceduralLevel_C::SetupIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "SetupIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProceduralLevel.ProceduralLevel_C.ShouldUpdateCameraPanInTimeline
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AProceduralLevel_C::ShouldUpdateCameraPanInTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "ShouldUpdateCameraPanInTimeline");

	Params::ProceduralLevel_C_ShouldUpdateCameraPanInTimeline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ProceduralLevel.ProceduralLevel_C.UpdateCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProceduralLevel_C::UpdateCamera(double Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralLevel_C", "UpdateCamera");

	Params::ProceduralLevel_C_UpdateCamera Parms{};

	Parms.Yaw = Yaw;

	UObject::ProcessEvent(Func, &Parms);
}

}

