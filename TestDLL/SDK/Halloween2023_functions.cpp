#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Halloween2023

#include "Basic.hpp"

#include "Halloween2023_classes.hpp"
#include "Halloween2023_parameters.hpp"


namespace SDK
{

// Function Halloween2023.HauntComponent.OnEventComponentsCreated
// (Native, Protected)

void UHauntComponent::OnEventComponentsCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnEventComponentsCreated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Halloween2023.HauntComponent.OnHauntEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UHauntComponent::OnHauntEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnHauntEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction Halloween2023.HauntComponent.OnHauntInteractionChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EPlayerRole                             PlayerRole                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInteractable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHauntComponent::OnHauntInteractionChange__DelegateSignature(const EPlayerRole PlayerRole, bool IsInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnHauntInteractionChange__DelegateSignature");

	Params::HauntComponent_OnHauntInteractionChange__DelegateSignature Parms{};

	Parms.PlayerRole = PlayerRole;
	Parms.IsInteractable = IsInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Halloween2023.HauntComponent.OnLevelReadyToPlay
// (Native, Protected)

void UHauntComponent::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.HauntComponent.OnPlayerEnterZone
// (Native, Protected)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHauntComponent::OnPlayerEnterZone(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnPlayerEnterZone");

	Params::HauntComponent_OnPlayerEnterZone Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Halloween2023.HauntComponent.OnPlayerInteract__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHauntComponent::OnPlayerInteract__DelegateSignature(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnPlayerInteract__DelegateSignature");

	Params::HauntComponent_OnPlayerInteract__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Halloween2023.HauntComponent.OnPlayerLeftZone
// (Native, Protected)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHauntComponent::OnPlayerLeftZone(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnPlayerLeftZone");

	Params::HauntComponent_OnPlayerLeftZone Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Halloween2023.HauntComponent.OnPlayerRoleEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EPlayerRole                             PlayerRole                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHauntComponent::OnPlayerRoleEvent__DelegateSignature(const EPlayerRole PlayerRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnPlayerRoleEvent__DelegateSignature");

	Params::HauntComponent_OnPlayerRoleEvent__DelegateSignature Parms{};

	Parms.PlayerRole = PlayerRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Halloween2023.HauntComponent.OnRep_IsInteractable
// (Final, Native, Protected)

void UHauntComponent::OnRep_IsInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HauntComponent", "OnRep_IsInteractable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.StandardWorldHauntComponent.Authority_OnAutomaticShutDownReached
// (Final, Native, Private)

void UStandardWorldHauntComponent::Authority_OnAutomaticShutDownReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardWorldHauntComponent", "Authority_OnAutomaticShutDownReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.StandardWorldHauntComponent.Authority_OnVoidZoneClosed
// (Final, Native, Private)

void UStandardWorldHauntComponent::Authority_OnVoidZoneClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardWorldHauntComponent", "Authority_OnVoidZoneClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.StandardWorldHauntComponent.Authority_OnVoidZoneOpened
// (Final, Native, Private)

void UStandardWorldHauntComponent::Authority_OnVoidZoneOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardWorldHauntComponent", "Authority_OnVoidZoneOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.StandardWorldHauntComponent.Multicast_BlessOrTrapCharacterEnteringZone
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBlessing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStandardWorldHauntComponent::Multicast_BlessOrTrapCharacterEnteringZone(class ADBDPlayer* Player, bool IsBlessing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardWorldHauntComponent", "Multicast_BlessOrTrapCharacterEnteringZone");

	Params::StandardWorldHauntComponent_Multicast_BlessOrTrapCharacterEnteringZone Parms{};

	Parms.Player = Player;
	Parms.IsBlessing = IsBlessing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.StandardWorldHauntComponent.Multicast_OnAutomaticShutDownReached
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UStandardWorldHauntComponent::Multicast_OnAutomaticShutDownReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StandardWorldHauntComponent", "Multicast_OnAutomaticShutDownReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_AddCaptureProgress
// (Final, Native, Private)
// Parameters:
// int32                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADBDPlayer*                       PlayerGivingEnergy                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Authority_AddCaptureProgress(int32 Progress, class ADBDPlayer* PlayerGivingEnergy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_AddCaptureProgress");

	Params::VoidZoneHauntComponent_Authority_AddCaptureProgress Parms{};

	Parms.Progress = Progress;
	Parms.PlayerGivingEnergy = PlayerGivingEnergy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_DecayProgress
// (Final, Native, Private)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Authority_DecayProgress(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_DecayProgress");

	Params::VoidZoneHauntComponent_Authority_DecayProgress Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_GrantCaptureBonusStatusEffects
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Authority_GrantCaptureBonusStatusEffects(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_GrantCaptureBonusStatusEffects");

	Params::VoidZoneHauntComponent_Authority_GrantCaptureBonusStatusEffects Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_OnInteractionCompleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    COMPLETED                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InstigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Authority_OnInteractionCompleted(bool COMPLETED, const TArray<class AActor*>& InstigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_OnInteractionCompleted");

	Params::VoidZoneHauntComponent_Authority_OnInteractionCompleted Parms{};

	Parms.COMPLETED = COMPLETED;
	Parms.InstigatorsForCompletion = std::move(InstigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_OnVoidZoneClose
// (Final, Native, Private)

void UVoidZoneHauntComponent::Authority_OnVoidZoneClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_OnVoidZoneClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_OnVoidZoneOpen
// (Final, Native, Private)

void UVoidZoneHauntComponent::Authority_OnVoidZoneOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_OnVoidZoneOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_PlayerInZone
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Authority_PlayerInZone(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_PlayerInZone");

	Params::VoidZoneHauntComponent_Authority_PlayerInZone Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_ResetAllProgress
// (Final, Native, Private)

void UVoidZoneHauntComponent::Authority_ResetAllProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_ResetAllProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Authority_StartRegression
// (Final, Native, Private)

void UVoidZoneHauntComponent::Authority_StartRegression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Authority_StartRegression");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_AddCaptureProgress
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int32                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Multicast_AddCaptureProgress(int32 Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_AddCaptureProgress");

	Params::VoidZoneHauntComponent_Multicast_AddCaptureProgress Parms{};

	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_OnVoidZoneClose
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UVoidZoneHauntComponent::Multicast_OnVoidZoneClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_OnVoidZoneClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_OnVoidZoneOpen
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UVoidZoneHauntComponent::Multicast_OnVoidZoneOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_OnVoidZoneOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_PlayerEnterOrLeftZone
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       PlayerEnteringOrLeavingZone                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPlayerLeavingZone                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChargeRemainingInHaunt                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TWeakObjectPtr<class ADBDPlayer>>PlayersInZone                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    IsZoneContested                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldRegressProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Multicast_PlayerEnterOrLeftZone(class ADBDPlayer* PlayerEnteringOrLeavingZone, bool IsPlayerLeavingZone, float ChargeRemainingInHaunt, const TArray<TWeakObjectPtr<class ADBDPlayer>>& PlayersInZone, bool IsZoneContested, bool ShouldRegressProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_PlayerEnterOrLeftZone");

	Params::VoidZoneHauntComponent_Multicast_PlayerEnterOrLeftZone Parms{};

	Parms.PlayerEnteringOrLeavingZone = PlayerEnteringOrLeavingZone;
	Parms.IsPlayerLeavingZone = IsPlayerLeavingZone;
	Parms.ChargeRemainingInHaunt = ChargeRemainingInHaunt;
	Parms.PlayersInZone = std::move(PlayersInZone);
	Parms.IsZoneContested = IsZoneContested;
	Parms.ShouldRegressProgress = ShouldRegressProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_UpdateAllPlayerHauntTargets
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                                   ChargeRemainingInHaunt                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TWeakObjectPtr<class ADBDPlayer>>PlayersInZone                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    IsZoneContested                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldRegressProgress                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Multicast_UpdateAllPlayerHauntTargets(float ChargeRemainingInHaunt, const TArray<TWeakObjectPtr<class ADBDPlayer>>& PlayersInZone, bool IsZoneContested, bool ShouldRegressProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_UpdateAllPlayerHauntTargets");

	Params::VoidZoneHauntComponent_Multicast_UpdateAllPlayerHauntTargets Parms{};

	Parms.ChargeRemainingInHaunt = ChargeRemainingInHaunt;
	Parms.PlayersInZone = std::move(PlayersInZone);
	Parms.IsZoneContested = IsZoneContested;
	Parms.ShouldRegressProgress = ShouldRegressProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Halloween2023.VoidZoneHauntComponent.Multicast_WinHauntForTeam
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       WinningPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TWeakObjectPtr<class ADBDPlayer>>PlayersInZone                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::Multicast_WinHauntForTeam(class ADBDPlayer* WinningPlayer, const TArray<TWeakObjectPtr<class ADBDPlayer>>& PlayersInZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "Multicast_WinHauntForTeam");

	Params::VoidZoneHauntComponent_Multicast_WinHauntForTeam Parms{};

	Parms.WinningPlayer = WinningPlayer;
	Parms.PlayersInZone = std::move(PlayersInZone);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Halloween2023.VoidZoneHauntComponent.OnHauntContestChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsContested                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::OnHauntContestChange__DelegateSignature(bool IsContested)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "OnHauntContestChange__DelegateSignature");

	Params::VoidZoneHauntComponent_OnHauntContestChange__DelegateSignature Parms{};

	Parms.IsContested = IsContested;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Halloween2023.VoidZoneHauntComponent.OnPlayerProgress__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   KillerProgress                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SurvivorProgress                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoidZoneHauntComponent::OnPlayerProgress__DelegateSignature(int32 KillerProgress, int32 SurvivorProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "OnPlayerProgress__DelegateSignature");

	Params::VoidZoneHauntComponent_OnPlayerProgress__DelegateSignature Parms{};

	Parms.KillerProgress = KillerProgress;
	Parms.SurvivorProgress = SurvivorProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Halloween2023.VoidZoneHauntComponent.OnVoidZoneEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UVoidZoneHauntComponent::OnVoidZoneEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoidZoneHauntComponent", "OnVoidZoneEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

