#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreAimingCrosshair

#include "Basic.hpp"

#include "WBP_CoreAimingCrosshair_classes.hpp"
#include "WBP_CoreAimingCrosshair_parameters.hpp"


namespace SDK
{

// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetTextAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAimingCrosshairState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetTextAnim(EAimingCrosshairState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetTextAnim");

	Params::WBP_CoreAimingCrosshair_C_SetTextAnim Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAimingCrosshairState                   NewState                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetState(const EAimingCrosshairState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetState");

	Params::WBP_CoreAimingCrosshair_C_SetState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetReticleColour
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     MainColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReticleColor                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     DecorColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetReticleColour(const struct FLinearColor& MainColor, const struct FLinearColor& ReticleColor, const struct FLinearColor& DecorColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetReticleColour");

	Params::WBP_CoreAimingCrosshair_C_SetReticleColour Parms{};

	Parms.MainColor = std::move(MainColor);
	Parms.ReticleColor = std::move(ReticleColor);
	Parms.DecorColor = std::move(DecorColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetProgress(const float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetProgress");

	Params::WBP_CoreAimingCrosshair_C_SetProgress Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetGlitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAimingCrosshairState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetGlitch(EAimingCrosshairState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetGlitch");

	Params::WBP_CoreAimingCrosshair_C_SetGlitch Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTargetting                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AreGaugeVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AreGaugeVertical                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetGauge(bool IsTargetting, bool AreGaugeVisible, bool AreGaugeVertical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetGauge");

	Params::WBP_CoreAimingCrosshair_C_SetGauge Parms{};

	Parms.IsTargetting = IsTargetting;
	Parms.AreGaugeVisible = AreGaugeVisible;
	Parms.AreGaugeVertical = AreGaugeVertical;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.SetCross
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasReticleGauge                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::SetCross(bool IsActive, bool HasReticleGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "SetCross");

	Params::WBP_CoreAimingCrosshair_C_SetCross Parms{};

	Parms.IsActive = IsActive;
	Parms.HasReticleGauge = HasReticleGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.ResetMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_CoreAimingCrosshair_C::ResetMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "ResetMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "PreConstruct");

	Params::WBP_CoreAimingCrosshair_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.PlayOpeningAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAimingCrosshairState                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::PlayOpeningAnim(EAimingCrosshairState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "PlayOpeningAnim");

	Params::WBP_CoreAimingCrosshair_C_PlayOpeningAnim Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreAimingCrosshair.WBP_CoreAimingCrosshair_C.ExecuteUbergraph_WBP_CoreAimingCrosshair
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreAimingCrosshair_C::ExecuteUbergraph_WBP_CoreAimingCrosshair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreAimingCrosshair_C", "ExecuteUbergraph_WBP_CoreAimingCrosshair");

	Params::WBP_CoreAimingCrosshair_C_ExecuteUbergraph_WBP_CoreAimingCrosshair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

