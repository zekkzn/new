#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProceduralLevel

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function ProceduralLevel.ProceduralLevel_C.ExecuteUbergraph_ProceduralLevel
// 0x0520 (0x0520 - 0x0000)
struct ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerControllerBase*               CallFunc_GetLocalDBDPlayerController_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerState*                        K2Node_CustomEvent_playerState_1;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameState                                    K2Node_CustomEvent_NewGameState;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ADBDPlayerState* PlayerState, EGameState GameState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayerControllerBase*               CallFunc_GetLocalDBDPlayerController_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ADBDPlayerState* PlayerState, EGameState GameState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayerState*                        K2Node_DynamicCast_AsDBDPlayer_State;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State_2;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_1; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue_2;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerState*                     K2Node_CustomEvent_playerState;                    // 0x00E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerControllerBase*               CallFunc_GetLocalDBDPlayerController_ReturnValue_2; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerControllerBase*               CallFunc_GetLocalDBDPlayerController_ReturnValue_3; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerState*                        K2Node_DynamicCast_AsDBDPlayer_State_1;            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_2; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerState*                        CallFunc_GetFirstLocalValidHumanPlayerState_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerRole                                   CallFunc_GetGameRole_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State_3;              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetLocallyObservedPawn_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetLocalPlayer_PlayerCam;                 // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocalPlayer_PlayerPawn;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerController*                   CallFunc_GetLocalPlayer_PlayerController;          // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetLocalPlayer_PlayerCameraManager;       // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue_3;            // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State_4;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelReady_ReturnValue;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue; // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue_1; // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue_4;            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          CallFunc_GetDBDGameState_ReturnValue_5;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01A0(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0xC];                                      // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ADBDPlayerState* PlayerState, EGameState GameState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0220(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayerControllerBase*               CallFunc_GetLocalDBDPlayerController_ReturnValue_4; // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerState*                        K2Node_DynamicCast_AsDBDPlayer_State_2;            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State_5;              // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetControlledPlayer_ReturnValue;          // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0330(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0420(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_UpdateCamera_Yaw_ImplicitCast;            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel) == 0x000010, "Wrong alignment on ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel");
static_assert(sizeof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel) == 0x000520, "Wrong size on ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, EntryPoint) == 0x000000, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State) == 0x000010, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue_1) == 0x000020, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State_1) == 0x000028, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalDBDPlayerController_ReturnValue) == 0x000040, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalDBDPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CustomEvent_playerState_1) == 0x000048, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CustomEvent_playerState_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CustomEvent_NewGameState) == 0x000050, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CustomEvent_NewGameState' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalDBDPlayerController_ReturnValue_1) == 0x000070, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalDBDPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDPlayer_State) == 0x000090, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDPlayer_State' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue_2) == 0x0000A0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State_2) == 0x0000A8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue) == 0x0000B8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x0000C0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C5, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue_1) == 0x0000C8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetConsoleVariableIntValue_ReturnValue_1) == 0x0000D0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetConsoleVariableIntValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D4, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000D5, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000D6, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue_2) == 0x0000D8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_BooleanOR_ReturnValue) == 0x0000E0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CustomEvent_playerState) == 0x0000E8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CustomEvent_playerState' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalDBDPlayerController_ReturnValue_2) == 0x0000F0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalDBDPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalDBDPlayerController_ReturnValue_3) == 0x0000F8, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalDBDPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDPlayer_State_1) == 0x000100, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDPlayer_State_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_4) == 0x000108, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetConsoleVariableIntValue_ReturnValue_2) == 0x00010C, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetConsoleVariableIntValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetFirstLocalValidHumanPlayerState_ReturnValue) == 0x000110, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetFirstLocalValidHumanPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000118, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_IsValid_ReturnValue_1) == 0x000119, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameRole_ReturnValue) == 0x00011A, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00011B, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue_3) == 0x000120, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State_3) == 0x000128, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_5) == 0x000130, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocallyObservedPawn_ReturnValue) == 0x000138, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocallyObservedPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalPlayer_PlayerCam) == 0x000140, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalPlayer_PlayerCam' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalPlayer_PlayerPawn) == 0x000148, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalPlayer_PlayerPawn' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalPlayer_PlayerController) == 0x000150, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalPlayer_PlayerController' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalPlayer_PlayerCameraManager) == 0x000158, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalPlayer_PlayerCameraManager' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_IsValid_ReturnValue_3) == 0x000161, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue_3) == 0x000168, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue_4) == 0x000170, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State_4) == 0x000178, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_6) == 0x000180, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_IsLevelReady_ReturnValue) == 0x000181, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_IsLevelReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue) == 0x000182, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue_1) == 0x000183, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_ShouldUpdateCameraPanInTimeline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000188, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue_4) == 0x000190, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetDBDGameState_ReturnValue_5) == 0x000198, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetDBDGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001A0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001C0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_CreateDelegate_OutputDelegate_3) == 0x000220, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetLocalDBDPlayerController_ReturnValue_4) == 0x000238, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetLocalDBDPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDPlayer_State_2) == 0x000240, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDPlayer_State_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_7) == 0x000248, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetGameState_ReturnValue_5) == 0x000250, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_AsDBDGame_State_5) == 0x000258, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_AsDBDGame_State_5' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, K2Node_DynamicCast_bSuccess_8) == 0x000260, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetControlledPlayer_ReturnValue) == 0x000268, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetControlledPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_GetSocketTransform_ReturnValue) == 0x000270, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_TLerp_ReturnValue) == 0x0002D0, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000330, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000420, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel, CallFunc_UpdateCamera_Yaw_ImplicitCast) == 0x000510, "Member 'ProceduralLevel_C_ExecuteUbergraph_ProceduralLevel::CallFunc_UpdateCamera_Yaw_ImplicitCast' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.FinalizeIntro
// 0x0010 (0x0010 - 0x0000)
struct ProceduralLevel_C_FinalizeIntro final
{
public:
	class UConstrainAspectRatioComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_AspectRatio_ImplicitCast;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_FinalizeIntro) == 0x000008, "Wrong alignment on ProceduralLevel_C_FinalizeIntro");
static_assert(sizeof(ProceduralLevel_C_FinalizeIntro) == 0x000010, "Wrong size on ProceduralLevel_C_FinalizeIntro");
static_assert(offsetof(ProceduralLevel_C_FinalizeIntro, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'ProceduralLevel_C_FinalizeIntro::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_FinalizeIntro, K2Node_VariableSet_AspectRatio_ImplicitCast) == 0x000008, "Member 'ProceduralLevel_C_FinalizeIntro::K2Node_VariableSet_AspectRatio_ImplicitCast' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.GetLocalPlayer
// 0x00C8 (0x00C8 - 0x0000)
struct ProceduralLevel_C_GetLocalPlayer final
{
public:
	class UCameraComponent*                       Param_PlayerCam;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             Param_PlayerPawn;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerController*                   Param_PlayerController;                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   Param_PlayerCameraManager;                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  LocalPlayerBasePawn;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          LocalGameState;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   LocalPlayerCameraManager;                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerController*                   LocalPlayerController;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       LocalPlayerCam;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             LocalPlayerPawn;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCameraComponent*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetLocalPlayerBasePawn_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocalPlayerPawn_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State;                // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_GetLocalPlayer) == 0x000008, "Wrong alignment on ProceduralLevel_C_GetLocalPlayer");
static_assert(sizeof(ProceduralLevel_C_GetLocalPlayer) == 0x0000C8, "Wrong size on ProceduralLevel_C_GetLocalPlayer");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, Param_PlayerCam) == 0x000000, "Member 'ProceduralLevel_C_GetLocalPlayer::Param_PlayerCam' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, Param_PlayerPawn) == 0x000008, "Member 'ProceduralLevel_C_GetLocalPlayer::Param_PlayerPawn' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, Param_PlayerController) == 0x000010, "Member 'ProceduralLevel_C_GetLocalPlayer::Param_PlayerController' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, Param_PlayerCameraManager) == 0x000018, "Member 'ProceduralLevel_C_GetLocalPlayer::Param_PlayerCameraManager' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalPlayerBasePawn) == 0x000020, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalPlayerBasePawn' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalGameState) == 0x000028, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalGameState' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalPlayerCameraManager) == 0x000030, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalPlayerCameraManager' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalPlayerController) == 0x000038, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalPlayerController' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalPlayerCam) == 0x000040, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalPlayerCam' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, LocalPlayerPawn) == 0x000048, "Member 'ProceduralLevel_C_GetLocalPlayer::LocalPlayerPawn' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, K2Node_DynamicCast_AsPlayer_Controller) == 0x000060, "Member 'ProceduralLevel_C_GetLocalPlayer::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ProceduralLevel_C_GetLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000070, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_Array_Get_Item) == 0x000088, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_GetLocalPlayerBasePawn_ReturnValue) == 0x000098, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_GetLocalPlayerBasePawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_GetLocalPlayerPawn_ReturnValue) == 0x0000A8, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_GetLocalPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, CallFunc_GetGameState_ReturnValue) == 0x0000B0, "Member 'ProceduralLevel_C_GetLocalPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, K2Node_DynamicCast_AsDBDGame_State) == 0x0000B8, "Member 'ProceduralLevel_C_GetLocalPlayer::K2Node_DynamicCast_AsDBDGame_State' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_GetLocalPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'ProceduralLevel_C_GetLocalPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.IsLevelReady
// 0x0020 (0x0020 - 0x0000)
struct ProceduralLevel_C_IsLevelReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDGameState*                          K2Node_DynamicCast_AsDBDGame_State;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameLevelLoaded_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_IsLevelReady) == 0x000008, "Wrong alignment on ProceduralLevel_C_IsLevelReady");
static_assert(sizeof(ProceduralLevel_C_IsLevelReady) == 0x000020, "Wrong size on ProceduralLevel_C_IsLevelReady");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, ReturnValue) == 0x000000, "Member 'ProceduralLevel_C_IsLevelReady::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, Result) == 0x000001, "Member 'ProceduralLevel_C_IsLevelReady::Result' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'ProceduralLevel_C_IsLevelReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, K2Node_DynamicCast_AsDBDGame_State) == 0x000010, "Member 'ProceduralLevel_C_IsLevelReady::K2Node_DynamicCast_AsDBDGame_State' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ProceduralLevel_C_IsLevelReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_IsLevelReady, CallFunc_GetGameLevelLoaded_ReturnValue) == 0x000019, "Member 'ProceduralLevel_C_IsLevelReady::CallFunc_GetGameLevelLoaded_ReturnValue' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.OnLocalPlayerGameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct ProceduralLevel_C_OnLocalPlayerGameStateChanged final
{
public:
	class ADBDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGameState                                    NewGameState;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_OnLocalPlayerGameStateChanged) == 0x000008, "Wrong alignment on ProceduralLevel_C_OnLocalPlayerGameStateChanged");
static_assert(sizeof(ProceduralLevel_C_OnLocalPlayerGameStateChanged) == 0x000010, "Wrong size on ProceduralLevel_C_OnLocalPlayerGameStateChanged");
static_assert(offsetof(ProceduralLevel_C_OnLocalPlayerGameStateChanged, PlayerState) == 0x000000, "Member 'ProceduralLevel_C_OnLocalPlayerGameStateChanged::PlayerState' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_OnLocalPlayerGameStateChanged, NewGameState) == 0x000008, "Member 'ProceduralLevel_C_OnLocalPlayerGameStateChanged::NewGameState' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.OnLocalPlayerStateChanged
// 0x0008 (0x0008 - 0x0000)
struct ProceduralLevel_C_OnLocalPlayerStateChanged final
{
public:
	const class APlayerState*                     PlayerState;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_OnLocalPlayerStateChanged) == 0x000008, "Wrong alignment on ProceduralLevel_C_OnLocalPlayerStateChanged");
static_assert(sizeof(ProceduralLevel_C_OnLocalPlayerStateChanged) == 0x000008, "Wrong size on ProceduralLevel_C_OnLocalPlayerStateChanged");
static_assert(offsetof(ProceduralLevel_C_OnLocalPlayerStateChanged, PlayerState) == 0x000000, "Member 'ProceduralLevel_C_OnLocalPlayerStateChanged::PlayerState' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ProceduralLevel_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_ReceiveTick) == 0x000004, "Wrong alignment on ProceduralLevel_C_ReceiveTick");
static_assert(sizeof(ProceduralLevel_C_ReceiveTick) == 0x000004, "Wrong size on ProceduralLevel_C_ReceiveTick");
static_assert(offsetof(ProceduralLevel_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ProceduralLevel_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.SetupIntro
// 0x02B0 (0x02B0 - 0x0000)
struct ProceduralLevel_C_SetupIntro final
{
public:
	class UCameraComponent*                       CallFunc_GetLocalPlayer_PlayerCam;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocalPlayer_PlayerPawn;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayerController*                   CallFunc_GetLocalPlayer_PlayerController;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetLocalPlayer_PlayerCameraManager;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UConstrainAspectRatioComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          K2Node_DynamicCast_AsCamper_Player;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASlasherPlayer*                         K2Node_DynamicCast_AsSlasher_Player;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x00C8(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x01B8(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        K2Node_VariableSet_OriginalAspectRatio_ImplicitCast; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_SetupIntro) == 0x000008, "Wrong alignment on ProceduralLevel_C_SetupIntro");
static_assert(sizeof(ProceduralLevel_C_SetupIntro) == 0x0002B0, "Wrong size on ProceduralLevel_C_SetupIntro");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetLocalPlayer_PlayerCam) == 0x000000, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetLocalPlayer_PlayerCam' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetLocalPlayer_PlayerPawn) == 0x000008, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetLocalPlayer_PlayerPawn' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetLocalPlayer_PlayerController) == 0x000010, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetLocalPlayer_PlayerController' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetLocalPlayer_PlayerCameraManager) == 0x000018, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetLocalPlayer_PlayerCameraManager' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000020, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, K2Node_DynamicCast_AsCamper_Player) == 0x000038, "Member 'ProceduralLevel_C_SetupIntro::K2Node_DynamicCast_AsCamper_Player' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ProceduralLevel_C_SetupIntro::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, K2Node_DynamicCast_AsSlasher_Player) == 0x000048, "Member 'ProceduralLevel_C_SetupIntro::K2Node_DynamicCast_AsSlasher_Player' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'ProceduralLevel_C_SetupIntro::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetControlRotation_ReturnValue) == 0x000058, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x0000C8, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x0001B8, "Member 'ProceduralLevel_C_SetupIntro::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_SetupIntro, K2Node_VariableSet_OriginalAspectRatio_ImplicitCast) == 0x0002A8, "Member 'ProceduralLevel_C_SetupIntro::K2Node_VariableSet_OriginalAspectRatio_ImplicitCast' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.ShouldUpdateCameraPanInTimeline
// 0x0038 (0x0038 - 0x0000)
struct ProceduralLevel_C_ShouldUpdateCameraPanInTimeline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetControlledPlayer_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetSemanticTag_ReturnValue;               // 0x0010(0x0020)(ConstParm)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline) == 0x000008, "Wrong alignment on ProceduralLevel_C_ShouldUpdateCameraPanInTimeline");
static_assert(sizeof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline) == 0x000038, "Wrong size on ProceduralLevel_C_ShouldUpdateCameraPanInTimeline");
static_assert(offsetof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline, ReturnValue) == 0x000000, "Member 'ProceduralLevel_C_ShouldUpdateCameraPanInTimeline::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline, CallFunc_GetControlledPlayer_ReturnValue) == 0x000008, "Member 'ProceduralLevel_C_ShouldUpdateCameraPanInTimeline::CallFunc_GetControlledPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline, CallFunc_GetSemanticTag_ReturnValue) == 0x000010, "Member 'ProceduralLevel_C_ShouldUpdateCameraPanInTimeline::CallFunc_GetSemanticTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline, CallFunc_HasTag_ReturnValue) == 0x000030, "Member 'ProceduralLevel_C_ShouldUpdateCameraPanInTimeline::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_ShouldUpdateCameraPanInTimeline, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'ProceduralLevel_C_ShouldUpdateCameraPanInTimeline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ProceduralLevel.ProceduralLevel_C.UpdateCamera
// 0x05F0 (0x05F0 - 0x0000)
struct ProceduralLevel_C_UpdateCamera final
{
public:
	double                                        Yaw;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00C8(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0218(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0328(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x04F8(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_A_ImplicitCast;            // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_B_ImplicitCast;            // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProceduralLevel_C_UpdateCamera) == 0x000008, "Wrong alignment on ProceduralLevel_C_UpdateCamera");
static_assert(sizeof(ProceduralLevel_C_UpdateCamera) == 0x0005F0, "Wrong size on ProceduralLevel_C_UpdateCamera");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, Yaw) == 0x000000, "Member 'ProceduralLevel_C_UpdateCamera::Yaw' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000020, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Roll_1) == 0x000044, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Pitch_1) == 0x000048, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakRotator_Yaw_1) == 0x00004C, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_MakeRotator_ReturnValue_1) == 0x000070, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, K2Node_MakeArray_Array) == 0x0000A0, "Member 'ProceduralLevel_C_UpdateCamera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B0, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000C8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_GetForwardVector_ReturnValue) == 0x0001B8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D0, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000200, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_SphereTraceSingle_OutHit) == 0x000218, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_SphereTraceSingle_ReturnValue) == 0x000308, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000310, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000328, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x000418, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x000419, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_Time) == 0x00041C, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_Distance) == 0x000420, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_Location) == 0x000428, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x000440, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_Normal) == 0x000458, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x000470, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_PhysMat) == 0x000488, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_HitActor) == 0x000490, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_HitComponent) == 0x000498, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_HitBoneName) == 0x0004A0, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_BoneName) == 0x0004AC, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_HitItem) == 0x0004B8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_ElementIndex) == 0x0004BC, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_FaceIndex) == 0x0004C0, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_TraceStart) == 0x0004C8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_BreakHitResult_TraceEnd) == 0x0004E0, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0004F8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_FloatFloat_A_ImplicitCast) == 0x0005E8, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProceduralLevel_C_UpdateCamera, CallFunc_Add_FloatFloat_B_ImplicitCast) == 0x0005EC, "Member 'ProceduralLevel_C_UpdateCamera::CallFunc_Add_FloatFloat_B_ImplicitCast' has a wrong offset!");

}

