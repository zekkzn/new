#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreCurrencyLabel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreCurrencyLabel.WBP_CoreCurrencyLabel_C.ExecuteUbergraph_WBP_CoreCurrencyLabel
// 0x0220 (0x0220 - 0x0000)
struct WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDTooltipManager*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCurrencyLabelViewData                 K2Node_Event_viewData;                             // 0x0010(0x0148)(ConstParm)
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0158(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetBeautifiedNumericText_ReturnValue;     // 0x0190(0x0018)()
	int32                                         K2Node_Event_newBalance;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_previousBalance;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetBeautifiedNumericText_ReturnValue_1;   // 0x01C8(0x0018)()
	class FText                                   CallFunc_GetBeautifiedNumericText_ReturnValue_2;   // 0x01E0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDBDTooltipManager*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDBDTooltipManager*                     CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel) == 0x000008, "Wrong alignment on WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel");
static_assert(sizeof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel) == 0x000220, "Wrong size on WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, EntryPoint) == 0x000000, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, K2Node_Event_viewData) == 0x000010, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::K2Node_Event_viewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000158, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetBeautifiedNumericText_ReturnValue) == 0x000190, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetBeautifiedNumericText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, K2Node_Event_newBalance) == 0x0001A8, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::K2Node_Event_newBalance' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, K2Node_Event_previousBalance) == 0x0001AC, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::K2Node_Event_previousBalance' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_Less_IntInt_ReturnValue) == 0x0001B0, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_PlayAnimation_ReturnValue) == 0x0001B8, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetBeautifiedNumericText_ReturnValue_1) == 0x0001C8, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetBeautifiedNumericText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetBeautifiedNumericText_ReturnValue_2) == 0x0001E0, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetBeautifiedNumericText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001F8, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_PlayAnimation_ReturnValue_2) == 0x000200, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000208, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_PlayAnimation_ReturnValue_3) == 0x000210, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000218, "Member 'WBP_CoreCurrencyLabel_C_ExecuteUbergraph_WBP_CoreCurrencyLabel::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");

// Function WBP_CoreCurrencyLabel.WBP_CoreCurrencyLabel_C.UpdateCurrency
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreCurrencyLabel_C_UpdateCurrency final
{
public:
	int32                                         NewBalance;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousBalance;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreCurrencyLabel_C_UpdateCurrency) == 0x000004, "Wrong alignment on WBP_CoreCurrencyLabel_C_UpdateCurrency");
static_assert(sizeof(WBP_CoreCurrencyLabel_C_UpdateCurrency) == 0x000008, "Wrong size on WBP_CoreCurrencyLabel_C_UpdateCurrency");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_UpdateCurrency, NewBalance) == 0x000000, "Member 'WBP_CoreCurrencyLabel_C_UpdateCurrency::NewBalance' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_UpdateCurrency, PreviousBalance) == 0x000004, "Member 'WBP_CoreCurrencyLabel_C_UpdateCurrency::PreviousBalance' has a wrong offset!");

// Function WBP_CoreCurrencyLabel.WBP_CoreCurrencyLabel_C.SetData
// 0x0148 (0x0148 - 0x0000)
struct WBP_CoreCurrencyLabel_C_SetData final
{
public:
	struct FCurrencyLabelViewData                 ViewData;                                          // 0x0000(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreCurrencyLabel_C_SetData) == 0x000008, "Wrong alignment on WBP_CoreCurrencyLabel_C_SetData");
static_assert(sizeof(WBP_CoreCurrencyLabel_C_SetData) == 0x000148, "Wrong size on WBP_CoreCurrencyLabel_C_SetData");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_SetData, ViewData) == 0x000000, "Member 'WBP_CoreCurrencyLabel_C_SetData::ViewData' has a wrong offset!");

// Function WBP_CoreCurrencyLabel.WBP_CoreCurrencyLabel_C.CheckNegativeValue
// 0x001C (0x001C - 0x0000)
struct WBP_CoreCurrencyLabel_C_CheckNegativeValue final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0008(0x0014)()
};
static_assert(alignof(WBP_CoreCurrencyLabel_C_CheckNegativeValue) == 0x000004, "Wrong alignment on WBP_CoreCurrencyLabel_C_CheckNegativeValue");
static_assert(sizeof(WBP_CoreCurrencyLabel_C_CheckNegativeValue) == 0x00001C, "Wrong size on WBP_CoreCurrencyLabel_C_CheckNegativeValue");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_CheckNegativeValue, Amount) == 0x000000, "Member 'WBP_CoreCurrencyLabel_C_CheckNegativeValue::Amount' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_CheckNegativeValue, Temp_bool_Variable) == 0x000004, "Member 'WBP_CoreCurrencyLabel_C_CheckNegativeValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_CheckNegativeValue, CallFunc_Less_IntInt_ReturnValue) == 0x000005, "Member 'WBP_CoreCurrencyLabel_C_CheckNegativeValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCurrencyLabel_C_CheckNegativeValue, K2Node_Select_Default) == 0x000008, "Member 'WBP_CoreCurrencyLabel_C_CheckNegativeValue::K2Node_Select_Default' has a wrong offset!");

}

