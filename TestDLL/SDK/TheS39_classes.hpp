#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS39

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDInteraction_classes.hpp"


namespace SDK
{

// Class TheS39.S39P01
// 0x0028 (0x0448 - 0x0420)
class US39P01 final : public UPerk
{
public:
	float                                         _perkEffectsDuration[0x3];                         // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _perkCooldownTime[0x3];                            // 0x042C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _suppressBloodAndGruntsEffectClass;                // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _revealSurvivorAurasEffectClass;                   // 0x0440(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	float GetPerkCooldownTimeAtLevel() const;
	float GetPerkEffectsDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S39P01">();
	}
	static class US39P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<US39P01>();
	}
};
static_assert(alignof(US39P01) == 0x000008, "Wrong alignment on US39P01");
static_assert(sizeof(US39P01) == 0x000448, "Wrong size on US39P01");
static_assert(offsetof(US39P01, _perkEffectsDuration) == 0x000420, "Member 'US39P01::_perkEffectsDuration' has a wrong offset!");
static_assert(offsetof(US39P01, _perkCooldownTime) == 0x00042C, "Member 'US39P01::_perkCooldownTime' has a wrong offset!");
static_assert(offsetof(US39P01, _suppressBloodAndGruntsEffectClass) == 0x000438, "Member 'US39P01::_suppressBloodAndGruntsEffectClass' has a wrong offset!");
static_assert(offsetof(US39P01, _revealSurvivorAurasEffectClass) == 0x000440, "Member 'US39P01::_revealSurvivorAurasEffectClass' has a wrong offset!");

// Class TheS39.S39P02
// 0x0038 (0x04E0 - 0x04A8)
class US39P02 final : public USurvivorTrapPerk
{
public:
	TArray<struct FGameplayTag>                   _invalidEventTypes;                                // 0x04A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _slowTime;                                         // 0x04B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _slowAmount;                                       // 0x04BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _slowEffect;                                       // 0x04C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _slowStatusEffect;                                 // 0x04C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ATrapChemicalBomb>          _trapBombClass;                                    // 0x04D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATrapChemicalBomb*                      _trapChemicalBomb;                                 // 0x04D8(0x0008)(Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnSlowEffectEnded(const class ADBDPlayer* Player);
	void Cosmetic_TrapActivated(const class APallet* Pallet);
	void Cosmetic_TrapRemoved(class AInteractable* Interactable, ETrapRemovedReason RemovedReason);
	void Cosmetic_TrapTriggered(const class AInteractable* Pallet, const class ADBDPlayer* Triggerer);
	void Multicast_Cosmetic_OnSlowEffectEnded(const class ADBDPlayer* Player);
	void Multicast_Cosmetic_OnTrapActivated(const class APallet* Generator);
	void Multicast_Cosmetic_OnTrapRemoved(class AInteractable* Interactable, ETrapRemovedReason RemovedReason);
	void Multicast_Cosmetic_OnTrapTriggered(const class AInteractable* Pallet, const class ADBDPlayer* Triggerer);

	class ATrapChemicalBomb* GetChemicalBombTrap() const;
	float GetSlowTime() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S39P02">();
	}
	static class US39P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<US39P02>();
	}
};
static_assert(alignof(US39P02) == 0x000008, "Wrong alignment on US39P02");
static_assert(sizeof(US39P02) == 0x0004E0, "Wrong size on US39P02");
static_assert(offsetof(US39P02, _invalidEventTypes) == 0x0004A8, "Member 'US39P02::_invalidEventTypes' has a wrong offset!");
static_assert(offsetof(US39P02, _slowTime) == 0x0004B8, "Member 'US39P02::_slowTime' has a wrong offset!");
static_assert(offsetof(US39P02, _slowAmount) == 0x0004BC, "Member 'US39P02::_slowAmount' has a wrong offset!");
static_assert(offsetof(US39P02, _slowEffect) == 0x0004C0, "Member 'US39P02::_slowEffect' has a wrong offset!");
static_assert(offsetof(US39P02, _slowStatusEffect) == 0x0004C8, "Member 'US39P02::_slowStatusEffect' has a wrong offset!");
static_assert(offsetof(US39P02, _trapBombClass) == 0x0004D0, "Member 'US39P02::_trapBombClass' has a wrong offset!");
static_assert(offsetof(US39P02, _trapChemicalBomb) == 0x0004D8, "Member 'US39P02::_trapChemicalBomb' has a wrong offset!");

// Class TheS39.S39p02TrapInteraction
// 0x0010 (0x0790 - 0x0780)
class US39p02TrapInteraction : public UTrapInteractableInteraction
{
public:
	class ATrapChemicalBomb*                      _chemicalBomb;                                     // 0x0780(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPalletSide                                   _side;                                             // 0x0788(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S39p02TrapInteraction">();
	}
	static class US39p02TrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<US39p02TrapInteraction>();
	}
};
static_assert(alignof(US39p02TrapInteraction) == 0x000010, "Wrong alignment on US39p02TrapInteraction");
static_assert(sizeof(US39p02TrapInteraction) == 0x000790, "Wrong size on US39p02TrapInteraction");
static_assert(offsetof(US39p02TrapInteraction, _chemicalBomb) == 0x000780, "Member 'US39p02TrapInteraction::_chemicalBomb' has a wrong offset!");
static_assert(offsetof(US39p02TrapInteraction, _side) == 0x000788, "Member 'US39p02TrapInteraction::_side' has a wrong offset!");

// Class TheS39.S39P03
// 0x0010 (0x0430 - 0x0420)
class US39P03 final : public UPerk
{
public:
	float                                         _perkCooldownTime[0x3];                            // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetCooldownTimeAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"S39P03">();
	}
	static class US39P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<US39P03>();
	}
};
static_assert(alignof(US39P03) == 0x000008, "Wrong alignment on US39P03");
static_assert(sizeof(US39P03) == 0x000430, "Wrong size on US39P03");
static_assert(offsetof(US39P03, _perkCooldownTime) == 0x000420, "Member 'US39P03::_perkCooldownTime' has a wrong offset!");

}

