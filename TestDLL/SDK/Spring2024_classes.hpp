#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spring2024

#include "Basic.hpp"

#include "DBDInteraction_classes.hpp"
#include "Spring2024_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "Engine_classes.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTagUtilities_structs.hpp"


namespace SDK
{

// Class Spring2024.BloodChargePlayerComponent
// 0x01E8 (0x0290 - 0x00A8)
class UBloodChargePlayerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0xF8];                                      // 0x00A8(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _bloodChargeLimitSurvivor;                         // 0x01A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodChargeLimitKiller;                           // 0x01C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodChargeStartAmountKiller;                     // 0x01F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                         _bloodChargeAmount;                                // 0x0218(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _lastChargeChangeFromStealing;                     // 0x021C(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21D[0x73];                                     // 0x021D(0x0073)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_InitializeComponent();
	void Cosmetic_OnKillerGainCharge(int32 ChargeCount, bool Stolen);
	void Cosmetic_OnKillerLoseCharge(int32 ChargeCount, bool Stolen);
	void Cosmetic_OnSurvivorGainCharge(int32 ChargeCount, bool Stolen);
	void Cosmetic_OnSurvivorLoseCharge(int32 ChargeCount, bool Stolen);
	void OnLevelReadyToPlay();
	void OnRep_BloodChargeAmount(int32 OldAmount);

	void OnHudPresenterReady() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodChargePlayerComponent">();
	}
	static class UBloodChargePlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodChargePlayerComponent>();
	}
};
static_assert(alignof(UBloodChargePlayerComponent) == 0x000008, "Wrong alignment on UBloodChargePlayerComponent");
static_assert(sizeof(UBloodChargePlayerComponent) == 0x000290, "Wrong size on UBloodChargePlayerComponent");
static_assert(offsetof(UBloodChargePlayerComponent, _bloodChargeLimitSurvivor) == 0x0001A0, "Member 'UBloodChargePlayerComponent::_bloodChargeLimitSurvivor' has a wrong offset!");
static_assert(offsetof(UBloodChargePlayerComponent, _bloodChargeLimitKiller) == 0x0001C8, "Member 'UBloodChargePlayerComponent::_bloodChargeLimitKiller' has a wrong offset!");
static_assert(offsetof(UBloodChargePlayerComponent, _bloodChargeStartAmountKiller) == 0x0001F0, "Member 'UBloodChargePlayerComponent::_bloodChargeStartAmountKiller' has a wrong offset!");
static_assert(offsetof(UBloodChargePlayerComponent, _bloodChargeAmount) == 0x000218, "Member 'UBloodChargePlayerComponent::_bloodChargeAmount' has a wrong offset!");
static_assert(offsetof(UBloodChargePlayerComponent, _lastChargeChangeFromStealing) == 0x00021C, "Member 'UBloodChargePlayerComponent::_lastChargeChangeFromStealing' has a wrong offset!");

// Class Spring2024.BloodReceptacle
// 0x0060 (0x0300 - 0x02A0)
class ABloodReceptacle final : public AActor
{
public:
	class UStaticMeshComponent*                   _bloodReceptacleStaticMesh;                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       _bloodReceptacleCollectionZone;                    // 0x02A8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodReceptacleOutlineUpdateStrategy*  _outlineUpdateStrategy;                            // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _preventingCollectionStateTags;                    // 0x02B8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _collectionRadius;                                 // 0x02D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Authority_OnEnterCollectionZone(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Cosmetic_OnChargeCollected();
	void Multicast_OnChargeCollected();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodReceptacle">();
	}
	static class ABloodReceptacle* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABloodReceptacle>();
	}
};
static_assert(alignof(ABloodReceptacle) == 0x000008, "Wrong alignment on ABloodReceptacle");
static_assert(sizeof(ABloodReceptacle) == 0x000300, "Wrong size on ABloodReceptacle");
static_assert(offsetof(ABloodReceptacle, _bloodReceptacleStaticMesh) == 0x0002A0, "Member 'ABloodReceptacle::_bloodReceptacleStaticMesh' has a wrong offset!");
static_assert(offsetof(ABloodReceptacle, _bloodReceptacleCollectionZone) == 0x0002A8, "Member 'ABloodReceptacle::_bloodReceptacleCollectionZone' has a wrong offset!");
static_assert(offsetof(ABloodReceptacle, _outlineUpdateStrategy) == 0x0002B0, "Member 'ABloodReceptacle::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABloodReceptacle, _preventingCollectionStateTags) == 0x0002B8, "Member 'ABloodReceptacle::_preventingCollectionStateTags' has a wrong offset!");
static_assert(offsetof(ABloodReceptacle, _collectionRadius) == 0x0002D8, "Member 'ABloodReceptacle::_collectionRadius' has a wrong offset!");

// Class Spring2024.BloodReceptacleOutlineUpdateStrategy
// 0x0098 (0x0168 - 0x00D0)
class UBloodReceptacleOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FDBDTunableRowHandle                   _revealTimeExtensionWithOffering;                  // 0x00D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _baseRevealTime;                                   // 0x00F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	EOfferingEffectType                           _offeringEffectTypeNeeded;                         // 0x0120(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           _outlineColor;                                     // 0x0124(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_134[0x34];                                     // 0x0134(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnIntroComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodReceptacleOutlineUpdateStrategy">();
	}
	static class UBloodReceptacleOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodReceptacleOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UBloodReceptacleOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UBloodReceptacleOutlineUpdateStrategy");
static_assert(sizeof(UBloodReceptacleOutlineUpdateStrategy) == 0x000168, "Wrong size on UBloodReceptacleOutlineUpdateStrategy");
static_assert(offsetof(UBloodReceptacleOutlineUpdateStrategy, _revealTimeExtensionWithOffering) == 0x0000D0, "Member 'UBloodReceptacleOutlineUpdateStrategy::_revealTimeExtensionWithOffering' has a wrong offset!");
static_assert(offsetof(UBloodReceptacleOutlineUpdateStrategy, _baseRevealTime) == 0x0000F8, "Member 'UBloodReceptacleOutlineUpdateStrategy::_baseRevealTime' has a wrong offset!");
static_assert(offsetof(UBloodReceptacleOutlineUpdateStrategy, _offeringEffectTypeNeeded) == 0x000120, "Member 'UBloodReceptacleOutlineUpdateStrategy::_offeringEffectTypeNeeded' has a wrong offset!");
static_assert(offsetof(UBloodReceptacleOutlineUpdateStrategy, _outlineColor) == 0x000124, "Member 'UBloodReceptacleOutlineUpdateStrategy::_outlineColor' has a wrong offset!");

// Class Spring2024.BloodZone
// 0x0288 (0x0630 - 0x03A8)
class ABloodZone final : public AInteractable
{
public:
	class UStaticMeshComponent*                   _bloodZoneStaticMesh;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoClear, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x03B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBloodZoneOutlineUpdateStrategy*        _outlineUpdateStrategy;                            // 0x03B8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                    _bloodZoneInteractionZone;                         // 0x03C0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                            _bloodZoneInteractor;                              // 0x03C8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodZoneActivationInteraction*        _bloodZoneActivationInteractionSurvivor;           // 0x03D0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodZoneActivationInteraction*        _bloodZoneActivationInteractionKiller;             // 0x03D8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _bloodZoneActivationChargeableSurvivor;            // 0x03E0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _bloodZoneActivationChargeableKiller;              // 0x03E8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodZoneDeactivationInteraction*      _bloodZoneDeactivationInteractionSurvivor;         // 0x03F0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodZoneDeactivationInteraction*      _bloodZoneDeactivationInteractionKiller;           // 0x03F8(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _bloodZoneDeactivationChargeableSurvivor;          // 0x0400(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _bloodZoneDeactivationChargeableKiller;            // 0x0408(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneActivationInteractionSecondsToChargeSurvivor; // 0x0410(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneActivationInteractionSecondsToChargeKiller; // 0x0438(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneDeactivationInteractionSecondsToChargeSurvivor; // 0x0460(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneDeactivationInteractionSecondsToChargeKiller; // 0x0488(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneRadius;                                  // 0x04B0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneLowerHeightDifference;                   // 0x04D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneUpperHeightDifference;                   // 0x0500(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _killerProtectedTime;                              // 0x0528(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _survivorProtectedTime;                            // 0x0550(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _outlineRevealDistance;                            // 0x0578(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	EBloodZoneState                               _state;                                            // 0x05A0(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5A4[0x8C];                                     // 0x05A4(0x008C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_ActivatedByKiller();
	void Cosmetic_ActivatedBySurvivor();
	void Cosmetic_InitializeBloodZone();
	void Cosmetic_IsBeingActivatedBegin(float ChargeTime);
	void Cosmetic_IsBeingActivatedEnd();
	void Cosmetic_IsBeingRemovedBegin(const class ADBDPlayer* InteractingPlayer);
	void Cosmetic_IsBeingRemovedEnd();
	void Cosmetic_OnDeactivated();
	void Cosmetic_OnVulnerable();
	void OnKillerActivationInteractionEntered(class ADBDPlayer* Player);
	void OnKillerDeactivationInteractionEntered(class ADBDPlayer* Player);
	void OnRep_State(EBloodZoneState OldState);
	void OnSurvivorActivationInteractionEntered(class ADBDPlayer* Player);
	void OnSurvivorDeactivationInteractionEntered(class ADBDPlayer* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZone">();
	}
	static class ABloodZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABloodZone>();
	}
};
static_assert(alignof(ABloodZone) == 0x000008, "Wrong alignment on ABloodZone");
static_assert(sizeof(ABloodZone) == 0x000630, "Wrong size on ABloodZone");
static_assert(offsetof(ABloodZone, _bloodZoneStaticMesh) == 0x0003A8, "Member 'ABloodZone::_bloodZoneStaticMesh' has a wrong offset!");
static_assert(offsetof(ABloodZone, _outlineComponent) == 0x0003B0, "Member 'ABloodZone::_outlineComponent' has a wrong offset!");
static_assert(offsetof(ABloodZone, _outlineUpdateStrategy) == 0x0003B8, "Member 'ABloodZone::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneInteractionZone) == 0x0003C0, "Member 'ABloodZone::_bloodZoneInteractionZone' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneInteractor) == 0x0003C8, "Member 'ABloodZone::_bloodZoneInteractor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationInteractionSurvivor) == 0x0003D0, "Member 'ABloodZone::_bloodZoneActivationInteractionSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationInteractionKiller) == 0x0003D8, "Member 'ABloodZone::_bloodZoneActivationInteractionKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationChargeableSurvivor) == 0x0003E0, "Member 'ABloodZone::_bloodZoneActivationChargeableSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationChargeableKiller) == 0x0003E8, "Member 'ABloodZone::_bloodZoneActivationChargeableKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationInteractionSurvivor) == 0x0003F0, "Member 'ABloodZone::_bloodZoneDeactivationInteractionSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationInteractionKiller) == 0x0003F8, "Member 'ABloodZone::_bloodZoneDeactivationInteractionKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationChargeableSurvivor) == 0x000400, "Member 'ABloodZone::_bloodZoneDeactivationChargeableSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationChargeableKiller) == 0x000408, "Member 'ABloodZone::_bloodZoneDeactivationChargeableKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationInteractionSecondsToChargeSurvivor) == 0x000410, "Member 'ABloodZone::_bloodZoneActivationInteractionSecondsToChargeSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneActivationInteractionSecondsToChargeKiller) == 0x000438, "Member 'ABloodZone::_bloodZoneActivationInteractionSecondsToChargeKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationInteractionSecondsToChargeSurvivor) == 0x000460, "Member 'ABloodZone::_bloodZoneDeactivationInteractionSecondsToChargeSurvivor' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneDeactivationInteractionSecondsToChargeKiller) == 0x000488, "Member 'ABloodZone::_bloodZoneDeactivationInteractionSecondsToChargeKiller' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneRadius) == 0x0004B0, "Member 'ABloodZone::_bloodZoneRadius' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneLowerHeightDifference) == 0x0004D8, "Member 'ABloodZone::_bloodZoneLowerHeightDifference' has a wrong offset!");
static_assert(offsetof(ABloodZone, _bloodZoneUpperHeightDifference) == 0x000500, "Member 'ABloodZone::_bloodZoneUpperHeightDifference' has a wrong offset!");
static_assert(offsetof(ABloodZone, _killerProtectedTime) == 0x000528, "Member 'ABloodZone::_killerProtectedTime' has a wrong offset!");
static_assert(offsetof(ABloodZone, _survivorProtectedTime) == 0x000550, "Member 'ABloodZone::_survivorProtectedTime' has a wrong offset!");
static_assert(offsetof(ABloodZone, _outlineRevealDistance) == 0x000578, "Member 'ABloodZone::_outlineRevealDistance' has a wrong offset!");
static_assert(offsetof(ABloodZone, _state) == 0x0005A0, "Member 'ABloodZone::_state' has a wrong offset!");

// Class Spring2024.BloodZoneBaseInteraction
// 0x0010 (0x0930 - 0x0920)
class UBloodZoneBaseInteraction : public UBasicChargeableInteraction
{
public:
	float                                         _killerFacingTolerance;                            // 0x0920(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_924[0xC];                                      // 0x0924(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZoneBaseInteraction">();
	}
	static class UBloodZoneBaseInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodZoneBaseInteraction>();
	}
};
static_assert(alignof(UBloodZoneBaseInteraction) == 0x000010, "Wrong alignment on UBloodZoneBaseInteraction");
static_assert(sizeof(UBloodZoneBaseInteraction) == 0x000930, "Wrong size on UBloodZoneBaseInteraction");
static_assert(offsetof(UBloodZoneBaseInteraction, _killerFacingTolerance) == 0x000920, "Member 'UBloodZoneBaseInteraction::_killerFacingTolerance' has a wrong offset!");

// Class Spring2024.BloodZoneActivationInteraction
// 0x0000 (0x0930 - 0x0930)
class UBloodZoneActivationInteraction final : public UBloodZoneBaseInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZoneActivationInteraction">();
	}
	static class UBloodZoneActivationInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodZoneActivationInteraction>();
	}
};
static_assert(alignof(UBloodZoneActivationInteraction) == 0x000010, "Wrong alignment on UBloodZoneActivationInteraction");
static_assert(sizeof(UBloodZoneActivationInteraction) == 0x000930, "Wrong size on UBloodZoneActivationInteraction");

// Class Spring2024.BloodZoneDeactivationInteraction
// 0x0000 (0x0930 - 0x0930)
class UBloodZoneDeactivationInteraction final : public UBloodZoneBaseInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZoneDeactivationInteraction">();
	}
	static class UBloodZoneDeactivationInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodZoneDeactivationInteraction>();
	}
};
static_assert(alignof(UBloodZoneDeactivationInteraction) == 0x000010, "Wrong alignment on UBloodZoneDeactivationInteraction");
static_assert(sizeof(UBloodZoneDeactivationInteraction) == 0x000930, "Wrong size on UBloodZoneDeactivationInteraction");

// Class Spring2024.BloodZoneOutlineUpdateStrategy
// 0x0018 (0x00E8 - 0x00D0)
class UBloodZoneOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                           _outlineColor;                                     // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZoneOutlineUpdateStrategy">();
	}
	static class UBloodZoneOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodZoneOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UBloodZoneOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UBloodZoneOutlineUpdateStrategy");
static_assert(sizeof(UBloodZoneOutlineUpdateStrategy) == 0x0000E8, "Wrong size on UBloodZoneOutlineUpdateStrategy");
static_assert(offsetof(UBloodZoneOutlineUpdateStrategy, _outlineColor) == 0x0000D0, "Member 'UBloodZoneOutlineUpdateStrategy::_outlineColor' has a wrong offset!");

// Class Spring2024.BloodZoneTrackerPlayerComponent
// 0x0078 (0x0120 - 0x00A8)
class UBloodZoneTrackerPlayerComponent final : public UActorComponent
{
public:
	TArray<class ABloodZone*>                     _authority_bloodZonesInRange;                      // 0x00A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTagStateBool                          _isInBloodZone;                                    // 0x00D0(0x0048)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnPlayerEnterBloodZone(const struct FGameplayTag& GameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnPlayerExitBloodZone(const struct FGameplayTag& GameEventType, const struct FGameEventData& GameEventData);
	void Cosmetic_InsideBloodZone();
	void Cosmetic_OnKillerLocallyObservedChanged(bool LocallyObserved);
	void Cosmetic_OutsideBloodZone();
	void OnRep_IsInBloodZone();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BloodZoneTrackerPlayerComponent">();
	}
	static class UBloodZoneTrackerPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBloodZoneTrackerPlayerComponent>();
	}
};
static_assert(alignof(UBloodZoneTrackerPlayerComponent) == 0x000008, "Wrong alignment on UBloodZoneTrackerPlayerComponent");
static_assert(sizeof(UBloodZoneTrackerPlayerComponent) == 0x000120, "Wrong size on UBloodZoneTrackerPlayerComponent");
static_assert(offsetof(UBloodZoneTrackerPlayerComponent, _authority_bloodZonesInRange) == 0x0000A8, "Member 'UBloodZoneTrackerPlayerComponent::_authority_bloodZonesInRange' has a wrong offset!");
static_assert(offsetof(UBloodZoneTrackerPlayerComponent, _isInBloodZone) == 0x0000D0, "Member 'UBloodZoneTrackerPlayerComponent::_isInBloodZone' has a wrong offset!");

// Class Spring2024.Spring2024EventCheatComponent
// 0x0010 (0x00B8 - 0x00A8)
class USpring2024EventCheatComponent final : public UActorComponent
{
public:
	TSubclassOf<class ABloodZone>                 _bloodZoneClass;                                   // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ABloodReceptacle>           _bloodReceptacleClass;                             // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DBD_Spring2024ActivateAllBloodZone(const class FString& LocalPlayerId) const;
	void DBD_Spring2024DeactivateAllBloodZone() const;
	void DBD_Spring2024ForceSpawnAllBloodReceptacle() const;
	void DBD_Spring2024ForceSpawnAllBloodZone() const;
	void DBD_Spring2024ShowBloodZoneInfluence() const;
	void DBD_Spring2024UnprotectAllBloodZone() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024EventCheatComponent">();
	}
	static class USpring2024EventCheatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024EventCheatComponent>();
	}
};
static_assert(alignof(USpring2024EventCheatComponent) == 0x000008, "Wrong alignment on USpring2024EventCheatComponent");
static_assert(sizeof(USpring2024EventCheatComponent) == 0x0000B8, "Wrong size on USpring2024EventCheatComponent");
static_assert(offsetof(USpring2024EventCheatComponent, _bloodZoneClass) == 0x0000A8, "Member 'USpring2024EventCheatComponent::_bloodZoneClass' has a wrong offset!");
static_assert(offsetof(USpring2024EventCheatComponent, _bloodReceptacleClass) == 0x0000B0, "Member 'USpring2024EventCheatComponent::_bloodReceptacleClass' has a wrong offset!");

// Class Spring2024.Spring2024EventComponent
// 0x00B0 (0x0158 - 0x00A8)
class USpring2024EventComponent final : public UActorComponent
{
public:
	TSubclassOf<class UStatusEffect>              _survivorEventStatusEffect;                        // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _killerEventStatusEffect;                          // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _offeringStatusEffect;                             // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDBDTunableRowHandle>           _dreamLevelBonusValue;                             // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class ABloodZone>                 _bloodZoneClassToSpawn;                            // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneSpawnDistance;                           // 0x00D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodZoneHeight;                                  // 0x0100(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class USpring2024EventCheatComponent> _eventCheatComponentClass;                         // 0x0128(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x28];                                     // 0x0130(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024EventComponent">();
	}
	static class USpring2024EventComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024EventComponent>();
	}
};
static_assert(alignof(USpring2024EventComponent) == 0x000008, "Wrong alignment on USpring2024EventComponent");
static_assert(sizeof(USpring2024EventComponent) == 0x000158, "Wrong size on USpring2024EventComponent");
static_assert(offsetof(USpring2024EventComponent, _survivorEventStatusEffect) == 0x0000A8, "Member 'USpring2024EventComponent::_survivorEventStatusEffect' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _killerEventStatusEffect) == 0x0000B0, "Member 'USpring2024EventComponent::_killerEventStatusEffect' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _offeringStatusEffect) == 0x0000B8, "Member 'USpring2024EventComponent::_offeringStatusEffect' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _dreamLevelBonusValue) == 0x0000C0, "Member 'USpring2024EventComponent::_dreamLevelBonusValue' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _bloodZoneClassToSpawn) == 0x0000D0, "Member 'USpring2024EventComponent::_bloodZoneClassToSpawn' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _bloodZoneSpawnDistance) == 0x0000D8, "Member 'USpring2024EventComponent::_bloodZoneSpawnDistance' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _bloodZoneHeight) == 0x000100, "Member 'USpring2024EventComponent::_bloodZoneHeight' has a wrong offset!");
static_assert(offsetof(USpring2024EventComponent, _eventCheatComponentClass) == 0x000128, "Member 'USpring2024EventComponent::_eventCheatComponentClass' has a wrong offset!");

// Class Spring2024.Spring2024HuskVFXComponent
// 0x0098 (0x0140 - 0x00A8)
class USpring2024HuskVFXComponent final : public UActorComponent
{
public:
	TWeakObjectPtr<class ABaseHusk>               _owningHusk;                                       // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x90];                                      // 0x00B0(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnHuskVFXComponentReady();
	void Cosmetic_SetBloodBoostVisible(bool Visible);
	void RegisterVFXListeners();

	void Cosmetic_SetChargeVisible(int32 ChargeAmount, bool IsVisible) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024HuskVFXComponent">();
	}
	static class USpring2024HuskVFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024HuskVFXComponent>();
	}
};
static_assert(alignof(USpring2024HuskVFXComponent) == 0x000008, "Wrong alignment on USpring2024HuskVFXComponent");
static_assert(sizeof(USpring2024HuskVFXComponent) == 0x000140, "Wrong size on USpring2024HuskVFXComponent");
static_assert(offsetof(USpring2024HuskVFXComponent, _owningHusk) == 0x0000A8, "Member 'USpring2024HuskVFXComponent::_owningHusk' has a wrong offset!");

// Class Spring2024.Spring2024StatusEffect
// 0x0040 (0x03C0 - 0x0380)
class USpring2024StatusEffect : public UStatusEffect
{
public:
	uint8                                         Pad_380[0x40];                                     // 0x0380(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024StatusEffect">();
	}
	static class USpring2024StatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024StatusEffect>();
	}
};
static_assert(alignof(USpring2024StatusEffect) == 0x000008, "Wrong alignment on USpring2024StatusEffect");
static_assert(sizeof(USpring2024StatusEffect) == 0x0003C0, "Wrong size on USpring2024StatusEffect");

// Class Spring2024.Spring2024KillerStatusEffect
// 0x0060 (0x0420 - 0x03C0)
class USpring2024KillerStatusEffect final : public USpring2024StatusEffect
{
public:
	struct FDBDTunableRowHandle                   _lungeAttackCooldownModifier;                      // 0x03C0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E8[0x30];                                     // 0x03E8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _activationTimerDuration;                          // 0x0418(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024KillerStatusEffect">();
	}
	static class USpring2024KillerStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024KillerStatusEffect>();
	}
};
static_assert(alignof(USpring2024KillerStatusEffect) == 0x000008, "Wrong alignment on USpring2024KillerStatusEffect");
static_assert(sizeof(USpring2024KillerStatusEffect) == 0x000420, "Wrong size on USpring2024KillerStatusEffect");
static_assert(offsetof(USpring2024KillerStatusEffect, _lungeAttackCooldownModifier) == 0x0003C0, "Member 'USpring2024KillerStatusEffect::_lungeAttackCooldownModifier' has a wrong offset!");
static_assert(offsetof(USpring2024KillerStatusEffect, _activationTimerDuration) == 0x000418, "Member 'USpring2024KillerStatusEffect::_activationTimerDuration' has a wrong offset!");

// Class Spring2024.Spring2024MapBloodTrailComponent
// 0x0060 (0x02C0 - 0x0260)
class USpring2024MapBloodTrailComponent final : public UBloodTrailComponent
{
public:
	struct FDBDTunableRowHandle                   _bloodTrailSpawnFrequencyTunable;                  // 0x0260(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_288[0x38];                                     // 0x0288(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCarryingPlayerHealthChange(ECamperDamageState OldDamageState, ECamperDamageState NewDamageState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024MapBloodTrailComponent">();
	}
	static class USpring2024MapBloodTrailComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024MapBloodTrailComponent>();
	}
};
static_assert(alignof(USpring2024MapBloodTrailComponent) == 0x000010, "Wrong alignment on USpring2024MapBloodTrailComponent");
static_assert(sizeof(USpring2024MapBloodTrailComponent) == 0x0002C0, "Wrong size on USpring2024MapBloodTrailComponent");
static_assert(offsetof(USpring2024MapBloodTrailComponent, _bloodTrailSpawnFrequencyTunable) == 0x000260, "Member 'USpring2024MapBloodTrailComponent::_bloodTrailSpawnFrequencyTunable' has a wrong offset!");

// Class Spring2024.Spring2024MapComponent
// 0x0028 (0x00D0 - 0x00A8)
class USpring2024MapComponent final : public UActorComponent
{
public:
	TSubclassOf<class UStatusEffect>              _spring2024MapStatusEffect;                        // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodTrailSettings*                    _bloodTrailSettings;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024MapComponent">();
	}
	static class USpring2024MapComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024MapComponent>();
	}
};
static_assert(alignof(USpring2024MapComponent) == 0x000008, "Wrong alignment on USpring2024MapComponent");
static_assert(sizeof(USpring2024MapComponent) == 0x0000D0, "Wrong size on USpring2024MapComponent");
static_assert(offsetof(USpring2024MapComponent, _spring2024MapStatusEffect) == 0x0000A8, "Member 'USpring2024MapComponent::_spring2024MapStatusEffect' has a wrong offset!");
static_assert(offsetof(USpring2024MapComponent, _bloodTrailSettings) == 0x0000B0, "Member 'USpring2024MapComponent::_bloodTrailSettings' has a wrong offset!");

// Class Spring2024.Spring2024SurvivorStatusEffect
// 0x00C8 (0x0488 - 0x03C0)
class USpring2024SurvivorStatusEffect final : public USpring2024StatusEffect
{
public:
	struct FDBDTunableRowHandle                   _injuredVoiceLevelModifier;                        // 0x03C0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _bloodDecalDurationModifier;                       // 0x03E8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _crouchedInjuredVoiceLevelModifier;                // 0x0410(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                   _crouchedBloodDecalDurationModifier;               // 0x0438(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_460[0x28];                                     // 0x0460(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FDBDTunableRowHandle GetBloodDecalDurationModifier();
	struct FDBDTunableRowHandle GetInjuredVoiceLevelModifier();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Spring2024SurvivorStatusEffect">();
	}
	static class USpring2024SurvivorStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpring2024SurvivorStatusEffect>();
	}
};
static_assert(alignof(USpring2024SurvivorStatusEffect) == 0x000008, "Wrong alignment on USpring2024SurvivorStatusEffect");
static_assert(sizeof(USpring2024SurvivorStatusEffect) == 0x000488, "Wrong size on USpring2024SurvivorStatusEffect");
static_assert(offsetof(USpring2024SurvivorStatusEffect, _injuredVoiceLevelModifier) == 0x0003C0, "Member 'USpring2024SurvivorStatusEffect::_injuredVoiceLevelModifier' has a wrong offset!");
static_assert(offsetof(USpring2024SurvivorStatusEffect, _bloodDecalDurationModifier) == 0x0003E8, "Member 'USpring2024SurvivorStatusEffect::_bloodDecalDurationModifier' has a wrong offset!");
static_assert(offsetof(USpring2024SurvivorStatusEffect, _crouchedInjuredVoiceLevelModifier) == 0x000410, "Member 'USpring2024SurvivorStatusEffect::_crouchedInjuredVoiceLevelModifier' has a wrong offset!");
static_assert(offsetof(USpring2024SurvivorStatusEffect, _crouchedBloodDecalDurationModifier) == 0x000438, "Member 'USpring2024SurvivorStatusEffect::_crouchedBloodDecalDurationModifier' has a wrong offset!");

}

