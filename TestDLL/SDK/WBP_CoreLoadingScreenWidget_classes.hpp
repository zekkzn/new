#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreLoadingScreenWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreLoadingScreenWidget.WBP_CoreLoadingScreenWidget_C
// 0x0060 (0x03C0 - 0x0360)
class UWBP_CoreLoadingScreenWidget_C final : public UCoreLoadingScreenWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              BackgroundImage;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GeneralLoadingScreenOverlay;                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              LoadingBanner1;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              LoadingBanner2;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              LoadingBanner3;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LoadingBannerContainer;                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreLoadingLogo_C*                 LoadingLogo;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreDBDLogo_C*                     WBP_CoreDBDLogo;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMargin                                In_Padding;                                        // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ELoadingScreenType                            ActiveLoadingScreenType;                           // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CoreLoadingScreenWidget(int32 EntryPoint);
	void SetLoadingHint(const struct FLoadingHintViewData& LoadingHintData);
	void SetLoadingScreenType(ELoadingScreenType LoadingScreenType);
	void SetSpecialEventLoadingScreen(const class FName EventID);
	void Setup();
	void ShowLoadingBannerImage(const bool IsKiller);
	void UpdateProgress(float Progress);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreLoadingScreenWidget_C">();
	}
	static class UWBP_CoreLoadingScreenWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreLoadingScreenWidget_C>();
	}
};
static_assert(alignof(UWBP_CoreLoadingScreenWidget_C) == 0x000008, "Wrong alignment on UWBP_CoreLoadingScreenWidget_C");
static_assert(sizeof(UWBP_CoreLoadingScreenWidget_C) == 0x0003C0, "Wrong size on UWBP_CoreLoadingScreenWidget_C");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, UberGraphFrame) == 0x000360, "Member 'UWBP_CoreLoadingScreenWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, BackgroundImage) == 0x000368, "Member 'UWBP_CoreLoadingScreenWidget_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, GeneralLoadingScreenOverlay) == 0x000370, "Member 'UWBP_CoreLoadingScreenWidget_C::GeneralLoadingScreenOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, LoadingBanner1) == 0x000378, "Member 'UWBP_CoreLoadingScreenWidget_C::LoadingBanner1' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, LoadingBanner2) == 0x000380, "Member 'UWBP_CoreLoadingScreenWidget_C::LoadingBanner2' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, LoadingBanner3) == 0x000388, "Member 'UWBP_CoreLoadingScreenWidget_C::LoadingBanner3' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, LoadingBannerContainer) == 0x000390, "Member 'UWBP_CoreLoadingScreenWidget_C::LoadingBannerContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, LoadingLogo) == 0x000398, "Member 'UWBP_CoreLoadingScreenWidget_C::LoadingLogo' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, WBP_CoreDBDLogo) == 0x0003A0, "Member 'UWBP_CoreLoadingScreenWidget_C::WBP_CoreDBDLogo' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, In_Padding) == 0x0003A8, "Member 'UWBP_CoreLoadingScreenWidget_C::In_Padding' has a wrong offset!");
static_assert(offsetof(UWBP_CoreLoadingScreenWidget_C, ActiveLoadingScreenType) == 0x0003B8, "Member 'UWBP_CoreLoadingScreenWidget_C::ActiveLoadingScreenType' has a wrong offset!");

}

