#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EscapeBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_EscapeBase.BP_EscapeBase_C.ActivateSwitchSpark
// 0x0018 (0x0018 - 0x0000)
struct BP_EscapeBase_C_ActivateSwitchSpark final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_ActivateSwitchSpark) == 0x000004, "Wrong alignment on BP_EscapeBase_C_ActivateSwitchSpark");
static_assert(sizeof(BP_EscapeBase_C_ActivateSwitchSpark) == 0x000018, "Wrong size on BP_EscapeBase_C_ActivateSwitchSpark");
static_assert(offsetof(BP_EscapeBase_C_ActivateSwitchSpark, Temp_delegate_Variable) == 0x000000, "Member 'BP_EscapeBase_C_ActivateSwitchSpark::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ActivateSwitchSpark, CallFunc_PostAkEvent_ReturnValue) == 0x000014, "Member 'BP_EscapeBase_C_ActivateSwitchSpark::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TotalPercentComplete;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature, ChargeableComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature::ChargeableComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature, TotalPercentComplete) == 0x000008, "Member 'BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature::TotalPercentComplete' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature) == 0x000008, "Wrong size on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature, ChargeableComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature::ChargeableComponent' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature final
{
public:
	class UChargeableComponent*                   ChargeableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature) == 0x000008, "Wrong size on BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature, ChargeableComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature::ChargeableComponent' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000110, "Wrong size on BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_EscapeBase_C_BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000110, "Wrong size on BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EscapeBase_C_BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.ExecuteUbergraph_BP_EscapeBase
// 0x04E8 (0x04E8 - 0x0000)
struct BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSeeLoudNoise_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_activated;                            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x00A8(0x00F0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01B8(0x00F0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ADBDPlayer*                             K2Node_DynamicCast_AsDBDPlayer;                    // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_DynamicCast_AsDBDPlayer_1;                  // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChargeableComponent*                   K2Node_ComponentBoundEvent_ChargeableComponent_2;  // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_TotalPercentComplete;   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UChargeableComponent*                   K2Node_ComponentBoundEvent_ChargeableComponent_1;  // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   K2Node_ComponentBoundEvent_ChargeableComponent;    // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndGameTunableValue_ReturnValue;       // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0318(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_opened;                               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_K2_GetChildActor_ReturnValue;             // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANavLinkProxy*                          K2Node_DynamicCast_AsNav_Link_Proxy;               // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue;  // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPerkManager*                           CallFunc_GetPerkManager_ReturnValue;               // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UEscapeDoorAnimInstance*                K2Node_DynamicCast_AsEscape_Door_Anim_Instance;    // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IObjectStateProvider>  CallFunc_HasStateTag_objectStateProvider_CastInput; // 0x0390(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasStateTag_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x03C8(0x00F0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTunableRowHandleValue_ReturnValue;     // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerkModifierAdditiveValue_ReturnValue; // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateLightProgress_CompletionPercent_ImplicitCast; // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase) == 0x000008, "Wrong alignment on BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase");
static_assert(sizeof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase) == 0x0004E8, "Wrong size on BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, EntryPoint) == 0x000000, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_CanSeeLoudNoise_ReturnValue) == 0x000020, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_CanSeeLoudNoise_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_Event_activated) == 0x000040, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_Event_activated' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000058, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000068, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000070, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000078, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000080, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000088, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000090, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000098, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0000A0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0000A4, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0000A8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000198, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001A0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001A8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0001B0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001B4, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_SweepResult) == 0x0001B8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_AsDBDPlayer) == 0x0002A8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_AsDBDPlayer' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002B8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0002C0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0002C8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002D0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_AsDBDPlayer_1) == 0x0002D8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_AsDBDPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_ChargeableComponent_2) == 0x0002E8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_ChargeableComponent_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_TotalPercentComplete) == 0x0002F0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_TotalPercentComplete' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0002F4, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_ChargeableComponent_1) == 0x0002F8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_ChargeableComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_ComponentBoundEvent_ChargeableComponent) == 0x000300, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_ComponentBoundEvent_ChargeableComponent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetEndGameTunableValue_ReturnValue) == 0x000308, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetEndGameTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_RandomFloatInRange_ReturnValue) == 0x000310, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_SetTimer_ReturnValue) == 0x000318, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000320, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000328, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_Event_opened) == 0x000330, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_Event_opened' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000338, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Not_PreBool_ReturnValue) == 0x000340, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_GetChildActor_ReturnValue) == 0x000348, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_GetChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000350, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_AsNav_Link_Proxy) == 0x000358, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_AsNav_Link_Proxy' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Less_IntInt_ReturnValue) == 0x000361, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetLocallyObservedCharacter_ReturnValue) == 0x000368, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetLocallyObservedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetAnimInstance_ReturnValue) == 0x000370, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetPerkManager_ReturnValue) == 0x000378, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetPerkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_AsEscape_Door_Anim_Instance) == 0x000380, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_AsEscape_Door_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, K2Node_DynamicCast_bSuccess_3) == 0x000388, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_IsValid_ReturnValue_1) == 0x000389, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_HasStateTag_objectStateProvider_CastInput) == 0x000390, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_HasStateTag_objectStateProvider_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_HasStateTag_ReturnValue) == 0x0003A0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_HasStateTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetSocketLocation_ReturnValue) == 0x0003A8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003C0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0003C8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_BooleanAND_ReturnValue) == 0x0004B8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetTunableRowHandleValue_ReturnValue) == 0x0004BC, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetTunableRowHandleValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_GetPerkModifierAdditiveValue_ReturnValue) == 0x0004C0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_GetPerkModifierAdditiveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x0004C4, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0004C8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_UpdateLightProgress_CompletionPercent_ImplicitCast) == 0x0004D0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_UpdateLightProgress_CompletionPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x0004D8, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0004E0, "Member 'BP_EscapeBase_C_ExecuteUbergraph_BP_EscapeBase::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetOpenEscapeInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_GetOpenEscapeInteraction final
{
public:
	class UChargeableInteractionDefinition*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetOpenEscapeInteraction) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetOpenEscapeInteraction");
static_assert(sizeof(BP_EscapeBase_C_GetOpenEscapeInteraction) == 0x000008, "Wrong size on BP_EscapeBase_C_GetOpenEscapeInteraction");
static_assert(offsetof(BP_EscapeBase_C_GetOpenEscapeInteraction, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetOpenEscapeInteraction::ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.OnExitActivationChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_EscapeBase_C_OnExitActivationChanged final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_OnExitActivationChanged) == 0x000001, "Wrong alignment on BP_EscapeBase_C_OnExitActivationChanged");
static_assert(sizeof(BP_EscapeBase_C_OnExitActivationChanged) == 0x000001, "Wrong size on BP_EscapeBase_C_OnExitActivationChanged");
static_assert(offsetof(BP_EscapeBase_C_OnExitActivationChanged, Activated) == 0x000000, "Member 'BP_EscapeBase_C_OnExitActivationChanged::Activated' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.OnExitOpenChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_EscapeBase_C_OnExitOpenChanged final
{
public:
	bool                                          OPENED;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_OnExitOpenChanged) == 0x000001, "Wrong alignment on BP_EscapeBase_C_OnExitOpenChanged");
static_assert(sizeof(BP_EscapeBase_C_OnExitOpenChanged) == 0x000001, "Wrong size on BP_EscapeBase_C_OnExitOpenChanged");
static_assert(offsetof(BP_EscapeBase_C_OnExitOpenChanged, OPENED) == 0x000000, "Member 'BP_EscapeBase_C_OnExitOpenChanged::OPENED' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.UpdateLightProgress
// 0x0100 (0x0100 - 0x0000)
struct BP_EscapeBase_C_UpdateLightProgress final
{
public:
	double                                        CompletionPercent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Old_Lights_Open_Count;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Lights_Open_Count;                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0054(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0090(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x00A4(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_A_ImplicitCast;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_2;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_UpdateLightProgress) == 0x000008, "Wrong alignment on BP_EscapeBase_C_UpdateLightProgress");
static_assert(sizeof(BP_EscapeBase_C_UpdateLightProgress) == 0x000100, "Wrong size on BP_EscapeBase_C_UpdateLightProgress");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CompletionPercent) == 0x000000, "Member 'BP_EscapeBase_C_UpdateLightProgress::CompletionPercent' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Old_Lights_Open_Count) == 0x000008, "Member 'BP_EscapeBase_C_UpdateLightProgress::Old_Lights_Open_Count' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, New_Lights_Open_Count) == 0x00000C, "Member 'BP_EscapeBase_C_UpdateLightProgress::New_Lights_Open_Count' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_int_Variable) == 0x000010, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_object_Variable) == 0x000018, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_object_Variable_1) == 0x000028, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_object_Variable_2) == 0x000030, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_object_Variable_3) == 0x000038, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_delegate_Variable) == 0x000040, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_delegate_Variable_1) == 0x000054, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_ReturnValue) == 0x000068, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_PostAkEvent_ReturnValue) == 0x000070, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000078, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000080, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_PostAkEvent_ReturnValue_1) == 0x000088, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, K2Node_SwitchInteger_CmpSuccess) == 0x00008C, "Member 'BP_EscapeBase_C_UpdateLightProgress::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_delegate_Variable_2) == 0x000090, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, Temp_delegate_Variable_3) == 0x0000A4, "Member 'BP_EscapeBase_C_UpdateLightProgress::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_PostAkEvent_ReturnValue_2) == 0x0000B8, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_PostAkEvent_ReturnValue_3) == 0x0000BC, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, K2Node_Select_Default) == 0x0000C8, "Member 'BP_EscapeBase_C_UpdateLightProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000D1, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000D2, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D3, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D8, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_Divide_FloatFloat_A_ImplicitCast) == 0x0000E0, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_Divide_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_FTrunc_A_ImplicitCast) == 0x0000E8, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0000F0, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x0000F4, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UpdateLightProgress, CallFunc_K2_SetTimer_Time_ImplicitCast_2) == 0x0000F8, "Member 'BP_EscapeBase_C_UpdateLightProgress::CallFunc_K2_SetTimer_Time_ImplicitCast_2' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_EscapeBase_C_UserConstructionScript final
{
public:
	class UAttachInteractionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_EscapeBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_EscapeBase_C_UserConstructionScript");
static_assert(sizeof(BP_EscapeBase_C_UserConstructionScript) == 0x000018, "Wrong size on BP_EscapeBase_C_UserConstructionScript");
static_assert(offsetof(BP_EscapeBase_C_UserConstructionScript, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_UserConstructionScript::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_EscapeBase_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetDoorSkeletalMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_GetDoorSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetDoorSkeletalMeshComponent) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetDoorSkeletalMeshComponent");
static_assert(sizeof(BP_EscapeBase_C_GetDoorSkeletalMeshComponent) == 0x000008, "Wrong size on BP_EscapeBase_C_GetDoorSkeletalMeshComponent");
static_assert(offsetof(BP_EscapeBase_C_GetDoorSkeletalMeshComponent, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetDoorSkeletalMeshComponent::ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetEscapeSwitchFloorLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_EscapeBase_C_GetEscapeSwitchFloorLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetEscapeSwitchFloorLocation) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetEscapeSwitchFloorLocation");
static_assert(sizeof(BP_EscapeBase_C_GetEscapeSwitchFloorLocation) == 0x000030, "Wrong size on BP_EscapeBase_C_GetEscapeSwitchFloorLocation");
static_assert(offsetof(BP_EscapeBase_C_GetEscapeSwitchFloorLocation, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetEscapeSwitchFloorLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetEscapeSwitchFloorLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_EscapeBase_C_GetEscapeSwitchFloorLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetExitArea
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_GetExitArea final
{
public:
	class UBoxComponent*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetExitArea) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetExitArea");
static_assert(sizeof(BP_EscapeBase_C_GetExitArea) == 0x000008, "Wrong size on BP_EscapeBase_C_GetExitArea");
static_assert(offsetof(BP_EscapeBase_C_GetExitArea, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetExitArea::ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetFocalPointPosition
// 0x0040 (0x0040 - 0x0000)
struct BP_EscapeBase_C_GetFocalPointPosition final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteractionDefinition*           Definition;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetFocalPointPosition) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetFocalPointPosition");
static_assert(sizeof(BP_EscapeBase_C_GetFocalPointPosition) == 0x000040, "Wrong size on BP_EscapeBase_C_GetFocalPointPosition");
static_assert(offsetof(BP_EscapeBase_C_GetFocalPointPosition, Player) == 0x000000, "Member 'BP_EscapeBase_C_GetFocalPointPosition::Player' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetFocalPointPosition, Definition) == 0x000008, "Member 'BP_EscapeBase_C_GetFocalPointPosition::Definition' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetFocalPointPosition, ReturnValue) == 0x000010, "Member 'BP_EscapeBase_C_GetFocalPointPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetFocalPointPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_EscapeBase_C_GetFocalPointPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetParadiseServerLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_EscapeBase_C_GetParadiseServerLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_K2_GetChildActor_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetParadiseServerLocation) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetParadiseServerLocation");
static_assert(sizeof(BP_EscapeBase_C_GetParadiseServerLocation) == 0x000038, "Wrong size on BP_EscapeBase_C_GetParadiseServerLocation");
static_assert(offsetof(BP_EscapeBase_C_GetParadiseServerLocation, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetParadiseServerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetParadiseServerLocation, CallFunc_K2_GetChildActor_ReturnValue) == 0x000018, "Member 'BP_EscapeBase_C_GetParadiseServerLocation::CallFunc_K2_GetChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_GetParadiseServerLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_EscapeBase_C_GetParadiseServerLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.GetSwitchSceneComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EscapeBase_C_GetSwitchSceneComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_GetSwitchSceneComponent) == 0x000008, "Wrong alignment on BP_EscapeBase_C_GetSwitchSceneComponent");
static_assert(sizeof(BP_EscapeBase_C_GetSwitchSceneComponent) == 0x000008, "Wrong size on BP_EscapeBase_C_GetSwitchSceneComponent");
static_assert(offsetof(BP_EscapeBase_C_GetSwitchSceneComponent, ReturnValue) == 0x000000, "Member 'BP_EscapeBase_C_GetSwitchSceneComponent::ReturnValue' has a wrong offset!");

// Function BP_EscapeBase.BP_EscapeBase_C.IsInterruptionPossible
// 0x0030 (0x0030 - 0x0000)
struct BP_EscapeBase_C_IsInterruptionPossible final
{
public:
	const class ADBDPlayer*                       Interruptor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ADBDPlayer*                       Interruptee;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UInteractor*                      Interactor;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UInteractionDefinition*           Definition;                                        // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UInterruptionDefinition*          Interruption;                                      // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EscapeBase_C_IsInterruptionPossible) == 0x000008, "Wrong alignment on BP_EscapeBase_C_IsInterruptionPossible");
static_assert(sizeof(BP_EscapeBase_C_IsInterruptionPossible) == 0x000030, "Wrong size on BP_EscapeBase_C_IsInterruptionPossible");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, Interruptor) == 0x000000, "Member 'BP_EscapeBase_C_IsInterruptionPossible::Interruptor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, Interruptee) == 0x000008, "Member 'BP_EscapeBase_C_IsInterruptionPossible::Interruptee' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, Interactor) == 0x000010, "Member 'BP_EscapeBase_C_IsInterruptionPossible::Interactor' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, Definition) == 0x000018, "Member 'BP_EscapeBase_C_IsInterruptionPossible::Definition' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, Interruption) == 0x000020, "Member 'BP_EscapeBase_C_IsInterruptionPossible::Interruption' has a wrong offset!");
static_assert(offsetof(BP_EscapeBase_C_IsInterruptionPossible, ReturnValue) == 0x000028, "Member 'BP_EscapeBase_C_IsInterruptionPossible::ReturnValue' has a wrong offset!");

}

