#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Camper_Character

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "LightingInterfaceEnum_structs.hpp"
#include "TheClown_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Camper_Character.BP_Camper_Character_C
// 0x0880 (0x2290 - 0x1A10)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Camper_Character_C : public ACamperPlayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1A10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USurvivorBoundOptimizer*                SurvivorBoundOptimizer;                            // 0x1A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URangedExplosiveEffectHandlerComponent* RangedExplosiveEffectHandler;                      // 0x1A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AntiCampSelfUnhookComponent_C*      BP_AntiCampSelfUnhookComponent;                    // 0x1A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Audio_SVR_Base_C*                   BP_Audio_SVR_Base;                                 // 0x1A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerAnimationLayerManager*           PlayerAnimationLayerManager;                       // 0x1A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDChildActorComponent*                TerrorRadiusHeart;                                 // 0x1A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorLullabyFeedBackComponent_C* BP_SurvivorLullabyFeedBackComponent;               // 0x1A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCamperFootstepCreatorComponent_C*      CamperFootstepCreatorComponent;                    // 0x1A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCamperFootstepPerceptionComponent_C*   CamperFootstepPerceptionComponent;                 // 0x1A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialHelperUnaffectedNiagaraComponent* NP_KillerInstinct;                                 // 0x1A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignificanceManagerComponent*          SignificanceManager;                               // 0x1A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTerrorRadiusBPMComponent*              TerrorRadiusBPM;                                   // 0x1A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTerrorRadiusAudioFeedbackComponent*    TerrorRadiusAudioFeedback;                         // 0x1A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTerrorRadiusReceiverComponent*         TerrorRadiusReceiver;                              // 0x1A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKillerInstinctComponent*               KillerInstinctComponent;                           // 0x1A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKillerSpecificSurvivorAnimationPicker* KillerSpecificSurvivorAnimationPicker;             // 0x1A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorActivityIndicatorComponent_C* BP_SurvivorActivityIndicatorComponent;             // 0x1A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPNearestOutsideMapBoundsLocator_C*    BPNearestOutsideMapBoundsLocator;                  // 0x1AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USurvivorAudioHandlerComponent*         SurvivorAudioHandler;                              // 0x1AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPlayerHookAnalyticsComponent*          PlayerHookAnalytics;                               // 0x1AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorCosmeticHelperSpawnerComponent_C* SurvivorCosmeticHelperSpawnerComponent;            // 0x1AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorBloodFX_C*                  SurvivorBloodVFX;                                  // 0x1AC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraOffsetController*                CameraOffsetController;                            // 0x1AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWiggleFreeComponent*                   WiggleFree;                                        // 0x1AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUnhookReplicationComponent*            UnhookReplicationComponent;                        // 0x1AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPositionLagCompensationComponent*      PositionLagCompensation;                           // 0x1AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCharacterOptimizer*                    CharacterOptimizer;                                // 0x1AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USurvivorAimStateComponent*             SurvivorAimState;                                  // 0x1AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStruggleComponent*                     StruggleComponent;                                 // 0x1AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWiggleComponent*                       WiggleComponent;                                   // 0x1B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUnhookedSurvivorTrackerComponent*      UnhookedSurvivorTracker;                           // 0x1B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEtherealComponent*                     Ethereal;                                          // 0x1B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionAnalyticsComponent*         InteractionAnalytics;                              // 0x1B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBlindingFXComponent*                   BlindingFX;                                        // 0x1B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USurvivorAimableArmSensor*              SurvivorAimableArmSensor;                          // 0x1B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Survivor_AttenuationScaling;              // 0x1B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemChestAudioComponent_C*          BP_ItemChestComponent;                             // 0x1B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneratorRepairAudioComponent_C*    BP_GeneratorRepairComponent;                       // 0x1B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorRightFootGroundDetector_C*  RightFootGroundDetector;                           // 0x1B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurvivorLeftFootGroundDetector_C*   LeftFootGroundDetector;                            // 0x1B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RedGlowAttach;                                     // 0x1B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Survivor_NoOcclusion;                     // 0x1B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UQuestEventsHandler*                    QuestEventsHandler;                                // 0x1B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndGameEffectsComponent_C*             EndGameEffectsComponent;                           // 0x1B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PP_Master;                                         // 0x1B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsulePlayerOverlapComponent*         PawnDetector;                                      // 0x1B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Vignette_EndGame;                                // 0x1B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScreenSpaceLocationComponent*          ScreenSpaceLocation_MiddleT;                       // 0x1B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CrawlingOverlapDetector;                           // 0x1B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Screen_DeepWound;                                // 0x1BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       AudioAmbientDetector;                              // 0x1BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  BlindedPostProcess;                                // 0x1BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CamClip;                                           // 0x1BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_FullscreenBlood;                                 // 0x1BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Vignette;                                          // 0x1BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraFX;                                          // 0x1BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCustomizedAudioComponent*              CustomizedAudio;                                   // 0x1BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USurvivorOutlineUpdateStrategy*         SurvivorOutlineUpdateStrategy;                     // 0x1BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Dream_Embers;                                    // 0x1BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CameraAnchorComponent;                             // 0x1BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      BodyCameraClipper;                                 // 0x1BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HeadCameraClipper;                                 // 0x1C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteHook_LeftT;                              // 0x1C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScreenSpaceLocationComponent*          ScreenSpaceLocation_LeftT;                         // 0x1C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteMud_RightB;                              // 0x1C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Vignette_RightB;                                 // 0x1C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteHook_RightB;                             // 0x1C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScreenSpaceLocationComponent*          ScreenSpaceLocation_RightB;                        // 0x1C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteHook_RightT;                             // 0x1C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScreenSpaceLocationComponent*          ScreenSpaceLocation_RightT;                        // 0x1C40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteMud_LeftB;                               // 0x1C48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Vignette_LeftB;                                  // 0x1C50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VignetteHook_LeftB;                              // 0x1C58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UScreenSpaceLocationComponent*          ScreenSpaceLocation_LeftB;                         // 0x1C60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       StraightCam;                                       // 0x1C68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDSpringArmComponent*                 DBDSpringArm;                                      // 0x1C70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   StalkedCharge;                                     // 0x1C78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FX;                                                // 0x1C80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Survivor;                                 // 0x1C88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      InteractionDetector;                               // 0x1C90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorClipperComponent*                 ActorClipper;                                      // 0x1C98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDOutlineComponent*                   DBDOutline;                                        // 0x1CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCustomizedSkeletalMesh*                CustomizedSkeletalMesh;                            // 0x1CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimationMontageSlave*                 MontageFollower;                                   // 0x1CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CamperTakenByEntity_C*              BP_CamperTakenByEntity;                            // 0x1CB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Mesh2SoundPlayer_C*                 BP_Mesh2SoundPlayer;                               // 0x1CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SurvivorDissolveTML_DissolveProgress_AAD5B56545F13B7A96CD56B9B012D1FC; // 0x1CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SurvivorDissolveTML__Direction_AAD5B56545F13B7A96CD56B9B012D1FC; // 0x1CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCD[0x3];                                     // 0x1CCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SurvivorDissolveTML;                               // 0x1CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_3CF391714CED7FE94311D48D246D3E0F; // 0x1CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_3CF391714CED7FE94311D48D246D3E0F; // 0x1CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDD[0x3];                                     // 0x1CDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x1CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_BoonVignetteController_Vignette_Intensity_573FB59D4BA198983B3993870F2BE359; // 0x1CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_BoonVignetteController__Direction_573FB59D4BA198983B3993870F2BE359; // 0x1CEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CED[0x3];                                     // 0x1CED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_BoonVignetteController;                        // 0x1CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K25_Power_Outline_Erode_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K25_Power_Offset_Chain_01_Y_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K25_Power_Offset_Chain_01_X_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K25_Power_Offset_Chain_02_Y_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K25_Power_Offset_Chain_02_X_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_K25_Power__Direction_D5A60533436D1F5C51FAE49F9E4D2AE3; // 0x1D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0D[0x3];                                     // 0x1D0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_K25_Power;                                     // 0x1D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_RemovePoisonedLiquid_Stain_Size_C6FBE028499C10A75CF180B28DD864CB; // 0x1D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_RemovePoisonedLiquid_Opacity_C6FBE028499C10A75CF180B28DD864CB; // 0x1D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_RemovePoisonedLiquid__Direction_C6FBE028499C10A75CF180B28DD864CB; // 0x1D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D21[0x7];                                     // 0x1D21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_RemovePoisonedLiquid;                          // 0x1D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_AddPoisonedLiquid_Stain_Size_3610ADF64F0559C3CFFB0F9D40F9ABDE; // 0x1D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_AddPoisonedLiquid_Opacity_3610ADF64F0559C3CFFB0F9D40F9ABDE; // 0x1D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_AddPoisonedLiquid__Direction_3610ADF64F0559C3CFFB0F9D40F9ABDE; // 0x1D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D39[0x7];                                     // 0x1D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_AddPoisonedLiquid;                             // 0x1D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K24_ContaminatedSurvivor_Opacity_ContaminationLiquid_E1A3DBAA4B9D071DD95680858CBDE97B; // 0x1D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_K24_ContaminatedSurvivor_Contamination_Level_E1A3DBAA4B9D071DD95680858CBDE97B; // 0x1D4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_K24_ContaminatedSurvivor__Direction_E1A3DBAA4B9D071DD95680858CBDE97B; // 0x1D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D51[0x7];                                     // 0x1D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_K24_ContaminatedSurvivor;                      // 0x1D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_DissolveEndGame_Dissolve_9A491AD74FDDC060E58CA99A393FF30A; // 0x1D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_DissolveEndGame__Direction_9A491AD74FDDC060E58CA99A393FF30A; // 0x1D64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D65[0x3];                                     // 0x1D65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_DissolveEndGame;                               // 0x1D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Compound33Control_MaskRadiusControl_CC5CDD81434161CE9181AA8D47DDEB3D; // 0x1D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Compound33Control_VomitOpacityControl_CC5CDD81434161CE9181AA8D47DDEB3D; // 0x1D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Compound33Control__Direction_CC5CDD81434161CE9181AA8D47DDEB3D; // 0x1D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D79[0x7];                                     // 0x1D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Compound33Control;                                 // 0x1D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_DeathBed_Vignette_Vignette_70F0A1C345889CD4F24F4E9E73F94A0F; // 0x1D88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_DeathBed_Vignette__Direction_70F0A1C345889CD4F24F4E9E73F94A0F; // 0x1D8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8D[0x3];                                     // 0x1D8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_DeathBed_Vignette;                             // 0x1D90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TML_Vignette_knockout_Color_vignette_6092700E4946DE9D2D71AD909D54D8AC; // 0x1D98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Vignette_knockout_BlendWeight_vignette_6092700E4946DE9D2D71AD909D54D8AC; // 0x1DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Vignette_knockout__Direction_6092700E4946DE9D2D71AD909D54D8AC; // 0x1DAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAD[0x3];                                     // 0x1DAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Vignette_knockout;                             // 0x1DB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         BloodVignetteSlashes_Opacity_NewTrack_0_E65DDF494C3B029AAA9291A543F2BD22; // 0x1DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BloodVignetteSlashes_Opacity__Direction_E65DDF494C3B029AAA9291A543F2BD22; // 0x1DBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBD[0x3];                                     // 0x1DBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BloodVignetteSlashes_Opacity;                      // 0x1DC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         BloodVignetteFrame_NewTrack_0_393794BE44909A1022A1BEA5088038D5; // 0x1DC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BloodVignetteFrame__Direction_393794BE44909A1022A1BEA5088038D5; // 0x1DCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCD[0x3];                                     // 0x1DCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BloodVignetteFrame;                                // 0x1DD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         BloodVignetteOpacity_NewTrack_0_F1B6CC3249B96E130CB59783B86601DD; // 0x1DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BloodVignetteOpacity__Direction_F1B6CC3249B96E130CB59783B86601DD; // 0x1DDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDD[0x3];                                     // 0x1DDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BloodVignetteOpacity;                              // 0x1DE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Stain_Size_C6463B0E4860686CA6F0538BD719959A; // 0x1DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Opacity_C6463B0E4860686CA6F0538BD719959A; // 0x1DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_C6463B0E4860686CA6F0538BD719959A; // 0x1DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF1[0x7];                                     // 0x1DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x1DF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Exposed_RadialBlur_Stalking_Intensity_2ED4A4274B1232DF9047F69D2335E626; // 0x1E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Exposed_RadialBlur_Radial_Blur_Intensity_2ED4A4274B1232DF9047F69D2335E626; // 0x1E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Exposed_RadialBlur__Direction_2ED4A4274B1232DF9047F69D2335E626; // 0x1E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E09[0x7];                                     // 0x1E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Exposed_RadialBlur;                            // 0x1E10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_ExposedVFX_HighlightIntensity_18B4847E4CA9A589A28019B5185D98BD; // 0x1E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_ExposedVFX__Direction_18B4847E4CA9A589A28019B5185D98BD; // 0x1E1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1D[0x3];                                     // 0x1E1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_ExposedVFX;                                    // 0x1E20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_CK_Sacrifice_Dissolve_8FFD3C4F4D466EA0588A66A983B6CE4D; // 0x1E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_CK_Sacrifice__Direction_8FFD3C4F4D466EA0588A66A983B6CE4D; // 0x1E2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2D[0x3];                                     // 0x1E2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_CK_Sacrifice;                                  // 0x1E30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_EndGameDissolve_Dissolve_76C5278548ED2010324C138A0CCB268B; // 0x1E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_EndGameDissolve__Direction_76C5278548ED2010324C138A0CCB268B; // 0x1E3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3D[0x3];                                     // 0x1E3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_EndGameDissolve;                               // 0x1E40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Mori_VomitStain_StainSize_60EAC7124CBCAC21C22DFAA0C3E3EAB2; // 0x1E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_Mori_VomitStain_Opacity_60EAC7124CBCAC21C22DFAA0C3E3EAB2; // 0x1E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Mori_VomitStain__Direction_60EAC7124CBCAC21C22DFAA0C3E3EAB2; // 0x1E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E51[0x7];                                     // 0x1E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Mori_VomitStain;                               // 0x1E58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TML_Mori_DecalVomit_Size_D8D486F048F99B3C700791A2555A7727; // 0x1E60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Mori_DecalVomit__Direction_D8D486F048F99B3C700791A2555A7727; // 0x1E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E79[0x7];                                     // 0x1E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Mori_DecalVomit;                               // 0x1E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_VomitStain_Stain_Size_C9C93588474515EFA2D8AC8D65A5952D; // 0x1E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_VomitStain_Opacity_C9C93588474515EFA2D8AC8D65A5952D; // 0x1E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_VomitStain__Direction_C9C93588474515EFA2D8AC8D65A5952D; // 0x1E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E91[0x7];                                     // 0x1E91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_VomitStain;                                    // 0x1E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Deep_Wound_FX_Fade_Fade_B1BF0470404E681D1B697F9540829671; // 0x1EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Deep_Wound_FX_Fade__Direction_B1BF0470404E681D1B697F9540829671; // 0x1EA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA5[0x3];                                     // 0x1EA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Deep_Wound_FX_Fade;                                // 0x1EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Sacrificial_Dissolve_Time_8B43EA704A9A378D80240B9FEA368AE7; // 0x1EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Sacrificial_Dissolve__Direction_8B43EA704A9A378D80240B9FEA368AE7; // 0x1EB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB5[0x3];                                     // 0x1EB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Sacrificial_Dissolve;                              // 0x1EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Inverse_Vignette_Change_Fade_Intensity_F70F19F64AA922A4CB29138BB100C9A7; // 0x1EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Inverse_Vignette__Direction_F70F19F64AA922A4CB29138BB100C9A7; // 0x1EC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC5[0x3];                                     // 0x1EC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Inverse_Vignette;                                  // 0x1EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Mud_7F694474446D78233BCD8BB6FB2C7C20;   // 0x1ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Anim_7F694474446D78233BCD8BB6FB2C7C20;  // 0x1ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_7F694474446D78233BCD8BB6FB2C7C20; // 0x1ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED9[0x7];                                     // 0x1ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x1EE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Hook_Distortion_4F9E48F240E1754FF23D1E8FC864306F;  // 0x1EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hook_Fade_4F9E48F240E1754FF23D1E8FC864306F;        // 0x1EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Hook__Direction_4F9E48F240E1754FF23D1E8FC864306F;  // 0x1EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EF1[0x7];                                     // 0x1EF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Hook;                                              // 0x1EF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        IsTurning;                                         // 0x1F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x1F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSpeedUp;                                         // 0x1F10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F11[0x7];                                     // 0x1F11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Scale;                                             // 0x1F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CurrentTarget;                                     // 0x1F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   RightFootSocket;                                   // 0x1F28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeftFootSocket;                                    // 0x1F34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartingMeshOffset;                                // 0x1F40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootIKEnabled;                                     // 0x1F48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F49[0x7];                                     // 0x1F49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HealRushBloodNormal;                               // 0x1F50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HealRushBloodSocketName;                           // 0x1F68(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HookedCamera;                                      // 0x1F74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Screaming;                                         // 0x1F75(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F76[0x2];                                     // 0x1F76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ScreamingColor;                                    // 0x1F78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScreamingDuration;                                 // 0x1F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScreamingMinDelay;                                 // 0x1F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScreamingMaxDelay;                                 // 0x1F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             Test;                                              // 0x1FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AimPoint;                                          // 0x1FA8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VignetteHasGoneWayBackwards;                       // 0x1FC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HookVignetteHasGoneWayBackwards;                   // 0x1FC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldStartVignetteFadeout;                        // 0x1FC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC3[0x5];                                     // 0x1FC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastHitNormal;                                     // 0x1FC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ChangeMaterial;                                    // 0x1FE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Survivor_Material;                                 // 0x1FE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             Set_Default_Material;                              // 0x1FF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 BasicArrayMaterial;                                // 0x2008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsInDreamworldVFX;                                 // 0x2018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBodyVisible;                                     // 0x2019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201A[0x6];                                     // 0x201A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Deep_Wound_VFX_;                             // 0x2020(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Deep_Wound_Alpha;                              // 0x2028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABWEffect_C*                            DeepWoundEffect;                                   // 0x2030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSet<class UParticleSystemComponent*>         HookVignettes;                                     // 0x2038(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class UParticleSystemComponent*>         MudVignettes;                                      // 0x2088(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               PP_Stalking;                                       // 0x20D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_RadialBlur;                                     // 0x20E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Vignette_Dream;                                 // 0x20E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Vignette_DreamDistort;                          // 0x20F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   AudioEmitterAttachmentJoint;                       // 0x20F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2104[0x4];                                     // 0x2104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PP_Chase;                                          // 0x2108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Vignette_Basic;                                 // 0x2110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Vignette_Vomit;                                 // 0x2118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Vignette_Red;                                   // 0x2120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     WB_Vignette_Red;                                   // 0x2128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     WE_VignetteBasic;                                  // 0x2138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UMaterialInstanceDynamic*               PP_Flashlight;                                     // 0x2148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_BloodVignette_Gesture;                          // 0x2150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     WB_BloodVignette_Gesture;                          // 0x2158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UParticleSystemComponent*               BleedEffect;                                       // 0x2168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DOF_Focus_Point;                                   // 0x2170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLineNumber;                                 // 0x2178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x2180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2181[0x7];                                     // 0x2181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Test_Affectation;                                  // 0x2188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_K24_ContaminationSurvivor;                      // 0x2190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_K25_Power_Active;                               // 0x2198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     Teleport_WeightedBlendable;                        // 0x21A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          WasKO_;                                            // 0x21B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHooked_;                                         // 0x21B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead_;                                           // 0x21B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInBoonTotemRadius;                               // 0x21B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B4[0x4];                                     // 0x21B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Infection_Progress;                                // 0x21B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasCritical;                                       // 0x21C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasInfectionActive;                                // 0x21C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C2[0x6];                                     // 0x21C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K29MinOpacity;                                     // 0x21C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K29ContaminationLevel;                             // 0x21D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Infected_System_Camper;                            // 0x21D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDBDTunableRowHandle                   K29_Safe_Mode;                                     // 0x21E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystemComponent*               Infected_Particle_Camper;                          // 0x2208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               K29_SafeInfectedParticles;                         // 0x2210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenFullyInfected_;                             // 0x2218(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2219[0x7];                                     // 0x2219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              NS_Infected_Meshes;                                // 0x2220(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        K29MaxOpacity;                                     // 0x2230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K29MinStainSize;                                   // 0x2238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K29MaxStainSize;                                   // 0x2240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_K29_Infection;                                  // 0x2248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_K30_SurvivorNoticed;                            // 0x2250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_K30_Hunted;                                     // 0x2258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       HookVignettes_Array;                               // 0x2260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UObject*                                AntiCampWidget;                                    // 0x2270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_BloodTrail;                                    // 0x2278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        FakeShadowComponent;                               // 0x2280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Activate_Deep_Wound_FX();
	void ActivateAttemptEscapeVFX();
	void ActivateEndGameVignette(bool IsActive);
	void ActivateFakeShadow(bool Activated);
	void ActivateKnockoutVFX();
	void ActivateLocalPlayerExposedVFX();
	void ActivatePlayerExposedVFX();
	void ActivatePlayerGlitchVFX(const class UMaterialInstanceDynamic*& GlitchFX, const bool Face, bool Madness, bool Killer);
	void ActivatePlayerLightningVFX(const class UMaterialInstanceDynamic*& LightningFX, bool Intense);
	void ActivatePounceStateVFX();
	void ActivateSacrificeCamBlood();
	void ActivateVignette_Blood();
	void ActivateVignette_Hook(bool Hooked);
	void ActivateVignetteOnWallCollision();
	void AddBloodDecalToGK_Mori();
	void AddBloodDrippingGKMoriMale();
	void AddBloodDrippingToGK_Mori();
	void AddBloodDropsToLeftHand();
	void AddBloodDropsToRightHand();
	void AddBloodOnCamper();
	void AddFakeShadow();
	void AddMoriVomitStain();
	void AddVomitDecal();
	void AddVomitStain();
	double AdjustAngleValue(double Angle);
	void AestheticOnBeingHealedSkillCheckResponse(bool Success, bool Bonus, class ADBDPlayer* Healing_Player);
	void AnimateLiquidSyringe();
	void AuthorityOnBeingHealedSkillCheckResponse(bool Sucess, bool Bonus, class ADBDPlayer* Healing_Player, ESkillCheckCustomType Custom_Skill_Check_Type);
	void BloodVignetteFrame__FinishedFunc();
	void BloodVignetteFrame__UpdateFunc();
	void BloodVignetteOpacity__FinishedFunc();
	void BloodVignetteOpacity__UpdateFunc();
	void BloodVignetteSlashes_Opacity__FinishedFunc();
	void BloodVignetteSlashes_Opacity__UpdateFunc();
	void BndEvt___characterChaseVisualComponent_K2Node_ComponentBoundEvent_0_ActorComponentChaseStartSignature__DelegateSignature();
	void BndEvt___characterChaseVisualComponent_K2Node_ComponentBoundEvent_1_ActorComponentChaseEndSignature__DelegateSignature();
	void BndEvt___healthComponent_K2Node_ComponentBoundEvent_0_InjuredBleedoutDelegate__DelegateSignature();
	void BndEvt___healthComponent_K2Node_ComponentBoundEvent_0_OnDamageStateChanged__DelegateSignature(ECamperDamageState OldDamageState, ECamperDamageState NewDamageState);
	void BndEvt___healthComponent_K2Node_ComponentBoundEvent_1_OnDamageStateChangedCosmetic__DelegateSignature();
	void BndEvt___healthComponent_K2Node_ComponentBoundEvent_2_InjuredBleedoutDelegate__DelegateSignature();
	void BndEvt___hpSlot01_K2Node_ComponentBoundEvent_162_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt___hpSlot01_K2Node_ComponentBoundEvent_196_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt___hpSlot02_K2Node_ComponentBoundEvent_167_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt___hpSlot02_K2Node_ComponentBoundEvent_201_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt__BP_Camper_Character__hookableComponent_K2Node_ComponentBoundEvent_4_OnDrainStateChangeFX__DelegateSignature(int32 DrainState);
	void BndEvt__BP_Camper_Character__screamComponent_K2Node_ComponentBoundEvent_6_ScreamRevealOwner__DelegateSignature(const float ScreamRevealDuration, const bool SpawnBubbleIndicator);
	void BndEvt__BP_Camper_Character_WiggleComponent_K2Node_ComponentBoundEvent_0_BlueprintAudioEvent__DelegateSignature();
	void BndEvt__BP_Camper_Character_WiggleComponent_K2Node_ComponentBoundEvent_3_BlueprintAudioEvent__DelegateSignature();
	void Boon_Unbound();
	void Camper_AntidoteBoostVignette_End();
	void Camper_AntidoteBoostVignette_Start();
	void CK_StartSacrificeDissolve();
	void Compound33Control__FinishedFunc();
	void Compound33Control__UpdateFunc();
	void CreateCameraModeOnSocket(class UClass* CameraClass, EDBDCameraSocketID CameraMode);
	void DBD_SetSurvivorCameraArmLength(float CameraArmLength);
	void Deactivate_Deep_Wound_FX();
	void DeactivateKnockoutVFX();
	void DebugInteractionPriority(EInputInteractionType InteractionType, const struct FLinearColor& Color, double ZOffset);
	void DecalBlood_Puddles();
	void Deep_Wound_FX_Fade__FinishedFunc();
	void Deep_Wound_FX_Fade__UpdateFunc();
	void Destroy_Blood_Orb();
	void DisableDemonMode();
	void Dissolve(bool Param_Dissolve);
	void DoSacrificialDissolve();
	void Event_on_Execution();
	void EventOnDeath();
	void ExecuteUbergraph_BP_Camper_Character(int32 EntryPoint);
	void FXCamper_Vignette_Mud();
	void GetBasementPost(ELightingInterfaceEnum* BP_Type, struct FDBDPerPlatformFloat* Override);
	void GetBloodDecalSpawnDelay(double* Delay);
	void GetCondemnedStatusVignetteIntensity(ELightingInterfaceEnum* BP_Type, double* CondemnedStatusIntensityOverride);
	void GetDetectionZoneIntensity(ELightingInterfaceEnum* BP_Type, double* DetectionZoneCylinderIntensityOverride, double* DetectionZoneDecalIntensityOverride);
	void GetLightingPost(TArray<class UPostProcessComponent*>* PostProcess, ELightingInterfaceEnum* BP_Type);
	void GetScoreEventByHeal(bool IsSelfHealing, const struct FGameplayTag& HealOther, const struct FGameplayTag& HealSelf, struct FGameplayTag* ScoreEvent);
	void GoToAddMoriVomitStain();
	void GoToAddVomitDecal();
	void HandleDreamStateChangedVFX(bool IsInDreamworld, bool LocallyObservedChanged);
	void Hide_Oni_Katana();
	void Hide_Oni_Katana_TPV();
	void HideDemonCosmetic();
	void HideGunBullet();
	void HideProps();
	void HideSyringe();
	void HideSyringeOnStun();
	void Hook__FinishedFunc();
	void Hook__UpdateFunc();
	void Initialize_Blinding_FX_Component();
	void InitializeActorClipper();
	void Interact();
	void Inverse_Vignette__FinishedFunc();
	void Inverse_Vignette__UpdateFunc();
	void K04_InvisibleOff();
	void K04_InvisibleOn();
	void K04_TelekinesisOff();
	void K04_TelekinesisOn();
	void K05_BloodDrops();
	void K05_SetTrap();
	void K05_TrapImpact();
	void K05_TrapImpactOff();
	void K08_FX_MakeGutsDisappear();
	void K08_FX_MakeHatchetAppear();
	void K08_FX_MakeHatchetDisappear();
	void K08_FX_SpawnBloodTrail();
	void K12_GetAntidoteVignette();
	void K12_GetToxinVignette(EBombType Bomb_Type);
	void K12_Killer_AntidoteBegin();
	void K12_Killer_AntidoteEnd();
	void K12_Killer_BombSmokeColor();
	void K12_Killer_PlaceVignette();
	void K12_Killer_RemoveVignette();
	void K22_AttachedToSurvivor_VFX();
	void K22_BabyBloodDissolve();
	void K22_BabyRespawn();
	void K22_BrotherDissolveLocker();
	void K22_DetachedFromSurvivor_VFX();
	void K22_DormantAttachedSlasher();
	void K22_HighlightDormant(bool IsDormant_);
	void K22_HighlightDormantMain(bool IsDormantMain_);
	void K22_HighlightMissJump();
	void K22_HighlightMissJump_Stop();
	void K22_HighlightSuccessfulAttack();
	void K22_HighlightSuccessfulAttackStop();
	void K22_IsAttachedLocker(bool IsAttachedLocker);
	void K22_Jump_Active();
	void K22_Jump_Inactive();
	void K22_JumpTrail_Activate();
	void K22_JumpTrail_Deactivate();
	void K22_MembraneDelete();
	void K22_MembraneRecovery();
	void K22_QuickDissolveBrother();
	void K22_ReleaseBrother();
	void K22_SpawnWipeVFX();
	void K22_WrongLanding(bool Wrong_Landing);
	void K22_WrongLandingVignette(bool WrongLanding);
	void K24_AddContamination_OnSurvivor();
	void K24_BaseAttack_Wipe();
	void K24_BaseAttack_Wipe_FPV();
	void K24_BreakWall_SpawnDecal();
	void K24_Mori_SpawnDecal();
	void K24_Mori_TentacleLiquid();
	void K24_Mori_TentacleLiquid_Stop();
	void K24_RemoveContamination_OnSurvivor();
	void K24_TentacleWhipReleaseLiquid();
	void K25_OnChainHuntEnded();
	void K25_OnChainHuntStarted();
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void Killer_LungeAttack_End();
	void Killer_LungeAttack_Start();
	void MakeCamperDisappear();
	void MakeCamperDisappearBleedOut();
	void On_Execution();
	void OnHookedStateChangedCosmetic(bool Hooked);
	void OnHookEscapeFailedCosmetic_ActivateVFX();
	void OnInjuredBleedoutKO(class ADBDPlayer* InjuredBleedoutInstigator);
	void OnInterruptedStart();
	void OnIntroCompleted();
	void OnLevelReadyToPlay();
	void OnLocallyObservedChanged();
	void OnRangedExplosiveInRangeBegin(const struct FRangedExplosiveEffectData& EffectData);
	void OnScreamingEnd();
	void OnScreamingStart();
	void OnWiggleEnd();
	void OnWiggleStart();
	void ReceiveBeginPlay();
	void RefreshVignettes();
	void Remove_Dream_PostProcess();
	void RemoveReverseBearTrap();
	void RemoveVomitStain();
	void ReturnOniToNormal();
	void ReturnToDemonMode();
	void Sacrificial_Dissolve__FinishedFunc();
	void Sacrificial_Dissolve__UpdateFunc();
	void SetCameraSocketId(EDBDCameraSocketID SocketId, bool HideVignette, bool HideVignetteHook);
	void SetHighlightedVFX();
	void SetOpacityOnAllMaterials(double Value);
	void SetPlayerExposedVFX();
	void SetPostOverride(const struct FPostProcessSettings& PostSettings, class UPostProcessComponent* PostProcess);
	void SetVignetteVisible(bool Visible);
	void ShouldUseFakeShadow(bool* UseFakeShadow);
	void Show_Oni_Katana();
	void ShowDemonCosmetic();
	void ShowGunBullet();
	void ShowProps();
	void ShowSyringe();
	void SpawnFakeBullet();
	void SpawnFullScreenBlood();
	void Start_Pounce_VFX();
	void Start_Saliva_VFX();
	void Start_Travelling_Dissolve();
	void Start_Travelling_PP();
	void StartCompound33Vignette();
	void StartDeathBedDissolve();
	void StartDeathBedRelocateVignette();
	void StartEndGameDissolve();
	void Stop_Pounce_VFX();
	void Stop_Saliva_VFX();
	void Stop_Travelling_Dissolve();
	void Stop_Travelling_PP();
	void Stop_AddPoisonedLiquid();
	void Stop_RemovedPoisonedLiquid();
	void StopCompound33Event();
	void StruggleSkillCheck(bool HadInput, bool Success, bool Bonus, ESkillCheckCustomType Type);
	void Survivor_BoonRadius_Enter();
	void Survivor_BoonRadius_Exit();
	void SurvivorDissolve(bool ShouldDissolve, float TimeToDissolve);
	void SurvivorDissolveTML__FinishedFunc();
	void SurvivorDissolveTML__UpdateFunc();
	void Switch_Kanobo_To_Demon_Mode();
	void Switch_Kanobo_to_Normal_Mode();
	void Switch_Oni_Weapons_To_Normal();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void Timeline_2__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void TML_AddPoisonedLiquid__FinishedFunc();
	void TML_AddPoisonedLiquid__UpdateFunc();
	void TML_BoonVignetteController__FinishedFunc();
	void TML_BoonVignetteController__UpdateFunc();
	void TML_CK_Sacrifice__FinishedFunc();
	void TML_CK_Sacrifice__UpdateFunc();
	void TML_DeathBed_Vignette__FinishedFunc();
	void TML_DeathBed_Vignette__UpdateFunc();
	void TML_DissolveEndGame__FinishedFunc();
	void TML_DissolveEndGame__UpdateFunc();
	void TML_EndGameDissolve__Claw_Trap__EventFunc();
	void TML_EndGameDissolve__FinishedFunc();
	void TML_EndGameDissolve__UpdateFunc();
	void TML_Exposed_RadialBlur__FinishedFunc();
	void TML_Exposed_RadialBlur__UpdateFunc();
	void TML_ExposedVFX__FinishedFunc();
	void TML_ExposedVFX__UpdateFunc();
	void TML_K24_ContaminatedSurvivor__FinishedFunc();
	void TML_K24_ContaminatedSurvivor__UpdateFunc();
	void TML_K25_Power__FinishedFunc();
	void TML_K25_Power__UpdateFunc();
	void TML_Mori_DecalVomit__FinishedFunc();
	void TML_Mori_DecalVomit__UpdateFunc();
	void TML_Mori_VomitStain__FinishedFunc();
	void TML_Mori_VomitStain__UpdateFunc();
	void TML_RemovePoisonedLiquid__FinishedFunc();
	void TML_RemovePoisonedLiquid__UpdateFunc();
	void TML_Vignette_knockout__FinishedFunc();
	void TML_Vignette_knockout__UpdateFunc();
	void TML_VomitStain__FinishedFunc();
	void TML_VomitStain__UpdateFunc();
	void TriggerBloodAudio();
	void Update_Survivor_Material_Setting_for_General_Dissolve();
	void UpdateDeepWoundFX();
	void UpdateDissolveGradientPosition();
	void UpdateDOF();
	void UserConstructionScript();

	class USceneComponent* GetAttachPoint(class FName AttachPointName) const;
	class UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh() const;
	class FString GetSurfaceName(class UPhysicalMaterial* PhysicMat) const;
	class UChargeableComponent* GetWiggleChargeable() const;
	void IsOperatingLocker(bool* Return_Value) const;
	void IsSabotageBlocked(bool* Return_Value) const;
	bool IsVaulting() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Camper_Character_C">();
	}
	static class ABP_Camper_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Camper_Character_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Camper_Character_C) == 0x000010, "Wrong alignment on ABP_Camper_Character_C");
static_assert(sizeof(ABP_Camper_Character_C) == 0x002290, "Wrong size on ABP_Camper_Character_C");
static_assert(offsetof(ABP_Camper_Character_C, UberGraphFrame) == 0x001A10, "Member 'ABP_Camper_Character_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorBoundOptimizer) == 0x001A18, "Member 'ABP_Camper_Character_C::SurvivorBoundOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, RangedExplosiveEffectHandler) == 0x001A20, "Member 'ABP_Camper_Character_C::RangedExplosiveEffectHandler' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_AntiCampSelfUnhookComponent) == 0x001A28, "Member 'ABP_Camper_Character_C::BP_AntiCampSelfUnhookComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_Audio_SVR_Base) == 0x001A30, "Member 'ABP_Camper_Character_C::BP_Audio_SVR_Base' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PlayerAnimationLayerManager) == 0x001A38, "Member 'ABP_Camper_Character_C::PlayerAnimationLayerManager' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TerrorRadiusHeart) == 0x001A40, "Member 'ABP_Camper_Character_C::TerrorRadiusHeart' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_SurvivorLullabyFeedBackComponent) == 0x001A48, "Member 'ABP_Camper_Character_C::BP_SurvivorLullabyFeedBackComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CamperFootstepCreatorComponent) == 0x001A50, "Member 'ABP_Camper_Character_C::CamperFootstepCreatorComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CamperFootstepPerceptionComponent) == 0x001A58, "Member 'ABP_Camper_Character_C::CamperFootstepPerceptionComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, NP_KillerInstinct) == 0x001A60, "Member 'ABP_Camper_Character_C::NP_KillerInstinct' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SignificanceManager) == 0x001A68, "Member 'ABP_Camper_Character_C::SignificanceManager' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TerrorRadiusBPM) == 0x001A70, "Member 'ABP_Camper_Character_C::TerrorRadiusBPM' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TerrorRadiusAudioFeedback) == 0x001A78, "Member 'ABP_Camper_Character_C::TerrorRadiusAudioFeedback' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TerrorRadiusReceiver) == 0x001A80, "Member 'ABP_Camper_Character_C::TerrorRadiusReceiver' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, KillerInstinctComponent) == 0x001A88, "Member 'ABP_Camper_Character_C::KillerInstinctComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, KillerSpecificSurvivorAnimationPicker) == 0x001A90, "Member 'ABP_Camper_Character_C::KillerSpecificSurvivorAnimationPicker' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_SurvivorActivityIndicatorComponent) == 0x001A98, "Member 'ABP_Camper_Character_C::BP_SurvivorActivityIndicatorComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BPNearestOutsideMapBoundsLocator) == 0x001AA0, "Member 'ABP_Camper_Character_C::BPNearestOutsideMapBoundsLocator' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorAudioHandler) == 0x001AA8, "Member 'ABP_Camper_Character_C::SurvivorAudioHandler' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PlayerHookAnalytics) == 0x001AB0, "Member 'ABP_Camper_Character_C::PlayerHookAnalytics' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorCosmeticHelperSpawnerComponent) == 0x001AB8, "Member 'ABP_Camper_Character_C::SurvivorCosmeticHelperSpawnerComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorBloodVFX) == 0x001AC0, "Member 'ABP_Camper_Character_C::SurvivorBloodVFX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CameraOffsetController) == 0x001AC8, "Member 'ABP_Camper_Character_C::CameraOffsetController' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WiggleFree) == 0x001AD0, "Member 'ABP_Camper_Character_C::WiggleFree' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, UnhookReplicationComponent) == 0x001AD8, "Member 'ABP_Camper_Character_C::UnhookReplicationComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PositionLagCompensation) == 0x001AE0, "Member 'ABP_Camper_Character_C::PositionLagCompensation' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CharacterOptimizer) == 0x001AE8, "Member 'ABP_Camper_Character_C::CharacterOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorAimState) == 0x001AF0, "Member 'ABP_Camper_Character_C::SurvivorAimState' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, StruggleComponent) == 0x001AF8, "Member 'ABP_Camper_Character_C::StruggleComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WiggleComponent) == 0x001B00, "Member 'ABP_Camper_Character_C::WiggleComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, UnhookedSurvivorTracker) == 0x001B08, "Member 'ABP_Camper_Character_C::UnhookedSurvivorTracker' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Ethereal) == 0x001B10, "Member 'ABP_Camper_Character_C::Ethereal' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, InteractionAnalytics) == 0x001B18, "Member 'ABP_Camper_Character_C::InteractionAnalytics' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BlindingFX) == 0x001B20, "Member 'ABP_Camper_Character_C::BlindingFX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorAimableArmSensor) == 0x001B28, "Member 'ABP_Camper_Character_C::SurvivorAimableArmSensor' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Ak_Audio_Survivor_AttenuationScaling) == 0x001B30, "Member 'ABP_Camper_Character_C::Ak_Audio_Survivor_AttenuationScaling' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_ItemChestComponent) == 0x001B38, "Member 'ABP_Camper_Character_C::BP_ItemChestComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_GeneratorRepairComponent) == 0x001B40, "Member 'ABP_Camper_Character_C::BP_GeneratorRepairComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, RightFootGroundDetector) == 0x001B48, "Member 'ABP_Camper_Character_C::RightFootGroundDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, LeftFootGroundDetector) == 0x001B50, "Member 'ABP_Camper_Character_C::LeftFootGroundDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, RedGlowAttach) == 0x001B58, "Member 'ABP_Camper_Character_C::RedGlowAttach' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Ak_Audio_Survivor_NoOcclusion) == 0x001B60, "Member 'ABP_Camper_Character_C::Ak_Audio_Survivor_NoOcclusion' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, QuestEventsHandler) == 0x001B68, "Member 'ABP_Camper_Character_C::QuestEventsHandler' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, EndGameEffectsComponent) == 0x001B70, "Member 'ABP_Camper_Character_C::EndGameEffectsComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Master) == 0x001B78, "Member 'ABP_Camper_Character_C::PP_Master' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PawnDetector) == 0x001B80, "Member 'ABP_Camper_Character_C::PawnDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_Vignette_EndGame) == 0x001B88, "Member 'ABP_Camper_Character_C::P_Vignette_EndGame' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreenSpaceLocation_MiddleT) == 0x001B90, "Member 'ABP_Camper_Character_C::ScreenSpaceLocation_MiddleT' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CrawlingOverlapDetector) == 0x001B98, "Member 'ABP_Camper_Character_C::CrawlingOverlapDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_Screen_DeepWound) == 0x001BA0, "Member 'ABP_Camper_Character_C::P_Screen_DeepWound' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, AudioAmbientDetector) == 0x001BA8, "Member 'ABP_Camper_Character_C::AudioAmbientDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BlindedPostProcess) == 0x001BB0, "Member 'ABP_Camper_Character_C::BlindedPostProcess' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CamClip) == 0x001BB8, "Member 'ABP_Camper_Character_C::CamClip' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_FullscreenBlood) == 0x001BC0, "Member 'ABP_Camper_Character_C::P_FullscreenBlood' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Vignette) == 0x001BC8, "Member 'ABP_Camper_Character_C::Vignette' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CameraFX) == 0x001BD0, "Member 'ABP_Camper_Character_C::CameraFX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CustomizedAudio) == 0x001BD8, "Member 'ABP_Camper_Character_C::CustomizedAudio' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorOutlineUpdateStrategy) == 0x001BE0, "Member 'ABP_Camper_Character_C::SurvivorOutlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_Dream_Embers) == 0x001BE8, "Member 'ABP_Camper_Character_C::P_Dream_Embers' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CameraAnchorComponent) == 0x001BF0, "Member 'ABP_Camper_Character_C::CameraAnchorComponent' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BodyCameraClipper) == 0x001BF8, "Member 'ABP_Camper_Character_C::BodyCameraClipper' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HeadCameraClipper) == 0x001C00, "Member 'ABP_Camper_Character_C::HeadCameraClipper' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteHook_LeftT) == 0x001C08, "Member 'ABP_Camper_Character_C::P_VignetteHook_LeftT' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreenSpaceLocation_LeftT) == 0x001C10, "Member 'ABP_Camper_Character_C::ScreenSpaceLocation_LeftT' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteMud_RightB) == 0x001C18, "Member 'ABP_Camper_Character_C::P_VignetteMud_RightB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_Vignette_RightB) == 0x001C20, "Member 'ABP_Camper_Character_C::P_Vignette_RightB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteHook_RightB) == 0x001C28, "Member 'ABP_Camper_Character_C::P_VignetteHook_RightB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreenSpaceLocation_RightB) == 0x001C30, "Member 'ABP_Camper_Character_C::ScreenSpaceLocation_RightB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteHook_RightT) == 0x001C38, "Member 'ABP_Camper_Character_C::P_VignetteHook_RightT' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreenSpaceLocation_RightT) == 0x001C40, "Member 'ABP_Camper_Character_C::ScreenSpaceLocation_RightT' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteMud_LeftB) == 0x001C48, "Member 'ABP_Camper_Character_C::P_VignetteMud_LeftB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_Vignette_LeftB) == 0x001C50, "Member 'ABP_Camper_Character_C::P_Vignette_LeftB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, P_VignetteHook_LeftB) == 0x001C58, "Member 'ABP_Camper_Character_C::P_VignetteHook_LeftB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreenSpaceLocation_LeftB) == 0x001C60, "Member 'ABP_Camper_Character_C::ScreenSpaceLocation_LeftB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, StraightCam) == 0x001C68, "Member 'ABP_Camper_Character_C::StraightCam' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, DBDSpringArm) == 0x001C70, "Member 'ABP_Camper_Character_C::DBDSpringArm' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, StalkedCharge) == 0x001C78, "Member 'ABP_Camper_Character_C::StalkedCharge' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, FX) == 0x001C80, "Member 'ABP_Camper_Character_C::FX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Ak_Audio_Survivor) == 0x001C88, "Member 'ABP_Camper_Character_C::Ak_Audio_Survivor' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, InteractionDetector) == 0x001C90, "Member 'ABP_Camper_Character_C::InteractionDetector' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ActorClipper) == 0x001C98, "Member 'ABP_Camper_Character_C::ActorClipper' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, DBDOutline) == 0x001CA0, "Member 'ABP_Camper_Character_C::DBDOutline' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CustomizedSkeletalMesh) == 0x001CA8, "Member 'ABP_Camper_Character_C::CustomizedSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, MontageFollower) == 0x001CB0, "Member 'ABP_Camper_Character_C::MontageFollower' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_CamperTakenByEntity) == 0x001CB8, "Member 'ABP_Camper_Character_C::BP_CamperTakenByEntity' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BP_Mesh2SoundPlayer) == 0x001CC0, "Member 'ABP_Camper_Character_C::BP_Mesh2SoundPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorDissolveTML_DissolveProgress_AAD5B56545F13B7A96CD56B9B012D1FC) == 0x001CC8, "Member 'ABP_Camper_Character_C::SurvivorDissolveTML_DissolveProgress_AAD5B56545F13B7A96CD56B9B012D1FC' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorDissolveTML__Direction_AAD5B56545F13B7A96CD56B9B012D1FC) == 0x001CCC, "Member 'ABP_Camper_Character_C::SurvivorDissolveTML__Direction_AAD5B56545F13B7A96CD56B9B012D1FC' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, SurvivorDissolveTML) == 0x001CD0, "Member 'ABP_Camper_Character_C::SurvivorDissolveTML' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_NewTrack_0_3CF391714CED7FE94311D48D246D3E0F) == 0x001CD8, "Member 'ABP_Camper_Character_C::Timeline_NewTrack_0_3CF391714CED7FE94311D48D246D3E0F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline__Direction_3CF391714CED7FE94311D48D246D3E0F) == 0x001CDC, "Member 'ABP_Camper_Character_C::Timeline__Direction_3CF391714CED7FE94311D48D246D3E0F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline) == 0x001CE0, "Member 'ABP_Camper_Character_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_BoonVignetteController_Vignette_Intensity_573FB59D4BA198983B3993870F2BE359) == 0x001CE8, "Member 'ABP_Camper_Character_C::TML_BoonVignetteController_Vignette_Intensity_573FB59D4BA198983B3993870F2BE359' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_BoonVignetteController__Direction_573FB59D4BA198983B3993870F2BE359) == 0x001CEC, "Member 'ABP_Camper_Character_C::TML_BoonVignetteController__Direction_573FB59D4BA198983B3993870F2BE359' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_BoonVignetteController) == 0x001CF0, "Member 'ABP_Camper_Character_C::TML_BoonVignetteController' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power_Outline_Erode_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001CF8, "Member 'ABP_Camper_Character_C::TML_K25_Power_Outline_Erode_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power_Offset_Chain_01_Y_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001CFC, "Member 'ABP_Camper_Character_C::TML_K25_Power_Offset_Chain_01_Y_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power_Offset_Chain_01_X_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001D00, "Member 'ABP_Camper_Character_C::TML_K25_Power_Offset_Chain_01_X_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power_Offset_Chain_02_Y_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001D04, "Member 'ABP_Camper_Character_C::TML_K25_Power_Offset_Chain_02_Y_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power_Offset_Chain_02_X_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001D08, "Member 'ABP_Camper_Character_C::TML_K25_Power_Offset_Chain_02_X_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power__Direction_D5A60533436D1F5C51FAE49F9E4D2AE3) == 0x001D0C, "Member 'ABP_Camper_Character_C::TML_K25_Power__Direction_D5A60533436D1F5C51FAE49F9E4D2AE3' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K25_Power) == 0x001D10, "Member 'ABP_Camper_Character_C::TML_K25_Power' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_RemovePoisonedLiquid_Stain_Size_C6FBE028499C10A75CF180B28DD864CB) == 0x001D18, "Member 'ABP_Camper_Character_C::TML_RemovePoisonedLiquid_Stain_Size_C6FBE028499C10A75CF180B28DD864CB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_RemovePoisonedLiquid_Opacity_C6FBE028499C10A75CF180B28DD864CB) == 0x001D1C, "Member 'ABP_Camper_Character_C::TML_RemovePoisonedLiquid_Opacity_C6FBE028499C10A75CF180B28DD864CB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_RemovePoisonedLiquid__Direction_C6FBE028499C10A75CF180B28DD864CB) == 0x001D20, "Member 'ABP_Camper_Character_C::TML_RemovePoisonedLiquid__Direction_C6FBE028499C10A75CF180B28DD864CB' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_RemovePoisonedLiquid) == 0x001D28, "Member 'ABP_Camper_Character_C::TML_RemovePoisonedLiquid' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_AddPoisonedLiquid_Stain_Size_3610ADF64F0559C3CFFB0F9D40F9ABDE) == 0x001D30, "Member 'ABP_Camper_Character_C::TML_AddPoisonedLiquid_Stain_Size_3610ADF64F0559C3CFFB0F9D40F9ABDE' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_AddPoisonedLiquid_Opacity_3610ADF64F0559C3CFFB0F9D40F9ABDE) == 0x001D34, "Member 'ABP_Camper_Character_C::TML_AddPoisonedLiquid_Opacity_3610ADF64F0559C3CFFB0F9D40F9ABDE' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_AddPoisonedLiquid__Direction_3610ADF64F0559C3CFFB0F9D40F9ABDE) == 0x001D38, "Member 'ABP_Camper_Character_C::TML_AddPoisonedLiquid__Direction_3610ADF64F0559C3CFFB0F9D40F9ABDE' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_AddPoisonedLiquid) == 0x001D40, "Member 'ABP_Camper_Character_C::TML_AddPoisonedLiquid' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K24_ContaminatedSurvivor_Opacity_ContaminationLiquid_E1A3DBAA4B9D071DD95680858CBDE97B) == 0x001D48, "Member 'ABP_Camper_Character_C::TML_K24_ContaminatedSurvivor_Opacity_ContaminationLiquid_E1A3DBAA4B9D071DD95680858CBDE97B' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K24_ContaminatedSurvivor_Contamination_Level_E1A3DBAA4B9D071DD95680858CBDE97B) == 0x001D4C, "Member 'ABP_Camper_Character_C::TML_K24_ContaminatedSurvivor_Contamination_Level_E1A3DBAA4B9D071DD95680858CBDE97B' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K24_ContaminatedSurvivor__Direction_E1A3DBAA4B9D071DD95680858CBDE97B) == 0x001D50, "Member 'ABP_Camper_Character_C::TML_K24_ContaminatedSurvivor__Direction_E1A3DBAA4B9D071DD95680858CBDE97B' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_K24_ContaminatedSurvivor) == 0x001D58, "Member 'ABP_Camper_Character_C::TML_K24_ContaminatedSurvivor' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DissolveEndGame_Dissolve_9A491AD74FDDC060E58CA99A393FF30A) == 0x001D60, "Member 'ABP_Camper_Character_C::TML_DissolveEndGame_Dissolve_9A491AD74FDDC060E58CA99A393FF30A' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DissolveEndGame__Direction_9A491AD74FDDC060E58CA99A393FF30A) == 0x001D64, "Member 'ABP_Camper_Character_C::TML_DissolveEndGame__Direction_9A491AD74FDDC060E58CA99A393FF30A' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DissolveEndGame) == 0x001D68, "Member 'ABP_Camper_Character_C::TML_DissolveEndGame' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Compound33Control_MaskRadiusControl_CC5CDD81434161CE9181AA8D47DDEB3D) == 0x001D70, "Member 'ABP_Camper_Character_C::Compound33Control_MaskRadiusControl_CC5CDD81434161CE9181AA8D47DDEB3D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Compound33Control_VomitOpacityControl_CC5CDD81434161CE9181AA8D47DDEB3D) == 0x001D74, "Member 'ABP_Camper_Character_C::Compound33Control_VomitOpacityControl_CC5CDD81434161CE9181AA8D47DDEB3D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Compound33Control__Direction_CC5CDD81434161CE9181AA8D47DDEB3D) == 0x001D78, "Member 'ABP_Camper_Character_C::Compound33Control__Direction_CC5CDD81434161CE9181AA8D47DDEB3D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Compound33Control) == 0x001D80, "Member 'ABP_Camper_Character_C::Compound33Control' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DeathBed_Vignette_Vignette_70F0A1C345889CD4F24F4E9E73F94A0F) == 0x001D88, "Member 'ABP_Camper_Character_C::TML_DeathBed_Vignette_Vignette_70F0A1C345889CD4F24F4E9E73F94A0F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DeathBed_Vignette__Direction_70F0A1C345889CD4F24F4E9E73F94A0F) == 0x001D8C, "Member 'ABP_Camper_Character_C::TML_DeathBed_Vignette__Direction_70F0A1C345889CD4F24F4E9E73F94A0F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_DeathBed_Vignette) == 0x001D90, "Member 'ABP_Camper_Character_C::TML_DeathBed_Vignette' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Vignette_knockout_Color_vignette_6092700E4946DE9D2D71AD909D54D8AC) == 0x001D98, "Member 'ABP_Camper_Character_C::TML_Vignette_knockout_Color_vignette_6092700E4946DE9D2D71AD909D54D8AC' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Vignette_knockout_BlendWeight_vignette_6092700E4946DE9D2D71AD909D54D8AC) == 0x001DA8, "Member 'ABP_Camper_Character_C::TML_Vignette_knockout_BlendWeight_vignette_6092700E4946DE9D2D71AD909D54D8AC' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Vignette_knockout__Direction_6092700E4946DE9D2D71AD909D54D8AC) == 0x001DAC, "Member 'ABP_Camper_Character_C::TML_Vignette_knockout__Direction_6092700E4946DE9D2D71AD909D54D8AC' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Vignette_knockout) == 0x001DB0, "Member 'ABP_Camper_Character_C::TML_Vignette_knockout' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteSlashes_Opacity_NewTrack_0_E65DDF494C3B029AAA9291A543F2BD22) == 0x001DB8, "Member 'ABP_Camper_Character_C::BloodVignetteSlashes_Opacity_NewTrack_0_E65DDF494C3B029AAA9291A543F2BD22' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteSlashes_Opacity__Direction_E65DDF494C3B029AAA9291A543F2BD22) == 0x001DBC, "Member 'ABP_Camper_Character_C::BloodVignetteSlashes_Opacity__Direction_E65DDF494C3B029AAA9291A543F2BD22' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteSlashes_Opacity) == 0x001DC0, "Member 'ABP_Camper_Character_C::BloodVignetteSlashes_Opacity' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteFrame_NewTrack_0_393794BE44909A1022A1BEA5088038D5) == 0x001DC8, "Member 'ABP_Camper_Character_C::BloodVignetteFrame_NewTrack_0_393794BE44909A1022A1BEA5088038D5' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteFrame__Direction_393794BE44909A1022A1BEA5088038D5) == 0x001DCC, "Member 'ABP_Camper_Character_C::BloodVignetteFrame__Direction_393794BE44909A1022A1BEA5088038D5' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteFrame) == 0x001DD0, "Member 'ABP_Camper_Character_C::BloodVignetteFrame' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteOpacity_NewTrack_0_F1B6CC3249B96E130CB59783B86601DD) == 0x001DD8, "Member 'ABP_Camper_Character_C::BloodVignetteOpacity_NewTrack_0_F1B6CC3249B96E130CB59783B86601DD' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteOpacity__Direction_F1B6CC3249B96E130CB59783B86601DD) == 0x001DDC, "Member 'ABP_Camper_Character_C::BloodVignetteOpacity__Direction_F1B6CC3249B96E130CB59783B86601DD' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BloodVignetteOpacity) == 0x001DE0, "Member 'ABP_Camper_Character_C::BloodVignetteOpacity' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_1_Stain_Size_C6463B0E4860686CA6F0538BD719959A) == 0x001DE8, "Member 'ABP_Camper_Character_C::Timeline_1_Stain_Size_C6463B0E4860686CA6F0538BD719959A' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_1_Opacity_C6463B0E4860686CA6F0538BD719959A) == 0x001DEC, "Member 'ABP_Camper_Character_C::Timeline_1_Opacity_C6463B0E4860686CA6F0538BD719959A' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_1__Direction_C6463B0E4860686CA6F0538BD719959A) == 0x001DF0, "Member 'ABP_Camper_Character_C::Timeline_1__Direction_C6463B0E4860686CA6F0538BD719959A' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_1) == 0x001DF8, "Member 'ABP_Camper_Character_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Exposed_RadialBlur_Stalking_Intensity_2ED4A4274B1232DF9047F69D2335E626) == 0x001E00, "Member 'ABP_Camper_Character_C::TML_Exposed_RadialBlur_Stalking_Intensity_2ED4A4274B1232DF9047F69D2335E626' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Exposed_RadialBlur_Radial_Blur_Intensity_2ED4A4274B1232DF9047F69D2335E626) == 0x001E04, "Member 'ABP_Camper_Character_C::TML_Exposed_RadialBlur_Radial_Blur_Intensity_2ED4A4274B1232DF9047F69D2335E626' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Exposed_RadialBlur__Direction_2ED4A4274B1232DF9047F69D2335E626) == 0x001E08, "Member 'ABP_Camper_Character_C::TML_Exposed_RadialBlur__Direction_2ED4A4274B1232DF9047F69D2335E626' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Exposed_RadialBlur) == 0x001E10, "Member 'ABP_Camper_Character_C::TML_Exposed_RadialBlur' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_ExposedVFX_HighlightIntensity_18B4847E4CA9A589A28019B5185D98BD) == 0x001E18, "Member 'ABP_Camper_Character_C::TML_ExposedVFX_HighlightIntensity_18B4847E4CA9A589A28019B5185D98BD' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_ExposedVFX__Direction_18B4847E4CA9A589A28019B5185D98BD) == 0x001E1C, "Member 'ABP_Camper_Character_C::TML_ExposedVFX__Direction_18B4847E4CA9A589A28019B5185D98BD' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_ExposedVFX) == 0x001E20, "Member 'ABP_Camper_Character_C::TML_ExposedVFX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_CK_Sacrifice_Dissolve_8FFD3C4F4D466EA0588A66A983B6CE4D) == 0x001E28, "Member 'ABP_Camper_Character_C::TML_CK_Sacrifice_Dissolve_8FFD3C4F4D466EA0588A66A983B6CE4D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_CK_Sacrifice__Direction_8FFD3C4F4D466EA0588A66A983B6CE4D) == 0x001E2C, "Member 'ABP_Camper_Character_C::TML_CK_Sacrifice__Direction_8FFD3C4F4D466EA0588A66A983B6CE4D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_CK_Sacrifice) == 0x001E30, "Member 'ABP_Camper_Character_C::TML_CK_Sacrifice' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_EndGameDissolve_Dissolve_76C5278548ED2010324C138A0CCB268B) == 0x001E38, "Member 'ABP_Camper_Character_C::TML_EndGameDissolve_Dissolve_76C5278548ED2010324C138A0CCB268B' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_EndGameDissolve__Direction_76C5278548ED2010324C138A0CCB268B) == 0x001E3C, "Member 'ABP_Camper_Character_C::TML_EndGameDissolve__Direction_76C5278548ED2010324C138A0CCB268B' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_EndGameDissolve) == 0x001E40, "Member 'ABP_Camper_Character_C::TML_EndGameDissolve' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_VomitStain_StainSize_60EAC7124CBCAC21C22DFAA0C3E3EAB2) == 0x001E48, "Member 'ABP_Camper_Character_C::TML_Mori_VomitStain_StainSize_60EAC7124CBCAC21C22DFAA0C3E3EAB2' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_VomitStain_Opacity_60EAC7124CBCAC21C22DFAA0C3E3EAB2) == 0x001E4C, "Member 'ABP_Camper_Character_C::TML_Mori_VomitStain_Opacity_60EAC7124CBCAC21C22DFAA0C3E3EAB2' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_VomitStain__Direction_60EAC7124CBCAC21C22DFAA0C3E3EAB2) == 0x001E50, "Member 'ABP_Camper_Character_C::TML_Mori_VomitStain__Direction_60EAC7124CBCAC21C22DFAA0C3E3EAB2' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_VomitStain) == 0x001E58, "Member 'ABP_Camper_Character_C::TML_Mori_VomitStain' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_DecalVomit_Size_D8D486F048F99B3C700791A2555A7727) == 0x001E60, "Member 'ABP_Camper_Character_C::TML_Mori_DecalVomit_Size_D8D486F048F99B3C700791A2555A7727' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_DecalVomit__Direction_D8D486F048F99B3C700791A2555A7727) == 0x001E78, "Member 'ABP_Camper_Character_C::TML_Mori_DecalVomit__Direction_D8D486F048F99B3C700791A2555A7727' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_Mori_DecalVomit) == 0x001E80, "Member 'ABP_Camper_Character_C::TML_Mori_DecalVomit' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_VomitStain_Stain_Size_C9C93588474515EFA2D8AC8D65A5952D) == 0x001E88, "Member 'ABP_Camper_Character_C::TML_VomitStain_Stain_Size_C9C93588474515EFA2D8AC8D65A5952D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_VomitStain_Opacity_C9C93588474515EFA2D8AC8D65A5952D) == 0x001E8C, "Member 'ABP_Camper_Character_C::TML_VomitStain_Opacity_C9C93588474515EFA2D8AC8D65A5952D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_VomitStain__Direction_C9C93588474515EFA2D8AC8D65A5952D) == 0x001E90, "Member 'ABP_Camper_Character_C::TML_VomitStain__Direction_C9C93588474515EFA2D8AC8D65A5952D' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, TML_VomitStain) == 0x001E98, "Member 'ABP_Camper_Character_C::TML_VomitStain' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Deep_Wound_FX_Fade_Fade_B1BF0470404E681D1B697F9540829671) == 0x001EA0, "Member 'ABP_Camper_Character_C::Deep_Wound_FX_Fade_Fade_B1BF0470404E681D1B697F9540829671' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Deep_Wound_FX_Fade__Direction_B1BF0470404E681D1B697F9540829671) == 0x001EA4, "Member 'ABP_Camper_Character_C::Deep_Wound_FX_Fade__Direction_B1BF0470404E681D1B697F9540829671' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Deep_Wound_FX_Fade) == 0x001EA8, "Member 'ABP_Camper_Character_C::Deep_Wound_FX_Fade' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Sacrificial_Dissolve_Time_8B43EA704A9A378D80240B9FEA368AE7) == 0x001EB0, "Member 'ABP_Camper_Character_C::Sacrificial_Dissolve_Time_8B43EA704A9A378D80240B9FEA368AE7' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Sacrificial_Dissolve__Direction_8B43EA704A9A378D80240B9FEA368AE7) == 0x001EB4, "Member 'ABP_Camper_Character_C::Sacrificial_Dissolve__Direction_8B43EA704A9A378D80240B9FEA368AE7' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Sacrificial_Dissolve) == 0x001EB8, "Member 'ABP_Camper_Character_C::Sacrificial_Dissolve' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Inverse_Vignette_Change_Fade_Intensity_F70F19F64AA922A4CB29138BB100C9A7) == 0x001EC0, "Member 'ABP_Camper_Character_C::Inverse_Vignette_Change_Fade_Intensity_F70F19F64AA922A4CB29138BB100C9A7' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Inverse_Vignette__Direction_F70F19F64AA922A4CB29138BB100C9A7) == 0x001EC4, "Member 'ABP_Camper_Character_C::Inverse_Vignette__Direction_F70F19F64AA922A4CB29138BB100C9A7' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Inverse_Vignette) == 0x001EC8, "Member 'ABP_Camper_Character_C::Inverse_Vignette' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_2_Mud_7F694474446D78233BCD8BB6FB2C7C20) == 0x001ED0, "Member 'ABP_Camper_Character_C::Timeline_2_Mud_7F694474446D78233BCD8BB6FB2C7C20' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_2_Anim_7F694474446D78233BCD8BB6FB2C7C20) == 0x001ED4, "Member 'ABP_Camper_Character_C::Timeline_2_Anim_7F694474446D78233BCD8BB6FB2C7C20' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_2__Direction_7F694474446D78233BCD8BB6FB2C7C20) == 0x001ED8, "Member 'ABP_Camper_Character_C::Timeline_2__Direction_7F694474446D78233BCD8BB6FB2C7C20' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timeline_2) == 0x001EE0, "Member 'ABP_Camper_Character_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Hook_Distortion_4F9E48F240E1754FF23D1E8FC864306F) == 0x001EE8, "Member 'ABP_Camper_Character_C::Hook_Distortion_4F9E48F240E1754FF23D1E8FC864306F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Hook_Fade_4F9E48F240E1754FF23D1E8FC864306F) == 0x001EEC, "Member 'ABP_Camper_Character_C::Hook_Fade_4F9E48F240E1754FF23D1E8FC864306F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Hook__Direction_4F9E48F240E1754FF23D1E8FC864306F) == 0x001EF0, "Member 'ABP_Camper_Character_C::Hook__Direction_4F9E48F240E1754FF23D1E8FC864306F' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Hook) == 0x001EF8, "Member 'ABP_Camper_Character_C::Hook' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsTurning) == 0x001F00, "Member 'ABP_Camper_Character_C::IsTurning' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Result) == 0x001F08, "Member 'ABP_Camper_Character_C::Result' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsSpeedUp) == 0x001F10, "Member 'ABP_Camper_Character_C::IsSpeedUp' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Scale) == 0x001F18, "Member 'ABP_Camper_Character_C::Scale' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CurrentTarget) == 0x001F20, "Member 'ABP_Camper_Character_C::CurrentTarget' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, RightFootSocket) == 0x001F28, "Member 'ABP_Camper_Character_C::RightFootSocket' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, LeftFootSocket) == 0x001F34, "Member 'ABP_Camper_Character_C::LeftFootSocket' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, StartingMeshOffset) == 0x001F40, "Member 'ABP_Camper_Character_C::StartingMeshOffset' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, FootIKEnabled) == 0x001F48, "Member 'ABP_Camper_Character_C::FootIKEnabled' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HealRushBloodNormal) == 0x001F50, "Member 'ABP_Camper_Character_C::HealRushBloodNormal' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HealRushBloodSocketName) == 0x001F68, "Member 'ABP_Camper_Character_C::HealRushBloodSocketName' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HookedCamera) == 0x001F74, "Member 'ABP_Camper_Character_C::HookedCamera' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Screaming) == 0x001F75, "Member 'ABP_Camper_Character_C::Screaming' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreamingColor) == 0x001F78, "Member 'ABP_Camper_Character_C::ScreamingColor' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreamingDuration) == 0x001F88, "Member 'ABP_Camper_Character_C::ScreamingDuration' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreamingMinDelay) == 0x001F90, "Member 'ABP_Camper_Character_C::ScreamingMinDelay' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ScreamingMaxDelay) == 0x001F98, "Member 'ABP_Camper_Character_C::ScreamingMaxDelay' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Test) == 0x001FA0, "Member 'ABP_Camper_Character_C::Test' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, AimPoint) == 0x001FA8, "Member 'ABP_Camper_Character_C::AimPoint' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, VignetteHasGoneWayBackwards) == 0x001FC0, "Member 'ABP_Camper_Character_C::VignetteHasGoneWayBackwards' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HookVignetteHasGoneWayBackwards) == 0x001FC1, "Member 'ABP_Camper_Character_C::HookVignetteHasGoneWayBackwards' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ShouldStartVignetteFadeout) == 0x001FC2, "Member 'ABP_Camper_Character_C::ShouldStartVignetteFadeout' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, LastHitNormal) == 0x001FC8, "Member 'ABP_Camper_Character_C::LastHitNormal' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, ChangeMaterial) == 0x001FE0, "Member 'ABP_Camper_Character_C::ChangeMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Survivor_Material) == 0x001FE8, "Member 'ABP_Camper_Character_C::Survivor_Material' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Set_Default_Material) == 0x001FF8, "Member 'ABP_Camper_Character_C::Set_Default_Material' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BasicArrayMaterial) == 0x002008, "Member 'ABP_Camper_Character_C::BasicArrayMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsInDreamworldVFX) == 0x002018, "Member 'ABP_Camper_Character_C::IsInDreamworldVFX' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsBodyVisible) == 0x002019, "Member 'ABP_Camper_Character_C::IsBodyVisible' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Timer_Deep_Wound_VFX_) == 0x002020, "Member 'ABP_Camper_Character_C::Timer_Deep_Wound_VFX_' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, VFX_Deep_Wound_Alpha) == 0x002028, "Member 'ABP_Camper_Character_C::VFX_Deep_Wound_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, DeepWoundEffect) == 0x002030, "Member 'ABP_Camper_Character_C::DeepWoundEffect' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HookVignettes) == 0x002038, "Member 'ABP_Camper_Character_C::HookVignettes' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, MudVignettes) == 0x002088, "Member 'ABP_Camper_Character_C::MudVignettes' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Stalking) == 0x0020D8, "Member 'ABP_Camper_Character_C::PP_Stalking' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_RadialBlur) == 0x0020E0, "Member 'ABP_Camper_Character_C::PP_RadialBlur' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Vignette_Dream) == 0x0020E8, "Member 'ABP_Camper_Character_C::PP_Vignette_Dream' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Vignette_DreamDistort) == 0x0020F0, "Member 'ABP_Camper_Character_C::PP_Vignette_DreamDistort' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, AudioEmitterAttachmentJoint) == 0x0020F8, "Member 'ABP_Camper_Character_C::AudioEmitterAttachmentJoint' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Chase) == 0x002108, "Member 'ABP_Camper_Character_C::PP_Chase' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Vignette_Basic) == 0x002110, "Member 'ABP_Camper_Character_C::PP_Vignette_Basic' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Vignette_Vomit) == 0x002118, "Member 'ABP_Camper_Character_C::PP_Vignette_Vomit' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Vignette_Red) == 0x002120, "Member 'ABP_Camper_Character_C::PP_Vignette_Red' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WB_Vignette_Red) == 0x002128, "Member 'ABP_Camper_Character_C::WB_Vignette_Red' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WE_VignetteBasic) == 0x002138, "Member 'ABP_Camper_Character_C::WE_VignetteBasic' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_Flashlight) == 0x002148, "Member 'ABP_Camper_Character_C::PP_Flashlight' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_BloodVignette_Gesture) == 0x002150, "Member 'ABP_Camper_Character_C::PP_BloodVignette_Gesture' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WB_BloodVignette_Gesture) == 0x002158, "Member 'ABP_Camper_Character_C::WB_BloodVignette_Gesture' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, BleedEffect) == 0x002168, "Member 'ABP_Camper_Character_C::BleedEffect' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, DOF_Focus_Point) == 0x002170, "Member 'ABP_Camper_Character_C::DOF_Focus_Point' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, CurrentLineNumber) == 0x002178, "Member 'ABP_Camper_Character_C::CurrentLineNumber' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Reverse) == 0x002180, "Member 'ABP_Camper_Character_C::Reverse' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Test_Affectation) == 0x002188, "Member 'ABP_Camper_Character_C::Test_Affectation' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_K24_ContaminationSurvivor) == 0x002190, "Member 'ABP_Camper_Character_C::PP_K24_ContaminationSurvivor' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_K25_Power_Active) == 0x002198, "Member 'ABP_Camper_Character_C::PP_K25_Power_Active' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Teleport_WeightedBlendable) == 0x0021A0, "Member 'ABP_Camper_Character_C::Teleport_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WasKO_) == 0x0021B0, "Member 'ABP_Camper_Character_C::WasKO_' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsHooked_) == 0x0021B1, "Member 'ABP_Camper_Character_C::IsHooked_' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsDead_) == 0x0021B2, "Member 'ABP_Camper_Character_C::IsDead_' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, IsInBoonTotemRadius) == 0x0021B3, "Member 'ABP_Camper_Character_C::IsInBoonTotemRadius' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Infection_Progress) == 0x0021B8, "Member 'ABP_Camper_Character_C::Infection_Progress' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WasCritical) == 0x0021C0, "Member 'ABP_Camper_Character_C::WasCritical' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, WasInfectionActive) == 0x0021C1, "Member 'ABP_Camper_Character_C::WasInfectionActive' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29MinOpacity) == 0x0021C8, "Member 'ABP_Camper_Character_C::K29MinOpacity' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29ContaminationLevel) == 0x0021D0, "Member 'ABP_Camper_Character_C::K29ContaminationLevel' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Infected_System_Camper) == 0x0021D8, "Member 'ABP_Camper_Character_C::Infected_System_Camper' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29_Safe_Mode) == 0x0021E0, "Member 'ABP_Camper_Character_C::K29_Safe_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, Infected_Particle_Camper) == 0x002208, "Member 'ABP_Camper_Character_C::Infected_Particle_Camper' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29_SafeInfectedParticles) == 0x002210, "Member 'ABP_Camper_Character_C::K29_SafeInfectedParticles' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HasBeenFullyInfected_) == 0x002218, "Member 'ABP_Camper_Character_C::HasBeenFullyInfected_' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, NS_Infected_Meshes) == 0x002220, "Member 'ABP_Camper_Character_C::NS_Infected_Meshes' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29MaxOpacity) == 0x002230, "Member 'ABP_Camper_Character_C::K29MaxOpacity' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29MinStainSize) == 0x002238, "Member 'ABP_Camper_Character_C::K29MinStainSize' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, K29MaxStainSize) == 0x002240, "Member 'ABP_Camper_Character_C::K29MaxStainSize' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_K29_Infection) == 0x002248, "Member 'ABP_Camper_Character_C::PP_K29_Infection' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_K30_SurvivorNoticed) == 0x002250, "Member 'ABP_Camper_Character_C::PP_K30_SurvivorNoticed' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, PP_K30_Hunted) == 0x002258, "Member 'ABP_Camper_Character_C::PP_K30_Hunted' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, HookVignettes_Array) == 0x002260, "Member 'ABP_Camper_Character_C::HookVignettes_Array' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, AntiCampWidget) == 0x002270, "Member 'ABP_Camper_Character_C::AntiCampWidget' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, DMI_BloodTrail) == 0x002278, "Member 'ABP_Camper_Character_C::DMI_BloodTrail' has a wrong offset!");
static_assert(offsetof(ABP_Camper_Character_C, FakeShadowComponent) == 0x002280, "Member 'ABP_Camper_Character_C::FakeShadowComponent' has a wrong offset!");

}

