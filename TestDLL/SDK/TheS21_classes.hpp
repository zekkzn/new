#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS21

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS21.ForThePeople
// 0x00C8 (0x04E8 - 0x0420)
class UForThePeople final : public UPerk
{
public:
	uint8                                         Pad_420[0x19];                                     // 0x0420(0x0019)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isHealStartedOnServer;                            // 0x0439(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_43A[0x2];                                      // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _brokenEffectDurations[0x3];                       // 0x043C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _forThePeopleBrokenEffect;                         // 0x0448(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _forThePeopleObsessionEffect;                      // 0x0450(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSecondaryInteractionProperties        _secondaryActionProperties;                        // 0x0458(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_490[0x58];                                     // 0x0490(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_OnActionInputPressedEnded();
	void Multicast_OnHealAbilityUsed(class ACamperPlayer* Healer, class ACamperPlayer* HealTarget, float AmountHealed);
	void OnHealingAbilityUsed(class ACamperPlayer* HealingSurvivor, class ACamperPlayer* HealedSurvivor);
	void Server_OnActionInputPressed();

	float GetBrokenEffectDurationAtLevel() const;
	void OnRep_SetIsHealStartedOnServer() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ForThePeople">();
	}
	static class UForThePeople* GetDefaultObj()
	{
		return GetDefaultObjImpl<UForThePeople>();
	}
};
static_assert(alignof(UForThePeople) == 0x000008, "Wrong alignment on UForThePeople");
static_assert(sizeof(UForThePeople) == 0x0004E8, "Wrong size on UForThePeople");
static_assert(offsetof(UForThePeople, _isHealStartedOnServer) == 0x000439, "Member 'UForThePeople::_isHealStartedOnServer' has a wrong offset!");
static_assert(offsetof(UForThePeople, _brokenEffectDurations) == 0x00043C, "Member 'UForThePeople::_brokenEffectDurations' has a wrong offset!");
static_assert(offsetof(UForThePeople, _forThePeopleBrokenEffect) == 0x000448, "Member 'UForThePeople::_forThePeopleBrokenEffect' has a wrong offset!");
static_assert(offsetof(UForThePeople, _forThePeopleObsessionEffect) == 0x000450, "Member 'UForThePeople::_forThePeopleObsessionEffect' has a wrong offset!");
static_assert(offsetof(UForThePeople, _secondaryActionProperties) == 0x000458, "Member 'UForThePeople::_secondaryActionProperties' has a wrong offset!");

// Class TheS21.OffTheRecord
// 0x0020 (0x0440 - 0x0420)
class UOffTheRecord : public UPerk
{
public:
	float                                         _activationDurationLevels[0x3];                    // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _enduranceEffectClass;                             // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _imposedEnduranceEffect;                           // 0x0438(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	float GetActivationDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OffTheRecord">();
	}
	static class UOffTheRecord* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOffTheRecord>();
	}
};
static_assert(alignof(UOffTheRecord) == 0x000008, "Wrong alignment on UOffTheRecord");
static_assert(sizeof(UOffTheRecord) == 0x000440, "Wrong size on UOffTheRecord");
static_assert(offsetof(UOffTheRecord, _activationDurationLevels) == 0x000420, "Member 'UOffTheRecord::_activationDurationLevels' has a wrong offset!");
static_assert(offsetof(UOffTheRecord, _enduranceEffectClass) == 0x000430, "Member 'UOffTheRecord::_enduranceEffectClass' has a wrong offset!");
static_assert(offsetof(UOffTheRecord, _imposedEnduranceEffect) == 0x000438, "Member 'UOffTheRecord::_imposedEnduranceEffect' has a wrong offset!");

// Class TheS21.RedHerring
// 0x00A8 (0x04C8 - 0x0420)
class URedHerring final : public UPerk
{
public:
	uint8                                         Pad_420[0x68];                                     // 0x0420(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class AGenerator*                             _generatorBeingRepaired;                           // 0x0488(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGenerator*                             _markedGenerator;                                  // 0x0490(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _secondsToActivatePerk;                            // 0x0498(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _loudNoiseTriggeredNotifyTime;                     // 0x049C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _cooldownLevels[0x3];                              // 0x04A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4AC[0x1C];                                     // 0x04AC(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLoudNoiseTriggered();
	void OnRep_MarkedGenerator(class AGenerator* OldMarkedGenerator);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedHerring">();
	}
	static class URedHerring* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedHerring>();
	}
};
static_assert(alignof(URedHerring) == 0x000008, "Wrong alignment on URedHerring");
static_assert(sizeof(URedHerring) == 0x0004C8, "Wrong size on URedHerring");
static_assert(offsetof(URedHerring, _generatorBeingRepaired) == 0x000488, "Member 'URedHerring::_generatorBeingRepaired' has a wrong offset!");
static_assert(offsetof(URedHerring, _markedGenerator) == 0x000490, "Member 'URedHerring::_markedGenerator' has a wrong offset!");
static_assert(offsetof(URedHerring, _secondsToActivatePerk) == 0x000498, "Member 'URedHerring::_secondsToActivatePerk' has a wrong offset!");
static_assert(offsetof(URedHerring, _loudNoiseTriggeredNotifyTime) == 0x00049C, "Member 'URedHerring::_loudNoiseTriggeredNotifyTime' has a wrong offset!");
static_assert(offsetof(URedHerring, _cooldownLevels) == 0x0004A0, "Member 'URedHerring::_cooldownLevels' has a wrong offset!");

// Class TheS21.TestOffTheRecord
// 0x0000 (0x0440 - 0x0440)
class UTestOffTheRecord final : public UOffTheRecord
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TestOffTheRecord">();
	}
	static class UTestOffTheRecord* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestOffTheRecord>();
	}
};
static_assert(alignof(UTestOffTheRecord) == 0x000008, "Wrong alignment on UTestOffTheRecord");
static_assert(sizeof(UTestOffTheRecord) == 0x000440, "Wrong size on UTestOffTheRecord");

}

