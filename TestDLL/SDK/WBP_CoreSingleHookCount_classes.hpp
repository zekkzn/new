#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreSingleHookCount

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C
// 0x0058 (0x0300 - 0x02A8)
class UWBP_CoreSingleHookCount_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       SingleHookAnimation;                               // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Background;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              DisconnectImage;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Foreground;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Glow;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             ForegroundTexture;                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESingleHookState                              PreviousState;                                     // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Small_Version;                                  // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           MainKillerColor;                                   // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SecondKillerColor;                                 // 0x02EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateState(ESingleHookState HookState);
	void PlaySingleHookAnimation();
	void InitHookSegment(bool IsSmallVersion);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreSingleHookCount_C">();
	}
	static class UWBP_CoreSingleHookCount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreSingleHookCount_C>();
	}
};
static_assert(alignof(UWBP_CoreSingleHookCount_C) == 0x000008, "Wrong alignment on UWBP_CoreSingleHookCount_C");
static_assert(sizeof(UWBP_CoreSingleHookCount_C) == 0x000300, "Wrong size on UWBP_CoreSingleHookCount_C");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, SingleHookAnimation) == 0x0002A8, "Member 'UWBP_CoreSingleHookCount_C::SingleHookAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, Background) == 0x0002B0, "Member 'UWBP_CoreSingleHookCount_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, DisconnectImage) == 0x0002B8, "Member 'UWBP_CoreSingleHookCount_C::DisconnectImage' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, Foreground) == 0x0002C0, "Member 'UWBP_CoreSingleHookCount_C::Foreground' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, Glow) == 0x0002C8, "Member 'UWBP_CoreSingleHookCount_C::Glow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, ForegroundTexture) == 0x0002D0, "Member 'UWBP_CoreSingleHookCount_C::ForegroundTexture' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, PreviousState) == 0x0002D8, "Member 'UWBP_CoreSingleHookCount_C::PreviousState' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, Is_Small_Version) == 0x0002D9, "Member 'UWBP_CoreSingleHookCount_C::Is_Small_Version' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, MainKillerColor) == 0x0002DC, "Member 'UWBP_CoreSingleHookCount_C::MainKillerColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreSingleHookCount_C, SecondKillerColor) == 0x0002EC, "Member 'UWBP_CoreSingleHookCount_C::SecondKillerColor' has a wrong offset!");

}

