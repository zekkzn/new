#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreArchivePassTooltip

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreArchivePassTooltip.WBP_CoreArchivePassTooltip_C.ExecuteUbergraph_WBP_CoreArchivePassTooltip
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FArchivePassTooltipViewData            K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPriceTagViewData                      K2Node_MakeStruct_PriceTagViewData;                // 0x00A8(0x0050)()
	struct FArchivePassTooltipViewData            K2Node_MakeStruct_ArchivePassTooltipViewData;      // 0x00F8(0x0098)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip) == 0x000008, "Wrong alignment on WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip");
static_assert(sizeof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip) == 0x0001B0, "Wrong size on WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, EntryPoint) == 0x000000, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, K2Node_Event_data) == 0x000008, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, K2Node_Event_IsDesignTime) == 0x0000A0, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, K2Node_MakeStruct_PriceTagViewData) == 0x0000A8, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::K2Node_MakeStruct_PriceTagViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, K2Node_MakeStruct_ArchivePassTooltipViewData) == 0x0000F8, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::K2Node_MakeStruct_ArchivePassTooltipViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, CallFunc_MakeVector2D_ReturnValue) == 0x000190, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0001A0, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0001A8, "Member 'WBP_CoreArchivePassTooltip_C_ExecuteUbergraph_WBP_CoreArchivePassTooltip::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function WBP_CoreArchivePassTooltip.WBP_CoreArchivePassTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreArchivePassTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchivePassTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreArchivePassTooltip_C_PreConstruct");
static_assert(sizeof(WBP_CoreArchivePassTooltip_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreArchivePassTooltip_C_PreConstruct");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreArchivePassTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreArchivePassTooltip.WBP_CoreArchivePassTooltip_C.SetTooltipData
// 0x0098 (0x0098 - 0x0000)
struct WBP_CoreArchivePassTooltip_C_SetTooltipData final
{
public:
	struct FArchivePassTooltipViewData            Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreArchivePassTooltip_C_SetTooltipData) == 0x000008, "Wrong alignment on WBP_CoreArchivePassTooltip_C_SetTooltipData");
static_assert(sizeof(WBP_CoreArchivePassTooltip_C_SetTooltipData) == 0x000098, "Wrong size on WBP_CoreArchivePassTooltip_C_SetTooltipData");
static_assert(offsetof(WBP_CoreArchivePassTooltip_C_SetTooltipData, Data) == 0x000000, "Member 'WBP_CoreArchivePassTooltip_C_SetTooltipData::Data' has a wrong offset!");

}

