#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreLeaningArrowsWidget

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreLeaningArrowsWidget.WBP_CoreLeaningArrowsWidget_C.SetData
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreLeaningArrowsWidget_C_SetData final
{
public:
	ELeanState                                    LeanState;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLeaningArrowsWidget_C_SetData) == 0x000001, "Wrong alignment on WBP_CoreLeaningArrowsWidget_C_SetData");
static_assert(sizeof(WBP_CoreLeaningArrowsWidget_C_SetData) == 0x000001, "Wrong size on WBP_CoreLeaningArrowsWidget_C_SetData");
static_assert(offsetof(WBP_CoreLeaningArrowsWidget_C_SetData, LeanState) == 0x000000, "Member 'WBP_CoreLeaningArrowsWidget_C_SetData::LeanState' has a wrong offset!");

// Function WBP_CoreLeaningArrowsWidget.WBP_CoreLeaningArrowsWidget_C.ExecuteUbergraph_WBP_CoreLeaningArrowsWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeanState                                    K2Node_Event_leanState;                            // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget) == 0x000004, "Wrong alignment on WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget");
static_assert(sizeof(WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget) == 0x000008, "Wrong size on WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget");
static_assert(offsetof(WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget, EntryPoint) == 0x000000, "Member 'WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget, K2Node_Event_leanState) == 0x000004, "Member 'WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget::K2Node_Event_leanState' has a wrong offset!");
static_assert(offsetof(WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'WBP_CoreLeaningArrowsWidget_C_ExecuteUbergraph_WBP_CoreLeaningArrowsWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

