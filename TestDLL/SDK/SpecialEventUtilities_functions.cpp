#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventUtilities

#include "Basic.hpp"

#include "SpecialEventUtilities_classes.hpp"
#include "SpecialEventUtilities_parameters.hpp"


namespace SDK
{

// Function SpecialEventUtilities.RespawnableInteractable.OnHidden
// (Native, Event, Protected, BlueprintEvent)

void ARespawnableInteractable::OnHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnableInteractable.OnRep_IsHidden
// (Final, Native, Private)

void ARespawnableInteractable::OnRep_IsHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnRep_IsHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnableInteractable.OnUnhidden
// (Native, Event, Protected, BlueprintEvent)

void ARespawnableInteractable::OnUnhidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "OnUnhidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnableInteractable.IsHidden
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARespawnableInteractable::IsHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnableInteractable", "IsHidden");

	Params::RespawnableInteractable_IsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpecialEventUtilities.RespawningEventComponent.Authority_OnIsInteractingWithAnyRespawnableInteractableChanged
// (Native, Protected)
// Parameters:
// class ARespawnableInteractable*         RespawnableInteractable                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInteracting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URespawningEventComponent::Authority_OnIsInteractingWithAnyRespawnableInteractableChanged(class ARespawnableInteractable* RespawnableInteractable, bool IsInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawningEventComponent", "Authority_OnIsInteractingWithAnyRespawnableInteractableChanged");

	Params::RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged Parms{};

	Parms.RespawnableInteractable = RespawnableInteractable;
	Parms.IsInteracting = IsInteracting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawningEventComponent.DBD_ForceRespawnSpecialEventObject
// (Final, Exec, Native, Private)

void URespawningEventComponent::DBD_ForceRespawnSpecialEventObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawningEventComponent", "DBD_ForceRespawnSpecialEventObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.DebugTimedRespawnableTriggerCountdownTimer.OnRep_CountdownTimeRemaining
// (Final, Native, Private)

void UDebugTimedRespawnableTriggerCountdownTimer::OnRep_CountdownTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugTimedRespawnableTriggerCountdownTimer", "OnRep_CountdownTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnInteractionEnded
// (Native, Public)
// Parameters:
// class ARespawnableInteractable*         RespawnableInteractable                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionRespawnableTrigger::Authority_OnInteractionEnded(class ARespawnableInteractable* RespawnableInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionRespawnableTrigger", "Authority_OnInteractionEnded");

	Params::InteractionRespawnableTrigger_Authority_OnInteractionEnded Parms{};

	Parms.RespawnableInteractable = RespawnableInteractable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnNewRespawnableSubscribed
// (Final, Native, Public)
// Parameters:
// class ARespawnableInteractable*         NewRespawnableInteractable                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionRespawnableTrigger::Authority_OnNewRespawnableSubscribed(class ARespawnableInteractable* NewRespawnableInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionRespawnableTrigger", "Authority_OnNewRespawnableSubscribed");

	Params::InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed Parms{};

	Parms.NewRespawnableInteractable = NewRespawnableInteractable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnablePositioner.Authority_OnIsInteractingChangedEvent
// (Final, Native, Private)
// Parameters:
// class ARespawnableInteractable*         RespawnableInteractable                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsInteracting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URespawnablePositioner::Authority_OnIsInteractingChangedEvent(class ARespawnableInteractable* RespawnableInteractable, bool IsInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnablePositioner", "Authority_OnIsInteractingChangedEvent");

	Params::RespawnablePositioner_Authority_OnIsInteractingChangedEvent Parms{};

	Parms.RespawnableInteractable = RespawnableInteractable;
	Parms.IsInteracting = IsInteracting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SpecialEventUtilities.RespawnablePositioner.Authority_GetRespawnables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class ARespawnableInteractable*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class ARespawnableInteractable*> URespawnablePositioner::Authority_GetRespawnables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespawnablePositioner", "Authority_GetRespawnables");

	Params::RespawnablePositioner_Authority_GetRespawnables Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SpecialEventUtilities.SpecialEventInteractableCooldownComponent.OnRep_IsOnCooldown
// (Final, Native, Private, Const)

void USpecialEventInteractableCooldownComponent::OnRep_IsOnCooldown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialEventInteractableCooldownComponent", "OnRep_IsOnCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SpecialEventUtilities.SpecialEventVFXHelperComponent.HideVfxTagAddedOrRemovedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Added                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecialEventVFXHelperComponent::HideVfxTagAddedOrRemovedDelegate__DelegateSignature(bool Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialEventVFXHelperComponent", "HideVfxTagAddedOrRemovedDelegate__DelegateSignature");

	Params::SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature Parms{};

	Parms.Added = Added;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SpecialEventUtilities.SpecialEventVFXHelperComponent.HideVignetteTagAddedOrRemovedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Added                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecialEventVFXHelperComponent::HideVignetteTagAddedOrRemovedDelegate__DelegateSignature(bool Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialEventVFXHelperComponent", "HideVignetteTagAddedOrRemovedDelegate__DelegateSignature");

	Params::SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature Parms{};

	Parms.Added = Added;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SpecialEventUtilities.SpecialEventVFXHelperComponent.LocallyObservedChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USpecialEventVFXHelperComponent::LocallyObservedChangedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialEventVFXHelperComponent", "LocallyObservedChangedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialEventUtilities.SpecialEventVFXHelperComponent.RegisterListeners
// (Final, Native, Public, BlueprintCallable)

void USpecialEventVFXHelperComponent::RegisterListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialEventVFXHelperComponent", "RegisterListeners");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

