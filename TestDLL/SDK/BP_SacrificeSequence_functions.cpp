#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SacrificeSequence

#include "Basic.hpp"

#include "BP_SacrificeSequence_classes.hpp"
#include "BP_SacrificeSequence_parameters.hpp"


namespace SDK
{

// Function BP_SacrificeSequence.BP_SacrificeSequence_C.Dissolve__FinishedFunc
// (BlueprintEvent)

void ABP_SacrificeSequence_C::Dissolve__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeSequence_C", "Dissolve__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeSequence.BP_SacrificeSequence_C.Dissolve__UpdateFunc
// (BlueprintEvent)

void ABP_SacrificeSequence_C::Dissolve__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeSequence_C", "Dissolve__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SacrificeSequence.BP_SacrificeSequence_C.ExecuteUbergraph_BP_SacrificeSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SacrificeSequence_C::ExecuteUbergraph_BP_SacrificeSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeSequence_C", "ExecuteUbergraph_BP_SacrificeSequence");

	Params::BP_SacrificeSequence_C_ExecuteUbergraph_BP_SacrificeSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SacrificeSequence.BP_SacrificeSequence_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SacrificeSequence_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SacrificeSequence_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

