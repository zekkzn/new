#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS27

#include "Basic.hpp"


namespace SDK::Params
{

// Function TheS27.Flashbang.Authority_OnRepairProgressApplied
// 0x0018 (0x0018 - 0x0000)
struct Flashbang_Authority_OnRepairProgressApplied final
{
public:
	float                                         IndividualChargeAmount;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalChargeAmount;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ChargeInstigator;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WasCoop;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Flashbang_Authority_OnRepairProgressApplied) == 0x000008, "Wrong alignment on Flashbang_Authority_OnRepairProgressApplied");
static_assert(sizeof(Flashbang_Authority_OnRepairProgressApplied) == 0x000018, "Wrong size on Flashbang_Authority_OnRepairProgressApplied");
static_assert(offsetof(Flashbang_Authority_OnRepairProgressApplied, IndividualChargeAmount) == 0x000000, "Member 'Flashbang_Authority_OnRepairProgressApplied::IndividualChargeAmount' has a wrong offset!");
static_assert(offsetof(Flashbang_Authority_OnRepairProgressApplied, TotalChargeAmount) == 0x000004, "Member 'Flashbang_Authority_OnRepairProgressApplied::TotalChargeAmount' has a wrong offset!");
static_assert(offsetof(Flashbang_Authority_OnRepairProgressApplied, ChargeInstigator) == 0x000008, "Member 'Flashbang_Authority_OnRepairProgressApplied::ChargeInstigator' has a wrong offset!");
static_assert(offsetof(Flashbang_Authority_OnRepairProgressApplied, WasCoop) == 0x000010, "Member 'Flashbang_Authority_OnRepairProgressApplied::WasCoop' has a wrong offset!");
static_assert(offsetof(Flashbang_Authority_OnRepairProgressApplied, DeltaTime) == 0x000014, "Member 'Flashbang_Authority_OnRepairProgressApplied::DeltaTime' has a wrong offset!");

// Function TheS27.Flashbang.GetGeneratorRepairPercentToCraftFlashbangAtLevel
// 0x0004 (0x0004 - 0x0000)
struct Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel) == 0x000004, "Wrong alignment on Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel");
static_assert(sizeof(Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel) == 0x000004, "Wrong size on Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel");
static_assert(offsetof(Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel, ReturnValue) == 0x000000, "Member 'Flashbang_GetGeneratorRepairPercentToCraftFlashbangAtLevel::ReturnValue' has a wrong offset!");

// Function TheS27.RookieSpirit.HandleGeneratorIsDamagedChanged
// 0x0010 (0x0010 - 0x0000)
struct RookieSpirit_HandleGeneratorIsDamagedChanged final
{
public:
	class AGenerator*                             Generator;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RookieSpirit_HandleGeneratorIsDamagedChanged) == 0x000008, "Wrong alignment on RookieSpirit_HandleGeneratorIsDamagedChanged");
static_assert(sizeof(RookieSpirit_HandleGeneratorIsDamagedChanged) == 0x000010, "Wrong size on RookieSpirit_HandleGeneratorIsDamagedChanged");
static_assert(offsetof(RookieSpirit_HandleGeneratorIsDamagedChanged, Generator) == 0x000000, "Member 'RookieSpirit_HandleGeneratorIsDamagedChanged::Generator' has a wrong offset!");
static_assert(offsetof(RookieSpirit_HandleGeneratorIsDamagedChanged, Player) == 0x000008, "Member 'RookieSpirit_HandleGeneratorIsDamagedChanged::Player' has a wrong offset!");

}

