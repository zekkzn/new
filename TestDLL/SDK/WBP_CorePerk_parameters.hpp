#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePerk

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_CorePerk.WBP_CorePerk_C.UpdatePerkCooldown
// 0x0008 (0x0008 - 0x0000)
struct WBP_CorePerk_C_UpdatePerkCooldown final
{
public:
	float                                         CooldownValue;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRechargeable;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRechargeableActive;                              // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_UpdatePerkCooldown) == 0x000004, "Wrong alignment on WBP_CorePerk_C_UpdatePerkCooldown");
static_assert(sizeof(WBP_CorePerk_C_UpdatePerkCooldown) == 0x000008, "Wrong size on WBP_CorePerk_C_UpdatePerkCooldown");
static_assert(offsetof(WBP_CorePerk_C_UpdatePerkCooldown, CooldownValue) == 0x000000, "Member 'WBP_CorePerk_C_UpdatePerkCooldown::CooldownValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_UpdatePerkCooldown, IsRechargeable) == 0x000004, "Member 'WBP_CorePerk_C_UpdatePerkCooldown::IsRechargeable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_UpdatePerkCooldown, IsRechargeableActive) == 0x000005, "Member 'WBP_CorePerk_C_UpdatePerkCooldown::IsRechargeableActive' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.TriggerRandomSuccess
// 0x000C (0x000C - 0x0000)
struct WBP_CorePerk_C_TriggerRandomSuccess final
{
public:
	struct FPerkRandomSuccessViewData             RandomSuccessViewData;                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(WBP_CorePerk_C_TriggerRandomSuccess) == 0x000004, "Wrong alignment on WBP_CorePerk_C_TriggerRandomSuccess");
static_assert(sizeof(WBP_CorePerk_C_TriggerRandomSuccess) == 0x00000C, "Wrong size on WBP_CorePerk_C_TriggerRandomSuccess");
static_assert(offsetof(WBP_CorePerk_C_TriggerRandomSuccess, RandomSuccessViewData) == 0x000000, "Member 'WBP_CorePerk_C_TriggerRandomSuccess::RandomSuccessViewData' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.SetSlotUnlockLevel
// 0x0018 (0x0018 - 0x0000)
struct WBP_CorePerk_C_SetSlotUnlockLevel final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UnlockLevel;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_SetSlotUnlockLevel) == 0x000008, "Wrong alignment on WBP_CorePerk_C_SetSlotUnlockLevel");
static_assert(sizeof(WBP_CorePerk_C_SetSlotUnlockLevel) == 0x000018, "Wrong size on WBP_CorePerk_C_SetSlotUnlockLevel");
static_assert(offsetof(WBP_CorePerk_C_SetSlotUnlockLevel, DisplayName) == 0x000000, "Member 'WBP_CorePerk_C_SetSlotUnlockLevel::DisplayName' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_SetSlotUnlockLevel, UnlockLevel) == 0x000010, "Member 'WBP_CorePerk_C_SetSlotUnlockLevel::UnlockLevel' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.SetPerkLevel
// 0x0008 (0x0008 - 0x0000)
struct WBP_CorePerk_C_SetPerkLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_SetPerkLevel) == 0x000004, "Wrong alignment on WBP_CorePerk_C_SetPerkLevel");
static_assert(sizeof(WBP_CorePerk_C_SetPerkLevel) == 0x000008, "Wrong size on WBP_CorePerk_C_SetPerkLevel");
static_assert(offsetof(WBP_CorePerk_C_SetPerkLevel, Level) == 0x000000, "Member 'WBP_CorePerk_C_SetPerkLevel::Level' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_SetPerkLevel, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WBP_CorePerk_C_SetPerkLevel::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_SetPerkLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_CorePerk_C_SetPerkLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.SetData
// 0x0070 (0x0070 - 0x0000)
struct WBP_CorePerk_C_SetData final
{
public:
	struct FPerkViewData                          Param_PerkViewData;                                // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CorePerk_C_SetData) == 0x000008, "Wrong alignment on WBP_CorePerk_C_SetData");
static_assert(sizeof(WBP_CorePerk_C_SetData) == 0x000070, "Wrong size on WBP_CorePerk_C_SetData");
static_assert(offsetof(WBP_CorePerk_C_SetData, Param_PerkViewData) == 0x000000, "Member 'WBP_CorePerk_C_SetData::Param_PerkViewData' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CorePerk_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CorePerk_C_PreConstruct");
static_assert(sizeof(WBP_CorePerk_C_PreConstruct) == 0x000001, "Wrong size on WBP_CorePerk_C_PreConstruct");
static_assert(offsetof(WBP_CorePerk_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CorePerk_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.PlayRandomSuccessAnim
// 0x0088 (0x0088 - 0x0000)
struct WBP_CorePerk_C_PlayRandomSuccessAnim final
{
public:
	struct FPerkRandomSuccessViewData             ViewData;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPerkRandomSuccessResult                      Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_PlayRandomSuccessAnim) == 0x000008, "Wrong alignment on WBP_CorePerk_C_PlayRandomSuccessAnim");
static_assert(sizeof(WBP_CorePerk_C_PlayRandomSuccessAnim) == 0x000088, "Wrong size on WBP_CorePerk_C_PlayRandomSuccessAnim");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, ViewData) == 0x000000, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::ViewData' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_object_Variable) == 0x000010, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_object_Variable_1) == 0x000038, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_object_Variable_2) == 0x000040, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_bool_Variable) == 0x000048, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_byte_Variable) == 0x000049, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_byte_Variable_1) == 0x00004A, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, K2Node_Select_Default) == 0x000058, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, CallFunc_PlayAnimation_ReturnValue_2) == 0x000068, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_object_Variable_3) == 0x000070, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, Temp_byte_Variable_2) == 0x000078, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_PlayRandomSuccessAnim, K2Node_Select_Default_1) == 0x000080, "Member 'WBP_CorePerk_C_PlayRandomSuccessAnim::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_CorePerk.WBP_CorePerk_C.ExecuteUbergraph_WBP_CorePerk
// 0x0288 (0x0288 - 0x0000)
struct WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x004C(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0060(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0074(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0088(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x009C(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPerkViewData                          K2Node_Event_perkViewData;                         // 0x00B0(0x0070)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_cooldownValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsRechargeable;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsRechargeableActive;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerkRandomSuccessViewData             K2Node_Event_randomSuccessViewData;                // 0x012C(0x000C)(ConstParm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0140(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0180(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_3;  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01D4(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_4;  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_4; // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue;  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue;            // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue_1; // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue_1;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue_2; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue_2;          // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue_3; // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue_3;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetLocallyObservedCharacter_ReturnValue_4; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAudioComponent_ReturnValue_4;          // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetPercentage_Percent_ImplicitCast;       // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetPercentage_Percent_ImplicitCast_1;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk) == 0x000008, "Wrong alignment on WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk");
static_assert(sizeof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk) == 0x000288, "Wrong size on WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, EntryPoint) == 0x000000, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, Temp_delegate_Variable) == 0x00004C, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, Temp_delegate_Variable_1) == 0x000060, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, Temp_delegate_Variable_2) == 0x000074, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, Temp_delegate_Variable_3) == 0x000088, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, Temp_delegate_Variable_4) == 0x00009C, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_perkViewData) == 0x0000B0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_perkViewData' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_IsDesignTime) == 0x000120, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_cooldownValue) == 0x000124, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_cooldownValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_IsRechargeable) == 0x000128, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_IsRechargeable' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_IsRechargeableActive) == 0x000129, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_IsRechargeableActive' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_Event_randomSuccessViewData) == 0x00012C, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_Event_randomSuccessViewData' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_SwitchEnum_CmpSuccess) == 0x000138, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000139, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_Conv_IntToText_ReturnValue) == 0x000140, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000158, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000160, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000168, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_CreateDelegate_OutputDelegate_3) == 0x000180, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000198, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x0001A0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x0001B0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x0001B8, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_Result_3) == 0x0001C0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_Result_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3) == 0x0001C8, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_IsValid_ReturnValue_2) == 0x0001D0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_IsValid_ReturnValue_3) == 0x0001D1, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001D4, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_Result_4) == 0x0001E8, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_Result_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_4) == 0x0001F0, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_IsValid_ReturnValue_4) == 0x0001F8, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetLocallyObservedCharacter_ReturnValue) == 0x000200, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetLocallyObservedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetAudioComponent_ReturnValue) == 0x000208, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetAudioComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetLocallyObservedCharacter_ReturnValue_1) == 0x000210, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetLocallyObservedCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PostAkEvent_ReturnValue) == 0x000218, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetAudioComponent_ReturnValue_1) == 0x000220, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetAudioComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetLocallyObservedCharacter_ReturnValue_2) == 0x000228, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetLocallyObservedCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PostAkEvent_ReturnValue_1) == 0x000230, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetAudioComponent_ReturnValue_2) == 0x000238, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetAudioComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetLocallyObservedCharacter_ReturnValue_3) == 0x000240, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetLocallyObservedCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PostAkEvent_ReturnValue_2) == 0x000248, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetAudioComponent_ReturnValue_3) == 0x000250, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetAudioComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetLocallyObservedCharacter_ReturnValue_4) == 0x000258, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetLocallyObservedCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PostAkEvent_ReturnValue_3) == 0x000260, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_GetAudioComponent_ReturnValue_4) == 0x000268, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_GetAudioComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_PostAkEvent_ReturnValue_4) == 0x000270, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_SetPercentage_Percent_ImplicitCast) == 0x000278, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_SetPercentage_Percent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk, CallFunc_SetPercentage_Percent_ImplicitCast_1) == 0x000280, "Member 'WBP_CorePerk_C_ExecuteUbergraph_WBP_CorePerk::CallFunc_SetPercentage_Percent_ImplicitCast_1' has a wrong offset!");

}

