#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDDialog

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "DBDDialog_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class DBDDialog.DialogDataAsset
// 0x0078 (0x00B0 - 0x0038)
class UDialogDataAsset final : public UDataAsset
{
public:
	float                                         _minimumDelayBetweenDialogs;                       // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _defaultMaxSubtitleDistance;                       // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDialogEventSettings>           _dialogEvents;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                   _stopAudioGameplayEvents;                          // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      _allowingDialogueStartStateTagQuery;               // 0x0060(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _stopAudioClip;                                    // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DialogDataAsset">();
	}
	static class UDialogDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogDataAsset>();
	}
};
static_assert(alignof(UDialogDataAsset) == 0x000008, "Wrong alignment on UDialogDataAsset");
static_assert(sizeof(UDialogDataAsset) == 0x0000B0, "Wrong size on UDialogDataAsset");
static_assert(offsetof(UDialogDataAsset, _minimumDelayBetweenDialogs) == 0x000038, "Member 'UDialogDataAsset::_minimumDelayBetweenDialogs' has a wrong offset!");
static_assert(offsetof(UDialogDataAsset, _defaultMaxSubtitleDistance) == 0x00003C, "Member 'UDialogDataAsset::_defaultMaxSubtitleDistance' has a wrong offset!");
static_assert(offsetof(UDialogDataAsset, _dialogEvents) == 0x000040, "Member 'UDialogDataAsset::_dialogEvents' has a wrong offset!");
static_assert(offsetof(UDialogDataAsset, _stopAudioGameplayEvents) == 0x000050, "Member 'UDialogDataAsset::_stopAudioGameplayEvents' has a wrong offset!");
static_assert(offsetof(UDialogDataAsset, _allowingDialogueStartStateTagQuery) == 0x000060, "Member 'UDialogDataAsset::_allowingDialogueStartStateTagQuery' has a wrong offset!");
static_assert(offsetof(UDialogDataAsset, _stopAudioClip) == 0x0000A8, "Member 'UDialogDataAsset::_stopAudioClip' has a wrong offset!");

// Class DBDDialog.DialogHandlerComponent
// 0x0118 (0x01C0 - 0x00A8)
class UDialogHandlerComponent final : public UActorComponent
{
public:
	float                                         _minimumDelayBetweenDialog;                        // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _maxSubtitleDistance;                              // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDialogEventSettings>           _dialogEvents;                                     // 0x00B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UDialogDataAsset*                       _dialogDataAsset;                                  // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                   _stopAudioGameplayEvents;                          // 0x00C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      _allowingDialogueStartStateTagQuery;               // 0x00D8(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _stopAudioClip;                                    // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x38];                                     // 0x0128(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDialogEventSettings>           _cachedDialogEvents;                               // 0x0160(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                   _cachedStopAudioGameplayEvents;                    // 0x0170(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_180[0x40];                                     // 0x0180(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DialogHandlerComponent">();
	}
	static class UDialogHandlerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogHandlerComponent>();
	}
};
static_assert(alignof(UDialogHandlerComponent) == 0x000008, "Wrong alignment on UDialogHandlerComponent");
static_assert(sizeof(UDialogHandlerComponent) == 0x0001C0, "Wrong size on UDialogHandlerComponent");
static_assert(offsetof(UDialogHandlerComponent, _minimumDelayBetweenDialog) == 0x0000A8, "Member 'UDialogHandlerComponent::_minimumDelayBetweenDialog' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _maxSubtitleDistance) == 0x0000AC, "Member 'UDialogHandlerComponent::_maxSubtitleDistance' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _dialogEvents) == 0x0000B0, "Member 'UDialogHandlerComponent::_dialogEvents' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _dialogDataAsset) == 0x0000C0, "Member 'UDialogHandlerComponent::_dialogDataAsset' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _stopAudioGameplayEvents) == 0x0000C8, "Member 'UDialogHandlerComponent::_stopAudioGameplayEvents' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _allowingDialogueStartStateTagQuery) == 0x0000D8, "Member 'UDialogHandlerComponent::_allowingDialogueStartStateTagQuery' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _stopAudioClip) == 0x000120, "Member 'UDialogHandlerComponent::_stopAudioClip' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _cachedDialogEvents) == 0x000160, "Member 'UDialogHandlerComponent::_cachedDialogEvents' has a wrong offset!");
static_assert(offsetof(UDialogHandlerComponent, _cachedStopAudioGameplayEvents) == 0x000170, "Member 'UDialogHandlerComponent::_cachedStopAudioGameplayEvents' has a wrong offset!");

// Class DBDDialog.DialogHandlerCondition
// 0x0000 (0x0030 - 0x0030)
class UDialogHandlerCondition final : public UObject
{
public:
	bool IsTrue(const struct FGameplayTag& GameEventType, const struct FGameEventData& GameEventData, class ADBDGameState* GameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DialogHandlerCondition">();
	}
	static class UDialogHandlerCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialogHandlerCondition>();
	}
};
static_assert(alignof(UDialogHandlerCondition) == 0x000008, "Wrong alignment on UDialogHandlerCondition");
static_assert(sizeof(UDialogHandlerCondition) == 0x000030, "Wrong size on UDialogHandlerCondition");

}

