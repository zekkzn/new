#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HudEffectCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HudEffectCard.WBP_HudEffectCard_C
// 0x01A0 (0x0500 - 0x0360)
class UWBP_HudEffectCard_C final : public UHudEffectCardWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutPoints;                                     // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AttractPoint2Anim;                                 // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EffectNameInOut;                                   // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AttractCurrentCardAnim;                            // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AttractPoint1Anim;                                 // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              AttractCurrentCard;                                // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              AttractCurrentCardGlow;                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      EffectCard0;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      EffectCard1;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      EffectCard2;                                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              FxBackTrackPoint1;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              FxBackTrackPoint2;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              FxFrontTrackPoint1;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              FxFrontTrackPoint2;                                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              TrackPoint1;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              TrackPoint2;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreRewardPopup_VFXWidget_C*       VFX_Burst;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      Previous_Card;                                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      Current_Card;                                      // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      Next_Card;                                         // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_EffectCard_C*                      Future_Card;                                       // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TrackPoint1Material;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TrackPoint2Material;                               // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeTextAppear;                                    // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTextBeingDelayed;                                // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUITweenInstance*>               Tweens;                                            // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              PreviousCardPosition;                              // 0x0440(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentCardPosition;                               // 0x0450(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NextCardPosition;                                  // 0x0460(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FutureCardPosition;                                // 0x0470(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PreviousCardScale;                                 // 0x0480(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentCardScale;                                  // 0x0490(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NextCardScale;                                     // 0x04A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FutureCardScale;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousCardAngle;                                 // 0x04C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentCardAngle;                                  // 0x04C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextCardAngle;                                     // 0x04D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FutureCardAngle;                                   // 0x04D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousCardOpacity;                               // 0x04E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentCardOpacity;                                // 0x04E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextCardOpacity;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FutureCardOpacity;                                 // 0x04F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateTimerFeedback(const float ElapsedTime);
	void StopParticle();
	void RotateCards(const bool IsFutureCardValid, const struct FEffectCardViewData& FutureCardViewData);
	void PlayParticle();
	void PlayCurrentAttractCard();
	void OnUpdateCardEffectName();
	void OnTweens_Completed(class UUITweenInstance* Tween);
	void InitCards(const struct FEffectCardViewData& CurrentCardViewData, const struct FEffectCardViewData& NextCardViewData);
	void Finished_F3BA3D294D3EDB190282258ACBE59204();
	void Finished_A567575049BA395F8BD326A26FFB5003();
	void FadeOut();
	void FadeIn();
	void ExecuteUbergraph_WBP_HudEffectCard(int32 EntryPoint);
	void CurrentCardTweenCompleted(class UUITweenInstance* Tween);
	void Construct();
	void AddMatchPoint(bool IsSecondPoint, bool WithAnimation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HudEffectCard_C">();
	}
	static class UWBP_HudEffectCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HudEffectCard_C>();
	}
};
static_assert(alignof(UWBP_HudEffectCard_C) == 0x000008, "Wrong alignment on UWBP_HudEffectCard_C");
static_assert(sizeof(UWBP_HudEffectCard_C) == 0x000500, "Wrong size on UWBP_HudEffectCard_C");
static_assert(offsetof(UWBP_HudEffectCard_C, UberGraphFrame) == 0x000360, "Member 'UWBP_HudEffectCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FadeOutPoints) == 0x000368, "Member 'UWBP_HudEffectCard_C::FadeOutPoints' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, AttractPoint2Anim) == 0x000370, "Member 'UWBP_HudEffectCard_C::AttractPoint2Anim' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, EffectNameInOut) == 0x000378, "Member 'UWBP_HudEffectCard_C::EffectNameInOut' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, AttractCurrentCardAnim) == 0x000380, "Member 'UWBP_HudEffectCard_C::AttractCurrentCardAnim' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, AttractPoint1Anim) == 0x000388, "Member 'UWBP_HudEffectCard_C::AttractPoint1Anim' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, AttractCurrentCard) == 0x000390, "Member 'UWBP_HudEffectCard_C::AttractCurrentCard' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, AttractCurrentCardGlow) == 0x000398, "Member 'UWBP_HudEffectCard_C::AttractCurrentCardGlow' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, BackgroundImage) == 0x0003A0, "Member 'UWBP_HudEffectCard_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, EffectCard0) == 0x0003A8, "Member 'UWBP_HudEffectCard_C::EffectCard0' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, EffectCard1) == 0x0003B0, "Member 'UWBP_HudEffectCard_C::EffectCard1' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, EffectCard2) == 0x0003B8, "Member 'UWBP_HudEffectCard_C::EffectCard2' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FxBackTrackPoint1) == 0x0003C0, "Member 'UWBP_HudEffectCard_C::FxBackTrackPoint1' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FxBackTrackPoint2) == 0x0003C8, "Member 'UWBP_HudEffectCard_C::FxBackTrackPoint2' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FxFrontTrackPoint1) == 0x0003D0, "Member 'UWBP_HudEffectCard_C::FxFrontTrackPoint1' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FxFrontTrackPoint2) == 0x0003D8, "Member 'UWBP_HudEffectCard_C::FxFrontTrackPoint2' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, TrackPoint1) == 0x0003E0, "Member 'UWBP_HudEffectCard_C::TrackPoint1' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, TrackPoint2) == 0x0003E8, "Member 'UWBP_HudEffectCard_C::TrackPoint2' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, VFX_Burst) == 0x0003F0, "Member 'UWBP_HudEffectCard_C::VFX_Burst' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, Previous_Card) == 0x0003F8, "Member 'UWBP_HudEffectCard_C::Previous_Card' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, Current_Card) == 0x000400, "Member 'UWBP_HudEffectCard_C::Current_Card' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, Next_Card) == 0x000408, "Member 'UWBP_HudEffectCard_C::Next_Card' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, Future_Card) == 0x000410, "Member 'UWBP_HudEffectCard_C::Future_Card' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, TrackPoint1Material) == 0x000418, "Member 'UWBP_HudEffectCard_C::TrackPoint1Material' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, TrackPoint2Material) == 0x000420, "Member 'UWBP_HudEffectCard_C::TrackPoint2Material' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, TimeTextAppear) == 0x000428, "Member 'UWBP_HudEffectCard_C::TimeTextAppear' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, IsTextBeingDelayed) == 0x00042C, "Member 'UWBP_HudEffectCard_C::IsTextBeingDelayed' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, Tweens) == 0x000430, "Member 'UWBP_HudEffectCard_C::Tweens' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, PreviousCardPosition) == 0x000440, "Member 'UWBP_HudEffectCard_C::PreviousCardPosition' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, CurrentCardPosition) == 0x000450, "Member 'UWBP_HudEffectCard_C::CurrentCardPosition' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, NextCardPosition) == 0x000460, "Member 'UWBP_HudEffectCard_C::NextCardPosition' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FutureCardPosition) == 0x000470, "Member 'UWBP_HudEffectCard_C::FutureCardPosition' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, PreviousCardScale) == 0x000480, "Member 'UWBP_HudEffectCard_C::PreviousCardScale' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, CurrentCardScale) == 0x000490, "Member 'UWBP_HudEffectCard_C::CurrentCardScale' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, NextCardScale) == 0x0004A0, "Member 'UWBP_HudEffectCard_C::NextCardScale' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FutureCardScale) == 0x0004B0, "Member 'UWBP_HudEffectCard_C::FutureCardScale' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, PreviousCardAngle) == 0x0004C0, "Member 'UWBP_HudEffectCard_C::PreviousCardAngle' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, CurrentCardAngle) == 0x0004C8, "Member 'UWBP_HudEffectCard_C::CurrentCardAngle' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, NextCardAngle) == 0x0004D0, "Member 'UWBP_HudEffectCard_C::NextCardAngle' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FutureCardAngle) == 0x0004D8, "Member 'UWBP_HudEffectCard_C::FutureCardAngle' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, PreviousCardOpacity) == 0x0004E0, "Member 'UWBP_HudEffectCard_C::PreviousCardOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, CurrentCardOpacity) == 0x0004E8, "Member 'UWBP_HudEffectCard_C::CurrentCardOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, NextCardOpacity) == 0x0004F0, "Member 'UWBP_HudEffectCard_C::NextCardOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_HudEffectCard_C, FutureCardOpacity) == 0x0004F8, "Member 'UWBP_HudEffectCard_C::FutureCardOpacity' has a wrong offset!");

}

