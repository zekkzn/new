#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StandinActor

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct StandinActor.StandinProxyEntry
// 0x0050 (0x0050 - 0x0000)
struct FStandinProxyEntry final
{
public:
	TLazyObjectPtr<class AStandInMeshActor>       StandinActor;                                      // 0x0000(0x001C)(Edit, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            StaticMesh;                                        // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                     Material;                                          // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTexture2D*>                     Textures;                                          // 0x0030(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FName                                   Key;                                               // 0x0040(0x000C)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStandinProxyEntry) == 0x000008, "Wrong alignment on FStandinProxyEntry");
static_assert(sizeof(FStandinProxyEntry) == 0x000050, "Wrong size on FStandinProxyEntry");
static_assert(offsetof(FStandinProxyEntry, StandinActor) == 0x000000, "Member 'FStandinProxyEntry::StandinActor' has a wrong offset!");
static_assert(offsetof(FStandinProxyEntry, StaticMesh) == 0x000020, "Member 'FStandinProxyEntry::StaticMesh' has a wrong offset!");
static_assert(offsetof(FStandinProxyEntry, Material) == 0x000028, "Member 'FStandinProxyEntry::Material' has a wrong offset!");
static_assert(offsetof(FStandinProxyEntry, Textures) == 0x000030, "Member 'FStandinProxyEntry::Textures' has a wrong offset!");
static_assert(offsetof(FStandinProxyEntry, Key) == 0x000040, "Member 'FStandinProxyEntry::Key' has a wrong offset!");

}

