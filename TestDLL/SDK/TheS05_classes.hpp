#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS05

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"
#include "DBDCompetence_classes.hpp"


namespace SDK
{

// Class TheS05.BalancedLanding
// 0x0080 (0x04A0 - 0x0420)
class UBalancedLanding final : public UPerk
{
public:
	uint8                                         Pad_420[0x8];                                      // 0x0420(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _staggerReductionEffect;                           // 0x0428(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _activableExhaustedEffect;                         // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _sprintDuration;                                   // 0x0438(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _exhaustionDurationPerLevel[0x3];                  // 0x043C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _exhaustedEffect;                                  // 0x0448(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x50];                                     // 0x0450(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Client_UnvalidateBalanceLanding();
	void Server_WarnBalancedLandingPredicted();

	float GetExhaustionDurationAtLevel() const;
	float GetSprintDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BalancedLanding">();
	}
	static class UBalancedLanding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBalancedLanding>();
	}
};
static_assert(alignof(UBalancedLanding) == 0x000008, "Wrong alignment on UBalancedLanding");
static_assert(sizeof(UBalancedLanding) == 0x0004A0, "Wrong size on UBalancedLanding");
static_assert(offsetof(UBalancedLanding, _staggerReductionEffect) == 0x000428, "Member 'UBalancedLanding::_staggerReductionEffect' has a wrong offset!");
static_assert(offsetof(UBalancedLanding, _activableExhaustedEffect) == 0x000430, "Member 'UBalancedLanding::_activableExhaustedEffect' has a wrong offset!");
static_assert(offsetof(UBalancedLanding, _sprintDuration) == 0x000438, "Member 'UBalancedLanding::_sprintDuration' has a wrong offset!");
static_assert(offsetof(UBalancedLanding, _exhaustionDurationPerLevel) == 0x00043C, "Member 'UBalancedLanding::_exhaustionDurationPerLevel' has a wrong offset!");
static_assert(offsetof(UBalancedLanding, _exhaustedEffect) == 0x000448, "Member 'UBalancedLanding::_exhaustedEffect' has a wrong offset!");

// Class TheS05.StreetwiseEffect
// 0x0030 (0x0418 - 0x03E8)
class UStreetwiseEffect final : public UBaseLingeringStatusEffect
{
public:
	float                                         _range;                                            // 0x03E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x2C];                                     // 0x03EC(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnInRangeChanged(const bool InRange);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StreetwiseEffect">();
	}
	static class UStreetwiseEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStreetwiseEffect>();
	}
};
static_assert(alignof(UStreetwiseEffect) == 0x000008, "Wrong alignment on UStreetwiseEffect");
static_assert(sizeof(UStreetwiseEffect) == 0x000418, "Wrong size on UStreetwiseEffect");
static_assert(offsetof(UStreetwiseEffect, _range) == 0x0003E8, "Member 'UStreetwiseEffect::_range' has a wrong offset!");

}

