#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreArchiveTomeProgress_LevelButton

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.UpdateVisualStatus
// 0x0002 (0x0002 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus final
{
public:
	EArchivesStoryLevelStatus                     NewStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewlyUnlocked;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus) == 0x000001, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus) == 0x000002, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus, NewStatus) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus::NewStatus' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus, NewlyUnlocked) == 0x000001, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisualStatus::NewlyUnlocked' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.UpdateVisual
// 0x0010 (0x0010 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual final
{
public:
	const class UArchiveStoryLevelViewData*       ViewData;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewlyUnlocked;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual) == 0x000010, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual, ViewData) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual::ViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual, NewlyUnlocked) == 0x000008, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateVisual::NewlyUnlocked' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.updateStatus
// 0x0078 (0x0078 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus final
{
public:
	struct FSlateColor                            RomanNumberTint_Mastered;                          // 0x0000(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            RomanNumberTint_Completed;                         // 0x0014(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            RomanNumberTint_Available;                         // 0x0028(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            RomanNumberTint_Unavailable;                       // 0x003C(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            RomanNumberTint_Locked;                            // 0x0050(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus) == 0x000078, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, RomanNumberTint_Mastered) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::RomanNumberTint_Mastered' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, RomanNumberTint_Completed) == 0x000014, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::RomanNumberTint_Completed' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, RomanNumberTint_Available) == 0x000028, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::RomanNumberTint_Available' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, RomanNumberTint_Unavailable) == 0x00003C, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::RomanNumberTint_Unavailable' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, RomanNumberTint_Locked) == 0x000050, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::RomanNumberTint_Locked' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateStatus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.updateDividerVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility final
{
public:
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility) == 0x000001, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility) == 0x000001, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_UpdateDividerVisibility::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.switchSwitcher
// 0x0018 (0x0018 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcher*                        Switcher;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher) == 0x000018, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher, Param_Index) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher, Switcher) == 0x000008, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher::Switcher' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchSwitcher::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.switchIndicator
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator) == 0x000004, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator) == 0x000004, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator, Param_Index) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchIndicator::Param_Index' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.switchDivider
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider) == 0x000004, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider) == 0x000004, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider, Param_Index) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchDivider::Param_Index' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.SwitchBorder
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder) == 0x000004, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder) == 0x000004, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder, Param_Index) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBorder::Param_Index' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.switchBackground
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground) == 0x000004, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground) == 0x000004, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground, Param_Index) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_SwitchBackground::Param_Index' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.PlayStatusAnimation
// 0x0020 (0x0020 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation) == 0x000020, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_PlayStatusAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.OnSelectedChanged
// 0x0002 (0x0002 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged final
{
public:
	bool                                          Param_IsSelected;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithAnimation;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged) == 0x000001, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged) == 0x000002, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged, Param_IsSelected) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged::Param_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged, WithAnimation) == 0x000001, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_OnSelectedChanged::WithAnimation' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isSelected;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_withAnimation;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UArchiveStoryLevelViewData*       K2Node_Event_viewData;                             // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_newlyUnlocked_1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EArchivesStoryLevelStatus                     K2Node_Event_newStatus;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_newlyUnlocked;                        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDTooltipManager*                     CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetPaintSpaceGeometry_ReturnValue;        // 0x0064(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton) == 0x0000A0, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, EntryPoint) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_isSelected) == 0x000028, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_isSelected' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_withAnimation) == 0x000029, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_withAnimation' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_viewData) == 0x000030, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_viewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_newlyUnlocked_1) == 0x000038, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_newlyUnlocked_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_newStatus) == 0x000039, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_newStatus' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, K2Node_Event_newlyUnlocked) == 0x00003A, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::K2Node_Event_newlyUnlocked' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000050, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000058, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton, CallFunc_GetPaintSpaceGeometry_ReturnValue) == 0x000064, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ExecuteUbergraph_WBP_CoreArchiveTomeProgress_LevelButton::CallFunc_GetPaintSpaceGeometry_ReturnValue' has a wrong offset!");

// Function WBP_CoreArchiveTomeProgress_LevelButton.WBP_CoreArchiveTomeProgress_LevelButton_C.colorActiveRomanNumber
// 0x0030 (0x0030 - 0x0000)
struct WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber final
{
public:
	struct FSlateColor                            Tint;                                              // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              K2Node_DynamicCast_AsDBDImage;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber) == 0x000008, "Wrong alignment on WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber");
static_assert(sizeof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber) == 0x000030, "Wrong size on WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber, Tint) == 0x000000, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber::Tint' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber, CallFunc_GetActiveWidget_ReturnValue) == 0x000018, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber, K2Node_DynamicCast_AsDBDImage) == 0x000020, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber::K2Node_DynamicCast_AsDBDImage' has a wrong offset!");
static_assert(offsetof(WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_CoreArchiveTomeProgress_LevelButton_C_ColorActiveRomanNumber::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

