#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K31

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_K31.WBP_K31_C
// 0x00E8 (0x0420 - 0x0338)
class UWBP_K31_C final : public UCorePlayerStatusKillerEffectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Battery3Hide;                                      // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery2Hide;                                      // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery1Hide;                                      // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BatteryLockon3;                                    // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BatteryLockon2;                                    // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BatteryLockon1;                                    // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery3Depletion;                                 // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery2Depletion;                                 // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery1Depletion;                                 // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery3Idle;                                      // 0x0388(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery2Idle;                                      // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Battery1Idle;                                      // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ClawTrapOpening;                                   // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              ClawTrapStatus;                                    // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              DarkBackground;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UK31StatusData*                         CacheData;                                         // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesKillerSeeFullyAffectedProgression;             // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesKillerSeeNotFullyAffectedProgression;          // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ClawMaterial;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               BatteryIdleAnims;                                  // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidgetAnimation*>               BatteryDepletionAnims;                             // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidgetAnimation*>               BatteryLockonAnims;                                // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWidgetAnimation*>               BatteryHideAnim;                                   // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NbBatteryIndexMax;                                 // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBatteryNumber;                              // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldBatteryNumber;                                  // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBatteryNumberChanged;                            // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAffectedChanged;                                 // 0x041D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAffected;                                        // 0x041E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClawTrappedChanged;                              // 0x041F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSurvivorClaws(class UK31StatusData* Data);
	void UpdateStoredValues(class UK31StatusData* Data);
	void UpdateKillerClaws(class UK31StatusData* Data);
	void SetKillerData(const struct FPlayerStatusViewData& Data);
	void SetK31Data(bool IsLocalKiller, class UK31StatusData* K31StatusData);
	void PreConstruct(bool IsDesignTime);
	void PlayBatteryAnimation(int32 BatteryIndex, bool IsOn, bool IsTrapped);
	void GetBatteryNumber(double LockonProgress, bool IsClawTrapped, int32* BatteryIndex);
	void ExecuteUbergraph_WBP_K31(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_K31_C">();
	}
	static class UWBP_K31_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_K31_C>();
	}
};
static_assert(alignof(UWBP_K31_C) == 0x000008, "Wrong alignment on UWBP_K31_C");
static_assert(sizeof(UWBP_K31_C) == 0x000420, "Wrong size on UWBP_K31_C");
static_assert(offsetof(UWBP_K31_C, UberGraphFrame) == 0x000338, "Member 'UWBP_K31_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery3Hide) == 0x000340, "Member 'UWBP_K31_C::Battery3Hide' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery2Hide) == 0x000348, "Member 'UWBP_K31_C::Battery2Hide' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery1Hide) == 0x000350, "Member 'UWBP_K31_C::Battery1Hide' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryLockon3) == 0x000358, "Member 'UWBP_K31_C::BatteryLockon3' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryLockon2) == 0x000360, "Member 'UWBP_K31_C::BatteryLockon2' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryLockon1) == 0x000368, "Member 'UWBP_K31_C::BatteryLockon1' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery3Depletion) == 0x000370, "Member 'UWBP_K31_C::Battery3Depletion' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery2Depletion) == 0x000378, "Member 'UWBP_K31_C::Battery2Depletion' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery1Depletion) == 0x000380, "Member 'UWBP_K31_C::Battery1Depletion' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery3Idle) == 0x000388, "Member 'UWBP_K31_C::Battery3Idle' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery2Idle) == 0x000390, "Member 'UWBP_K31_C::Battery2Idle' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, Battery1Idle) == 0x000398, "Member 'UWBP_K31_C::Battery1Idle' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, ClawTrapOpening) == 0x0003A0, "Member 'UWBP_K31_C::ClawTrapOpening' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, ClawTrapStatus) == 0x0003A8, "Member 'UWBP_K31_C::ClawTrapStatus' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, DarkBackground) == 0x0003B0, "Member 'UWBP_K31_C::DarkBackground' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, CacheData) == 0x0003B8, "Member 'UWBP_K31_C::CacheData' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, DoesKillerSeeFullyAffectedProgression) == 0x0003C0, "Member 'UWBP_K31_C::DoesKillerSeeFullyAffectedProgression' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, DoesKillerSeeNotFullyAffectedProgression) == 0x0003C1, "Member 'UWBP_K31_C::DoesKillerSeeNotFullyAffectedProgression' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, ClawMaterial) == 0x0003C8, "Member 'UWBP_K31_C::ClawMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryIdleAnims) == 0x0003D0, "Member 'UWBP_K31_C::BatteryIdleAnims' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryDepletionAnims) == 0x0003E0, "Member 'UWBP_K31_C::BatteryDepletionAnims' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryLockonAnims) == 0x0003F0, "Member 'UWBP_K31_C::BatteryLockonAnims' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, BatteryHideAnim) == 0x000400, "Member 'UWBP_K31_C::BatteryHideAnim' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, NbBatteryIndexMax) == 0x000410, "Member 'UWBP_K31_C::NbBatteryIndexMax' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, CurrentBatteryNumber) == 0x000414, "Member 'UWBP_K31_C::CurrentBatteryNumber' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, OldBatteryNumber) == 0x000418, "Member 'UWBP_K31_C::OldBatteryNumber' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, IsBatteryNumberChanged) == 0x00041C, "Member 'UWBP_K31_C::IsBatteryNumberChanged' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, IsAffectedChanged) == 0x00041D, "Member 'UWBP_K31_C::IsAffectedChanged' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, IsAffected) == 0x00041E, "Member 'UWBP_K31_C::IsAffected' has a wrong offset!");
static_assert(offsetof(UWBP_K31_C, IsClawTrappedChanged) == 0x00041F, "Member 'UWBP_K31_C::IsClawTrappedChanged' has a wrong offset!");

}

