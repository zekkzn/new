#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anniversary

#include "Basic.hpp"

#include "Anniversary_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeadByDaylight_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "GameplayTagUtilities_structs.hpp"
#include "NetworkUtilities_structs.hpp"


namespace SDK
{

// Class Anniversary.AnniversaryMarionette
// 0x0068 (0x0308 - 0x02A0)
class AAnniversaryMarionette final : public AActor
{
public:
	class URespawnableComponent*                  _respawnableComponent;                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 _dancerMask1;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 _dancerMask2;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _rotationRate;                                     // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       _playerTracker;                                    // 0x02C0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   _dancingCharacter;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMarionetteMeshData>            _potentialMarionetteMeshes;                        // 0x02D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class AActor>>             _potentialMasks;                                   // 0x02E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FName                                   _maskLSocketName;                                  // 0x02F0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   _maskRSocketName;                                  // 0x02FC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnPlayerTrackerBeginOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Cosmetic_OnMasksInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnniversaryMarionette">();
	}
	static class AAnniversaryMarionette* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnniversaryMarionette>();
	}
};
static_assert(alignof(AAnniversaryMarionette) == 0x000008, "Wrong alignment on AAnniversaryMarionette");
static_assert(sizeof(AAnniversaryMarionette) == 0x000308, "Wrong size on AAnniversaryMarionette");
static_assert(offsetof(AAnniversaryMarionette, _respawnableComponent) == 0x0002A0, "Member 'AAnniversaryMarionette::_respawnableComponent' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _dancerMask1) == 0x0002A8, "Member 'AAnniversaryMarionette::_dancerMask1' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _dancerMask2) == 0x0002B0, "Member 'AAnniversaryMarionette::_dancerMask2' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _rotationRate) == 0x0002B8, "Member 'AAnniversaryMarionette::_rotationRate' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _playerTracker) == 0x0002C0, "Member 'AAnniversaryMarionette::_playerTracker' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _dancingCharacter) == 0x0002C8, "Member 'AAnniversaryMarionette::_dancingCharacter' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _potentialMarionetteMeshes) == 0x0002D0, "Member 'AAnniversaryMarionette::_potentialMarionetteMeshes' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _potentialMasks) == 0x0002E0, "Member 'AAnniversaryMarionette::_potentialMasks' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _maskLSocketName) == 0x0002F0, "Member 'AAnniversaryMarionette::_maskLSocketName' has a wrong offset!");
static_assert(offsetof(AAnniversaryMarionette, _maskRSocketName) == 0x0002FC, "Member 'AAnniversaryMarionette::_maskRSocketName' has a wrong offset!");

// Class Anniversary.AnniversaryPlayerComponentInterface
// 0x0000 (0x0030 - 0x0030)
class IAnniversaryPlayerComponentInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnniversaryPlayerComponentInterface">();
	}
	static class IAnniversaryPlayerComponentInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAnniversaryPlayerComponentInterface>();
	}
};
static_assert(alignof(IAnniversaryPlayerComponentInterface) == 0x000008, "Wrong alignment on IAnniversaryPlayerComponentInterface");
static_assert(sizeof(IAnniversaryPlayerComponentInterface) == 0x000030, "Wrong size on IAnniversaryPlayerComponentInterface");

// Class Anniversary.CrownPickupInteraction
// 0x0030 (0x08F0 - 0x08C0)
class UCrownPickupInteraction final : public UChargeableInteractionDefinition
{
public:
	uint8                                         Pad_8C0[0x18];                                     // 0x08C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   _attachToSocketName;                               // 0x08D8(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           _pickupScoreEvent;                                 // 0x08E4(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrownPickupInteraction">();
	}
	static class UCrownPickupInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrownPickupInteraction>();
	}
};
static_assert(alignof(UCrownPickupInteraction) == 0x000010, "Wrong alignment on UCrownPickupInteraction");
static_assert(sizeof(UCrownPickupInteraction) == 0x0008F0, "Wrong size on UCrownPickupInteraction");
static_assert(offsetof(UCrownPickupInteraction, _attachToSocketName) == 0x0008D8, "Member 'UCrownPickupInteraction::_attachToSocketName' has a wrong offset!");
static_assert(offsetof(UCrownPickupInteraction, _pickupScoreEvent) == 0x0008E4, "Member 'UCrownPickupInteraction::_pickupScoreEvent' has a wrong offset!");

// Class Anniversary.CrownPillarInteractable
// 0x0108 (0x04B0 - 0x03A8)
class ACrownPillarInteractable final : public AInteractable
{
public:
	struct FDBDTunableRowHandle                   _crownPillarInteractionSecondsToCharge;            // 0x03A8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _crownPillarInteractionSecondsToChargeKiller;      // 0x03D0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _offeringEnabledAuraVisibilityDistance;            // 0x03F8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _defaultAuraVisibilityDistance;                    // 0x0420(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                   _anniversaryOfferingTag;                           // 0x0448(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCrownPickupInteraction*                _crownPillarInteraction;                           // 0x0458(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCrownPickupInteraction*                _crownPillarInteractionKiller;                     // 0x0460(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _crownPillarInteractionChargeable;                 // 0x0468(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                   _crownPillarInteractionChargeableKiller;           // 0x0470(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                            _crownPillarInteractor;                            // 0x0478(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                    _crownPillarInteractionZone;                       // 0x0480(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   _crownPillarStaticMesh;                            // 0x0488(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNearTrackedActorComponent*             _nearTrackedActorComponent;                        // 0x0498(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCrownPillarOutlineUpdateStrategy*      _crownPillarOutlineUpdateStrategy;                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpecialEventInteractableCooldownComponent* _cooldownComponent;                                // 0x04A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_Activate();
	void Cosmetic_DespawnPillar();
	void Cosmetic_OnInteractionCancelled();
	void Cosmetic_OnInteractionCompleted(class ADBDPlayer* InteractingPlayer);
	void Cosmetic_OnStartedInteracting(class ADBDPlayer* InteractingPlayer, float InteractionDuration);
	void Cosmetic_OnStoppedInteracting();
	void Local_OnIntroCompleted();
	void OnLocallyObservedChanged();

	bool IsLocallyObservedPlayerEquippedWithAnniversaryOffering() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrownPillarInteractable">();
	}
	static class ACrownPillarInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACrownPillarInteractable>();
	}
};
static_assert(alignof(ACrownPillarInteractable) == 0x000008, "Wrong alignment on ACrownPillarInteractable");
static_assert(sizeof(ACrownPillarInteractable) == 0x0004B0, "Wrong size on ACrownPillarInteractable");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionSecondsToCharge) == 0x0003A8, "Member 'ACrownPillarInteractable::_crownPillarInteractionSecondsToCharge' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionSecondsToChargeKiller) == 0x0003D0, "Member 'ACrownPillarInteractable::_crownPillarInteractionSecondsToChargeKiller' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _offeringEnabledAuraVisibilityDistance) == 0x0003F8, "Member 'ACrownPillarInteractable::_offeringEnabledAuraVisibilityDistance' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _defaultAuraVisibilityDistance) == 0x000420, "Member 'ACrownPillarInteractable::_defaultAuraVisibilityDistance' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _anniversaryOfferingTag) == 0x000448, "Member 'ACrownPillarInteractable::_anniversaryOfferingTag' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteraction) == 0x000458, "Member 'ACrownPillarInteractable::_crownPillarInteraction' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionKiller) == 0x000460, "Member 'ACrownPillarInteractable::_crownPillarInteractionKiller' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionChargeable) == 0x000468, "Member 'ACrownPillarInteractable::_crownPillarInteractionChargeable' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionChargeableKiller) == 0x000470, "Member 'ACrownPillarInteractable::_crownPillarInteractionChargeableKiller' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractor) == 0x000478, "Member 'ACrownPillarInteractable::_crownPillarInteractor' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarInteractionZone) == 0x000480, "Member 'ACrownPillarInteractable::_crownPillarInteractionZone' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarStaticMesh) == 0x000488, "Member 'ACrownPillarInteractable::_crownPillarStaticMesh' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _outlineComponent) == 0x000490, "Member 'ACrownPillarInteractable::_outlineComponent' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _nearTrackedActorComponent) == 0x000498, "Member 'ACrownPillarInteractable::_nearTrackedActorComponent' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _crownPillarOutlineUpdateStrategy) == 0x0004A0, "Member 'ACrownPillarInteractable::_crownPillarOutlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ACrownPillarInteractable, _cooldownComponent) == 0x0004A8, "Member 'ACrownPillarInteractable::_cooldownComponent' has a wrong offset!");

// Class Anniversary.CrownPillarOutlineUpdateStrategy
// 0x0010 (0x00E0 - 0x00D0)
class UCrownPillarOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                           _offeringEnabledAuraColor;                         // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrownPillarOutlineUpdateStrategy">();
	}
	static class UCrownPillarOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrownPillarOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UCrownPillarOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UCrownPillarOutlineUpdateStrategy");
static_assert(sizeof(UCrownPillarOutlineUpdateStrategy) == 0x0000E0, "Wrong size on UCrownPillarOutlineUpdateStrategy");
static_assert(offsetof(UCrownPillarOutlineUpdateStrategy, _offeringEnabledAuraColor) == 0x0000D0, "Member 'UCrownPillarOutlineUpdateStrategy::_offeringEnabledAuraColor' has a wrong offset!");

// Class Anniversary.CrownPlayerComponent
// 0x00F0 (0x03B0 - 0x02C0)
class UCrownPlayerComponent final : public USceneComponent
{
public:
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  _crownVFXParticleDeactivateTags;                   // 0x02E0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  _unhookGameEvents;                                 // 0x0300(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTagStateBool                          _isCrownEventActive;                               // 0x0320(0x0048)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x48];                                     // 0x0368(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_SetVFXParticlesVisibility(bool Param_IsVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrownPlayerComponent">();
	}
	static class UCrownPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrownPlayerComponent>();
	}
};
static_assert(alignof(UCrownPlayerComponent) == 0x000010, "Wrong alignment on UCrownPlayerComponent");
static_assert(sizeof(UCrownPlayerComponent) == 0x0003B0, "Wrong size on UCrownPlayerComponent");
static_assert(offsetof(UCrownPlayerComponent, _crownVFXParticleDeactivateTags) == 0x0002E0, "Member 'UCrownPlayerComponent::_crownVFXParticleDeactivateTags' has a wrong offset!");
static_assert(offsetof(UCrownPlayerComponent, _unhookGameEvents) == 0x000300, "Member 'UCrownPlayerComponent::_unhookGameEvents' has a wrong offset!");
static_assert(offsetof(UCrownPlayerComponent, _isCrownEventActive) == 0x000320, "Member 'UCrownPlayerComponent::_isCrownEventActive' has a wrong offset!");

// Class Anniversary.InvitationInteractionDefinition
// 0x0040 (0x07C0 - 0x0780)
#pragma pack(push, 0x1)
class alignas(0x10) UInvitationInteractionDefinition : public UInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _abilityRange;                                     // 0x0778(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7A0[0x18];                                     // 0x07A0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_TrySetInvitationTarget(class AActor* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InvitationInteractionDefinition">();
	}
	static class UInvitationInteractionDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvitationInteractionDefinition>();
	}
};
#pragma pack(pop)
static_assert(alignof(UInvitationInteractionDefinition) == 0x000010, "Wrong alignment on UInvitationInteractionDefinition");
static_assert(sizeof(UInvitationInteractionDefinition) == 0x0007C0, "Wrong size on UInvitationInteractionDefinition");
static_assert(offsetof(UInvitationInteractionDefinition, _abilityRange) == 0x000778, "Member 'UInvitationInteractionDefinition::_abilityRange' has a wrong offset!");

// Class Anniversary.InvitationPlayerComponent
// 0x03F8 (0x04A0 - 0x00A8)
class UInvitationPlayerComponent : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x189];                                     // 0x00A8(0x0189)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isInEndGame;                                      // 0x0231(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpeedBasedNetSyncedValue              _invitationCharges;                                // 0x0238(0x0038)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         _invitationChargesInt;                             // 0x0270(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimerObject*                           _cooldownTimer;                                    // 0x0278(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_280[0x58];                                     // 0x0280(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      _particleVFXDeactivateTags;                        // 0x02D8(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _invitationChargeGain;                             // 0x0320(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _maxNumberOfCharges;                               // 0x0348(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _chargeRechargeRateInChase;                        // 0x0370(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _chargeRechargeRate;                               // 0x0398(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _abilityCooldown;                                  // 0x03C0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          _canRechargeOutOfChase;                            // 0x03E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UInvitationInteractionDefinition>> _invitationInteractionClasses;                     // 0x03F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x18];                                     // 0x0400(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      _disablingPlayerTargetComponentTagsQuery;          // 0x0418(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_460[0x10];                                     // 0x0460(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionAttacherComponent*          _interactionAttacherComponent;                     // 0x0470(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x28];                                     // 0x0478(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnInvitationChargesIntChanged(int32 InvitationCharge);
	void Cosmetic_OnInvitationInteractionActivate(class ADBDPlayer* AbilityCaster, class AActor* Target);
	void Cosmetic_OnInvitationInteractionReady(bool IsReady);
	void Cosmetic_OnPlayerInChaseStateChanged(bool InChase);
	void Cosmetic_SetVFXParticlesVisibility(bool IsVisible);
	void Multicast_CosmeticOnInvitationInteractionActivate(class ADBDPlayer* Player, class AActor* Target);
	void OnLevelReadyToPlay();
	void OnRep_CooldownTimer();
	void OnRep_InvitationChargesInt();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InvitationPlayerComponent">();
	}
	static class UInvitationPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvitationPlayerComponent>();
	}
};
static_assert(alignof(UInvitationPlayerComponent) == 0x000008, "Wrong alignment on UInvitationPlayerComponent");
static_assert(sizeof(UInvitationPlayerComponent) == 0x0004A0, "Wrong size on UInvitationPlayerComponent");
static_assert(offsetof(UInvitationPlayerComponent, _isInEndGame) == 0x000231, "Member 'UInvitationPlayerComponent::_isInEndGame' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _invitationCharges) == 0x000238, "Member 'UInvitationPlayerComponent::_invitationCharges' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _invitationChargesInt) == 0x000270, "Member 'UInvitationPlayerComponent::_invitationChargesInt' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _cooldownTimer) == 0x000278, "Member 'UInvitationPlayerComponent::_cooldownTimer' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _particleVFXDeactivateTags) == 0x0002D8, "Member 'UInvitationPlayerComponent::_particleVFXDeactivateTags' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _invitationChargeGain) == 0x000320, "Member 'UInvitationPlayerComponent::_invitationChargeGain' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _maxNumberOfCharges) == 0x000348, "Member 'UInvitationPlayerComponent::_maxNumberOfCharges' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _chargeRechargeRateInChase) == 0x000370, "Member 'UInvitationPlayerComponent::_chargeRechargeRateInChase' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _chargeRechargeRate) == 0x000398, "Member 'UInvitationPlayerComponent::_chargeRechargeRate' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _abilityCooldown) == 0x0003C0, "Member 'UInvitationPlayerComponent::_abilityCooldown' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _canRechargeOutOfChase) == 0x0003E8, "Member 'UInvitationPlayerComponent::_canRechargeOutOfChase' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _invitationInteractionClasses) == 0x0003F0, "Member 'UInvitationPlayerComponent::_invitationInteractionClasses' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _disablingPlayerTargetComponentTagsQuery) == 0x000418, "Member 'UInvitationPlayerComponent::_disablingPlayerTargetComponentTagsQuery' has a wrong offset!");
static_assert(offsetof(UInvitationPlayerComponent, _interactionAttacherComponent) == 0x000470, "Member 'UInvitationPlayerComponent::_interactionAttacherComponent' has a wrong offset!");

// Class Anniversary.InvitationTargetComponent
// 0x0050 (0x00F8 - 0x00A8)
class UInvitationTargetComponent : public UActorComponent
{
public:
	float                                         _interactionAngleInDegrees;                        // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           _revealColor;                                      // 0x00AC(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x14];                                      // 0x00BC(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _abilityTargetMaxHeightDifference;                 // 0x00D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Cosmetic_OnTargetObjectChanged(class AActor* Target, class AActor* LastTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InvitationTargetComponent">();
	}
	static class UInvitationTargetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInvitationTargetComponent>();
	}
};
static_assert(alignof(UInvitationTargetComponent) == 0x000008, "Wrong alignment on UInvitationTargetComponent");
static_assert(sizeof(UInvitationTargetComponent) == 0x0000F8, "Wrong size on UInvitationTargetComponent");
static_assert(offsetof(UInvitationTargetComponent, _interactionAngleInDegrees) == 0x0000A8, "Member 'UInvitationTargetComponent::_interactionAngleInDegrees' has a wrong offset!");
static_assert(offsetof(UInvitationTargetComponent, _revealColor) == 0x0000AC, "Member 'UInvitationTargetComponent::_revealColor' has a wrong offset!");
static_assert(offsetof(UInvitationTargetComponent, _abilityTargetMaxHeightDifference) == 0x0000D0, "Member 'UInvitationTargetComponent::_abilityTargetMaxHeightDifference' has a wrong offset!");

// Class Anniversary.PalletTrackerSpawnerComponent
// 0x0008 (0x00B0 - 0x00A8)
class UPalletTrackerSpawnerComponent final : public UActorComponent
{
public:
	TSubclassOf<class UPalletTrackerVisibilityComponent> _palletTrackerVisibilityComponentClass;            // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_InitializePalletTrackers();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PalletTrackerSpawnerComponent">();
	}
	static class UPalletTrackerSpawnerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPalletTrackerSpawnerComponent>();
	}
};
static_assert(alignof(UPalletTrackerSpawnerComponent) == 0x000008, "Wrong alignment on UPalletTrackerSpawnerComponent");
static_assert(sizeof(UPalletTrackerSpawnerComponent) == 0x0000B0, "Wrong size on UPalletTrackerSpawnerComponent");
static_assert(offsetof(UPalletTrackerSpawnerComponent, _palletTrackerVisibilityComponentClass) == 0x0000A8, "Member 'UPalletTrackerSpawnerComponent::_palletTrackerVisibilityComponentClass' has a wrong offset!");

}

