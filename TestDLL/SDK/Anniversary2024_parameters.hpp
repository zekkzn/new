#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anniversary2024

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function Anniversary2024.Anniversary2024EventCheatComponent.DBD_ForceTryksDraw
// 0x0010 (0x0010 - 0x0000)
struct Anniversary2024EventCheatComponent_DBD_ForceTryksDraw final
{
public:
	class FString                                 CardIds;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024EventCheatComponent_DBD_ForceTryksDraw) == 0x000008, "Wrong alignment on Anniversary2024EventCheatComponent_DBD_ForceTryksDraw");
static_assert(sizeof(Anniversary2024EventCheatComponent_DBD_ForceTryksDraw) == 0x000010, "Wrong size on Anniversary2024EventCheatComponent_DBD_ForceTryksDraw");
static_assert(offsetof(Anniversary2024EventCheatComponent_DBD_ForceTryksDraw, CardIds) == 0x000000, "Member 'Anniversary2024EventCheatComponent_DBD_ForceTryksDraw::CardIds' has a wrong offset!");

// Function Anniversary2024.Anniversary2024TryksBase.HideTryks
// 0x0001 (0x0001 - 0x0000)
struct Anniversary2024TryksBase_HideTryks final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024TryksBase_HideTryks) == 0x000001, "Wrong alignment on Anniversary2024TryksBase_HideTryks");
static_assert(sizeof(Anniversary2024TryksBase_HideTryks) == 0x000001, "Wrong size on Anniversary2024TryksBase_HideTryks");
static_assert(offsetof(Anniversary2024TryksBase_HideTryks, ReturnValue) == 0x000000, "Member 'Anniversary2024TryksBase_HideTryks::ReturnValue' has a wrong offset!");

// Function Anniversary2024.Anniversary2024TryksBase.SetNextTryksAudioFromGameEvent
// 0x0010 (0x0010 - 0x0000)
struct Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent) == 0x000004, "Wrong alignment on Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent");
static_assert(sizeof(Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent) == 0x000010, "Wrong size on Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent");
static_assert(offsetof(Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent, EventTag) == 0x000000, "Member 'Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent::EventTag' has a wrong offset!");
static_assert(offsetof(Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent, ReturnValue) == 0x00000C, "Member 'Anniversary2024TryksBase_SetNextTryksAudioFromGameEvent::ReturnValue' has a wrong offset!");

// Function Anniversary2024.Anniversary2024TryksBase.ShowTryks
// 0x0001 (0x0001 - 0x0000)
struct Anniversary2024TryksBase_ShowTryks final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024TryksBase_ShowTryks) == 0x000001, "Wrong alignment on Anniversary2024TryksBase_ShowTryks");
static_assert(sizeof(Anniversary2024TryksBase_ShowTryks) == 0x000001, "Wrong size on Anniversary2024TryksBase_ShowTryks");
static_assert(offsetof(Anniversary2024TryksBase_ShowTryks, ReturnValue) == 0x000000, "Member 'Anniversary2024TryksBase_ShowTryks::ReturnValue' has a wrong offset!");

// Function Anniversary2024.Anniversary2024TryksBase.IsTryksAudioSet
// 0x0001 (0x0001 - 0x0000)
struct Anniversary2024TryksBase_IsTryksAudioSet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024TryksBase_IsTryksAudioSet) == 0x000001, "Wrong alignment on Anniversary2024TryksBase_IsTryksAudioSet");
static_assert(sizeof(Anniversary2024TryksBase_IsTryksAudioSet) == 0x000001, "Wrong size on Anniversary2024TryksBase_IsTryksAudioSet");
static_assert(offsetof(Anniversary2024TryksBase_IsTryksAudioSet, ReturnValue) == 0x000000, "Member 'Anniversary2024TryksBase_IsTryksAudioSet::ReturnValue' has a wrong offset!");

// Function Anniversary2024.Anniversary2024LobbyTryks.K2_TryksPeek
// 0x0001 (0x0001 - 0x0000)
struct Anniversary2024LobbyTryks_K2_TryksPeek final
{
public:
	EDBDCameraViewType                            ViewType;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024LobbyTryks_K2_TryksPeek) == 0x000001, "Wrong alignment on Anniversary2024LobbyTryks_K2_TryksPeek");
static_assert(sizeof(Anniversary2024LobbyTryks_K2_TryksPeek) == 0x000001, "Wrong size on Anniversary2024LobbyTryks_K2_TryksPeek");
static_assert(offsetof(Anniversary2024LobbyTryks_K2_TryksPeek, ViewType) == 0x000000, "Member 'Anniversary2024LobbyTryks_K2_TryksPeek::ViewType' has a wrong offset!");

// Function Anniversary2024.Anniversary2024Tryks.Cosmetic_SetupAnimationType
// 0x0010 (0x0010 - 0x0000)
struct Anniversary2024Tryks_Cosmetic_SetupAnimationType final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EndGameVariant;                                    // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Anniversary2024Tryks_Cosmetic_SetupAnimationType) == 0x000008, "Wrong alignment on Anniversary2024Tryks_Cosmetic_SetupAnimationType");
static_assert(sizeof(Anniversary2024Tryks_Cosmetic_SetupAnimationType) == 0x000010, "Wrong size on Anniversary2024Tryks_Cosmetic_SetupAnimationType");
static_assert(offsetof(Anniversary2024Tryks_Cosmetic_SetupAnimationType, Player) == 0x000000, "Member 'Anniversary2024Tryks_Cosmetic_SetupAnimationType::Player' has a wrong offset!");
static_assert(offsetof(Anniversary2024Tryks_Cosmetic_SetupAnimationType, EndGameVariant) == 0x000008, "Member 'Anniversary2024Tryks_Cosmetic_SetupAnimationType::EndGameVariant' has a wrong offset!");

// Function Anniversary2024.Anniversary2024Tryks.Cosmetic_TryksTookOverMarionette
// 0x0008 (0x0008 - 0x0000)
struct Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette final
{
public:
	const class AAnniversaryMarionette*           Marionette;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette) == 0x000008, "Wrong alignment on Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette");
static_assert(sizeof(Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette) == 0x000008, "Wrong size on Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette");
static_assert(offsetof(Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette, Marionette) == 0x000000, "Member 'Anniversary2024Tryks_Cosmetic_TryksTookOverMarionette::Marionette' has a wrong offset!");

// Function Anniversary2024.QuietModeInteraction.Authority_OnDamageStateChanged
// 0x0002 (0x0002 - 0x0000)
struct QuietModeInteraction_Authority_OnDamageStateChanged final
{
public:
	ECamperDamageState                            OldDamageState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            NewDamageState;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuietModeInteraction_Authority_OnDamageStateChanged) == 0x000001, "Wrong alignment on QuietModeInteraction_Authority_OnDamageStateChanged");
static_assert(sizeof(QuietModeInteraction_Authority_OnDamageStateChanged) == 0x000002, "Wrong size on QuietModeInteraction_Authority_OnDamageStateChanged");
static_assert(offsetof(QuietModeInteraction_Authority_OnDamageStateChanged, OldDamageState) == 0x000000, "Member 'QuietModeInteraction_Authority_OnDamageStateChanged::OldDamageState' has a wrong offset!");
static_assert(offsetof(QuietModeInteraction_Authority_OnDamageStateChanged, NewDamageState) == 0x000001, "Member 'QuietModeInteraction_Authority_OnDamageStateChanged::NewDamageState' has a wrong offset!");

// Function Anniversary2024.QuietModeInteraction.Cosmetic_Activated
// 0x0008 (0x0008 - 0x0000)
struct QuietModeInteraction_Cosmetic_Activated final
{
public:
	class ACamperPlayer*                          ActivatingSurvivor;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuietModeInteraction_Cosmetic_Activated) == 0x000008, "Wrong alignment on QuietModeInteraction_Cosmetic_Activated");
static_assert(sizeof(QuietModeInteraction_Cosmetic_Activated) == 0x000008, "Wrong size on QuietModeInteraction_Cosmetic_Activated");
static_assert(offsetof(QuietModeInteraction_Cosmetic_Activated, ActivatingSurvivor) == 0x000000, "Member 'QuietModeInteraction_Cosmetic_Activated::ActivatingSurvivor' has a wrong offset!");

// Function Anniversary2024.QuietModeInteraction.Cosmetic_Deactivated
// 0x0008 (0x0008 - 0x0000)
struct QuietModeInteraction_Cosmetic_Deactivated final
{
public:
	class ACamperPlayer*                          ActivatingSurvivor;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QuietModeInteraction_Cosmetic_Deactivated) == 0x000008, "Wrong alignment on QuietModeInteraction_Cosmetic_Deactivated");
static_assert(sizeof(QuietModeInteraction_Cosmetic_Deactivated) == 0x000008, "Wrong size on QuietModeInteraction_Cosmetic_Deactivated");
static_assert(offsetof(QuietModeInteraction_Cosmetic_Deactivated, ActivatingSurvivor) == 0x000000, "Member 'QuietModeInteraction_Cosmetic_Deactivated::ActivatingSurvivor' has a wrong offset!");

// Function Anniversary2024.RemoteHookInteraction.Cosmetic_BeginRemoteHook
// 0x0008 (0x0008 - 0x0000)
struct RemoteHookInteraction_Cosmetic_BeginRemoteHook final
{
public:
	class ACamperPlayer*                          SurvivorBeingHooked;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteHookInteraction_Cosmetic_BeginRemoteHook) == 0x000008, "Wrong alignment on RemoteHookInteraction_Cosmetic_BeginRemoteHook");
static_assert(sizeof(RemoteHookInteraction_Cosmetic_BeginRemoteHook) == 0x000008, "Wrong size on RemoteHookInteraction_Cosmetic_BeginRemoteHook");
static_assert(offsetof(RemoteHookInteraction_Cosmetic_BeginRemoteHook, SurvivorBeingHooked) == 0x000000, "Member 'RemoteHookInteraction_Cosmetic_BeginRemoteHook::SurvivorBeingHooked' has a wrong offset!");

// Function Anniversary2024.RemoteHookInteraction.Cosmetic_RemoteHookSurvivor
// 0x0008 (0x0008 - 0x0000)
struct RemoteHookInteraction_Cosmetic_RemoteHookSurvivor final
{
public:
	class ACamperPlayer*                          SurvivorBeingHooked;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteHookInteraction_Cosmetic_RemoteHookSurvivor) == 0x000008, "Wrong alignment on RemoteHookInteraction_Cosmetic_RemoteHookSurvivor");
static_assert(sizeof(RemoteHookInteraction_Cosmetic_RemoteHookSurvivor) == 0x000008, "Wrong size on RemoteHookInteraction_Cosmetic_RemoteHookSurvivor");
static_assert(offsetof(RemoteHookInteraction_Cosmetic_RemoteHookSurvivor, SurvivorBeingHooked) == 0x000000, "Member 'RemoteHookInteraction_Cosmetic_RemoteHookSurvivor::SurvivorBeingHooked' has a wrong offset!");

// Function Anniversary2024.RemoteHookInteraction.Multicast_RemoteHook
// 0x0010 (0x0010 - 0x0000)
struct RemoteHookInteraction_Multicast_RemoteHook final
{
public:
	class ACamperPlayer*                          SurvivorBeingHooked;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AMeatHook*                              SelectedHook;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteHookInteraction_Multicast_RemoteHook) == 0x000008, "Wrong alignment on RemoteHookInteraction_Multicast_RemoteHook");
static_assert(sizeof(RemoteHookInteraction_Multicast_RemoteHook) == 0x000010, "Wrong size on RemoteHookInteraction_Multicast_RemoteHook");
static_assert(offsetof(RemoteHookInteraction_Multicast_RemoteHook, SurvivorBeingHooked) == 0x000000, "Member 'RemoteHookInteraction_Multicast_RemoteHook::SurvivorBeingHooked' has a wrong offset!");
static_assert(offsetof(RemoteHookInteraction_Multicast_RemoteHook, SelectedHook) == 0x000008, "Member 'RemoteHookInteraction_Multicast_RemoteHook::SelectedHook' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Cosmetic_OnCardActivated
// 0x0008 (0x0008 - 0x0000)
struct TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated final
{
public:
	class UTryksCard*                             Card;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated");
static_assert(sizeof(TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated) == 0x000008, "Wrong size on TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated");
static_assert(offsetof(TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated, Card) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Cosmetic_OnCardActivated::Card' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Cosmetic_OnCardDeactivated
// 0x0008 (0x0008 - 0x0000)
struct TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated final
{
public:
	class UTryksCard*                             Card;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated");
static_assert(sizeof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated) == 0x000008, "Wrong size on TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated");
static_assert(offsetof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated, Card) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivated::Card' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Cosmetic_OnCardDeactivatedDueToNothingHappened
// 0x0008 (0x0008 - 0x0000)
struct TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened final
{
public:
	class UTryksCard*                             Card;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened");
static_assert(sizeof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened) == 0x000008, "Wrong size on TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened");
static_assert(offsetof(TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened, Card) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Cosmetic_OnCardDeactivatedDueToNothingHappened::Card' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Cosmetic_OnCardEffectCompleted
// 0x0008 (0x0008 - 0x0000)
struct TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted final
{
public:
	class UTryksCard*                             Card;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted");
static_assert(sizeof(TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted) == 0x000008, "Wrong size on TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted");
static_assert(offsetof(TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted, Card) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Cosmetic_OnCardEffectCompleted::Card' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Cosmetic_OnPointGained
// 0x0004 (0x0004 - 0x0000)
struct TryksEffectCardsControllerComponent_Cosmetic_OnPointGained final
{
public:
	int32                                         CurrentPoints;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Cosmetic_OnPointGained) == 0x000004, "Wrong alignment on TryksEffectCardsControllerComponent_Cosmetic_OnPointGained");
static_assert(sizeof(TryksEffectCardsControllerComponent_Cosmetic_OnPointGained) == 0x000004, "Wrong size on TryksEffectCardsControllerComponent_Cosmetic_OnPointGained");
static_assert(offsetof(TryksEffectCardsControllerComponent_Cosmetic_OnPointGained, CurrentPoints) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Cosmetic_OnPointGained::CurrentPoints' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Multicast_CreateCards
// 0x0010 (0x0010 - 0x0000)
struct TryksEffectCardsControllerComponent_Multicast_CreateCards final
{
public:
	TArray<class FString>                         DrawnCardsNames;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Multicast_CreateCards) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Multicast_CreateCards");
static_assert(sizeof(TryksEffectCardsControllerComponent_Multicast_CreateCards) == 0x000010, "Wrong size on TryksEffectCardsControllerComponent_Multicast_CreateCards");
static_assert(offsetof(TryksEffectCardsControllerComponent_Multicast_CreateCards, DrawnCardsNames) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Multicast_CreateCards::DrawnCardsNames' has a wrong offset!");

// Function Anniversary2024.TryksEffectCardsControllerComponent.Multicast_RedrawCards
// 0x0010 (0x0010 - 0x0000)
struct TryksEffectCardsControllerComponent_Multicast_RedrawCards final
{
public:
	TArray<class FString>                         DrawnCardsNames;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(TryksEffectCardsControllerComponent_Multicast_RedrawCards) == 0x000008, "Wrong alignment on TryksEffectCardsControllerComponent_Multicast_RedrawCards");
static_assert(sizeof(TryksEffectCardsControllerComponent_Multicast_RedrawCards) == 0x000010, "Wrong size on TryksEffectCardsControllerComponent_Multicast_RedrawCards");
static_assert(offsetof(TryksEffectCardsControllerComponent_Multicast_RedrawCards, DrawnCardsNames) == 0x000000, "Member 'TryksEffectCardsControllerComponent_Multicast_RedrawCards::DrawnCardsNames' has a wrong offset!");

}

