#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Firecracker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "TheClown_structs.hpp"


namespace SDK::Params
{

// Function BP_Firecracker.BP_Firecracker_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Firecracker_C_ReceiveEndPlay");
static_assert(sizeof(BP_Firecracker_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Firecracker_C_ReceiveEndPlay");
static_assert(offsetof(BP_Firecracker_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Firecracker_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.OnFuseBurnUpdate
// 0x0008 (0x0008 - 0x0000)
struct BP_Firecracker_C_OnFuseBurnUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuseTimeLeftPercent;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_OnFuseBurnUpdate) == 0x000004, "Wrong alignment on BP_Firecracker_C_OnFuseBurnUpdate");
static_assert(sizeof(BP_Firecracker_C_OnFuseBurnUpdate) == 0x000008, "Wrong size on BP_Firecracker_C_OnFuseBurnUpdate");
static_assert(offsetof(BP_Firecracker_C_OnFuseBurnUpdate, DeltaSeconds) == 0x000000, "Member 'BP_Firecracker_C_OnFuseBurnUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_OnFuseBurnUpdate, FuseTimeLeftPercent) == 0x000004, "Member 'BP_Firecracker_C_OnFuseBurnUpdate::FuseTimeLeftPercent' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K22_WrongLandingVignette
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K22_WrongLandingVignette final
{
public:
	bool                                          WrongLanding;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K22_WrongLandingVignette) == 0x000001, "Wrong alignment on BP_Firecracker_C_K22_WrongLandingVignette");
static_assert(sizeof(BP_Firecracker_C_K22_WrongLandingVignette) == 0x000001, "Wrong size on BP_Firecracker_C_K22_WrongLandingVignette");
static_assert(offsetof(BP_Firecracker_C_K22_WrongLandingVignette, WrongLanding) == 0x000000, "Member 'BP_Firecracker_C_K22_WrongLandingVignette::WrongLanding' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K22_WrongLanding
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K22_WrongLanding final
{
public:
	bool                                          Wrong_Landing;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K22_WrongLanding) == 0x000001, "Wrong alignment on BP_Firecracker_C_K22_WrongLanding");
static_assert(sizeof(BP_Firecracker_C_K22_WrongLanding) == 0x000001, "Wrong size on BP_Firecracker_C_K22_WrongLanding");
static_assert(offsetof(BP_Firecracker_C_K22_WrongLanding, Wrong_Landing) == 0x000000, "Member 'BP_Firecracker_C_K22_WrongLanding::Wrong_Landing' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K22_IsAttachedLocker
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K22_IsAttachedLocker final
{
public:
	bool                                          IsAttachedLocker;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K22_IsAttachedLocker) == 0x000001, "Wrong alignment on BP_Firecracker_C_K22_IsAttachedLocker");
static_assert(sizeof(BP_Firecracker_C_K22_IsAttachedLocker) == 0x000001, "Wrong size on BP_Firecracker_C_K22_IsAttachedLocker");
static_assert(offsetof(BP_Firecracker_C_K22_IsAttachedLocker, IsAttachedLocker) == 0x000000, "Member 'BP_Firecracker_C_K22_IsAttachedLocker::IsAttachedLocker' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K22_HighlightDormantMain
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K22_HighlightDormantMain final
{
public:
	bool                                          IsDormantMain_;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K22_HighlightDormantMain) == 0x000001, "Wrong alignment on BP_Firecracker_C_K22_HighlightDormantMain");
static_assert(sizeof(BP_Firecracker_C_K22_HighlightDormantMain) == 0x000001, "Wrong size on BP_Firecracker_C_K22_HighlightDormantMain");
static_assert(offsetof(BP_Firecracker_C_K22_HighlightDormantMain, IsDormantMain_) == 0x000000, "Member 'BP_Firecracker_C_K22_HighlightDormantMain::IsDormantMain_' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K22_HighlightDormant
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K22_HighlightDormant final
{
public:
	bool                                          IsDormant_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K22_HighlightDormant) == 0x000001, "Wrong alignment on BP_Firecracker_C_K22_HighlightDormant");
static_assert(sizeof(BP_Firecracker_C_K22_HighlightDormant) == 0x000001, "Wrong size on BP_Firecracker_C_K22_HighlightDormant");
static_assert(offsetof(BP_Firecracker_C_K22_HighlightDormant, IsDormant_) == 0x000000, "Member 'BP_Firecracker_C_K22_HighlightDormant::IsDormant_' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.K12_GetToxinVignette
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_K12_GetToxinVignette final
{
public:
	EBombType                                     Bomb_Type;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_K12_GetToxinVignette) == 0x000001, "Wrong alignment on BP_Firecracker_C_K12_GetToxinVignette");
static_assert(sizeof(BP_Firecracker_C_K12_GetToxinVignette) == 0x000001, "Wrong size on BP_Firecracker_C_K12_GetToxinVignette");
static_assert(offsetof(BP_Firecracker_C_K12_GetToxinVignette, Bomb_Type) == 0x000000, "Member 'BP_Firecracker_C_K12_GetToxinVignette::Bomb_Type' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.FX_Sparks
// 0x0018 (0x0018 - 0x0000)
struct BP_Firecracker_C_FX_Sparks final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_FX_Sparks) == 0x000004, "Wrong alignment on BP_Firecracker_C_FX_Sparks");
static_assert(sizeof(BP_Firecracker_C_FX_Sparks) == 0x000018, "Wrong size on BP_Firecracker_C_FX_Sparks");
static_assert(offsetof(BP_Firecracker_C_FX_Sparks, Temp_delegate_Variable) == 0x000000, "Member 'BP_Firecracker_C_FX_Sparks::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_FX_Sparks, CallFunc_PostAkEvent_ReturnValue) == 0x000014, "Member 'BP_Firecracker_C_FX_Sparks::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.FX_OnFuseBurnUpdate
// 0x0008 (0x0008 - 0x0000)
struct BP_Firecracker_C_FX_OnFuseBurnUpdate final
{
public:
	double                                        FuseTimeLeftPercent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_FX_OnFuseBurnUpdate) == 0x000008, "Wrong alignment on BP_Firecracker_C_FX_OnFuseBurnUpdate");
static_assert(sizeof(BP_Firecracker_C_FX_OnFuseBurnUpdate) == 0x000008, "Wrong size on BP_Firecracker_C_FX_OnFuseBurnUpdate");
static_assert(offsetof(BP_Firecracker_C_FX_OnFuseBurnUpdate, FuseTimeLeftPercent) == 0x000000, "Member 'BP_Firecracker_C_FX_OnFuseBurnUpdate::FuseTimeLeftPercent' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.FireLoudNoise
// 0x0020 (0x0020 - 0x0000)
struct BP_Firecracker_C_FireLoudNoise final
{
public:
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_FireLoudNoise) == 0x000008, "Wrong alignment on BP_Firecracker_C_FireLoudNoise");
static_assert(sizeof(BP_Firecracker_C_FireLoudNoise) == 0x000020, "Wrong size on BP_Firecracker_C_FireLoudNoise");
static_assert(offsetof(BP_Firecracker_C_FireLoudNoise, CallFunc_GetTunableValue_ReturnValue) == 0x000000, "Member 'BP_Firecracker_C_FireLoudNoise::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_FireLoudNoise, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_Firecracker_C_FireLoudNoise::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.ExecuteUbergraph_BP_Firecracker
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDormantMain_;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDormant_;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Wrong_Landing;                        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WrongLanding;                         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBombType                                     K2Node_Event_Bomb_Type;                            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsAttachedLocker;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMaterialInstanceDynamic*         K2Node_Event_GlitchFX;                             // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Face;                                 // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Madness;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Killer;                               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_FuseTimeLeftPercent;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UMaterialInstanceDynamic*         K2Node_Event_LightningFX;                          // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Intense;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsActive;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_fuseTimeLeftPercent;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_A_ImplicitCast;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FX_OnFuseBurnUpdate_FuseTimeLeftPercent_ImplicitCast; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker) == 0x000008, "Wrong alignment on BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker");
static_assert(sizeof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker) == 0x0000A8, "Wrong size on BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, EntryPoint) == 0x000000, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, Temp_delegate_Variable) == 0x000004, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_IsDormantMain_) == 0x000018, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_IsDormantMain_' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_IsDormant_) == 0x000019, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_IsDormant_' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Wrong_Landing) == 0x00001A, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Wrong_Landing' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_WrongLanding) == 0x00001B, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_WrongLanding' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Bomb_Type) == 0x00001C, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Bomb_Type' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_IsAttachedLocker) == 0x00001D, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_IsAttachedLocker' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_GlitchFX) == 0x000020, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_GlitchFX' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Face) == 0x000028, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Face' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Madness) == 0x000029, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Madness' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Killer) == 0x00002A, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_CustomEvent_FuseTimeLeftPercent) == 0x000030, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_CustomEvent_FuseTimeLeftPercent' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_LightningFX) == 0x000048, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_LightningFX' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_Intense) == 0x000050, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_Intense' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_PostAkEvent_ReturnValue) == 0x000054, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_IsActive) == 0x000058, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_IsActive' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_fuseTimeLeftPercent) == 0x000060, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_fuseTimeLeftPercent' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000080, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, K2Node_Event_EndPlayReason) == 0x000088, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x00008C, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_FMin_A_ImplicitCast) == 0x000090, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_FMin_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000098, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker, CallFunc_FX_OnFuseBurnUpdate_FuseTimeLeftPercent_ImplicitCast) == 0x0000A0, "Member 'BP_Firecracker_C_ExecuteUbergraph_BP_Firecracker::CallFunc_FX_OnFuseBurnUpdate_FuseTimeLeftPercent_ImplicitCast' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.ActivatePlayerLightningVFX
// 0x0010 (0x0010 - 0x0000)
struct BP_Firecracker_C_ActivatePlayerLightningVFX final
{
public:
	const class UMaterialInstanceDynamic*         LightningFX;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Intense;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_ActivatePlayerLightningVFX) == 0x000008, "Wrong alignment on BP_Firecracker_C_ActivatePlayerLightningVFX");
static_assert(sizeof(BP_Firecracker_C_ActivatePlayerLightningVFX) == 0x000010, "Wrong size on BP_Firecracker_C_ActivatePlayerLightningVFX");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerLightningVFX, LightningFX) == 0x000000, "Member 'BP_Firecracker_C_ActivatePlayerLightningVFX::LightningFX' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerLightningVFX, Intense) == 0x000008, "Member 'BP_Firecracker_C_ActivatePlayerLightningVFX::Intense' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.ActivatePlayerGlitchVFX
// 0x0010 (0x0010 - 0x0000)
struct BP_Firecracker_C_ActivatePlayerGlitchVFX final
{
public:
	const class UMaterialInstanceDynamic*         GlitchFX;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Face;                                              // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Madness;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Killer;                                            // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_ActivatePlayerGlitchVFX) == 0x000008, "Wrong alignment on BP_Firecracker_C_ActivatePlayerGlitchVFX");
static_assert(sizeof(BP_Firecracker_C_ActivatePlayerGlitchVFX) == 0x000010, "Wrong size on BP_Firecracker_C_ActivatePlayerGlitchVFX");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerGlitchVFX, GlitchFX) == 0x000000, "Member 'BP_Firecracker_C_ActivatePlayerGlitchVFX::GlitchFX' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerGlitchVFX, Face) == 0x000008, "Member 'BP_Firecracker_C_ActivatePlayerGlitchVFX::Face' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerGlitchVFX, Madness) == 0x000009, "Member 'BP_Firecracker_C_ActivatePlayerGlitchVFX::Madness' has a wrong offset!");
static_assert(offsetof(BP_Firecracker_C_ActivatePlayerGlitchVFX, Killer) == 0x00000A, "Member 'BP_Firecracker_C_ActivatePlayerGlitchVFX::Killer' has a wrong offset!");

// Function BP_Firecracker.BP_Firecracker_C.ActivateEndGameVignette
// 0x0001 (0x0001 - 0x0000)
struct BP_Firecracker_C_ActivateEndGameVignette final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Firecracker_C_ActivateEndGameVignette) == 0x000001, "Wrong alignment on BP_Firecracker_C_ActivateEndGameVignette");
static_assert(sizeof(BP_Firecracker_C_ActivateEndGameVignette) == 0x000001, "Wrong size on BP_Firecracker_C_ActivateEndGameVignette");
static_assert(offsetof(BP_Firecracker_C_ActivateEndGameVignette, IsActive) == 0x000000, "Member 'BP_Firecracker_C_ActivateEndGameVignette::IsActive' has a wrong offset!");

}

