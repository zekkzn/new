#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Core_TestBuildFlag

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.UpdateTestFlagPosition
// 0x0001 (0x0001 - 0x0000)
struct WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition final
{
public:
	ETestBuildFlagPosition                        TestBuildFlagPosition;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition) == 0x000001, "Wrong alignment on WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition) == 0x000001, "Wrong size on WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition, TestBuildFlagPosition) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_UpdateTestFlagPosition::TestBuildFlagPosition' has a wrong offset!");

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.SetMainMenuVisuals
// 0x0048 (0x0048 - 0x0000)
struct WBP_Core_TestBuildFlag_C_SetMainMenuVisuals final
{
public:
	struct FAnchors                               NewLocalVar_0;                                     // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0020(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_SetMainMenuVisuals) == 0x000008, "Wrong alignment on WBP_Core_TestBuildFlag_C_SetMainMenuVisuals");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_SetMainMenuVisuals) == 0x000048, "Wrong size on WBP_Core_TestBuildFlag_C_SetMainMenuVisuals");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetMainMenuVisuals, NewLocalVar_0) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_SetMainMenuVisuals::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetMainMenuVisuals, K2Node_MakeStruct_Anchors) == 0x000020, "Member 'WBP_Core_TestBuildFlag_C_SetMainMenuVisuals::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetMainMenuVisuals, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WBP_Core_TestBuildFlag_C_SetMainMenuVisuals::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.SetLobbyVisuals
// 0x0028 (0x0028 - 0x0000)
struct WBP_Core_TestBuildFlag_C_SetLobbyVisuals final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_SetLobbyVisuals) == 0x000008, "Wrong alignment on WBP_Core_TestBuildFlag_C_SetLobbyVisuals");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_SetLobbyVisuals) == 0x000028, "Wrong size on WBP_Core_TestBuildFlag_C_SetLobbyVisuals");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetLobbyVisuals, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_SetLobbyVisuals::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetLobbyVisuals, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_Core_TestBuildFlag_C_SetLobbyVisuals::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.SetHudVisuals
// 0x0028 (0x0028 - 0x0000)
struct WBP_Core_TestBuildFlag_C_SetHudVisuals final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_SetHudVisuals) == 0x000008, "Wrong alignment on WBP_Core_TestBuildFlag_C_SetHudVisuals");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_SetHudVisuals) == 0x000028, "Wrong size on WBP_Core_TestBuildFlag_C_SetHudVisuals");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetHudVisuals, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_SetHudVisuals::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_SetHudVisuals, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'WBP_Core_TestBuildFlag_C_SetHudVisuals::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Core_TestBuildFlag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Core_TestBuildFlag_C_PreConstruct");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_PreConstruct) == 0x000001, "Wrong size on WBP_Core_TestBuildFlag_C_PreConstruct");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Core_TestBuildFlag.WBP_Core_TestBuildFlag_C.ExecuteUbergraph_WBP_Core_TestBuildFlag
// 0x0008 (0x0008 - 0x0000)
struct WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETestBuildFlagPosition                        K2Node_Event_testBuildFlagPosition;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag) == 0x000004, "Wrong alignment on WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag");
static_assert(sizeof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag) == 0x000008, "Wrong size on WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag, EntryPoint) == 0x000000, "Member 'WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag, K2Node_Event_testBuildFlagPosition) == 0x000005, "Member 'WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag::K2Node_Event_testBuildFlagPosition' has a wrong offset!");
static_assert(offsetof(WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'WBP_Core_TestBuildFlag_C_ExecuteUbergraph_WBP_Core_TestBuildFlag::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

