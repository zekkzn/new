#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheCannibal

#include "Basic.hpp"


namespace SDK::Params
{

// Function TheCannibal.BBQAndChili.GetMinDistanceToKillerByLevel
// 0x0008 (0x0008 - 0x0000)
struct BBQAndChili_GetMinDistanceToKillerByLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BBQAndChili_GetMinDistanceToKillerByLevel) == 0x000004, "Wrong alignment on BBQAndChili_GetMinDistanceToKillerByLevel");
static_assert(sizeof(BBQAndChili_GetMinDistanceToKillerByLevel) == 0x000008, "Wrong size on BBQAndChili_GetMinDistanceToKillerByLevel");
static_assert(offsetof(BBQAndChili_GetMinDistanceToKillerByLevel, Level) == 0x000000, "Member 'BBQAndChili_GetMinDistanceToKillerByLevel::Level' has a wrong offset!");
static_assert(offsetof(BBQAndChili_GetMinDistanceToKillerByLevel, ReturnValue) == 0x000004, "Member 'BBQAndChili_GetMinDistanceToKillerByLevel::ReturnValue' has a wrong offset!");

// Function TheCannibal.BBQAndChili.GetAuraRevealDuration
// 0x0004 (0x0004 - 0x0000)
struct BBQAndChili_GetAuraRevealDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BBQAndChili_GetAuraRevealDuration) == 0x000004, "Wrong alignment on BBQAndChili_GetAuraRevealDuration");
static_assert(sizeof(BBQAndChili_GetAuraRevealDuration) == 0x000004, "Wrong size on BBQAndChili_GetAuraRevealDuration");
static_assert(offsetof(BBQAndChili_GetAuraRevealDuration, ReturnValue) == 0x000000, "Member 'BBQAndChili_GetAuraRevealDuration::ReturnValue' has a wrong offset!");

// Function TheCannibal.CannibalChainsawPowerComponent.OnRep_NumPowerCharges
// 0x0004 (0x0004 - 0x0000)
struct CannibalChainsawPowerComponent_OnRep_NumPowerCharges final
{
public:
	int32                                         PreviousNumPowerCharges;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CannibalChainsawPowerComponent_OnRep_NumPowerCharges) == 0x000004, "Wrong alignment on CannibalChainsawPowerComponent_OnRep_NumPowerCharges");
static_assert(sizeof(CannibalChainsawPowerComponent_OnRep_NumPowerCharges) == 0x000004, "Wrong size on CannibalChainsawPowerComponent_OnRep_NumPowerCharges");
static_assert(offsetof(CannibalChainsawPowerComponent_OnRep_NumPowerCharges, PreviousNumPowerCharges) == 0x000000, "Member 'CannibalChainsawPowerComponent_OnRep_NumPowerCharges::PreviousNumPowerCharges' has a wrong offset!");

// Function TheCannibal.CannibalChainsawPowerComponent.GetNumberOfChainsawPowerCharges
// 0x0004 (0x0004 - 0x0000)
struct CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges) == 0x000004, "Wrong alignment on CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges");
static_assert(sizeof(CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges) == 0x000004, "Wrong size on CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges");
static_assert(offsetof(CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges, ReturnValue) == 0x000000, "Member 'CannibalChainsawPowerComponent_GetNumberOfChainsawPowerCharges::ReturnValue' has a wrong offset!");

// Function TheCannibal.CannibalPowerPresentationItemProgressComponent.SetCannibalChainsawPowerComponent
// 0x0008 (0x0008 - 0x0000)
struct CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent final
{
public:
	class UCannibalChainsawPowerComponent*        CannibalPowerChainsawComponent;                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent) == 0x000008, "Wrong alignment on CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent");
static_assert(sizeof(CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent) == 0x000008, "Wrong size on CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent");
static_assert(offsetof(CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent, CannibalPowerChainsawComponent) == 0x000000, "Member 'CannibalPowerPresentationItemProgressComponent_SetCannibalChainsawPowerComponent::CannibalPowerChainsawComponent' has a wrong offset!");

// Function TheCannibal.FranklinsDemise.BP_OnPlayerHitCosmetic
// 0x0010 (0x0010 - 0x0000)
struct FranklinsDemise_BP_OnPlayerHitCosmetic final
{
public:
	class ACamperPlayer*                          HitPlayer;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACollectable*                           ItemToDrop;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FranklinsDemise_BP_OnPlayerHitCosmetic) == 0x000008, "Wrong alignment on FranklinsDemise_BP_OnPlayerHitCosmetic");
static_assert(sizeof(FranklinsDemise_BP_OnPlayerHitCosmetic) == 0x000010, "Wrong size on FranklinsDemise_BP_OnPlayerHitCosmetic");
static_assert(offsetof(FranklinsDemise_BP_OnPlayerHitCosmetic, HitPlayer) == 0x000000, "Member 'FranklinsDemise_BP_OnPlayerHitCosmetic::HitPlayer' has a wrong offset!");
static_assert(offsetof(FranklinsDemise_BP_OnPlayerHitCosmetic, ItemToDrop) == 0x000008, "Member 'FranklinsDemise_BP_OnPlayerHitCosmetic::ItemToDrop' has a wrong offset!");

// Function TheCannibal.FranklinsDemise.Multicast_DroppedEvent
// 0x0010 (0x0010 - 0x0000)
struct FranklinsDemise_Multicast_DroppedEvent final
{
public:
	class ACamperPlayer*                          HitPlayer;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACollectable*                           ItemToDrop;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FranklinsDemise_Multicast_DroppedEvent) == 0x000008, "Wrong alignment on FranklinsDemise_Multicast_DroppedEvent");
static_assert(sizeof(FranklinsDemise_Multicast_DroppedEvent) == 0x000010, "Wrong size on FranklinsDemise_Multicast_DroppedEvent");
static_assert(offsetof(FranklinsDemise_Multicast_DroppedEvent, HitPlayer) == 0x000000, "Member 'FranklinsDemise_Multicast_DroppedEvent::HitPlayer' has a wrong offset!");
static_assert(offsetof(FranklinsDemise_Multicast_DroppedEvent, ItemToDrop) == 0x000008, "Member 'FranklinsDemise_Multicast_DroppedEvent::ItemToDrop' has a wrong offset!");

// Function TheCannibal.FranklinsDemise.GetTimeBeforeItemIsConsumedAtLevel
// 0x0004 (0x0004 - 0x0000)
struct FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel) == 0x000004, "Wrong alignment on FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel");
static_assert(sizeof(FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel) == 0x000004, "Wrong size on FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel");
static_assert(offsetof(FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel, ReturnValue) == 0x000000, "Member 'FranklinsDemise_GetTimeBeforeItemIsConsumedAtLevel::ReturnValue' has a wrong offset!");

// Function TheCannibal.KnockOutSlowAndBlindEffect.OnLocallyObservedChanged
// 0x0008 (0x0008 - 0x0000)
struct KnockOutSlowAndBlindEffect_OnLocallyObservedChanged final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KnockOutSlowAndBlindEffect_OnLocallyObservedChanged) == 0x000008, "Wrong alignment on KnockOutSlowAndBlindEffect_OnLocallyObservedChanged");
static_assert(sizeof(KnockOutSlowAndBlindEffect_OnLocallyObservedChanged) == 0x000008, "Wrong size on KnockOutSlowAndBlindEffect_OnLocallyObservedChanged");
static_assert(offsetof(KnockOutSlowAndBlindEffect_OnLocallyObservedChanged, Player) == 0x000000, "Member 'KnockOutSlowAndBlindEffect_OnLocallyObservedChanged::Player' has a wrong offset!");

}

