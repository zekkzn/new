#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK33

#include "Basic.hpp"

#include "TheK33_classes.hpp"
#include "TheK33_parameters.hpp"


namespace SDK
{

// Function TheK33.FatherTerminalHackingInteraction.Authority_OnCooldownTimerDone
// (Final, Native, Private)

void UFatherTerminalHackingInteraction::Authority_OnCooldownTimerDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "Authority_OnCooldownTimerDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.FatherTerminalHackingInteraction.Authority_OnMinigameEnd
// (Final, Native, Private)
// Parameters:
// class ACamperPlayer*                    Survivor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDirectionalMinigameResult              Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFatherTerminalHackingInteraction::Authority_OnMinigameEnd(class ACamperPlayer* Survivor, EDirectionalMinigameResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "Authority_OnMinigameEnd");

	Params::FatherTerminalHackingInteraction_Authority_OnMinigameEnd Parms{};

	Parms.Survivor = Survivor;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.FatherTerminalHackingInteraction.OnRep_IsCooldownTimerRunning
// (Final, Native, Private)

void UFatherTerminalHackingInteraction::OnRep_IsCooldownTimerRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "OnRep_IsCooldownTimerRunning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TheK33.FatherTerminalHackingInteraction.OnWormholeTerminalHackingCooldownTimerStartOrDone__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsRunning                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFatherTerminalHackingInteraction::OnWormholeTerminalHackingCooldownTimerStartOrDone__DelegateSignature(bool IsRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "OnWormholeTerminalHackingCooldownTimerStartOrDone__DelegateSignature");

	Params::FatherTerminalHackingInteraction_OnWormholeTerminalHackingCooldownTimerStartOrDone__DelegateSignature Parms{};

	Parms.IsRunning = IsRunning;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TheK33.FatherTerminalHackingInteraction.OnWormholeTerminalHackingInteractionStarted__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFatherTerminalHackingInteraction::OnWormholeTerminalHackingInteractionStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "OnWormholeTerminalHackingInteractionStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction TheK33.FatherTerminalHackingInteraction.OnWormholeTerminalSuccessfullyEndMiniGameAnimationStarted__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFatherTerminalHackingInteraction::OnWormholeTerminalSuccessfullyEndMiniGameAnimationStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FatherTerminalHackingInteraction", "OnWormholeTerminalSuccessfullyEndMiniGameAnimationStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33TunnelPulse.Cosmetic_ActivatePulse
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   IdInPulseWave                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33TunnelPulse::Cosmetic_ActivatePulse(int32 IdInPulseWave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelPulse", "Cosmetic_ActivatePulse");

	Params::K33TunnelPulse_Cosmetic_ActivatePulse Parms{};

	Parms.IdInPulseWave = IdInPulseWave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33TunnelPulse.Cosmetic_DeactivatePulse
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK33TunnelPulse::Cosmetic_DeactivatePulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelPulse", "Cosmetic_DeactivatePulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33TunnelPulse.Cosmetic_GetFadeOutPercentage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AK33TunnelPulse::Cosmetic_GetFadeOutPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelPulse", "Cosmetic_GetFadeOutPercentage");

	Params::K33TunnelPulse_Cosmetic_GetFadeOutPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33CheatComponent.DBD_K33DrawTunnelBlockConnections
// (Final, Exec, Native, Public)
// Parameters:
// float                                   SecondsToDisplay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33CheatComponent::DBD_K33DrawTunnelBlockConnections(float SecondsToDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33CheatComponent", "DBD_K33DrawTunnelBlockConnections");

	Params::K33CheatComponent_DBD_K33DrawTunnelBlockConnections Parms{};

	Parms.SecondsToDisplay = SecondsToDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33CheatComponent.DBD_K33ForceSpecialMode
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33CheatComponent::DBD_K33ForceSpecialMode(uint8 Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33CheatComponent", "DBD_K33ForceSpecialMode");

	Params::K33CheatComponent_DBD_K33ForceSpecialMode Parms{};

	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ControlStation.Cosmetic_OnControlStationEnteringState
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EControlStationState                    EnteringState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::Cosmetic_OnControlStationEnteringState(EControlStationState EnteringState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_OnControlStationEnteringState");

	Params::K33ControlStation_Cosmetic_OnControlStationEnteringState Parms{};

	Parms.EnteringState = EnteringState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33ControlStation.Cosmetic_OnControlStationExitingState
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EControlStationState                    ExitingState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::Cosmetic_OnControlStationExitingState(EControlStationState ExitingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_OnControlStationExitingState");

	Params::K33ControlStation_Cosmetic_OnControlStationExitingState Parms{};

	Parms.ExitingState = ExitingState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33ControlStation.Cosmetic_OnTurretInPoolCountChanged
// (BlueprintCosmetic, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TurretCount                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::Cosmetic_OnTurretInPoolCountChanged(const int32 TurretCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_OnTurretInPoolCountChanged");

	Params::K33ControlStation_Cosmetic_OnTurretInPoolCountChanged Parms{};

	Parms.TurretCount = TurretCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33ControlStation.Cosmetic_SetTunnelCapVisibility
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::Cosmetic_SetTunnelCapVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_SetTunnelCapVisibility");

	Params::K33ControlStation_Cosmetic_SetTunnelCapVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33ControlStation.Cosmetic_StartControlStationMalfunctionReaction
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK33ControlStation::Cosmetic_StartControlStationMalfunctionReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_StartControlStationMalfunctionReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33ControlStation.Cosmetic_StopControlStationMalfunctionReaction
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK33ControlStation::Cosmetic_StopControlStationMalfunctionReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_StopControlStationMalfunctionReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33ControlStation.Cosmetic_UpdateControlStationCooldown
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CooldownElapsedTimePercent                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::Cosmetic_UpdateControlStationCooldown(float CooldownElapsedTimePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "Cosmetic_UpdateControlStationCooldown");

	Params::K33ControlStation_Cosmetic_UpdateControlStationCooldown Parms{};

	Parms.CooldownElapsedTimePercent = CooldownElapsedTimePercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33ControlStation.OnRep_CurrentState
// (Final, Native, Private)
// Parameters:
// EControlStationState                    OldState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33ControlStation::OnRep_CurrentState(EControlStationState OldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "OnRep_CurrentState");

	Params::K33ControlStation_OnRep_CurrentState Parms{};

	Parms.OldState = OldState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ControlStation.OnRep_ExitTunnelInteractable
// (Final, Native, Private)

void AK33ControlStation::OnRep_ExitTunnelInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "OnRep_ExitTunnelInteractable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ControlStation.OnRep_IsMalfunctioning
// (Final, Native, Private)

void AK33ControlStation::OnRep_IsMalfunctioning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "OnRep_IsMalfunctioning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ControlStation.GetKillerExitTunnelEndLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK33ControlStation::GetKillerExitTunnelEndLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ControlStation", "GetKillerExitTunnelEndLocation");

	Params::K33ControlStation_GetKillerExitTunnelEndLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Turret.Cosmetic_BipMotionTrackerFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DistanceToKiller                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_BipMotionTrackerFX(const float DistanceToKiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_BipMotionTrackerFX");

	Params::K33Turret_Cosmetic_BipMotionTrackerFX Parms{};

	Parms.DistanceToKiller = DistanceToKiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Turret.Cosmetic_OnKillerEnteredSpecialModeFXReaction
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AK33Turret::Cosmetic_OnKillerEnteredSpecialModeFXReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_OnKillerEnteredSpecialModeFXReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33Turret.Cosmetic_OnTurretDetectionRangeChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewRange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_OnTurretDetectionRangeChanged(float NewRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_OnTurretDetectionRangeChanged");

	Params::K33Turret_Cosmetic_OnTurretDetectionRangeChanged Parms{};

	Parms.NewRange = NewRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Turret.Cosmetic_OnTurretHeatChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   HeatAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_OnTurretHeatChanged(float HeatAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_OnTurretHeatChanged");

	Params::K33Turret_Cosmetic_OnTurretHeatChanged Parms{};

	Parms.HeatAmount = HeatAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Turret.Cosmetic_UpdateLaserLength
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   LaserLength                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_UpdateLaserLength(const float LaserLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_UpdateLaserLength");

	Params::K33Turret_Cosmetic_UpdateLaserLength Parms{};

	Parms.LaserLength = LaserLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Turret.Cosmetic_UpdateMotionTrackerSoundVolume
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DistanceToKiller                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_UpdateMotionTrackerSoundVolume(const float DistanceToKiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_UpdateMotionTrackerSoundVolume");

	Params::K33Turret_Cosmetic_UpdateMotionTrackerSoundVolume Parms{};

	Parms.DistanceToKiller = DistanceToKiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Turret.Cosmetic_UpdateTurretVolumeRTPC
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TurretsInRangeCount                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33Turret::Cosmetic_UpdateTurretVolumeRTPC(const int32 TurretsInRangeCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Turret", "Cosmetic_UpdateTurretVolumeRTPC");

	Params::K33Turret_Cosmetic_UpdateTurretVolumeRTPC Parms{};

	Parms.TurretsInRangeCount = TurretsInRangeCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33TunnelProceduralGenerationComponent.OnRep_BlockSpawnData
// (Final, Native, Private)

void UK33TunnelProceduralGenerationComponent::OnRep_BlockSpawnData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelProceduralGenerationComponent", "OnRep_BlockSpawnData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33EnterTunnelInteraction.Multicast_TeleportPlayerToTunnel
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UK33EnterTunnelInteraction::Multicast_TeleportPlayerToTunnel(class ADBDPlayer* Player, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33EnterTunnelInteraction", "Multicast_TeleportPlayerToTunnel");

	Params::K33EnterTunnelInteraction_Multicast_TeleportPlayerToTunnel Parms{};

	Parms.Player = Player;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ExitTunnelInteractable.OnRep_LinkedControlStation
// (Final, Native, Private)

void AK33ExitTunnelInteractable::OnRep_LinkedControlStation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ExitTunnelInteractable", "OnRep_LinkedControlStation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ExitTunnelInteractable.OnRep_TargetLocation
// (Final, Native, Private)

void AK33ExitTunnelInteractable::OnRep_TargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ExitTunnelInteractable", "OnRep_TargetLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33ExitTunnelInteraction.Multicast_OnSnapTransitionCompleted
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UK33ExitTunnelInteraction::Multicast_OnSnapTransitionCompleted(class ADBDPlayer* Player, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33ExitTunnelInteraction", "Multicast_OnSnapTransitionCompleted");

	Params::K33ExitTunnelInteraction_Multicast_OnSnapTransitionCompleted Parms{};

	Parms.Player = Player;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33FeetVFX.Cosmetic_TriggerFootstepTimeline
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// EK33Foot                                FootType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EffectLifetime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          KillerLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33FeetVFX::Cosmetic_TriggerFootstepTimeline(EK33Foot FootType, float EffectLifetime, const struct FVector& KillerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FeetVFX", "Cosmetic_TriggerFootstepTimeline");

	Params::K33FeetVFX_Cosmetic_TriggerFootstepTimeline Parms{};

	Parms.FootType = FootType;
	Parms.EffectLifetime = EffectLifetime;
	Parms.KillerLocation = std::move(KillerLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FeetVFX.Cosmetic_TriggerFootstepVisibility
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EK33Foot                                FootType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33FeetVFX::Cosmetic_TriggerFootstepVisibility(EK33Foot FootType, bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FeetVFX", "Cosmetic_TriggerFootstepVisibility");

	Params::K33FeetVFX_Cosmetic_TriggerFootstepVisibility Parms{};

	Parms.FootType = FootType;
	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_OnKillerShotByTurret
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void IK33FXInterface::Cosmetic_OnKillerShotByTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnKillerShotByTurret");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33FXInterface.Cosmetic_OnSpecialModeChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsInSpecialMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_OnSpecialModeChanged(bool IsInSpecialMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnSpecialModeChanged");

	Params::K33FXInterface_Cosmetic_OnSpecialModeChanged Parms{};

	Parms.IsInSpecialMode = IsInSpecialMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_OnSurvivorHitByTailAttack
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_OnSurvivorHitByTailAttack(class ACamperPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnSurvivorHitByTailAttack");

	Params::K33FXInterface_Cosmetic_OnSurvivorHitByTailAttack Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_OnTurretDamageChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DamagePercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_OnTurretDamageChanged(float DamagePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnTurretDamageChanged");

	Params::K33FXInterface_Cosmetic_OnTurretDamageChanged Parms{};

	Parms.DamagePercent = DamagePercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_OnTurretHitByTailAttack
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AK33Turret*                       Turret                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_OnTurretHitByTailAttack(class AK33Turret* Turret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnTurretHitByTailAttack");

	Params::K33FXInterface_Cosmetic_OnTurretHitByTailAttack Parms{};

	Parms.Turret = Turret;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_OnTurretMaxDamageReceived
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void IK33FXInterface::Cosmetic_OnTurretMaxDamageReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_OnTurretMaxDamageReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33FXInterface.Cosmetic_SetKillerFPVAudioAmbiance
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsTunnelAmbianceActive                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_SetKillerFPVAudioAmbiance(bool IsTunnelAmbianceActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_SetKillerFPVAudioAmbiance");

	Params::K33FXInterface_Cosmetic_SetKillerFPVAudioAmbiance Parms{};

	Parms.IsTunnelAmbianceActive = IsTunnelAmbianceActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_SetKillerInvisibleUnderCurrentFloor
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ShouldKillerBeInvisibleUnderFloor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_SetKillerInvisibleUnderCurrentFloor(bool ShouldKillerBeInvisibleUnderFloor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_SetKillerInvisibleUnderCurrentFloor");

	Params::K33FXInterface_Cosmetic_SetKillerInvisibleUnderCurrentFloor Parms{};

	Parms.ShouldKillerBeInvisibleUnderFloor = ShouldKillerBeInvisibleUnderFloor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_SetVisibility
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_SetVisibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_SetVisibility");

	Params::K33FXInterface_Cosmetic_SetVisibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_StopTailAttackVFX
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void IK33FXInterface::Cosmetic_StopTailAttackVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_StopTailAttackVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33FXInterface.Cosmetic_TailAttackObstructedVFX
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ObstructionLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_TailAttackObstructedVFX(const struct FVector& ObstructionLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_TailAttackObstructedVFX");

	Params::K33FXInterface_Cosmetic_TailAttackObstructedVFX Parms{};

	Parms.ObstructionLocation = std::move(ObstructionLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_TriggerTunnelTransitionFadeIn
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   TimeBeforeFadeIn                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_TriggerTunnelTransitionFadeIn(float TimeBeforeFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_TriggerTunnelTransitionFadeIn");

	Params::K33FXInterface_Cosmetic_TriggerTunnelTransitionFadeIn Parms{};

	Parms.TimeBeforeFadeIn = TimeBeforeFadeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_TriggerTunnelTransitionFadeOut
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   TimeBeforeFadeOut                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_TriggerTunnelTransitionFadeOut(float TimeBeforeFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_TriggerTunnelTransitionFadeOut");

	Params::K33FXInterface_Cosmetic_TriggerTunnelTransitionFadeOut Parms{};

	Parms.TimeBeforeFadeOut = TimeBeforeFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33FXInterface.Cosmetic_UpdateTailAttackVFX
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void IK33FXInterface::Cosmetic_UpdateTailAttackVFX(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33FXInterface", "Cosmetic_UpdateTailAttackVFX");

	Params::K33FXInterface_Cosmetic_UpdateTailAttackVFX Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33HuskAnimInstance.GetCopiedCustomizedSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UCustomizedSkeletalMesh*    ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UCustomizedSkeletalMesh* UK33HuskAnimInstance::GetCopiedCustomizedSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33HuskAnimInstance", "GetCopiedCustomizedSkeletalMesh");

	Params::K33HuskAnimInstance_GetCopiedCustomizedSkeletalMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33HuskAnimInstance.GetCopiedSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class USkeletalMeshComponent*     ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USkeletalMeshComponent* UK33HuskAnimInstance::GetCopiedSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33HuskAnimInstance", "GetCopiedSkeletalMesh");

	Params::K33HuskAnimInstance_GetCopiedSkeletalMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33KillerControlStationSelectorComponent.OnRep_Replicated_SelectedControlStation
// (Final, Native, Private)
// Parameters:
// class AK33ControlStation*               PreviousSelectedControlStation                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33KillerControlStationSelectorComponent::OnRep_Replicated_SelectedControlStation(class AK33ControlStation* PreviousSelectedControlStation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerControlStationSelectorComponent", "OnRep_Replicated_SelectedControlStation");

	Params::K33KillerControlStationSelectorComponent_OnRep_Replicated_SelectedControlStation Parms{};

	Parms.PreviousSelectedControlStation = PreviousSelectedControlStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerControlStationSelectorComponent.Server_SetSelectedControlStation
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AK33ControlStation*               ControlStation                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33KillerControlStationSelectorComponent::Server_SetSelectedControlStation(class AK33ControlStation* ControlStation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerControlStationSelectorComponent", "Server_SetSelectedControlStation");

	Params::K33KillerControlStationSelectorComponent_Server_SetSelectedControlStation Parms{};

	Parms.ControlStation = ControlStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerTunnelStateComponent.OnLevelReadyToPlay
// (Final, Native, Private)

void UK33KillerTunnelStateComponent::OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerTunnelStateComponent", "OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerTunnelStateComponent.OnRep_IsInTunnel
// (Final, Native, Private)

void UK33KillerTunnelStateComponent::OnRep_IsInTunnel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerTunnelStateComponent", "OnRep_IsInTunnel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerTunnelStateComponent.OnRep_KillerCollisionBlockType
// (Final, Native, Private)

void UK33KillerTunnelStateComponent::OnRep_KillerCollisionBlockType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerTunnelStateComponent", "OnRep_KillerCollisionBlockType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerTunnelStateComponent.OnRep_TunnelElementsVisibility
// (Final, Native, Private)

void UK33KillerTunnelStateComponent::OnRep_TunnelElementsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerTunnelStateComponent", "OnRep_TunnelElementsVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33KillerTunnelStateComponent.OnRep_WorldElementsVisibility
// (Final, Native, Private)

void UK33KillerTunnelStateComponent::OnRep_WorldElementsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33KillerTunnelStateComponent", "OnRep_WorldElementsVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33P01.GetBlindedEffectDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P01::GetBlindedEffectDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P01", "GetBlindedEffectDurationAtLevel");

	Params::K33P01_GetBlindedEffectDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P01.GetPerkCooldownTimeAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P01::GetPerkCooldownTimeAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P01", "GetPerkCooldownTimeAtLevel");

	Params::K33P01_GetPerkCooldownTimeAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P01.GetScreamRevealRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P01::GetScreamRevealRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P01", "GetScreamRevealRange");

	Params::K33P01_GetScreamRevealRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P01.Multicast_SurvivorRevealed
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, Const)
// Parameters:
// class ACamperPlayer*                    Survivor                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33P01::Multicast_SurvivorRevealed(const class ACamperPlayer* Survivor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P01", "Multicast_SurvivorRevealed");

	Params::K33P01_Multicast_SurvivorRevealed Parms{};

	Parms.Survivor = Survivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33P02.GetHasteAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P02::GetHasteAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P02", "GetHasteAmount");

	Params::K33P02_GetHasteAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P02.GetHasteDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P02::GetHasteDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P02", "GetHasteDurationAtLevel");

	Params::K33P02_GetHasteDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P03.GetObliviousDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P03::GetObliviousDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P03", "GetObliviousDurationAtLevel");

	Params::K33P03_GetObliviousDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33P03.GetPerkAuraRevealDurationAtLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33P03::GetPerkAuraRevealDurationAtLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33P03", "GetPerkAuraRevealDurationAtLevel");

	Params::K33P03_GetPerkAuraRevealDurationAtLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Power.GetTailAttackInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UK33TailAttackInteraction*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UK33TailAttackInteraction* AK33Power::GetTailAttackInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Power", "GetTailAttackInteraction");

	Params::K33Power_GetTailAttackInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TheK33.K33Power.OnRep_TurretPlacers
// (Final, Native, Private)

void AK33Power::OnRep_TurretPlacers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Power", "OnRep_TurretPlacers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33Power_Addon_16.BP_TriggerSurvivorScreamAndReveal
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    TargetSurvivor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33Power_Addon_16::BP_TriggerSurvivorScreamAndReveal(class ACamperPlayer* TargetSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Power_Addon_16", "BP_TriggerSurvivorScreamAndReveal");

	Params::K33Power_Addon_16_BP_TriggerSurvivorScreamAndReveal Parms{};

	Parms.TargetSurvivor = TargetSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33Power_Addon_16.Multicast_TriggerSurvivorsScreamAndReveal
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// TArray<class ACamperPlayer*>            TargetSurvivors                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UK33Power_Addon_16::Multicast_TriggerSurvivorsScreamAndReveal(const TArray<class ACamperPlayer*>& TargetSurvivors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33Power_Addon_16", "Multicast_TriggerSurvivorsScreamAndReveal");

	Params::K33Power_Addon_16_Multicast_TriggerSurvivorsScreamAndReveal Parms{};

	Parms.TargetSurvivors = std::move(TargetSurvivors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TunnelBlock.GetEnterTunnelTeleportLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK33TunnelBlock::GetEnterTunnelTeleportLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlock", "GetEnterTunnelTeleportLocation");

	Params::K33TunnelBlock_GetEnterTunnelTeleportLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33TunnelBlock.GetExitTunnelInteractableSpawnLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK33TunnelBlock::GetExitTunnelInteractableSpawnLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlock", "GetExitTunnelInteractableSpawnLocation");

	Params::K33TunnelBlock_GetExitTunnelInteractableSpawnLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33TunnelBlock.GetExitTunnelInteractableSpawnRotation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AK33TunnelBlock::GetExitTunnelInteractableSpawnRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlock", "GetExitTunnelInteractableSpawnRotation");

	Params::K33TunnelBlock_GetExitTunnelInteractableSpawnRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33SpecialModeComponent.Authority_OnIntroCompleted
// (Final, Native, Private)

void UK33SpecialModeComponent::Authority_OnIntroCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SpecialModeComponent", "Authority_OnIntroCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33SpecialModeComponent.OnPowerChargeChanged
// (Final, Native, Private)
// Parameters:
// float                                   CurrentChargePercent                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33SpecialModeComponent::OnPowerChargeChanged(const float CurrentChargePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SpecialModeComponent", "OnPowerChargeChanged");

	Params::K33SpecialModeComponent_OnPowerChargeChanged Parms{};

	Parms.CurrentChargePercent = CurrentChargePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33SpecialModeComponent.OnRep_ChargeState
// (Final, Native, Private)

void UK33SpecialModeComponent::OnRep_ChargeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SpecialModeComponent", "OnRep_ChargeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33SpecialModeComponent.OnRep_IsInSpecialMode
// (Final, Native, Private)

void UK33SpecialModeComponent::OnRep_IsInSpecialMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SpecialModeComponent", "OnRep_IsInSpecialMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33SurvivorCosmeticHelperActor.Cosmetic_InitializeTurretPlacementVisualFeedback
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33SurvivorCosmeticHelperActor::Cosmetic_InitializeTurretPlacementVisualFeedback(const class FName& SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorCosmeticHelperActor", "Cosmetic_InitializeTurretPlacementVisualFeedback");

	Params::K33SurvivorCosmeticHelperActor_Cosmetic_InitializeTurretPlacementVisualFeedback Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33SurvivorCosmeticHelperActor.Cosmetic_OnTurretPlacementValidityChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsPlacementValid                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33SurvivorCosmeticHelperActor::Cosmetic_OnTurretPlacementValidityChanged(const bool IsPlacementValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorCosmeticHelperActor", "Cosmetic_OnTurretPlacementValidityChanged");

	Params::K33SurvivorCosmeticHelperActor_Cosmetic_OnTurretPlacementValidityChanged Parms{};

	Parms.IsPlacementValid = IsPlacementValid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33SurvivorCosmeticHelperActor.Cosmetic_OnTurretPlacementVisualFeedbackActivationChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Activated                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPlacementValid                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33SurvivorCosmeticHelperActor::Cosmetic_OnTurretPlacementVisualFeedbackActivationChanged(const bool Activated, const bool IsPlacementValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorCosmeticHelperActor", "Cosmetic_OnTurretPlacementVisualFeedbackActivationChanged");

	Params::K33SurvivorCosmeticHelperActor_Cosmetic_OnTurretPlacementVisualFeedbackActivationChanged Parms{};

	Parms.Activated = Activated;
	Parms.IsPlacementValid = IsPlacementValid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33SurvivorCosmeticHelperActor.Cosmetic_UpdateTurretLaserPlacement
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          PlacementLocation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         PlacementRotation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK33SurvivorCosmeticHelperActor::Cosmetic_UpdateTurretLaserPlacement(const struct FVector& PlacementLocation, const struct FRotator& PlacementRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorCosmeticHelperActor", "Cosmetic_UpdateTurretLaserPlacement");

	Params::K33SurvivorCosmeticHelperActor_Cosmetic_UpdateTurretLaserPlacement Parms{};

	Parms.PlacementLocation = std::move(PlacementLocation);
	Parms.PlacementRotation = std::move(PlacementRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33SurvivorCosmeticHelperActor.GetCarriedTurret
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AK33Turret*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK33Turret* AK33SurvivorCosmeticHelperActor::GetCarriedTurret() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorCosmeticHelperActor", "GetCarriedTurret");

	Params::K33SurvivorCosmeticHelperActor_GetCarriedTurret Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33SurvivorDetectionComponent.Authority_OnSurvivorInRangeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    InRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACamperPlayer*                    Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33SurvivorDetectionComponent::Authority_OnSurvivorInRangeChanged(const bool InRange, class ACamperPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorDetectionComponent", "Authority_OnSurvivorInRangeChanged");

	Params::K33SurvivorDetectionComponent_Authority_OnSurvivorInRangeChanged Parms{};

	Parms.InRange = InRange;
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33SurvivorDetectionComponent.OnRep_SurvivorsInRange
// (Final, Native, Private)

void UK33SurvivorDetectionComponent::OnRep_SurvivorsInRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33SurvivorDetectionComponent", "OnRep_SurvivorsInRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TunnelBlockCosmetic.Cosmetic_DisableTunnelVFXPathLight
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK33TunnelBlockCosmetic::Cosmetic_DisableTunnelVFXPathLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "Cosmetic_DisableTunnelVFXPathLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33TunnelBlockCosmetic.Cosmetic_EnableTunnelVFXPathLight
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AK33TunnelBlockCosmetic::Cosmetic_EnableTunnelVFXPathLight(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "Cosmetic_EnableTunnelVFXPathLight");

	Params::K33TunnelBlockCosmetic_Cosmetic_EnableTunnelVFXPathLight Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33TunnelBlockCosmetic.Cosmetic_OnTunnelBlockExitSelected
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33TunnelBlockCosmetic::Cosmetic_OnTunnelBlockExitSelected(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "Cosmetic_OnTunnelBlockExitSelected");

	Params::K33TunnelBlockCosmetic_Cosmetic_OnTunnelBlockExitSelected Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33TunnelBlockCosmetic.Cosmetic_SetTunnelExitAsBlocked
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsBlocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AK33TunnelBlockCosmetic::Cosmetic_SetTunnelExitAsBlocked(bool IsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "Cosmetic_SetTunnelExitAsBlocked");

	Params::K33TunnelBlockCosmetic_Cosmetic_SetTunnelExitAsBlocked Parms{};

	Parms.IsBlocked = IsBlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.K33TunnelBlockCosmetic.Cosmetic_ShowTunnelBlockExit
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AK33TunnelBlockCosmetic::Cosmetic_ShowTunnelBlockExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "Cosmetic_ShowTunnelBlockExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.K33TunnelBlockCosmetic.GetExitTunnelLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AK33TunnelBlockCosmetic::GetExitTunnelLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TunnelBlockCosmetic", "GetExitTunnelLocation");

	Params::K33TunnelBlockCosmetic_GetExitTunnelLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33TurretDamageComponent.Multicast_ReceivedMaxDamage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UK33TurretDamageComponent::Multicast_ReceivedMaxDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretDamageComponent", "Multicast_ReceivedMaxDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretDamageComponent.OnRep_CurrentDamageAmount
// (Final, Native, Private)

void UK33TurretDamageComponent::OnRep_CurrentDamageAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretDamageComponent", "OnRep_CurrentDamageAmount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretDamageComponent.OnRep_IsAttackedByTurret
// (Final, Native, Private)

void UK33TurretDamageComponent::OnRep_IsAttackedByTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretDamageComponent", "OnRep_IsAttackedByTurret");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretDestructionComponent.GetTurretDestructionDisappearanceDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UK33TurretDestructionComponent::GetTurretDestructionDisappearanceDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretDestructionComponent", "GetTurretDestructionDisappearanceDelay");

	Params::K33TurretDestructionComponent_GetTurretDestructionDisappearanceDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33TurretLaserComponent.OnLocallyObservedPlayerChanged
// (Final, Native, Private)

void UK33TurretLaserComponent::OnLocallyObservedPlayerChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretLaserComponent", "OnLocallyObservedPlayerChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretOverheatComponent.OnRep_CurrentHeatAmount
// (Final, Native, Private)

void UK33TurretOverheatComponent::OnRep_CurrentHeatAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretOverheatComponent", "OnRep_CurrentHeatAmount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretPlacer.OnRep_ReplicatedIsPlacementValid
// (Final, Native, Private)

void UK33TurretPlacer::OnRep_ReplicatedIsPlacementValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretPlacer", "OnRep_ReplicatedIsPlacementValid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33TurretRepairInteraction.Authority_OnChargeApplied
// (Final, Native, Private)
// Parameters:
// float                                   IndividualChargeAmount                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalChargeAmount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ChargeInstigator                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    WasCoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UK33TurretRepairInteraction::Authority_OnChargeApplied(float IndividualChargeAmount, float TotalChargeAmount, class AActor* ChargeInstigator, bool WasCoop, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("K33TurretRepairInteraction", "Authority_OnChargeApplied");

	Params::K33TurretRepairInteraction_Authority_OnChargeApplied Parms{};

	Parms.IndividualChargeAmount = IndividualChargeAmount;
	Parms.TotalChargeAmount = TotalChargeAmount;
	Parms.ChargeInstigator = ChargeInstigator;
	Parms.WasCoop = WasCoop;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.K33Utilities.GetAvailableTurretsCountInPool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UK33Utilities::GetAvailableTurretsCountInPool(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetAvailableTurretsCountInPool");

	Params::K33Utilities_GetAvailableTurretsCountInPool Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Utilities.GetK33Husk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK33Husk*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK33Husk* UK33Utilities::GetK33Husk(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetK33Husk");

	Params::K33Utilities_GetK33Husk Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Utilities.GetK33Power
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AK33Power*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AK33Power* UK33Utilities::GetK33Power(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetK33Power");

	Params::K33Utilities_GetK33Power Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Utilities.GetK33VFXFeetPool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalActorPoolComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalActorPoolComponent* UK33Utilities::GetK33VFXFeetPool(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetK33VFXFeetPool");

	Params::K33Utilities_GetK33VFXFeetPool Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Utilities.GetSpecialModeComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UK33SpecialModeComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UK33SpecialModeComponent* UK33Utilities::GetSpecialModeComponent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetSpecialModeComponent");

	Params::K33Utilities_GetSpecialModeComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.K33Utilities.GetTurretsPool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAuthoritativeActorPoolComponent* ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAuthoritativeActorPoolComponent* UK33Utilities::GetTurretsPool(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("K33Utilities", "GetTurretsPool");

	Params::K33Utilities_GetTurretsPool Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.MapObjectsCheatComponent.DBD_ShowFatherKey
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMapObjectsCheatComponent::DBD_ShowFatherKey(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapObjectsCheatComponent", "DBD_ShowFatherKey");

	Params::MapObjectsCheatComponent_DBD_ShowFatherKey Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.MapObjectsCheatComponent.DBD_ShowQuesita
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMapObjectsCheatComponent::DBD_ShowQuesita(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MapObjectsCheatComponent", "DBD_ShowQuesita");

	Params::MapObjectsCheatComponent_DBD_ShowQuesita Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.QuesitaManagerComponent.Authority_OnLevelReadyToPlay
// (Final, Native, Protected)

void UQuesitaManagerComponent::Authority_OnLevelReadyToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuesitaManagerComponent", "Authority_OnLevelReadyToPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.QuesitaManagerComponent.Authority_OnLockerInteractorChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsLocked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuesitaManagerComponent::Authority_OnLockerInteractorChanged(bool IsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuesitaManagerComponent", "Authority_OnLockerInteractorChanged");

	Params::QuesitaManagerComponent_Authority_OnLockerInteractorChanged Parms{};

	Parms.IsLocked = IsLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.QuesitaManagerComponent.Authority_OnQuesitaInteractionDone
// (Final, Native, Private)

void UQuesitaManagerComponent::Authority_OnQuesitaInteractionDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuesitaManagerComponent", "Authority_OnQuesitaInteractionDone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.QuesitaManagerComponent.OnRep_QuesitaInteraction
// (Final, Native, Private)

void UQuesitaManagerComponent::OnRep_QuesitaInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuesitaManagerComponent", "OnRep_QuesitaInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.QuesitaManagerComponent.OnRep_QuesitaLocker
// (Final, Native, Private)
// Parameters:
// class ALocker*                          LastLocker                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuesitaManagerComponent::OnRep_QuesitaLocker(class ALocker* LastLocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuesitaManagerComponent", "OnRep_QuesitaLocker");

	Params::QuesitaManagerComponent_OnRep_QuesitaLocker Parms{};

	Parms.LastLocker = LastLocker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherDoorAnimInstance.OnStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    HasBeenHacked                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWormholeFatherDoorAnimInstance::OnStateChanged(bool HasBeenHacked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherDoorAnimInstance", "OnStateChanged");

	Params::WormholeFatherDoorAnimInstance_OnStateChanged Parms{};

	Parms.HasBeenHacked = HasBeenHacked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherHackableActor.OnHackedEvent
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameEvent                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameEventData                   GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AWormholeFatherHackableActor::OnHackedEvent(const struct FGameplayTag& GameEvent, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherHackableActor", "OnHackedEvent");

	Params::WormholeFatherHackableActor_OnHackedEvent Parms{};

	Parms.GameEvent = std::move(GameEvent);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TheK33.WormholeFatherHackingComponent.OnWrmFatherHackedStateChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    HasBeenHacked                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWormholeFatherHackingComponent::OnWrmFatherHackedStateChangedDelegate__DelegateSignature(bool HasBeenHacked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherHackingComponent", "OnWrmFatherHackedStateChangedDelegate__DelegateSignature");

	Params::WormholeFatherHackingComponent_OnWrmFatherHackedStateChangedDelegate__DelegateSignature Parms{};

	Parms.HasBeenHacked = HasBeenHacked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheK33.WormholeFatherHackingComponent.SetHasBeenHacked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    HasBeenHacked                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWormholeFatherHackingComponent::SetHasBeenHacked(const bool HasBeenHacked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherHackingComponent", "SetHasBeenHacked");

	Params::WormholeFatherHackingComponent_SetHasBeenHacked Parms{};

	Parms.HasBeenHacked = HasBeenHacked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherHackingComponent.HasBeenHacked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWormholeFatherHackingComponent::HasBeenHacked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherHackingComponent", "HasBeenHacked");

	Params::WormholeFatherHackingComponent_HasBeenHacked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.WormholeFatherHackingComponent.OnRep_HasBeenHacked
// (Final, Native, Protected, Const)

void UWormholeFatherHackingComponent::OnRep_HasBeenHacked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherHackingComponent", "OnRep_HasBeenHacked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherKeyCard.Cosmetic_OnKeyCardCollected
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AWormholeFatherKeyCard::Cosmetic_OnKeyCardCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "Cosmetic_OnKeyCardCollected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.WormholeFatherKeyCard.Cosmetic_OnKeyCardDropped
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AWormholeFatherKeyCard::Cosmetic_OnKeyCardDropped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "Cosmetic_OnKeyCardDropped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TheK33.WormholeFatherKeyCard.OnRep_KeyCardState
// (Final, Native, Private)

void AWormholeFatherKeyCard::OnRep_KeyCardState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "OnRep_KeyCardState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherKeyCard.ApplyInitialTag
// (Final, Native, Private, Const)
// Parameters:
// class ADBDPlayer*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWormholeFatherKeyCard::ApplyInitialTag(class ADBDPlayer* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "ApplyInitialTag");

	Params::WormholeFatherKeyCard_ApplyInitialTag Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherKeyCard.GetKeyCardState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFatherKeyCardState                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFatherKeyCardState AWormholeFatherKeyCard::GetKeyCardState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "GetKeyCardState");

	Params::WormholeFatherKeyCard_GetKeyCardState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheK33.WormholeFatherKeyCard.RemoveInitialTag
// (Final, Native, Private, Const)
// Parameters:
// class ADBDPlayer*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWormholeFatherKeyCard::RemoveInitialTag(class ADBDPlayer* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherKeyCard", "RemoveInitialTag");

	Params::WormholeFatherKeyCard_RemoveInitialTag Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherRoomZoneOverlap.OnOverlapEnter
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWormholeFatherRoomZoneOverlap::OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherRoomZoneOverlap", "OnOverlapEnter");

	Params::WormholeFatherRoomZoneOverlap_OnOverlapEnter Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheK33.WormholeFatherRoomZoneOverlap.OnOverlapExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWormholeFatherRoomZoneOverlap::OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WormholeFatherRoomZoneOverlap", "OnOverlapExit");

	Params::WormholeFatherRoomZoneOverlap_OnOverlapExit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

