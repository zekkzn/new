#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anniversary2023

#include "Basic.hpp"


namespace SDK::Params
{

// Function Anniversary2023.BloodlustExposeInteraction.Cosmetic_BloodlustExpose
// 0x0010 (0x0010 - 0x0000)
struct BloodlustExposeInteraction_Cosmetic_BloodlustExpose final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodlustExposeInteraction_Cosmetic_BloodlustExpose) == 0x000008, "Wrong alignment on BloodlustExposeInteraction_Cosmetic_BloodlustExpose");
static_assert(sizeof(BloodlustExposeInteraction_Cosmetic_BloodlustExpose) == 0x000010, "Wrong size on BloodlustExposeInteraction_Cosmetic_BloodlustExpose");
static_assert(offsetof(BloodlustExposeInteraction_Cosmetic_BloodlustExpose, Player) == 0x000000, "Member 'BloodlustExposeInteraction_Cosmetic_BloodlustExpose::Player' has a wrong offset!");
static_assert(offsetof(BloodlustExposeInteraction_Cosmetic_BloodlustExpose, Target) == 0x000008, "Member 'BloodlustExposeInteraction_Cosmetic_BloodlustExpose::Target' has a wrong offset!");

// Function Anniversary2023.BloodlustExposeInteraction.Multicast_BloodlustExpose
// 0x0010 (0x0010 - 0x0000)
struct BloodlustExposeInteraction_Multicast_BloodlustExpose final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodlustExposeInteraction_Multicast_BloodlustExpose) == 0x000008, "Wrong alignment on BloodlustExposeInteraction_Multicast_BloodlustExpose");
static_assert(sizeof(BloodlustExposeInteraction_Multicast_BloodlustExpose) == 0x000010, "Wrong size on BloodlustExposeInteraction_Multicast_BloodlustExpose");
static_assert(offsetof(BloodlustExposeInteraction_Multicast_BloodlustExpose, Player) == 0x000000, "Member 'BloodlustExposeInteraction_Multicast_BloodlustExpose::Player' has a wrong offset!");
static_assert(offsetof(BloodlustExposeInteraction_Multicast_BloodlustExpose, Target) == 0x000008, "Member 'BloodlustExposeInteraction_Multicast_BloodlustExpose::Target' has a wrong offset!");

// Function Anniversary2023.InvitationKillerComponent.Cosmetic_SetVignetteVisibility
// 0x0001 (0x0001 - 0x0000)
struct InvitationKillerComponent_Cosmetic_SetVignetteVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationKillerComponent_Cosmetic_SetVignetteVisibility) == 0x000001, "Wrong alignment on InvitationKillerComponent_Cosmetic_SetVignetteVisibility");
static_assert(sizeof(InvitationKillerComponent_Cosmetic_SetVignetteVisibility) == 0x000001, "Wrong size on InvitationKillerComponent_Cosmetic_SetVignetteVisibility");
static_assert(offsetof(InvitationKillerComponent_Cosmetic_SetVignetteVisibility, IsVisible) == 0x000000, "Member 'InvitationKillerComponent_Cosmetic_SetVignetteVisibility::IsVisible' has a wrong offset!");

// Function Anniversary2023.KillerNegateStunInteraction.Cosmetic_OnInteractionUpdateStart
// 0x0010 (0x0010 - 0x0000)
struct KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart final
{
public:
	class ADBDPlayer*                             InteractingPlayer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInteractable*                          Interactable;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart) == 0x000008, "Wrong alignment on KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart");
static_assert(sizeof(KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart) == 0x000010, "Wrong size on KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart");
static_assert(offsetof(KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart, InteractingPlayer) == 0x000000, "Member 'KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart::InteractingPlayer' has a wrong offset!");
static_assert(offsetof(KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart, Interactable) == 0x000008, "Member 'KillerNegateStunInteraction_Cosmetic_OnInteractionUpdateStart::Interactable' has a wrong offset!");

// Function Anniversary2023.KillerNegateStunInteraction.OnRep_StatusEffect
// 0x0008 (0x0008 - 0x0000)
struct KillerNegateStunInteraction_OnRep_StatusEffect final
{
public:
	class UStatusEffect*                          PreviousStatusEffect;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KillerNegateStunInteraction_OnRep_StatusEffect) == 0x000008, "Wrong alignment on KillerNegateStunInteraction_OnRep_StatusEffect");
static_assert(sizeof(KillerNegateStunInteraction_OnRep_StatusEffect) == 0x000008, "Wrong size on KillerNegateStunInteraction_OnRep_StatusEffect");
static_assert(offsetof(KillerNegateStunInteraction_OnRep_StatusEffect, PreviousStatusEffect) == 0x000000, "Member 'KillerNegateStunInteraction_OnRep_StatusEffect::PreviousStatusEffect' has a wrong offset!");

// Function Anniversary2023.RemoteDestroyInteraction.Cosmetic_OnRemoteDestroy
// 0x0010 (0x0010 - 0x0000)
struct RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy final
{
public:
	class ADBDPlayer*                             InteractingPlayer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInteractable*                          Interactable;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy) == 0x000008, "Wrong alignment on RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy");
static_assert(sizeof(RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy) == 0x000010, "Wrong size on RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy");
static_assert(offsetof(RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy, InteractingPlayer) == 0x000000, "Member 'RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy::InteractingPlayer' has a wrong offset!");
static_assert(offsetof(RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy, Interactable) == 0x000008, "Member 'RemoteDestroyInteraction_Cosmetic_OnRemoteDestroy::Interactable' has a wrong offset!");

// Function Anniversary2023.RemoteDestroyInteraction.Multicast_RemoteDestroy
// 0x0010 (0x0010 - 0x0000)
struct RemoteDestroyInteraction_Multicast_RemoteDestroy final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInteractable*                          Interactable;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteDestroyInteraction_Multicast_RemoteDestroy) == 0x000008, "Wrong alignment on RemoteDestroyInteraction_Multicast_RemoteDestroy");
static_assert(sizeof(RemoteDestroyInteraction_Multicast_RemoteDestroy) == 0x000010, "Wrong size on RemoteDestroyInteraction_Multicast_RemoteDestroy");
static_assert(offsetof(RemoteDestroyInteraction_Multicast_RemoteDestroy, Player) == 0x000000, "Member 'RemoteDestroyInteraction_Multicast_RemoteDestroy::Player' has a wrong offset!");
static_assert(offsetof(RemoteDestroyInteraction_Multicast_RemoteDestroy, Interactable) == 0x000008, "Member 'RemoteDestroyInteraction_Multicast_RemoteDestroy::Interactable' has a wrong offset!");

// Function Anniversary2023.RemoteDestroyInteraction.ExplodeInteractable
// 0x0010 (0x0010 - 0x0000)
struct RemoteDestroyInteraction_ExplodeInteractable final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInteractable*                          Interactable;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RemoteDestroyInteraction_ExplodeInteractable) == 0x000008, "Wrong alignment on RemoteDestroyInteraction_ExplodeInteractable");
static_assert(sizeof(RemoteDestroyInteraction_ExplodeInteractable) == 0x000010, "Wrong size on RemoteDestroyInteraction_ExplodeInteractable");
static_assert(offsetof(RemoteDestroyInteraction_ExplodeInteractable, Player) == 0x000000, "Member 'RemoteDestroyInteraction_ExplodeInteractable::Player' has a wrong offset!");
static_assert(offsetof(RemoteDestroyInteraction_ExplodeInteractable, Interactable) == 0x000008, "Member 'RemoteDestroyInteraction_ExplodeInteractable::Interactable' has a wrong offset!");

// Function Anniversary2023.ReverseBamboozleInteractionDefinition.Cosmetic_OnWindowBlockBegin
// 0x0018 (0x0018 - 0x0000)
struct ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin final
{
public:
	class ADBDPlayer*                             AbilityCaster;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AWindow*                          Window;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin) == 0x000008, "Wrong alignment on ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin");
static_assert(sizeof(ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin) == 0x000018, "Wrong size on ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin");
static_assert(offsetof(ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin, AbilityCaster) == 0x000000, "Member 'ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin::AbilityCaster' has a wrong offset!");
static_assert(offsetof(ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin, Window) == 0x000008, "Member 'ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin::Window' has a wrong offset!");
static_assert(offsetof(ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin, Duration) == 0x000010, "Member 'ReverseBamboozleInteractionDefinition_Cosmetic_OnWindowBlockBegin::Duration' has a wrong offset!");

// Function Anniversary2023.ReverseBamboozleInteractionDefinition.Multicast_OnWindowBlockBegin
// 0x0010 (0x0010 - 0x0000)
struct ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin final
{
public:
	class ADBDPlayer*                             AbilityCaster;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AWindow*                          Window;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin) == 0x000008, "Wrong alignment on ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin");
static_assert(sizeof(ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin) == 0x000010, "Wrong size on ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin");
static_assert(offsetof(ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin, AbilityCaster) == 0x000000, "Member 'ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin::AbilityCaster' has a wrong offset!");
static_assert(offsetof(ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin, Window) == 0x000008, "Member 'ReverseBamboozleInteractionDefinition_Multicast_OnWindowBlockBegin::Window' has a wrong offset!");

}

