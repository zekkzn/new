#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightingInterface

#include "Basic.hpp"

#include "LightingInterfaceEnum_structs.hpp"
#include "Engine_structs.hpp"
#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function LightingInterface.LightingInterface_C.GetBasementPost
// 0x0008 (0x0008 - 0x0000)
struct LightingInterface_C_GetBasementPost final
{
public:
	ELightingInterfaceEnum                        BP_Type;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDPerPlatformFloat                   Override;                                          // 0x0004(0x0004)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(LightingInterface_C_GetBasementPost) == 0x000004, "Wrong alignment on LightingInterface_C_GetBasementPost");
static_assert(sizeof(LightingInterface_C_GetBasementPost) == 0x000008, "Wrong size on LightingInterface_C_GetBasementPost");
static_assert(offsetof(LightingInterface_C_GetBasementPost, BP_Type) == 0x000000, "Member 'LightingInterface_C_GetBasementPost::BP_Type' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_GetBasementPost, Override) == 0x000004, "Member 'LightingInterface_C_GetBasementPost::Override' has a wrong offset!");

// Function LightingInterface.LightingInterface_C.GetCondemnedStatusVignetteIntensity
// 0x0010 (0x0010 - 0x0000)
struct LightingInterface_C_GetCondemnedStatusVignetteIntensity final
{
public:
	ELightingInterfaceEnum                        BP_Type;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CondemnedStatusIntensityOverride;                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightingInterface_C_GetCondemnedStatusVignetteIntensity) == 0x000008, "Wrong alignment on LightingInterface_C_GetCondemnedStatusVignetteIntensity");
static_assert(sizeof(LightingInterface_C_GetCondemnedStatusVignetteIntensity) == 0x000010, "Wrong size on LightingInterface_C_GetCondemnedStatusVignetteIntensity");
static_assert(offsetof(LightingInterface_C_GetCondemnedStatusVignetteIntensity, BP_Type) == 0x000000, "Member 'LightingInterface_C_GetCondemnedStatusVignetteIntensity::BP_Type' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_GetCondemnedStatusVignetteIntensity, CondemnedStatusIntensityOverride) == 0x000008, "Member 'LightingInterface_C_GetCondemnedStatusVignetteIntensity::CondemnedStatusIntensityOverride' has a wrong offset!");

// Function LightingInterface.LightingInterface_C.GetDetectionZoneIntensity
// 0x0018 (0x0018 - 0x0000)
struct LightingInterface_C_GetDetectionZoneIntensity final
{
public:
	ELightingInterfaceEnum                        BP_Type;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DetectionZoneCylinderIntensityOverride;            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DetectionZoneDecalIntensityOverride;               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightingInterface_C_GetDetectionZoneIntensity) == 0x000008, "Wrong alignment on LightingInterface_C_GetDetectionZoneIntensity");
static_assert(sizeof(LightingInterface_C_GetDetectionZoneIntensity) == 0x000018, "Wrong size on LightingInterface_C_GetDetectionZoneIntensity");
static_assert(offsetof(LightingInterface_C_GetDetectionZoneIntensity, BP_Type) == 0x000000, "Member 'LightingInterface_C_GetDetectionZoneIntensity::BP_Type' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_GetDetectionZoneIntensity, DetectionZoneCylinderIntensityOverride) == 0x000008, "Member 'LightingInterface_C_GetDetectionZoneIntensity::DetectionZoneCylinderIntensityOverride' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_GetDetectionZoneIntensity, DetectionZoneDecalIntensityOverride) == 0x000010, "Member 'LightingInterface_C_GetDetectionZoneIntensity::DetectionZoneDecalIntensityOverride' has a wrong offset!");

// Function LightingInterface.LightingInterface_C.GetLightingPost
// 0x0018 (0x0018 - 0x0000)
struct LightingInterface_C_GetLightingPost final
{
public:
	TArray<class UPostProcessComponent*>          PostProcess;                                       // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	ELightingInterfaceEnum                        BP_Type;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightingInterface_C_GetLightingPost) == 0x000008, "Wrong alignment on LightingInterface_C_GetLightingPost");
static_assert(sizeof(LightingInterface_C_GetLightingPost) == 0x000018, "Wrong size on LightingInterface_C_GetLightingPost");
static_assert(offsetof(LightingInterface_C_GetLightingPost, PostProcess) == 0x000000, "Member 'LightingInterface_C_GetLightingPost::PostProcess' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_GetLightingPost, BP_Type) == 0x000010, "Member 'LightingInterface_C_GetLightingPost::BP_Type' has a wrong offset!");

// Function LightingInterface.LightingInterface_C.SetPostOverride
// 0x06F0 (0x06F0 - 0x0000)
struct LightingInterface_C_SetPostOverride final
{
public:
	struct FPostProcessSettings                   PostSettings;                                      // 0x0000(0x06E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	class UPostProcessComponent*                  PostProcess;                                       // 0x06E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LightingInterface_C_SetPostOverride) == 0x000010, "Wrong alignment on LightingInterface_C_SetPostOverride");
static_assert(sizeof(LightingInterface_C_SetPostOverride) == 0x0006F0, "Wrong size on LightingInterface_C_SetPostOverride");
static_assert(offsetof(LightingInterface_C_SetPostOverride, PostSettings) == 0x000000, "Member 'LightingInterface_C_SetPostOverride::PostSettings' has a wrong offset!");
static_assert(offsetof(LightingInterface_C_SetPostOverride, PostProcess) == 0x0006E0, "Member 'LightingInterface_C_SetPostOverride::PostProcess' has a wrong offset!");

}

