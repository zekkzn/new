#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BearTrap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BearTrap.BearTrap_C.SetIndicatorActiveStateToTrappedPlayer
// 0x0020 (0x0020 - 0x0000)
struct BearTrap_C_SetIndicatorActiveStateToTrappedPlayer final
{
public:
	bool                                          TrapIndicatorActive;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetTrappedPlayer_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USurvivorOutlineUpdateStrategy*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer) == 0x000008, "Wrong alignment on BearTrap_C_SetIndicatorActiveStateToTrappedPlayer");
static_assert(sizeof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer) == 0x000020, "Wrong size on BearTrap_C_SetIndicatorActiveStateToTrappedPlayer");
static_assert(offsetof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer, TrapIndicatorActive) == 0x000000, "Member 'BearTrap_C_SetIndicatorActiveStateToTrappedPlayer::TrapIndicatorActive' has a wrong offset!");
static_assert(offsetof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer, CallFunc_GetTrappedPlayer_ReturnValue) == 0x000008, "Member 'BearTrap_C_SetIndicatorActiveStateToTrappedPlayer::CallFunc_GetTrappedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BearTrap_C_SetIndicatorActiveStateToTrappedPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_SetIndicatorActiveStateToTrappedPlayer, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BearTrap_C_SetIndicatorActiveStateToTrappedPlayer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BearTrap.BearTrap_C.PlayTrapSoundEvent
// 0x0038 (0x0038 - 0x0000)
struct BearTrap_C_PlayTrapSoundEvent final
{
public:
	class FName                                   SoundEventTunable;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             InstigatingPlayer;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTunableValue_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_PlayTrapSoundEvent) == 0x000008, "Wrong alignment on BearTrap_C_PlayTrapSoundEvent");
static_assert(sizeof(BearTrap_C_PlayTrapSoundEvent) == 0x000038, "Wrong size on BearTrap_C_PlayTrapSoundEvent");
static_assert(offsetof(BearTrap_C_PlayTrapSoundEvent, SoundEventTunable) == 0x000000, "Member 'BearTrap_C_PlayTrapSoundEvent::SoundEventTunable' has a wrong offset!");
static_assert(offsetof(BearTrap_C_PlayTrapSoundEvent, InstigatingPlayer) == 0x000010, "Member 'BearTrap_C_PlayTrapSoundEvent::InstigatingPlayer' has a wrong offset!");
static_assert(offsetof(BearTrap_C_PlayTrapSoundEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BearTrap_C_PlayTrapSoundEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_PlayTrapSoundEvent, CallFunc_GetTunableValue_ReturnValue) == 0x000030, "Member 'BearTrap_C_PlayTrapSoundEvent::CallFunc_GetTunableValue_ReturnValue' has a wrong offset!");

// Function BearTrap.BearTrap_C.OnPlayerTrapped
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_C_OnPlayerTrapped final
{
public:
	class ADBDPlayer*                             TrappedPlayer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_OnPlayerTrapped) == 0x000008, "Wrong alignment on BearTrap_C_OnPlayerTrapped");
static_assert(sizeof(BearTrap_C_OnPlayerTrapped) == 0x000008, "Wrong size on BearTrap_C_OnPlayerTrapped");
static_assert(offsetof(BearTrap_C_OnPlayerTrapped, TrappedPlayer) == 0x000000, "Member 'BearTrap_C_OnPlayerTrapped::TrappedPlayer' has a wrong offset!");

// Function BearTrap.BearTrap_C.OnDropped
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_C_OnDropped final
{
public:
	class ADBDPlayer*                             DroppingPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_OnDropped) == 0x000008, "Wrong alignment on BearTrap_C_OnDropped");
static_assert(sizeof(BearTrap_C_OnDropped) == 0x000008, "Wrong size on BearTrap_C_OnDropped");
static_assert(offsetof(BearTrap_C_OnDropped, DroppingPlayer) == 0x000000, "Member 'BearTrap_C_OnDropped::DroppingPlayer' has a wrong offset!");

// Function BearTrap.BearTrap_C.OnCollectorSet
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_C_OnCollectorSet final
{
public:
	class ADBDPlayer*                             Collector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_OnCollectorSet) == 0x000008, "Wrong alignment on BearTrap_C_OnCollectorSet");
static_assert(sizeof(BearTrap_C_OnCollectorSet) == 0x000008, "Wrong size on BearTrap_C_OnCollectorSet");
static_assert(offsetof(BearTrap_C_OnCollectorSet, Collector) == 0x000000, "Member 'BearTrap_C_OnCollectorSet::Collector' has a wrong offset!");

// Function BearTrap.BearTrap_C.ForceOpen
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_C_ForceOpen final
{
public:
	class ADBDPlayer*                             InstigatingPlayer;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_ForceOpen) == 0x000008, "Wrong alignment on BearTrap_C_ForceOpen");
static_assert(sizeof(BearTrap_C_ForceOpen) == 0x000008, "Wrong size on BearTrap_C_ForceOpen");
static_assert(offsetof(BearTrap_C_ForceOpen, InstigatingPlayer) == 0x000000, "Member 'BearTrap_C_ForceOpen::InstigatingPlayer' has a wrong offset!");

// Function BearTrap.BearTrap_C.ExecuteUbergraph_BearTrap
// 0x0180 (0x0180 - 0x0000)
struct BearTrap_C_ExecuteUbergraph_BearTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_Event_trappedPlayer;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Success_1;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Bonus_1;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_ComponentBoundEvent_Player_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TriggerLoudNoise_1;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_hadInput_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         K2Node_ComponentBoundEvent_type_1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_ChargeChange_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Success;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Bonus;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_ComponentBoundEvent_Player;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_TriggerLoudNoise;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_hadInput;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         K2Node_ComponentBoundEvent_type;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_ChargeChange;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             CallFunc_GetTrappedPlayer_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_droppingPlayer;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_collector;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInteractionHandler*              CallFunc_GetPlayerInteractionHandler_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInteractionHandler*              CallFunc_GetPlayerInteractionHandler_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_CustomEvent_InstigatingPlayer;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0080(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetTrappedPlayer_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          K2Node_DynamicCast_AsCamper_Player;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x00B4(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue; // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSeeLoudNoise_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Effect_BearTrapIndicator_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KillerHasBearTrapNoDamageModifier_return; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             CallFunc_GetTrappedPlayer_ReturnValue_2;           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_ExecuteUbergraph_BearTrap) == 0x000010, "Wrong alignment on BearTrap_C_ExecuteUbergraph_BearTrap");
static_assert(sizeof(BearTrap_C_ExecuteUbergraph_BearTrap) == 0x000180, "Wrong size on BearTrap_C_ExecuteUbergraph_BearTrap");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, EntryPoint) == 0x000000, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_Event_trappedPlayer) == 0x000008, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_Event_trappedPlayer' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Success_1) == 0x000010, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Success_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Bonus_1) == 0x000011, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Bonus_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Player_1) == 0x000018, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_TriggerLoudNoise_1) == 0x000020, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_TriggerLoudNoise_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_hadInput_1) == 0x000021, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_hadInput_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_type_1) == 0x000022, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_type_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_ChargeChange_1) == 0x000024, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_ChargeChange_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Success) == 0x000028, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Success' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Bonus) == 0x000029, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Bonus' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_Player) == 0x000030, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_Player' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_TriggerLoudNoise) == 0x000038, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_hadInput) == 0x000039, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_hadInput' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_type) == 0x00003A, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_type' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_ComponentBoundEvent_ChargeChange) == 0x00003C, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_ComponentBoundEvent_ChargeChange' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetTrappedPlayer_ReturnValue) == 0x000040, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetTrappedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_Event_droppingPlayer) == 0x000048, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_Event_droppingPlayer' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_Event_collector) == 0x000050, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_Event_collector' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetPlayerInteractionHandler_ReturnValue) == 0x000060, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetPlayerInteractionHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetPlayerInteractionHandler_ReturnValue_1) == 0x000070, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetPlayerInteractionHandler_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_CustomEvent_InstigatingPlayer) == 0x000078, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_CustomEvent_InstigatingPlayer' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, Temp_delegate_Variable) == 0x000080, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetTrappedPlayer_ReturnValue_1) == 0x000098, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetTrappedPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_PostAkEvent_ReturnValue) == 0x0000A0, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_DynamicCast_AsCamper_Player) == 0x0000A8, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_DynamicCast_AsCamper_Player' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, Temp_delegate_Variable_1) == 0x0000B4, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000C8, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue) == 0x0000CC, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetCanScreamAndPreventNextScreamIfNeeded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_CanSeeLoudNoise_ReturnValue) == 0x0000E8, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_CanSeeLoudNoise_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0000F0, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000158, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_KillerHasBearTrapNoDamageModifier_return) == 0x000168, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_KillerHasBearTrapNoDamageModifier_return' has a wrong offset!");
static_assert(offsetof(BearTrap_C_ExecuteUbergraph_BearTrap, CallFunc_GetTrappedPlayer_ReturnValue_2) == 0x000170, "Member 'BearTrap_C_ExecuteUbergraph_BearTrap::CallFunc_GetTrappedPlayer_ReturnValue_2' has a wrong offset!");

// Function BearTrap.BearTrap_C.BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bonus;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadInput;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         Type;                                              // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeChange;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature) == 0x000008, "Wrong alignment on BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(sizeof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature) == 0x000018, "Wrong size on BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, Success) == 0x000000, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, Bonus) == 0x000001, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::Bonus' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, Player) == 0x000008, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, TriggerLoudNoise) == 0x000010, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, HadInput) == 0x000011, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::HadInput' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, Type) == 0x000012, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature, ChargeChange) == 0x000014, "Member 'BearTrap_C_BndEvt__UntrapChargeable_K2Node_ComponentBoundEvent_114_ChargeableSkillCheckResponse__DelegateSignature::ChargeChange' has a wrong offset!");

// Function BearTrap.BearTrap_C.BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bonus;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadInput;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCheckCustomType                         Type;                                              // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeChange;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature) == 0x000008, "Wrong alignment on BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(sizeof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature) == 0x000018, "Wrong size on BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, Success) == 0x000000, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, Bonus) == 0x000001, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::Bonus' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, Player) == 0x000008, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, TriggerLoudNoise) == 0x000010, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, HadInput) == 0x000011, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::HadInput' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, Type) == 0x000012, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature, ChargeChange) == 0x000014, "Member 'BearTrap_C_BndEvt__EscapeChargeable_K2Node_ComponentBoundEvent_242_ChargeableSkillCheckResponse__DelegateSignature::ChargeChange' has a wrong offset!");

// Function BearTrap.BearTrap_C.KillerHasBearTrapNoDamageModifier
// 0x0018 (0x0018 - 0x0000)
struct BearTrap_C_KillerHasBearTrapNoDamageModifier final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBearTrapNoDamageModifier;                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManager*                           CallFunc_GetPerkManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPerkFlag_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_KillerHasBearTrapNoDamageModifier) == 0x000008, "Wrong alignment on BearTrap_C_KillerHasBearTrapNoDamageModifier");
static_assert(sizeof(BearTrap_C_KillerHasBearTrapNoDamageModifier) == 0x000018, "Wrong size on BearTrap_C_KillerHasBearTrapNoDamageModifier");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, Return) == 0x000000, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::Return' has a wrong offset!");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, HasBearTrapNoDamageModifier) == 0x000001, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::HasBearTrapNoDamageModifier' has a wrong offset!");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, CallFunc_GetPerkManager_ReturnValue) == 0x000008, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::CallFunc_GetPerkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BearTrap_C_KillerHasBearTrapNoDamageModifier, CallFunc_HasPerkFlag_ReturnValue) == 0x000011, "Member 'BearTrap_C_KillerHasBearTrapNoDamageModifier::CallFunc_HasPerkFlag_ReturnValue' has a wrong offset!");

// Function BearTrap.BearTrap_C.GetAkAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_C_GetAkAudioComponent final
{
public:
	class UAkComponent*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BearTrap_C_GetAkAudioComponent) == 0x000008, "Wrong alignment on BearTrap_C_GetAkAudioComponent");
static_assert(sizeof(BearTrap_C_GetAkAudioComponent) == 0x000008, "Wrong size on BearTrap_C_GetAkAudioComponent");
static_assert(offsetof(BearTrap_C_GetAkAudioComponent, ReturnValue) == 0x000000, "Member 'BearTrap_C_GetAkAudioComponent::ReturnValue' has a wrong offset!");

}

