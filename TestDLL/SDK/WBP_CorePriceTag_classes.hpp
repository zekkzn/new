#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePriceTag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CorePriceTag.WBP_CorePriceTag_C
// 0x00C0 (0x03F8 - 0x0338)
class UWBP_CorePriceTag_C final : public UCorePriceTagWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              Background;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DiscountLabel;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              DiscountStrikeIMG;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          DiscountTB;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              PriceContainer;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          PriceTB;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsAffordable;                                      // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECurrencyType                                 CurrencyType;                                      // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighlightInsufficientCurrency;                     // 0x0372(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            PriceNotAffordableColor;                           // 0x0374(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            PriceAuricCellsColor;                              // 0x0388(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateColor                            PriceDefaultColor;                                 // 0x039C(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateColor                            DiscountDefaultColor;                              // 0x03B0(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateColor                            DiscountNotAffordableColor;                        // 0x03C4(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FLinearColor                           StrikeDefaultColor;                                // 0x03D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StrikeNotAffordableColor;                          // 0x03E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CorePriceTag(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetBackgroundVisible(const bool Param_ShowBackground);
	void SetColors(const struct FSlateColor& PriceColor, const struct FSlateColor& DiscountColor, const struct FLinearColor& StrikeColor);
	void SetCurrencyIcon(ECurrencyType Param_CurrencyType);
	void SetData(const struct FPriceTagViewData& ViewData);
	void SetDiscountTagSpacing(const float bottomPadding);
	void SetHighlightInsufficientCurrency(const bool Highlight);
	void SetPriceTagVisual();
	void UpdatePriceTagScale(const float PriceTagScale);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CorePriceTag_C">();
	}
	static class UWBP_CorePriceTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CorePriceTag_C>();
	}
};
static_assert(alignof(UWBP_CorePriceTag_C) == 0x000008, "Wrong alignment on UWBP_CorePriceTag_C");
static_assert(sizeof(UWBP_CorePriceTag_C) == 0x0003F8, "Wrong size on UWBP_CorePriceTag_C");
static_assert(offsetof(UWBP_CorePriceTag_C, UberGraphFrame) == 0x000338, "Member 'UWBP_CorePriceTag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, Background) == 0x000340, "Member 'UWBP_CorePriceTag_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, DiscountLabel) == 0x000348, "Member 'UWBP_CorePriceTag_C::DiscountLabel' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, DiscountStrikeIMG) == 0x000350, "Member 'UWBP_CorePriceTag_C::DiscountStrikeIMG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, DiscountTB) == 0x000358, "Member 'UWBP_CorePriceTag_C::DiscountTB' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, PriceContainer) == 0x000360, "Member 'UWBP_CorePriceTag_C::PriceContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, PriceTB) == 0x000368, "Member 'UWBP_CorePriceTag_C::PriceTB' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, IsAffordable) == 0x000370, "Member 'UWBP_CorePriceTag_C::IsAffordable' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, CurrencyType) == 0x000371, "Member 'UWBP_CorePriceTag_C::CurrencyType' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, HighlightInsufficientCurrency) == 0x000372, "Member 'UWBP_CorePriceTag_C::HighlightInsufficientCurrency' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, PriceNotAffordableColor) == 0x000374, "Member 'UWBP_CorePriceTag_C::PriceNotAffordableColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, PriceAuricCellsColor) == 0x000388, "Member 'UWBP_CorePriceTag_C::PriceAuricCellsColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, PriceDefaultColor) == 0x00039C, "Member 'UWBP_CorePriceTag_C::PriceDefaultColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, DiscountDefaultColor) == 0x0003B0, "Member 'UWBP_CorePriceTag_C::DiscountDefaultColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, DiscountNotAffordableColor) == 0x0003C4, "Member 'UWBP_CorePriceTag_C::DiscountNotAffordableColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, StrikeDefaultColor) == 0x0003D8, "Member 'UWBP_CorePriceTag_C::StrikeDefaultColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePriceTag_C, StrikeNotAffordableColor) == 0x0003E8, "Member 'UWBP_CorePriceTag_C::StrikeNotAffordableColor' has a wrong offset!");

}

