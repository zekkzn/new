#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TickUtilities

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class TickUtilities.RoundRobinTicker
// 0x0050 (0x0088 - 0x0038)
class URoundRobinTicker final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RoundRobinTicker">();
	}
	static class URoundRobinTicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoundRobinTicker>();
	}
};
static_assert(alignof(URoundRobinTicker) == 0x000008, "Wrong alignment on URoundRobinTicker");
static_assert(sizeof(URoundRobinTicker) == 0x000088, "Wrong size on URoundRobinTicker");

// Class TickUtilities.FrameHikeMonitor
// 0x0020 (0x0058 - 0x0038)
class UFrameHikeMonitor final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FrameHikeMonitor">();
	}
	static class UFrameHikeMonitor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFrameHikeMonitor>();
	}
};
static_assert(alignof(UFrameHikeMonitor) == 0x000008, "Wrong alignment on UFrameHikeMonitor");
static_assert(sizeof(UFrameHikeMonitor) == 0x000058, "Wrong size on UFrameHikeMonitor");

// Class TickUtilities.TimeBudgeter
// 0x0058 (0x0090 - 0x0038)
class UTimeBudgeter final : public UWorldSubsystem
{
public:
	uint8                                         Pad_38[0x58];                                      // 0x0038(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimeBudgeter">();
	}
	static class UTimeBudgeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeBudgeter>();
	}
};
static_assert(alignof(UTimeBudgeter) == 0x000008, "Wrong alignment on UTimeBudgeter");
static_assert(sizeof(UTimeBudgeter) == 0x000090, "Wrong size on UTimeBudgeter");

}

