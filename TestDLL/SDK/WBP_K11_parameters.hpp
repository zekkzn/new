#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K11

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_K11.WBP_K11_C.SetPigVisual
// 0x0003 (0x0003 - 0x0000)
struct WBP_K11_C_SetPigVisual final
{
public:
	bool                                          Is_Local_Killer;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EReverseBearTrapUIState                       Reverse_Beartrap_state;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K11_C_SetPigVisual) == 0x000001, "Wrong alignment on WBP_K11_C_SetPigVisual");
static_assert(sizeof(WBP_K11_C_SetPigVisual) == 0x000003, "Wrong size on WBP_K11_C_SetPigVisual");
static_assert(offsetof(WBP_K11_C_SetPigVisual, Is_Local_Killer) == 0x000000, "Member 'WBP_K11_C_SetPigVisual::Is_Local_Killer' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigVisual, Reverse_Beartrap_state) == 0x000001, "Member 'WBP_K11_C_SetPigVisual::Reverse_Beartrap_state' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigVisual, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WBP_K11_C_SetPigVisual::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_K11.WBP_K11_C.SetPigData
// 0x0038 (0x0038 - 0x0000)
struct WBP_K11_C_SetPigData final
{
public:
	bool                                          Is_Local_Killer;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPigStatusData*                         KillerData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Status_Change;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K11_C_SetPigData) == 0x000008, "Wrong alignment on WBP_K11_C_SetPigData");
static_assert(sizeof(WBP_K11_C_SetPigData) == 0x000038, "Wrong size on WBP_K11_C_SetPigData");
static_assert(offsetof(WBP_K11_C_SetPigData, Is_Local_Killer) == 0x000000, "Member 'WBP_K11_C_SetPigData::Is_Local_Killer' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, KillerData) == 0x000008, "Member 'WBP_K11_C_SetPigData::KillerData' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, Status_Change) == 0x000010, "Member 'WBP_K11_C_SetPigData::Status_Change' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_K11_C_SetPigData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_K11_C_SetPigData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_K11_C_SetPigData::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_K11_C_SetPigData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_K11_C_SetPigData::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_SetPigData, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'WBP_K11_C_SetPigData::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_K11.WBP_K11_C.SetKillerData
// 0x0098 (0x0098 - 0x0000)
struct WBP_K11_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_K11_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_K11_C_SetKillerData");
static_assert(sizeof(WBP_K11_C_SetKillerData) == 0x000098, "Wrong size on WBP_K11_C_SetKillerData");
static_assert(offsetof(WBP_K11_C_SetKillerData, Data) == 0x000000, "Member 'WBP_K11_C_SetKillerData::Data' has a wrong offset!");

// Function WBP_K11.WBP_K11_C.ExecuteUbergraph_WBP_K11
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_K11_C_ExecuteUbergraph_WBP_K11 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	class UPigStatusData*                         K2Node_DynamicCast_AsPig_Status_Data;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPigStatusData*                         CallFunc_SpawnObject_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K11_C_ExecuteUbergraph_WBP_K11) == 0x000008, "Wrong alignment on WBP_K11_C_ExecuteUbergraph_WBP_K11");
static_assert(sizeof(WBP_K11_C_ExecuteUbergraph_WBP_K11) == 0x0000B8, "Wrong size on WBP_K11_C_ExecuteUbergraph_WBP_K11");
static_assert(offsetof(WBP_K11_C_ExecuteUbergraph_WBP_K11, EntryPoint) == 0x000000, "Member 'WBP_K11_C_ExecuteUbergraph_WBP_K11::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_ExecuteUbergraph_WBP_K11, K2Node_Event_data) == 0x000008, "Member 'WBP_K11_C_ExecuteUbergraph_WBP_K11::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_ExecuteUbergraph_WBP_K11, K2Node_DynamicCast_AsPig_Status_Data) == 0x0000A0, "Member 'WBP_K11_C_ExecuteUbergraph_WBP_K11::K2Node_DynamicCast_AsPig_Status_Data' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_ExecuteUbergraph_WBP_K11, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_K11_C_ExecuteUbergraph_WBP_K11::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K11_C_ExecuteUbergraph_WBP_K11, CallFunc_SpawnObject_ReturnValue) == 0x0000B0, "Member 'WBP_K11_C_ExecuteUbergraph_WBP_K11::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

}

