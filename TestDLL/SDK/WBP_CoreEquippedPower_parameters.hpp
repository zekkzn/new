#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreEquippedPower

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.UpdateControlMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreEquippedPower_C_UpdateControlMode final
{
public:
	EControlMode                                  ControlMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreEquippedPower_C_UpdateControlMode) == 0x000001, "Wrong alignment on WBP_CoreEquippedPower_C_UpdateControlMode");
static_assert(sizeof(WBP_CoreEquippedPower_C_UpdateControlMode) == 0x000001, "Wrong size on WBP_CoreEquippedPower_C_UpdateControlMode");
static_assert(offsetof(WBP_CoreEquippedPower_C_UpdateControlMode, ControlMode) == 0x000000, "Member 'WBP_CoreEquippedPower_C_UpdateControlMode::ControlMode' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetData
// 0x0228 (0x0228 - 0x0000)
struct WBP_CoreEquippedPower_C_SetData final
{
public:
	struct FPowerBundleViewData                   PowerBundleData;                                   // 0x0000(0x0228)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreEquippedPower_C_SetData) == 0x000008, "Wrong alignment on WBP_CoreEquippedPower_C_SetData");
static_assert(sizeof(WBP_CoreEquippedPower_C_SetData) == 0x000228, "Wrong size on WBP_CoreEquippedPower_C_SetData");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetData, PowerBundleData) == 0x000000, "Member 'WBP_CoreEquippedPower_C_SetData::PowerBundleData' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetCarryingVisualFeedback
// 0x0018 (0x0018 - 0x0000)
struct WBP_CoreEquippedPower_C_SetCarryingVisualFeedback final
{
public:
	bool                                          Param_IsCarrying;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback) == 0x000008, "Wrong alignment on WBP_CoreEquippedPower_C_SetCarryingVisualFeedback");
static_assert(sizeof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback) == 0x000018, "Wrong size on WBP_CoreEquippedPower_C_SetCarryingVisualFeedback");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback, Param_IsCarrying) == 0x000000, "Member 'WBP_CoreEquippedPower_C_SetCarryingVisualFeedback::Param_IsCarrying' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WBP_CoreEquippedPower_C_SetCarryingVisualFeedback::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_CoreEquippedPower_C_SetCarryingVisualFeedback::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingVisualFeedback, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_CoreEquippedPower_C_SetCarryingVisualFeedback::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetCarryingMode
// 0x0130 (0x0130 - 0x0000)
struct WBP_CoreEquippedPower_C_SetCarryingMode final
{
public:
	bool                                          Param_IsCarrying;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPowerViewData                         CarryingViewData;                                  // 0x0008(0x0128)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreEquippedPower_C_SetCarryingMode) == 0x000008, "Wrong alignment on WBP_CoreEquippedPower_C_SetCarryingMode");
static_assert(sizeof(WBP_CoreEquippedPower_C_SetCarryingMode) == 0x000130, "Wrong size on WBP_CoreEquippedPower_C_SetCarryingMode");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingMode, Param_IsCarrying) == 0x000000, "Member 'WBP_CoreEquippedPower_C_SetCarryingMode::Param_IsCarrying' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetCarryingMode, CarryingViewData) == 0x000008, "Member 'WBP_CoreEquippedPower_C_SetCarryingMode::CarryingViewData' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetActiveState
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreEquippedPower_C_SetActiveState final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreEquippedPower_C_SetActiveState) == 0x000001, "Wrong alignment on WBP_CoreEquippedPower_C_SetActiveState");
static_assert(sizeof(WBP_CoreEquippedPower_C_SetActiveState) == 0x000001, "Wrong size on WBP_CoreEquippedPower_C_SetActiveState");
static_assert(offsetof(WBP_CoreEquippedPower_C_SetActiveState, IsActive) == 0x000000, "Member 'WBP_CoreEquippedPower_C_SetActiveState::IsActive' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.OnControlModeChangedBP
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreEquippedPower_C_OnControlModeChangedBP final
{
public:
	EControlMode                                  ControlMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreEquippedPower_C_OnControlModeChangedBP) == 0x000001, "Wrong alignment on WBP_CoreEquippedPower_C_OnControlModeChangedBP");
static_assert(sizeof(WBP_CoreEquippedPower_C_OnControlModeChangedBP) == 0x000001, "Wrong size on WBP_CoreEquippedPower_C_OnControlModeChangedBP");
static_assert(offsetof(WBP_CoreEquippedPower_C_OnControlModeChangedBP, ControlMode) == 0x000000, "Member 'WBP_CoreEquippedPower_C_OnControlModeChangedBP::ControlMode' has a wrong offset!");

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.ExecuteUbergraph_WBP_CoreEquippedPower
// 0x0378 (0x0378 - 0x0000)
struct WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPowerBundleViewData                   K2Node_Event_powerBundleData;                      // 0x0008(0x0228)(ConstParm)
	TScriptInterface<class IPowerBundleViewInterface> K2Node_DynamicCast_AsPower_Bundle_View_Interface;  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isCarrying;                           // 0x0241(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPowerViewData                         K2Node_Event_carryingViewData;                     // 0x0248(0x0128)(ConstParm)
	bool                                          K2Node_Event_IsActive;                             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControlMode                                  K2Node_Event_controlMode;                          // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower) == 0x000008, "Wrong alignment on WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower");
static_assert(sizeof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower) == 0x000378, "Wrong size on WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, EntryPoint) == 0x000000, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_Event_powerBundleData) == 0x000008, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_Event_powerBundleData' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_DynamicCast_AsPower_Bundle_View_Interface) == 0x000230, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_DynamicCast_AsPower_Bundle_View_Interface' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_Event_isCarrying) == 0x000241, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_Event_isCarrying' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_Event_carryingViewData) == 0x000248, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_Event_carryingViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_Event_IsActive) == 0x000370, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_Event_IsActive' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, CallFunc_BooleanAND_ReturnValue) == 0x000371, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower, K2Node_Event_controlMode) == 0x000372, "Member 'WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower::K2Node_Event_controlMode' has a wrong offset!");

}

