#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Effect_General

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "TheClown_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_Effect_General.BPI_Effect_General_C
// 0x0000 (0x0030 - 0x0030)
class IBPI_Effect_General_C final : public IInterface
{
public:
	void ActivateAttemptEscapeVFX();
	void ActivateEndGameVignette(bool IsActive);
	void ActivateKnockoutVFX();
	void ActivateLocalPlayerExposedVFX();
	void ActivatePlayerExposedVFX();
	void ActivatePlayerGlitchVFX(const class UMaterialInstanceDynamic*& GlitchFX, const bool Face, bool Madness, bool Killer);
	void ActivatePlayerLightningVFX(const class UMaterialInstanceDynamic*& LightningFX, bool Intense);
	void ActivatePounceStateVFX();
	void ActivateSacrificeCamBlood();
	void ActivateVignetteOnWallCollision();
	void AddBloodDrippingGKMoriMale();
	void AnimateLiquidSyringe();
	void Boon_Unbound();
	void Camper_AntidoteBoostVignette_End();
	void Camper_AntidoteBoostVignette_Start();
	void DeactivateKnockoutVFX();
	void Destroy_Blood_Orb();
	void DisableDemonMode();
	void Hide_Oni_Katana();
	void Hide_Oni_Katana_TPV();
	void HideDemonCosmetic();
	void HideGunBullet();
	void HideSyringe();
	void HideSyringeOnStun();
	void K04_InvisibleOff();
	void K04_InvisibleOn();
	void K04_TelekinesisOff();
	void K04_TelekinesisOn();
	void K05_BloodDrops();
	void K05_SetTrap();
	void K05_TrapImpact();
	void K05_TrapImpactOff();
	void K12_GetAntidoteVignette();
	void K12_GetToxinVignette(EBombType Bomb_Type);
	void K12_Killer_AntidoteBegin();
	void K12_Killer_AntidoteEnd();
	void K12_Killer_BombSmokeColor();
	void K12_Killer_PlaceVignette();
	void K12_Killer_RemoveVignette();
	void K22_AttachedToSurvivor_VFX();
	void K22_BabyBloodDissolve();
	void K22_BabyRespawn();
	void K22_BrotherDissolveLocker();
	void K22_DetachedFromSurvivor_VFX();
	void K22_DormantAttachedSlasher();
	void K22_HighlightDormant(bool IsDormant_);
	void K22_HighlightDormantMain(bool IsDormantMain_);
	void K22_HighlightMissJump();
	void K22_HighlightMissJump_Stop();
	void K22_HighlightSuccessfulAttack();
	void K22_HighlightSuccessfulAttackStop();
	void K22_IsAttachedLocker(bool IsAttachedLocker);
	void K22_Jump_Active();
	void K22_Jump_Inactive();
	void K22_JumpTrail_Activate();
	void K22_JumpTrail_Deactivate();
	void K22_MembraneDelete();
	void K22_MembraneRecovery();
	void K22_QuickDissolveBrother();
	void K22_ReleaseBrother();
	void K22_SpawnWipeVFX();
	void K22_WrongLanding(bool Wrong_Landing);
	void K22_WrongLandingVignette(bool WrongLanding);
	void Killer_LungeAttack_End();
	void Killer_LungeAttack_Start();
	void On_Execution();
	void ReturnOniToNormal();
	void ReturnToDemonMode();
	void SetHighlightedVFX();
	void SetPlayerExposedVFX();
	void Show_Oni_Katana();
	void ShowDemonCosmetic();
	void ShowGunBullet();
	void ShowSyringe();
	void SpawnFakeBullet();
	void SpawnFullScreenBlood();
	void Start_Pounce_VFX();
	void Start_Saliva_VFX();
	void Start_Travelling_Dissolve();
	void Start_Travelling_PP();
	void StartDeathBedDissolve();
	void StartDeathBedRelocateVignette();
	void Stop_Pounce_VFX();
	void Stop_Saliva_VFX();
	void Stop_Travelling_Dissolve();
	void Stop_Travelling_PP();
	void Survivor_BoonRadius_Enter();
	void Survivor_BoonRadius_Exit();
	void Switch_Kanobo_To_Demon_Mode();
	void Switch_Kanobo_to_Normal_Mode();
	void Switch_Oni_Weapons_To_Normal();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_Effect_General_C">();
	}
	static class IBPI_Effect_General_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_Effect_General_C>();
	}
};
static_assert(alignof(IBPI_Effect_General_C) == 0x000008, "Wrong alignment on IBPI_Effect_General_C");
static_assert(sizeof(IBPI_Effect_General_C) == 0x000030, "Wrong size on IBPI_Effect_General_C");

}

