#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreOffering

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreOffering.WBP_CoreOffering_C
// 0x0080 (0x03D8 - 0x0358)
class UWBP_CoreOffering_C final : public UCoreOfferingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              ImageBG;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FOfferingViewData                      OfferingViewData;                                  // 0x0368(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetData(const struct FOfferingViewData& Param_OfferingViewData);
	void ExecuteUbergraph_WBP_CoreOffering(int32 EntryPoint);
	void ClearData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreOffering_C">();
	}
	static class UWBP_CoreOffering_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreOffering_C>();
	}
};
static_assert(alignof(UWBP_CoreOffering_C) == 0x000008, "Wrong alignment on UWBP_CoreOffering_C");
static_assert(sizeof(UWBP_CoreOffering_C) == 0x0003D8, "Wrong size on UWBP_CoreOffering_C");
static_assert(offsetof(UWBP_CoreOffering_C, UberGraphFrame) == 0x000358, "Member 'UWBP_CoreOffering_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffering_C, ImageBG) == 0x000360, "Member 'UWBP_CoreOffering_C::ImageBG' has a wrong offset!");
static_assert(offsetof(UWBP_CoreOffering_C, OfferingViewData) == 0x000368, "Member 'UWBP_CoreOffering_C::OfferingViewData' has a wrong offset!");

}

