#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Escape

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_Escape.AB_Escape_C
// 0x04F0 (0x0860 - 0x0370)
class UAB_Escape_C final : public UEscapeDoorAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0448(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0470(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0520(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0540(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0588(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05F0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0610(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06D8(0x0050)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0728(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0830(0x0030)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_Audio_ExitDoor_Loop();
	void AnimNotify_Audio_ExitDoor_Start();
	void AnimNotify_Audio_ExitDoor_Stop();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_Escape_AnimGraphNode_TransitionResult_FE6C7237420CB94216E8FC99A29B35F4();
	void ExecuteUbergraph_AB_Escape(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Escape_C">();
	}
	static class UAB_Escape_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Escape_C>();
	}
};
static_assert(alignof(UAB_Escape_C) == 0x000010, "Wrong alignment on UAB_Escape_C");
static_assert(sizeof(UAB_Escape_C) == 0x000860, "Wrong size on UAB_Escape_C");
static_assert(offsetof(UAB_Escape_C, UberGraphFrame) == 0x000370, "Member 'UAB_Escape_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_Escape_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_Escape_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_Escape_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_TransitionResult_4) == 0x0003A8, "Member 'UAB_Escape_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_TransitionResult_3) == 0x0003D0, "Member 'UAB_Escape_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_TransitionResult_2) == 0x0003F8, "Member 'UAB_Escape_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_TransitionResult_1) == 0x000420, "Member 'UAB_Escape_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_TransitionResult) == 0x000448, "Member 'UAB_Escape_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_SequencePlayer_3) == 0x000470, "Member 'UAB_Escape_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_StateResult_3) == 0x0004B8, "Member 'UAB_Escape_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_SequencePlayer_2) == 0x0004D8, "Member 'UAB_Escape_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_StateResult_2) == 0x000520, "Member 'UAB_Escape_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_SequencePlayer_1) == 0x000540, "Member 'UAB_Escape_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_StateResult_1) == 0x000588, "Member 'UAB_Escape_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_SequencePlayer) == 0x0005A8, "Member 'UAB_Escape_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_StateResult) == 0x0005F0, "Member 'UAB_Escape_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_StateMachine) == 0x000610, "Member 'UAB_Escape_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_Slot) == 0x0006D8, "Member 'UAB_Escape_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_SaveCachedPose) == 0x000728, "Member 'UAB_Escape_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_Escape_C, AnimGraphNode_UseCachedPose) == 0x000830, "Member 'UAB_Escape_C::AnimGraphNode_UseCachedPose' has a wrong offset!");

}

