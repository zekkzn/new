#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BloodwebGenerator

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BloodwebGenerator.BP_BloodwebGenerator_C.ExecuteUbergraph_BP_BloodwebGenerator
// 0x0018 (0x0018 - 0x0000)
struct BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_DeltaSeconds;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator) == 0x000008, "Wrong alignment on BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator");
static_assert(sizeof(BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator) == 0x000018, "Wrong size on BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator");
static_assert(offsetof(BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator, EntryPoint) == 0x000000, "Member 'BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator, K2Node_Event_OtherActor) == 0x000010, "Member 'BP_BloodwebGenerator_C_ExecuteUbergraph_BP_BloodwebGenerator::K2Node_Event_OtherActor' has a wrong offset!");

// Function BP_BloodwebGenerator.BP_BloodwebGenerator_C.ReceiveActorBeginOverlap_1
// 0x0008 (0x0008 - 0x0000)
struct BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1 final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1) == 0x000008, "Wrong alignment on BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1");
static_assert(sizeof(BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1) == 0x000008, "Wrong size on BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1");
static_assert(offsetof(BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1, OtherActor) == 0x000000, "Member 'BP_BloodwebGenerator_C_ReceiveActorBeginOverlap_1::OtherActor' has a wrong offset!");

// Function BP_BloodwebGenerator.BP_BloodwebGenerator_C.ReceiveTick_1
// 0x0008 (0x0008 - 0x0000)
struct BP_BloodwebGenerator_C_ReceiveTick_1 final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BloodwebGenerator_C_ReceiveTick_1) == 0x000008, "Wrong alignment on BP_BloodwebGenerator_C_ReceiveTick_1");
static_assert(sizeof(BP_BloodwebGenerator_C_ReceiveTick_1) == 0x000008, "Wrong size on BP_BloodwebGenerator_C_ReceiveTick_1");
static_assert(offsetof(BP_BloodwebGenerator_C_ReceiveTick_1, DeltaSeconds) == 0x000000, "Member 'BP_BloodwebGenerator_C_ReceiveTick_1::DeltaSeconds' has a wrong offset!");

}

