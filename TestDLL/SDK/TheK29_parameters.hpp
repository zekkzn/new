#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK29

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "TheK29_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TheK29.K29P01.GetSurvivorVaultRushedEventRange
// 0x0004 (0x0004 - 0x0000)
struct K29P01_GetSurvivorVaultRushedEventRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29P01_GetSurvivorVaultRushedEventRange) == 0x000004, "Wrong alignment on K29P01_GetSurvivorVaultRushedEventRange");
static_assert(sizeof(K29P01_GetSurvivorVaultRushedEventRange) == 0x000004, "Wrong size on K29P01_GetSurvivorVaultRushedEventRange");
static_assert(offsetof(K29P01_GetSurvivorVaultRushedEventRange, ReturnValue) == 0x000000, "Member 'K29P01_GetSurvivorVaultRushedEventRange::ReturnValue' has a wrong offset!");

// Function TheK29.K29AnimInstance.OnGameEventReceived
// 0x0040 (0x0040 - 0x0000)
struct K29AnimInstance_OnGameEventReceived final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29AnimInstance_OnGameEventReceived) == 0x000008, "Wrong alignment on K29AnimInstance_OnGameEventReceived");
static_assert(sizeof(K29AnimInstance_OnGameEventReceived) == 0x000040, "Wrong size on K29AnimInstance_OnGameEventReceived");
static_assert(offsetof(K29AnimInstance_OnGameEventReceived, GameplayTag) == 0x000000, "Member 'K29AnimInstance_OnGameEventReceived::GameplayTag' has a wrong offset!");
static_assert(offsetof(K29AnimInstance_OnGameEventReceived, GameEventData) == 0x000010, "Member 'K29AnimInstance_OnGameEventReceived::GameEventData' has a wrong offset!");

// Function TheK29.K29KillerVaultInteractionDefinition.Cosmetic_OnTentacleSlashDamage
// 0x0010 (0x0010 - 0x0000)
struct K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage final
{
public:
	class ACamperPlayer*                          HitSurvivor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDowned;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage) == 0x000008, "Wrong alignment on K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage");
static_assert(sizeof(K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage) == 0x000010, "Wrong size on K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage");
static_assert(offsetof(K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage, HitSurvivor) == 0x000000, "Member 'K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage::HitSurvivor' has a wrong offset!");
static_assert(offsetof(K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage, IsDowned) == 0x000008, "Member 'K29KillerVaultInteractionDefinition_Cosmetic_OnTentacleSlashDamage::IsDowned' has a wrong offset!");

// Function TheK29.K29KillerVaultInteractionDefinition.Multicast_DamageWithTentacleSlash
// 0x0018 (0x0018 - 0x0000)
struct K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          HitSurvivor;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDowned;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash) == 0x000008, "Wrong alignment on K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash");
static_assert(sizeof(K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash) == 0x000018, "Wrong size on K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash");
static_assert(offsetof(K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash, Player) == 0x000000, "Member 'K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash::Player' has a wrong offset!");
static_assert(offsetof(K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash, HitSurvivor) == 0x000008, "Member 'K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash::HitSurvivor' has a wrong offset!");
static_assert(offsetof(K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash, IsDowned) == 0x000010, "Member 'K29KillerVaultInteractionDefinition_Multicast_DamageWithTentacleSlash::IsDowned' has a wrong offset!");

// Function TheK29.K29P02.Authority_OnInRangeChanged
// 0x0010 (0x0010 - 0x0000)
struct K29P02_Authority_OnInRangeChanged final
{
public:
	bool                                          InRange;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          Survivor;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29P02_Authority_OnInRangeChanged) == 0x000008, "Wrong alignment on K29P02_Authority_OnInRangeChanged");
static_assert(sizeof(K29P02_Authority_OnInRangeChanged) == 0x000010, "Wrong size on K29P02_Authority_OnInRangeChanged");
static_assert(offsetof(K29P02_Authority_OnInRangeChanged, InRange) == 0x000000, "Member 'K29P02_Authority_OnInRangeChanged::InRange' has a wrong offset!");
static_assert(offsetof(K29P02_Authority_OnInRangeChanged, Survivor) == 0x000008, "Member 'K29P02_Authority_OnInRangeChanged::Survivor' has a wrong offset!");

// Function TheK29.K29P02.GetRevealRange
// 0x0004 (0x0004 - 0x0000)
struct K29P02_GetRevealRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29P02_GetRevealRange) == 0x000004, "Wrong alignment on K29P02_GetRevealRange");
static_assert(sizeof(K29P02_GetRevealRange) == 0x000004, "Wrong size on K29P02_GetRevealRange");
static_assert(offsetof(K29P02_GetRevealRange, ReturnValue) == 0x000000, "Member 'K29P02_GetRevealRange::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.Authority_OnStun
// 0x0040 (0x0040 - 0x0000)
struct K29Power_Authority_OnStun final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_Authority_OnStun) == 0x000008, "Wrong alignment on K29Power_Authority_OnStun");
static_assert(sizeof(K29Power_Authority_OnStun) == 0x000040, "Wrong size on K29Power_Authority_OnStun");
static_assert(offsetof(K29Power_Authority_OnStun, GameplayTag) == 0x000000, "Member 'K29Power_Authority_OnStun::GameplayTag' has a wrong offset!");
static_assert(offsetof(K29Power_Authority_OnStun, GameEventData) == 0x000010, "Member 'K29Power_Authority_OnStun::GameEventData' has a wrong offset!");

// Function TheK29.K29Power.GetDropSurvivorCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetDropSurvivorCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetDropSurvivorCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetDropSurvivorCooldownInteraction");
static_assert(sizeof(K29Power_GetDropSurvivorCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetDropSurvivorCooldownInteraction");
static_assert(offsetof(K29Power_GetDropSurvivorCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetDropSurvivorCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetPowerStatusHandlerComponent
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetPowerStatusHandlerComponent final
{
public:
	class UK29PowerStatusHandlerComponent*        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetPowerStatusHandlerComponent) == 0x000008, "Wrong alignment on K29Power_GetPowerStatusHandlerComponent");
static_assert(sizeof(K29Power_GetPowerStatusHandlerComponent) == 0x000008, "Wrong size on K29Power_GetPowerStatusHandlerComponent");
static_assert(offsetof(K29Power_GetPowerStatusHandlerComponent, ReturnValue) == 0x000000, "Member 'K29Power_GetPowerStatusHandlerComponent::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetPushSurvivorOverLedgeInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetPushSurvivorOverLedgeInteraction final
{
public:
	class UInteractionDefinition*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetPushSurvivorOverLedgeInteraction) == 0x000008, "Wrong alignment on K29Power_GetPushSurvivorOverLedgeInteraction");
static_assert(sizeof(K29Power_GetPushSurvivorOverLedgeInteraction) == 0x000008, "Wrong size on K29Power_GetPushSurvivorOverLedgeInteraction");
static_assert(offsetof(K29Power_GetPushSurvivorOverLedgeInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetPushSurvivorOverLedgeInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushBreakableCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushBreakableCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushBreakableCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushBreakableCooldownInteraction");
static_assert(sizeof(K29Power_GetRushBreakableCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushBreakableCooldownInteraction");
static_assert(offsetof(K29Power_GetRushBreakableCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushBreakableCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushChargeableInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushChargeableInteraction final
{
public:
	class UK29RushChargeableInteraction*          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushChargeableInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushChargeableInteraction");
static_assert(sizeof(K29Power_GetRushChargeableInteraction) == 0x000008, "Wrong size on K29Power_GetRushChargeableInteraction");
static_assert(offsetof(K29Power_GetRushChargeableInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushChargeableInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushChargeCancelCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushChargeCancelCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushChargeCancelCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushChargeCancelCooldownInteraction");
static_assert(sizeof(K29Power_GetRushChargeCancelCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushChargeCancelCooldownInteraction");
static_assert(offsetof(K29Power_GetRushChargeCancelCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushChargeCancelCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushChargesHandlerComponent
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushChargesHandlerComponent final
{
public:
	class UK29RushChargesHandlerComponent*        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushChargesHandlerComponent) == 0x000008, "Wrong alignment on K29Power_GetRushChargesHandlerComponent");
static_assert(sizeof(K29Power_GetRushChargesHandlerComponent) == 0x000008, "Wrong size on K29Power_GetRushChargesHandlerComponent");
static_assert(offsetof(K29Power_GetRushChargesHandlerComponent, ReturnValue) == 0x000000, "Member 'K29Power_GetRushChargesHandlerComponent::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushCompleteNoSurvivorCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushCompleteNoSurvivorCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushCompleteNoSurvivorCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushCompleteNoSurvivorCooldownInteraction");
static_assert(sizeof(K29Power_GetRushCompleteNoSurvivorCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushCompleteNoSurvivorCooldownInteraction");
static_assert(offsetof(K29Power_GetRushCompleteNoSurvivorCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushCompleteNoSurvivorCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushCompleteSurvivorHitCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushCompleteSurvivorHitCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushCompleteSurvivorHitCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushCompleteSurvivorHitCooldownInteraction");
static_assert(sizeof(K29Power_GetRushCompleteSurvivorHitCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushCompleteSurvivorHitCooldownInteraction");
static_assert(offsetof(K29Power_GetRushCompleteSurvivorHitCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushCompleteSurvivorHitCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushCompleteSurvivorThrowCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushCompleteSurvivorThrowCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushCompleteSurvivorThrowCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushCompleteSurvivorThrowCooldownInteraction");
static_assert(sizeof(K29Power_GetRushCompleteSurvivorThrowCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushCompleteSurvivorThrowCooldownInteraction");
static_assert(offsetof(K29Power_GetRushCompleteSurvivorThrowCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushCompleteSurvivorThrowCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushSurvivorDetectionBox
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushSurvivorDetectionBox final
{
public:
	class UStaticMeshComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushSurvivorDetectionBox) == 0x000008, "Wrong alignment on K29Power_GetRushSurvivorDetectionBox");
static_assert(sizeof(K29Power_GetRushSurvivorDetectionBox) == 0x000008, "Wrong size on K29Power_GetRushSurvivorDetectionBox");
static_assert(offsetof(K29Power_GetRushSurvivorDetectionBox, ReturnValue) == 0x000000, "Member 'K29Power_GetRushSurvivorDetectionBox::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetRushVaultCooldownInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetRushVaultCooldownInteraction final
{
public:
	class UK29RushCooldownInteraction*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetRushVaultCooldownInteraction) == 0x000008, "Wrong alignment on K29Power_GetRushVaultCooldownInteraction");
static_assert(sizeof(K29Power_GetRushVaultCooldownInteraction) == 0x000008, "Wrong size on K29Power_GetRushVaultCooldownInteraction");
static_assert(offsetof(K29Power_GetRushVaultCooldownInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetRushVaultCooldownInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetSlashBreakableInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetSlashBreakableInteraction final
{
public:
	class UInteractionDefinition*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetSlashBreakableInteraction) == 0x000008, "Wrong alignment on K29Power_GetSlashBreakableInteraction");
static_assert(sizeof(K29Power_GetSlashBreakableInteraction) == 0x000008, "Wrong size on K29Power_GetSlashBreakableInteraction");
static_assert(offsetof(K29Power_GetSlashBreakableInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetSlashBreakableInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetSlashSurvivorInteraction
// 0x0008 (0x0008 - 0x0000)
struct K29Power_GetSlashSurvivorInteraction final
{
public:
	class UInteractionDefinition*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetSlashSurvivorInteraction) == 0x000008, "Wrong alignment on K29Power_GetSlashSurvivorInteraction");
static_assert(sizeof(K29Power_GetSlashSurvivorInteraction) == 0x000008, "Wrong size on K29Power_GetSlashSurvivorInteraction");
static_assert(offsetof(K29Power_GetSlashSurvivorInteraction, ReturnValue) == 0x000000, "Member 'K29Power_GetSlashSurvivorInteraction::ReturnValue' has a wrong offset!");

// Function TheK29.K29Power.GetScorePercent
// 0x0004 (0x0004 - 0x0000)
struct K29Power_GetScorePercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Power_GetScorePercent) == 0x000004, "Wrong alignment on K29Power_GetScorePercent");
static_assert(sizeof(K29Power_GetScorePercent) == 0x000004, "Wrong size on K29Power_GetScorePercent");
static_assert(offsetof(K29Power_GetScorePercent, ReturnValue) == 0x000000, "Member 'K29Power_GetScorePercent::ReturnValue' has a wrong offset!");

// Function TheK29.K29PowerChargePresentationPowerFadeComponent.OnKillerSet
// 0x0008 (0x0008 - 0x0000)
struct K29PowerChargePresentationPowerFadeComponent_OnKillerSet final
{
public:
	class ASlasherPlayer*                         Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerChargePresentationPowerFadeComponent_OnKillerSet) == 0x000008, "Wrong alignment on K29PowerChargePresentationPowerFadeComponent_OnKillerSet");
static_assert(sizeof(K29PowerChargePresentationPowerFadeComponent_OnKillerSet) == 0x000008, "Wrong size on K29PowerChargePresentationPowerFadeComponent_OnKillerSet");
static_assert(offsetof(K29PowerChargePresentationPowerFadeComponent_OnKillerSet, Killer) == 0x000000, "Member 'K29PowerChargePresentationPowerFadeComponent_OnKillerSet::Killer' has a wrong offset!");

// Function TheK29.K29PowerChargePresentationPowerFadeComponent.SetDependencies
// 0x0008 (0x0008 - 0x0000)
struct K29PowerChargePresentationPowerFadeComponent_SetDependencies final
{
public:
	class UK29RushChargesHandlerComponent*        AmmoHandler;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerChargePresentationPowerFadeComponent_SetDependencies) == 0x000008, "Wrong alignment on K29PowerChargePresentationPowerFadeComponent_SetDependencies");
static_assert(sizeof(K29PowerChargePresentationPowerFadeComponent_SetDependencies) == 0x000008, "Wrong size on K29PowerChargePresentationPowerFadeComponent_SetDependencies");
static_assert(offsetof(K29PowerChargePresentationPowerFadeComponent_SetDependencies, AmmoHandler) == 0x000000, "Member 'K29PowerChargePresentationPowerFadeComponent_SetDependencies::AmmoHandler' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.AddToTimesCuredByHeal
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_AddToTimesCuredByHeal final
{
public:
	const class ACamperPlayer*                    Survivor;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_AddToTimesCuredByHeal) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_AddToTimesCuredByHeal");
static_assert(sizeof(K29PowerStatusHandlerComponent_AddToTimesCuredByHeal) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_AddToTimesCuredByHeal");
static_assert(offsetof(K29PowerStatusHandlerComponent_AddToTimesCuredByHeal, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_AddToTimesCuredByHeal::Survivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Authority_AddInfectionLevels
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Authority_AddInfectionLevels final
{
public:
	const class ACamperPlayer*                    Survivor;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InfectionToAdd;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Authority_AddInfectionLevels) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Authority_AddInfectionLevels");
static_assert(sizeof(K29PowerStatusHandlerComponent_Authority_AddInfectionLevels) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Authority_AddInfectionLevels");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_AddInfectionLevels, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Authority_AddInfectionLevels::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_AddInfectionLevels, InfectionToAdd) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Authority_AddInfectionLevels::InfectionToAdd' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Authority_HealInfectionLevels
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Authority_HealInfectionLevels final
{
public:
	const class ACamperPlayer*                    Survivor;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InfectionLevelsToHeal;                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldSetInfectionActiveToFalse;                   // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Authority_HealInfectionLevels) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Authority_HealInfectionLevels");
static_assert(sizeof(K29PowerStatusHandlerComponent_Authority_HealInfectionLevels) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Authority_HealInfectionLevels");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_HealInfectionLevels, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Authority_HealInfectionLevels::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_HealInfectionLevels, InfectionLevelsToHeal) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Authority_HealInfectionLevels::InfectionLevelsToHeal' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_HealInfectionLevels, ShouldSetInfectionActiveToFalse) == 0x00000C, "Member 'K29PowerStatusHandlerComponent_Authority_HealInfectionLevels::ShouldSetInfectionActiveToFalse' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Authority_OnSlash
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_Authority_OnSlash final
{
public:
	class ACamperPlayer*                          TargetSurvivor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Authority_OnSlash) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Authority_OnSlash");
static_assert(sizeof(K29PowerStatusHandlerComponent_Authority_OnSlash) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_Authority_OnSlash");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_OnSlash, TargetSurvivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Authority_OnSlash::TargetSurvivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Authority_OnSurvivorAdded
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded");
static_assert(sizeof(K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Authority_OnSurvivorAdded::Survivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Authority_UseStabilizingSpray
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray final
{
public:
	class ACamperPlayer*                          InstigatingSurvivor;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          TargetSurvivor;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray");
static_assert(sizeof(K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray, InstigatingSurvivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray::InstigatingSurvivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray, TargetSurvivor) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Authority_UseStabilizingSpray::TargetSurvivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.GetInfectionLevel
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_GetInfectionLevel final
{
public:
	const class ACamperPlayer*                    Survivor;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_GetInfectionLevel) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_GetInfectionLevel");
static_assert(sizeof(K29PowerStatusHandlerComponent_GetInfectionLevel) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_GetInfectionLevel");
static_assert(offsetof(K29PowerStatusHandlerComponent_GetInfectionLevel, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_GetInfectionLevel::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_GetInfectionLevel, ReturnValue) == 0x000008, "Member 'K29PowerStatusHandlerComponent_GetInfectionLevel::ReturnValue' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.GetMaxInfectionLevel
// 0x0004 (0x0004 - 0x0000)
struct K29PowerStatusHandlerComponent_GetMaxInfectionLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_GetMaxInfectionLevel) == 0x000004, "Wrong alignment on K29PowerStatusHandlerComponent_GetMaxInfectionLevel");
static_assert(sizeof(K29PowerStatusHandlerComponent_GetMaxInfectionLevel) == 0x000004, "Wrong size on K29PowerStatusHandlerComponent_GetMaxInfectionLevel");
static_assert(offsetof(K29PowerStatusHandlerComponent_GetMaxInfectionLevel, ReturnValue) == 0x000000, "Member 'K29PowerStatusHandlerComponent_GetMaxInfectionLevel::ReturnValue' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.IsInfectionIncreasingForSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor final
{
public:
	const class ACamperPlayer*                    Survivor;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor, ReturnValue) == 0x000008, "Member 'K29PowerStatusHandlerComponent_IsInfectionIncreasingForSurvivor::ReturnValue' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Multicast_DropSurvivor
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_Multicast_DropSurvivor final
{
public:
	class ACamperPlayer*                          LeftSurvivor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Multicast_DropSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Multicast_DropSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_Multicast_DropSurvivor) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_Multicast_DropSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_DropSurvivor, LeftSurvivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Multicast_DropSurvivor::LeftSurvivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Multicast_GrabSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Multicast_GrabSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsProcessingInitialInfection;                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Multicast_GrabSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Multicast_GrabSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_Multicast_GrabSurvivor) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Multicast_GrabSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_GrabSurvivor, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Multicast_GrabSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_GrabSurvivor, IsProcessingInitialInfection) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Multicast_GrabSurvivor::IsProcessingInitialInfection' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Multicast_ReleaseSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsForced;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor, IsForced) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Multicast_ReleaseSurvivor::IsForced' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Multicast_RemoveSurvivorFromCloset
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset");
static_assert(sizeof(K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Multicast_RemoveSurvivorFromCloset::Survivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Multicast_UseStabilizingSpray
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray final
{
public:
	class ACamperPlayer*                          TargetSurvivor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray");
static_assert(sizeof(K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray");
static_assert(offsetof(K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray, TargetSurvivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Multicast_UseStabilizingSpray::TargetSurvivor' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.OnKillerSet
// 0x0008 (0x0008 - 0x0000)
struct K29PowerStatusHandlerComponent_OnKillerSet final
{
public:
	class ASlasherPlayer*                         Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_OnKillerSet) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_OnKillerSet");
static_assert(sizeof(K29PowerStatusHandlerComponent_OnKillerSet) == 0x000008, "Wrong size on K29PowerStatusHandlerComponent_OnKillerSet");
static_assert(offsetof(K29PowerStatusHandlerComponent_OnKillerSet, Killer) == 0x000000, "Member 'K29PowerStatusHandlerComponent_OnKillerSet::Killer' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.OnRep_SurvivorStatusList
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList final
{
public:
	TArray<struct FK29SurvivorStatus>             OldSurvivorStatus;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList");
static_assert(sizeof(K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList");
static_assert(offsetof(K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList, OldSurvivorStatus) == 0x000000, "Member 'K29PowerStatusHandlerComponent_OnRep_SurvivorStatusList::OldSurvivorStatus' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Server_GrabSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Server_GrabSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsProcessingInitialInfection;                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Server_GrabSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Server_GrabSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_Server_GrabSurvivor) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Server_GrabSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_Server_GrabSurvivor, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Server_GrabSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Server_GrabSurvivor, IsProcessingInitialInfection) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Server_GrabSurvivor::IsProcessingInitialInfection' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.Server_ReleaseSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29PowerStatusHandlerComponent_Server_ReleaseSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsForced;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29PowerStatusHandlerComponent_Server_ReleaseSurvivor) == 0x000008, "Wrong alignment on K29PowerStatusHandlerComponent_Server_ReleaseSurvivor");
static_assert(sizeof(K29PowerStatusHandlerComponent_Server_ReleaseSurvivor) == 0x000010, "Wrong size on K29PowerStatusHandlerComponent_Server_ReleaseSurvivor");
static_assert(offsetof(K29PowerStatusHandlerComponent_Server_ReleaseSurvivor, Survivor) == 0x000000, "Member 'K29PowerStatusHandlerComponent_Server_ReleaseSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29PowerStatusHandlerComponent_Server_ReleaseSurvivor, IsForced) == 0x000008, "Member 'K29PowerStatusHandlerComponent_Server_ReleaseSurvivor::IsForced' has a wrong offset!");

// Function TheK29.K29PowerStatusHandlerComponent.GetMaxInfectionLevelWhenHooked
// 0x0004 (0x0004 - 0x0000)
struct K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked) == 0x000004, "Wrong alignment on K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked");
static_assert(sizeof(K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked) == 0x000004, "Wrong size on K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked");
static_assert(offsetof(K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked, ReturnValue) == 0x000000, "Member 'K29PowerStatusHandlerComponent_GetMaxInfectionLevelWhenHooked::ReturnValue' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Cosmetic_DamageSurvivorAsCollision
// 0x0010 (0x0010 - 0x0000)
struct K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            SurvivorTargetDamageState;                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision");
static_assert(sizeof(K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision) == 0x000010, "Wrong size on K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision, Survivor) == 0x000000, "Member 'K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision::Survivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision, SurvivorTargetDamageState) == 0x000008, "Member 'K29RushChargeableInteraction_Cosmetic_DamageSurvivorAsCollision::SurvivorTargetDamageState' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Cosmetic_OnRushPhaseChanged
// 0x0002 (0x0002 - 0x0000)
struct K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged final
{
public:
	EK29RushPhase                                 PreviousPhase;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EK29RushPhase                                 NewPhase;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged) == 0x000001, "Wrong alignment on K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged");
static_assert(sizeof(K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged) == 0x000002, "Wrong size on K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged, PreviousPhase) == 0x000000, "Member 'K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged::PreviousPhase' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged, NewPhase) == 0x000001, "Member 'K29RushChargeableInteraction_Cosmetic_OnRushPhaseChanged::NewPhase' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Cosmetic_OnSlashAtSurvivor
// 0x0010 (0x0010 - 0x0000)
struct K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            SurvivorTargetDamageState;                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor");
static_assert(sizeof(K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor) == 0x000010, "Wrong size on K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor, Survivor) == 0x000000, "Member 'K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor, SurvivorTargetDamageState) == 0x000008, "Member 'K29RushChargeableInteraction_Cosmetic_OnSlashAtSurvivor::SurvivorTargetDamageState' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Cosmetic_ShowEndIndicator
// 0x0030 (0x0030 - 0x0000)
struct K29RushChargeableInteraction_Cosmetic_ShowEndIndicator final
{
public:
	struct FVector                                EndIndicatorLocation;                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ForwardRotation;                                   // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Cosmetic_ShowEndIndicator) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Cosmetic_ShowEndIndicator");
static_assert(sizeof(K29RushChargeableInteraction_Cosmetic_ShowEndIndicator) == 0x000030, "Wrong size on K29RushChargeableInteraction_Cosmetic_ShowEndIndicator");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_ShowEndIndicator, EndIndicatorLocation) == 0x000000, "Member 'K29RushChargeableInteraction_Cosmetic_ShowEndIndicator::EndIndicatorLocation' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Cosmetic_ShowEndIndicator, ForwardRotation) == 0x000018, "Member 'K29RushChargeableInteraction_Cosmetic_ShowEndIndicator::ForwardRotation' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_CarrySurvivor
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargeableInteraction_Multicast_CarrySurvivor final
{
public:
	class ACamperPlayer*                          SurvivorToCarry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_CarrySurvivor) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_CarrySurvivor");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_CarrySurvivor) == 0x000008, "Wrong size on K29RushChargeableInteraction_Multicast_CarrySurvivor");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_CarrySurvivor, SurvivorToCarry) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_CarrySurvivor::SurvivorToCarry' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_ChangeRushPhase
// 0x0002 (0x0002 - 0x0000)
struct K29RushChargeableInteraction_Multicast_ChangeRushPhase final
{
public:
	EK29RushPhase                                 NewRushPhase;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForceLocallyControlled;                            // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_ChangeRushPhase) == 0x000001, "Wrong alignment on K29RushChargeableInteraction_Multicast_ChangeRushPhase");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_ChangeRushPhase) == 0x000002, "Wrong size on K29RushChargeableInteraction_Multicast_ChangeRushPhase");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_ChangeRushPhase, NewRushPhase) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_ChangeRushPhase::NewRushPhase' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_ChangeRushPhase, ForceLocallyControlled) == 0x000001, "Member 'K29RushChargeableInteraction_Multicast_ChangeRushPhase::ForceLocallyControlled' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_DamageSurvivorAsCollision
// 0x0028 (0x0028 - 0x0000)
struct K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision final
{
public:
	struct FVector                                CurrentKillerPosition;                             // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          CollidedSurvivor;                                  // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            SurvivorTargetDamageState;                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision) == 0x000028, "Wrong size on K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision, CurrentKillerPosition) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision::CurrentKillerPosition' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision, CollidedSurvivor) == 0x000018, "Member 'K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision::CollidedSurvivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision, SurvivorTargetDamageState) == 0x000020, "Member 'K29RushChargeableInteraction_Multicast_DamageSurvivorAsCollision::SurvivorTargetDamageState' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_DestroyPalletOrBreakable
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable final
{
public:
	class AActor*                                 Destroyable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable) == 0x000008, "Wrong size on K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable, Destroyable) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_DestroyPalletOrBreakable::Destroyable' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_SetCurrentRush
// 0x0088 (0x0088 - 0x0000)
struct K29RushChargeableInteraction_Multicast_SetCurrentRush final
{
public:
	struct FK29GuidedMovementInstance             NewRushInstance;                                   // 0x0000(0x0088)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_SetCurrentRush) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_SetCurrentRush");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_SetCurrentRush) == 0x000088, "Wrong size on K29RushChargeableInteraction_Multicast_SetCurrentRush");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_SetCurrentRush, NewRushInstance) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_SetCurrentRush::NewRushInstance' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_SlashAtSurvivor
// 0x0028 (0x0028 - 0x0000)
struct K29RushChargeableInteraction_Multicast_SlashAtSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CurrentKillerPosition;                             // 0x0008(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            SurvivorTargetDamageState;                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_SlashAtSurvivor) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_SlashAtSurvivor");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_SlashAtSurvivor) == 0x000028, "Wrong size on K29RushChargeableInteraction_Multicast_SlashAtSurvivor");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_SlashAtSurvivor, Survivor) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_SlashAtSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_SlashAtSurvivor, CurrentKillerPosition) == 0x000008, "Member 'K29RushChargeableInteraction_Multicast_SlashAtSurvivor::CurrentKillerPosition' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_SlashAtSurvivor, SurvivorTargetDamageState) == 0x000020, "Member 'K29RushChargeableInteraction_Multicast_SlashAtSurvivor::SurvivorTargetDamageState' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Multicast_SmashSurvivor
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargeableInteraction_Multicast_SmashSurvivor final
{
public:
	class ACamperPlayer*                          SurvivorToCarry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Multicast_SmashSurvivor) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Multicast_SmashSurvivor");
static_assert(sizeof(K29RushChargeableInteraction_Multicast_SmashSurvivor) == 0x000008, "Wrong size on K29RushChargeableInteraction_Multicast_SmashSurvivor");
static_assert(offsetof(K29RushChargeableInteraction_Multicast_SmashSurvivor, SurvivorToCarry) == 0x000000, "Member 'K29RushChargeableInteraction_Multicast_SmashSurvivor::SurvivorToCarry' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.OnInstantCarryTimerComplete
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargeableInteraction_OnInstantCarryTimerComplete final
{
public:
	class ACamperPlayer*                          SurvivorToCarry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_OnInstantCarryTimerComplete) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_OnInstantCarryTimerComplete");
static_assert(sizeof(K29RushChargeableInteraction_OnInstantCarryTimerComplete) == 0x000008, "Wrong size on K29RushChargeableInteraction_OnInstantCarryTimerComplete");
static_assert(offsetof(K29RushChargeableInteraction_OnInstantCarryTimerComplete, SurvivorToCarry) == 0x000000, "Member 'K29RushChargeableInteraction_OnInstantCarryTimerComplete::SurvivorToCarry' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.RushComplete
// 0x0001 (0x0001 - 0x0000)
struct K29RushChargeableInteraction_RushComplete final
{
public:
	bool                                          RushEndedNaturally;                                // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_RushComplete) == 0x000001, "Wrong alignment on K29RushChargeableInteraction_RushComplete");
static_assert(sizeof(K29RushChargeableInteraction_RushComplete) == 0x000001, "Wrong size on K29RushChargeableInteraction_RushComplete");
static_assert(offsetof(K29RushChargeableInteraction_RushComplete, RushEndedNaturally) == 0x000000, "Member 'K29RushChargeableInteraction_RushComplete::RushEndedNaturally' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_ChangeRushPhase
// 0x000C (0x000C - 0x0000)
struct K29RushChargeableInteraction_Server_ChangeRushPhase final
{
public:
	EK29RushPhase                                 NewRushPhase;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClientTimeStamp;                                   // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForceLocallyControlled;                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Server_ChangeRushPhase) == 0x000004, "Wrong alignment on K29RushChargeableInteraction_Server_ChangeRushPhase");
static_assert(sizeof(K29RushChargeableInteraction_Server_ChangeRushPhase) == 0x00000C, "Wrong size on K29RushChargeableInteraction_Server_ChangeRushPhase");
static_assert(offsetof(K29RushChargeableInteraction_Server_ChangeRushPhase, NewRushPhase) == 0x000000, "Member 'K29RushChargeableInteraction_Server_ChangeRushPhase::NewRushPhase' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Server_ChangeRushPhase, ClientTimeStamp) == 0x000004, "Member 'K29RushChargeableInteraction_Server_ChangeRushPhase::ClientTimeStamp' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Server_ChangeRushPhase, ForceLocallyControlled) == 0x000008, "Member 'K29RushChargeableInteraction_Server_ChangeRushPhase::ForceLocallyControlled' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_DamageSurvivorAsCollision
// 0x0020 (0x0020 - 0x0000)
struct K29RushChargeableInteraction_Server_DamageSurvivorAsCollision final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CurrentKillerPosition;                             // 0x0008(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Server_DamageSurvivorAsCollision) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Server_DamageSurvivorAsCollision");
static_assert(sizeof(K29RushChargeableInteraction_Server_DamageSurvivorAsCollision) == 0x000020, "Wrong size on K29RushChargeableInteraction_Server_DamageSurvivorAsCollision");
static_assert(offsetof(K29RushChargeableInteraction_Server_DamageSurvivorAsCollision, Survivor) == 0x000000, "Member 'K29RushChargeableInteraction_Server_DamageSurvivorAsCollision::Survivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Server_DamageSurvivorAsCollision, CurrentKillerPosition) == 0x000008, "Member 'K29RushChargeableInteraction_Server_DamageSurvivorAsCollision::CurrentKillerPosition' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_DestroyPalletOrBreakable
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargeableInteraction_Server_DestroyPalletOrBreakable final
{
public:
	class AActor*                                 Destroyable;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Server_DestroyPalletOrBreakable) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Server_DestroyPalletOrBreakable");
static_assert(sizeof(K29RushChargeableInteraction_Server_DestroyPalletOrBreakable) == 0x000008, "Wrong size on K29RushChargeableInteraction_Server_DestroyPalletOrBreakable");
static_assert(offsetof(K29RushChargeableInteraction_Server_DestroyPalletOrBreakable, Destroyable) == 0x000000, "Member 'K29RushChargeableInteraction_Server_DestroyPalletOrBreakable::Destroyable' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_SetCurrentRush
// 0x0090 (0x0090 - 0x0000)
struct K29RushChargeableInteraction_Server_SetCurrentRush final
{
public:
	struct FK29GuidedMovementInstance             NewRushInstance;                                   // 0x0000(0x0088)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	EK29RushPhase                                 TargetPhase;                                       // 0x0088(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29RushChargeableInteraction_Server_SetCurrentRush) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Server_SetCurrentRush");
static_assert(sizeof(K29RushChargeableInteraction_Server_SetCurrentRush) == 0x000090, "Wrong size on K29RushChargeableInteraction_Server_SetCurrentRush");
static_assert(offsetof(K29RushChargeableInteraction_Server_SetCurrentRush, NewRushInstance) == 0x000000, "Member 'K29RushChargeableInteraction_Server_SetCurrentRush::NewRushInstance' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Server_SetCurrentRush, TargetPhase) == 0x000088, "Member 'K29RushChargeableInteraction_Server_SetCurrentRush::TargetPhase' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_SetCurrentRushAsEndingInCollision
// 0x0001 (0x0001 - 0x0000)
struct K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision final
{
public:
	bool                                          HitOtherSurvivor;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision) == 0x000001, "Wrong alignment on K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision");
static_assert(sizeof(K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision) == 0x000001, "Wrong size on K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision");
static_assert(offsetof(K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision, HitOtherSurvivor) == 0x000000, "Member 'K29RushChargeableInteraction_Server_SetCurrentRushAsEndingInCollision::HitOtherSurvivor' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.Server_SlashAtSurvivor
// 0x0020 (0x0020 - 0x0000)
struct K29RushChargeableInteraction_Server_SlashAtSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CurrentKillerPosition;                             // 0x0008(0x0018)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_Server_SlashAtSurvivor) == 0x000008, "Wrong alignment on K29RushChargeableInteraction_Server_SlashAtSurvivor");
static_assert(sizeof(K29RushChargeableInteraction_Server_SlashAtSurvivor) == 0x000020, "Wrong size on K29RushChargeableInteraction_Server_SlashAtSurvivor");
static_assert(offsetof(K29RushChargeableInteraction_Server_SlashAtSurvivor, Survivor) == 0x000000, "Member 'K29RushChargeableInteraction_Server_SlashAtSurvivor::Survivor' has a wrong offset!");
static_assert(offsetof(K29RushChargeableInteraction_Server_SlashAtSurvivor, CurrentKillerPosition) == 0x000008, "Member 'K29RushChargeableInteraction_Server_SlashAtSurvivor::CurrentKillerPosition' has a wrong offset!");

// Function TheK29.K29RushChargeableInteraction.GetRushTimeLeft
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargeableInteraction_GetRushTimeLeft final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargeableInteraction_GetRushTimeLeft) == 0x000004, "Wrong alignment on K29RushChargeableInteraction_GetRushTimeLeft");
static_assert(sizeof(K29RushChargeableInteraction_GetRushTimeLeft) == 0x000004, "Wrong size on K29RushChargeableInteraction_GetRushTimeLeft");
static_assert(offsetof(K29RushChargeableInteraction_GetRushTimeLeft, ReturnValue) == 0x000000, "Member 'K29RushChargeableInteraction_GetRushTimeLeft::ReturnValue' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.OnKillerSet
// 0x0008 (0x0008 - 0x0000)
struct K29RushChargesHandlerComponent_OnKillerSet final
{
public:
	class ASlasherPlayer*                         Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_OnKillerSet) == 0x000008, "Wrong alignment on K29RushChargesHandlerComponent_OnKillerSet");
static_assert(sizeof(K29RushChargesHandlerComponent_OnKillerSet) == 0x000008, "Wrong size on K29RushChargesHandlerComponent_OnKillerSet");
static_assert(offsetof(K29RushChargesHandlerComponent_OnKillerSet, Killer) == 0x000000, "Member 'K29RushChargesHandlerComponent_OnKillerSet::Killer' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.OnMaximumChargesChanged
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargesHandlerComponent_OnMaximumChargesChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_OnMaximumChargesChanged) == 0x000004, "Wrong alignment on K29RushChargesHandlerComponent_OnMaximumChargesChanged");
static_assert(sizeof(K29RushChargesHandlerComponent_OnMaximumChargesChanged) == 0x000004, "Wrong size on K29RushChargesHandlerComponent_OnMaximumChargesChanged");
static_assert(offsetof(K29RushChargesHandlerComponent_OnMaximumChargesChanged, NewValue) == 0x000000, "Member 'K29RushChargesHandlerComponent_OnMaximumChargesChanged::NewValue' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.GetAvailableCharges
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargesHandlerComponent_GetAvailableCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_GetAvailableCharges) == 0x000004, "Wrong alignment on K29RushChargesHandlerComponent_GetAvailableCharges");
static_assert(sizeof(K29RushChargesHandlerComponent_GetAvailableCharges) == 0x000004, "Wrong size on K29RushChargesHandlerComponent_GetAvailableCharges");
static_assert(offsetof(K29RushChargesHandlerComponent_GetAvailableCharges, ReturnValue) == 0x000000, "Member 'K29RushChargesHandlerComponent_GetAvailableCharges::ReturnValue' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.GetMaximumCharges
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargesHandlerComponent_GetMaximumCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_GetMaximumCharges) == 0x000004, "Wrong alignment on K29RushChargesHandlerComponent_GetMaximumCharges");
static_assert(sizeof(K29RushChargesHandlerComponent_GetMaximumCharges) == 0x000004, "Wrong size on K29RushChargesHandlerComponent_GetMaximumCharges");
static_assert(offsetof(K29RushChargesHandlerComponent_GetMaximumCharges, ReturnValue) == 0x000000, "Member 'K29RushChargesHandlerComponent_GetMaximumCharges::ReturnValue' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.GetPercentageRemainingUntilNextCharge
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge) == 0x000004, "Wrong alignment on K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge");
static_assert(sizeof(K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge) == 0x000004, "Wrong size on K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge");
static_assert(offsetof(K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge, ReturnValue) == 0x000000, "Member 'K29RushChargesHandlerComponent_GetPercentageRemainingUntilNextCharge::ReturnValue' has a wrong offset!");

// Function TheK29.K29RushChargesHandlerComponent.GetRechargeDuration
// 0x0004 (0x0004 - 0x0000)
struct K29RushChargesHandlerComponent_GetRechargeDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29RushChargesHandlerComponent_GetRechargeDuration) == 0x000004, "Wrong alignment on K29RushChargesHandlerComponent_GetRechargeDuration");
static_assert(sizeof(K29RushChargesHandlerComponent_GetRechargeDuration) == 0x000004, "Wrong size on K29RushChargesHandlerComponent_GetRechargeDuration");
static_assert(offsetof(K29RushChargesHandlerComponent_GetRechargeDuration, ReturnValue) == 0x000000, "Member 'K29RushChargesHandlerComponent_GetRechargeDuration::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorAnimInstance.OnGameEventReceived
// 0x0040 (0x0040 - 0x0000)
struct K29SurvivorAnimInstance_OnGameEventReceived final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorAnimInstance_OnGameEventReceived) == 0x000008, "Wrong alignment on K29SurvivorAnimInstance_OnGameEventReceived");
static_assert(sizeof(K29SurvivorAnimInstance_OnGameEventReceived) == 0x000040, "Wrong size on K29SurvivorAnimInstance_OnGameEventReceived");
static_assert(offsetof(K29SurvivorAnimInstance_OnGameEventReceived, GameplayTag) == 0x000000, "Member 'K29SurvivorAnimInstance_OnGameEventReceived::GameplayTag' has a wrong offset!");
static_assert(offsetof(K29SurvivorAnimInstance_OnGameEventReceived, GameEventData) == 0x000010, "Member 'K29SurvivorAnimInstance_OnGameEventReceived::GameEventData' has a wrong offset!");

// Function TheK29.K29SurvivorCarriableComponent.IsBeingCarriedByK29RushOrMarkedForThrow
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow) == 0x000001, "Wrong alignment on K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow");
static_assert(sizeof(K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow) == 0x000001, "Wrong size on K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow");
static_assert(offsetof(K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow, ReturnValue) == 0x000000, "Member 'K29SurvivorCarriableComponent_IsBeingCarriedByK29RushOrMarkedForThrow::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCarriableComponent.OnKillerSet
// 0x0008 (0x0008 - 0x0000)
struct K29SurvivorCarriableComponent_OnKillerSet final
{
public:
	class ASlasherPlayer*                         Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCarriableComponent_OnKillerSet) == 0x000008, "Wrong alignment on K29SurvivorCarriableComponent_OnKillerSet");
static_assert(sizeof(K29SurvivorCarriableComponent_OnKillerSet) == 0x000008, "Wrong size on K29SurvivorCarriableComponent_OnKillerSet");
static_assert(offsetof(K29SurvivorCarriableComponent_OnKillerSet, Killer) == 0x000000, "Member 'K29SurvivorCarriableComponent_OnKillerSet::Killer' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.Cosmetic_IsInfectedActiveChanged
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged final
{
public:
	bool                                          Param_IsInfectionActive;                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged, Param_IsInfectionActive) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedActiveChanged::Param_IsInfectionActive' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.Cosmetic_IsInfectedChanged
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged final
{
public:
	bool                                          Param_IsInfected;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged, Param_IsInfected) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectedChanged::Param_IsInfected' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.Cosmetic_IsInfectionCriticalChanged
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged final
{
public:
	bool                                          Param_IsInfectionCritical;                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged, Param_IsInfectionCritical) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionCriticalChanged::Param_IsInfectionCritical' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.Cosmetic_IsInfectionIncubatedChanged
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged final
{
public:
	bool                                          Param_IsInfectionIncubated;                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged, Param_IsInfectionIncubated) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_Cosmetic_IsInfectionIncubatedChanged::Param_IsInfectionIncubated' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.Cosmetic_OnInfectionLevelsChanged
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged, IsActive) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_Cosmetic_OnInfectionLevelsChanged::IsActive' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.OnInfectionLevelsChanged
// 0x0010 (0x0010 - 0x0000)
struct K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged final
{
public:
	class ACamperPlayer*                          TargetSurvivor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsActive;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged) == 0x000008, "Wrong alignment on K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged) == 0x000010, "Wrong size on K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged, TargetSurvivor) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged::TargetSurvivor' has a wrong offset!");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged, IsActive) == 0x000008, "Member 'K29SurvivorCosmeticHelperActor_OnInfectionLevelsChanged::IsActive' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.OnInfectionRemovalCollectableUsed
// 0x0008 (0x0008 - 0x0000)
struct K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed) == 0x000008, "Wrong alignment on K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed) == 0x000008, "Wrong size on K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed, Survivor) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_OnInfectionRemovalCollectableUsed::Survivor' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.OnOwnerLocallyObserved
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved final
{
public:
	bool                                          LocallyObserved;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved, LocallyObserved) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_OnOwnerLocallyObserved::LocallyObserved' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.OnSurvivorDisguisedOrUndisguised
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised final
{
public:
	bool                                          IsDisguised;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised, IsDisguised) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_OnSurvivorDisguisedOrUndisguised::IsDisguised' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.OnSurvivorGrabbed
// 0x0008 (0x0008 - 0x0000)
struct K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed) == 0x000008, "Wrong alignment on K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed) == 0x000008, "Wrong size on K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed, Survivor) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_OnSurvivorGrabbed::Survivor' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.GetCurrentInfectionLevels
// 0x0004 (0x0004 - 0x0000)
struct K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels) == 0x000004, "Wrong alignment on K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels) == 0x000004, "Wrong size on K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_GetCurrentInfectionLevels::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.GetCurrentInfectionPercentage
// 0x0004 (0x0004 - 0x0000)
struct K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage) == 0x000004, "Wrong alignment on K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage) == 0x000004, "Wrong size on K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_GetCurrentInfectionPercentage::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.GetMaximumInfectionLevels
// 0x0004 (0x0004 - 0x0000)
struct K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels) == 0x000004, "Wrong alignment on K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels) == 0x000004, "Wrong size on K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_GetMaximumInfectionLevels::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.IsInfected
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_IsInfected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_IsInfected) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_IsInfected");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_IsInfected) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_IsInfected");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_IsInfected, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_IsInfected::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.IsInfectionActive
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_IsInfectionActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_IsInfectionActive) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_IsInfectionActive");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_IsInfectionActive) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_IsInfectionActive");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_IsInfectionActive, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_IsInfectionActive::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.IsInfectionCritical
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_IsInfectionCritical final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_IsInfectionCritical) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_IsInfectionCritical");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_IsInfectionCritical) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_IsInfectionCritical");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_IsInfectionCritical, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_IsInfectionCritical::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorCosmeticHelperActor.IsInfectionIncubated
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorCosmeticHelperActor_IsInfectionIncubated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorCosmeticHelperActor_IsInfectionIncubated) == 0x000001, "Wrong alignment on K29SurvivorCosmeticHelperActor_IsInfectionIncubated");
static_assert(sizeof(K29SurvivorCosmeticHelperActor_IsInfectionIncubated) == 0x000001, "Wrong size on K29SurvivorCosmeticHelperActor_IsInfectionIncubated");
static_assert(offsetof(K29SurvivorCosmeticHelperActor_IsInfectionIncubated, ReturnValue) == 0x000000, "Member 'K29SurvivorCosmeticHelperActor_IsInfectionIncubated::ReturnValue' has a wrong offset!");

// Function TheK29.K29SurvivorThrowableComponent.Cosmetic_OnSurvivorUsedAsCollision
// 0x0008 (0x0008 - 0x0000)
struct K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision) == 0x000008, "Wrong alignment on K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision");
static_assert(sizeof(K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision) == 0x000008, "Wrong size on K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision");
static_assert(offsetof(K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision, Survivor) == 0x000000, "Member 'K29SurvivorThrowableComponent_Cosmetic_OnSurvivorUsedAsCollision::Survivor' has a wrong offset!");

// Function TheK29.K29SurvivorThrowableComponent.Multicast_CancelThrowOnOtherSurvivorCollision
// 0x0020 (0x0020 - 0x0000)
struct K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision final
{
public:
	struct FVector                                CollisionPosition;                                 // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          SurvivorUsedAsCollision;                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision) == 0x000008, "Wrong alignment on K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision");
static_assert(sizeof(K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision) == 0x000020, "Wrong size on K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision");
static_assert(offsetof(K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision, CollisionPosition) == 0x000000, "Member 'K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision::CollisionPosition' has a wrong offset!");
static_assert(offsetof(K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision, SurvivorUsedAsCollision) == 0x000018, "Member 'K29SurvivorThrowableComponent_Multicast_CancelThrowOnOtherSurvivorCollision::SurvivorUsedAsCollision' has a wrong offset!");

// Function TheK29.K29SurvivorThrowableComponent.Multicast_InstantlyLetGoSurvivor
// 0x0001 (0x0001 - 0x0000)
struct K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor final
{
public:
	bool                                          HasDealtDamage;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor) == 0x000001, "Wrong alignment on K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor");
static_assert(sizeof(K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor) == 0x000001, "Wrong size on K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor");
static_assert(offsetof(K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor, HasDealtDamage) == 0x000000, "Member 'K29SurvivorThrowableComponent_Multicast_InstantlyLetGoSurvivor::HasDealtDamage' has a wrong offset!");

// Function TheK29.K29SurvivorThrowableComponent.Multicast_SetCurrentThrow
// 0x0090 (0x0090 - 0x0000)
struct K29SurvivorThrowableComponent_Multicast_SetCurrentThrow final
{
public:
	struct FK29GuidedMovementInstance             ThrowInstance;                                     // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          ThrownSurvivor;                                    // 0x0088(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorThrowableComponent_Multicast_SetCurrentThrow) == 0x000008, "Wrong alignment on K29SurvivorThrowableComponent_Multicast_SetCurrentThrow");
static_assert(sizeof(K29SurvivorThrowableComponent_Multicast_SetCurrentThrow) == 0x000090, "Wrong size on K29SurvivorThrowableComponent_Multicast_SetCurrentThrow");
static_assert(offsetof(K29SurvivorThrowableComponent_Multicast_SetCurrentThrow, ThrowInstance) == 0x000000, "Member 'K29SurvivorThrowableComponent_Multicast_SetCurrentThrow::ThrowInstance' has a wrong offset!");
static_assert(offsetof(K29SurvivorThrowableComponent_Multicast_SetCurrentThrow, ThrownSurvivor) == 0x000088, "Member 'K29SurvivorThrowableComponent_Multicast_SetCurrentThrow::ThrownSurvivor' has a wrong offset!");

// Function TheK29.K29SurvivorThrowableComponent.Server_CancelThrowOnOtherSurvivorCollision
// 0x0020 (0x0020 - 0x0000)
struct K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision final
{
public:
	struct FVector                                CollisionPosition;                                 // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACamperPlayer*                          SurvivorUsedAsCollision;                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision) == 0x000008, "Wrong alignment on K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision");
static_assert(sizeof(K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision) == 0x000020, "Wrong size on K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision");
static_assert(offsetof(K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision, CollisionPosition) == 0x000000, "Member 'K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision::CollisionPosition' has a wrong offset!");
static_assert(offsetof(K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision, SurvivorUsedAsCollision) == 0x000018, "Member 'K29SurvivorThrowableComponent_Server_CancelThrowOnOtherSurvivorCollision::SurvivorUsedAsCollision' has a wrong offset!");

// Function TheK29.K29UseInfectionRemoverInteraction.GetInteractionTarget
// 0x0008 (0x0008 - 0x0000)
struct K29UseInfectionRemoverInteraction_GetInteractionTarget final
{
public:
	class ACamperPlayer*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29UseInfectionRemoverInteraction_GetInteractionTarget) == 0x000008, "Wrong alignment on K29UseInfectionRemoverInteraction_GetInteractionTarget");
static_assert(sizeof(K29UseInfectionRemoverInteraction_GetInteractionTarget) == 0x000008, "Wrong size on K29UseInfectionRemoverInteraction_GetInteractionTarget");
static_assert(offsetof(K29UseInfectionRemoverInteraction_GetInteractionTarget, ReturnValue) == 0x000000, "Member 'K29UseInfectionRemoverInteraction_GetInteractionTarget::ReturnValue' has a wrong offset!");

// Function TheK29.K29Utilities.GetK29Power
// 0x0010 (0x0010 - 0x0000)
struct K29Utilities_GetK29Power final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AK29Power*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(K29Utilities_GetK29Power) == 0x000008, "Wrong alignment on K29Utilities_GetK29Power");
static_assert(sizeof(K29Utilities_GetK29Power) == 0x000010, "Wrong size on K29Utilities_GetK29Power");
static_assert(offsetof(K29Utilities_GetK29Power, WorldContextObject) == 0x000000, "Member 'K29Utilities_GetK29Power::WorldContextObject' has a wrong offset!");
static_assert(offsetof(K29Utilities_GetK29Power, ReturnValue) == 0x000008, "Member 'K29Utilities_GetK29Power::ReturnValue' has a wrong offset!");

// Function TheK29.K29Utilities.IsSurvivorAbleToBeAffectedByPower
// 0x0018 (0x0018 - 0x0000)
struct K29Utilities_IsSurvivorAbleToBeAffectedByPower final
{
public:
	const class AActor*                           SurvivorAsActor;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ASlasherPlayer*                   Killer;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(K29Utilities_IsSurvivorAbleToBeAffectedByPower) == 0x000008, "Wrong alignment on K29Utilities_IsSurvivorAbleToBeAffectedByPower");
static_assert(sizeof(K29Utilities_IsSurvivorAbleToBeAffectedByPower) == 0x000018, "Wrong size on K29Utilities_IsSurvivorAbleToBeAffectedByPower");
static_assert(offsetof(K29Utilities_IsSurvivorAbleToBeAffectedByPower, SurvivorAsActor) == 0x000000, "Member 'K29Utilities_IsSurvivorAbleToBeAffectedByPower::SurvivorAsActor' has a wrong offset!");
static_assert(offsetof(K29Utilities_IsSurvivorAbleToBeAffectedByPower, Killer) == 0x000008, "Member 'K29Utilities_IsSurvivorAbleToBeAffectedByPower::Killer' has a wrong offset!");
static_assert(offsetof(K29Utilities_IsSurvivorAbleToBeAffectedByPower, ReturnValue) == 0x000010, "Member 'K29Utilities_IsSurvivorAbleToBeAffectedByPower::ReturnValue' has a wrong offset!");

}

