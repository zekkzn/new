#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreDirectionalMiniGameItem_SkullMerchant

#include "Basic.hpp"

#include "WBP_CoreDirectionalMiniGameItem_SkullMerchant_classes.hpp"
#include "WBP_CoreDirectionalMiniGameItem_SkullMerchant_parameters.hpp"


namespace SDK
{

// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.UpdateResult
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessful                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::UpdateResult(bool IsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "UpdateResult");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_UpdateResult Parms{};

	Parms.IsSuccessful = IsSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.RotateIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDirectionalInputKey                    Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::RotateIcon(EDirectionalInputKey Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "RotateIcon");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_RotateIcon Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.ExecuteUbergraph_WBP_CoreDirectionalMiniGameItem_SkullMerchant
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::ExecuteUbergraph_WBP_CoreDirectionalMiniGameItem_SkullMerchant(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "ExecuteUbergraph_WBP_CoreDirectionalMiniGameItem_SkullMerchant");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_ExecuteUbergraph_WBP_CoreDirectionalMiniGameItem_SkullMerchant Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.RevealDirection
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::RevealDirection(bool WithAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "RevealDirection");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_RevealDirection Parms{};

	Parms.WithAnimation = WithAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.ResetIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::ResetIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "ResetIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "PreConstruct");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.Init
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDirectionalInputKey                    Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::Init(EDirectionalInputKey Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "Init");

	Params::WBP_CoreDirectionalMiniGameItem_SkullMerchant_C_Init Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.Finished_F7D67A0D44DC901D62D10A978C9409AA
// (BlueprintCallable, BlueprintEvent)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::Finished_F7D67A0D44DC901D62D10A978C9409AA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "Finished_F7D67A0D44DC901D62D10A978C9409AA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreDirectionalMiniGameItem_SkullMerchant.WBP_CoreDirectionalMiniGameItem_SkullMerchant_C.Finished_3F29ECFE4BD68C58D1718C92504DCB5E
// (BlueprintCallable, BlueprintEvent)

void UWBP_CoreDirectionalMiniGameItem_SkullMerchant_C::Finished_3F29ECFE4BD68C58D1718C92504DCB5E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreDirectionalMiniGameItem_SkullMerchant_C", "Finished_3F29ECFE4BD68C58D1718C92504DCB5E");

	UObject::ProcessEvent(Func, nullptr);
}

}

