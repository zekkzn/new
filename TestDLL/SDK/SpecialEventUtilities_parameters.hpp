#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventUtilities

#include "Basic.hpp"


namespace SDK::Params
{

// Function SpecialEventUtilities.RespawnableInteractable.IsHidden
// 0x0001 (0x0001 - 0x0000)
struct RespawnableInteractable_IsHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RespawnableInteractable_IsHidden) == 0x000001, "Wrong alignment on RespawnableInteractable_IsHidden");
static_assert(sizeof(RespawnableInteractable_IsHidden) == 0x000001, "Wrong size on RespawnableInteractable_IsHidden");
static_assert(offsetof(RespawnableInteractable_IsHidden, ReturnValue) == 0x000000, "Member 'RespawnableInteractable_IsHidden::ReturnValue' has a wrong offset!");

// Function SpecialEventUtilities.RespawningEventComponent.Authority_OnIsInteractingWithAnyRespawnableInteractableChanged
// 0x0010 (0x0010 - 0x0000)
struct RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged final
{
public:
	class ARespawnableInteractable*               RespawnableInteractable;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsInteracting;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged) == 0x000008, "Wrong alignment on RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged");
static_assert(sizeof(RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged) == 0x000010, "Wrong size on RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged");
static_assert(offsetof(RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged, RespawnableInteractable) == 0x000000, "Member 'RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged::RespawnableInteractable' has a wrong offset!");
static_assert(offsetof(RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged, IsInteracting) == 0x000008, "Member 'RespawningEventComponent_Authority_OnIsInteractingWithAnyRespawnableInteractableChanged::IsInteracting' has a wrong offset!");

// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnInteractionEnded
// 0x0008 (0x0008 - 0x0000)
struct InteractionRespawnableTrigger_Authority_OnInteractionEnded final
{
public:
	class ARespawnableInteractable*               RespawnableInteractable;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InteractionRespawnableTrigger_Authority_OnInteractionEnded) == 0x000008, "Wrong alignment on InteractionRespawnableTrigger_Authority_OnInteractionEnded");
static_assert(sizeof(InteractionRespawnableTrigger_Authority_OnInteractionEnded) == 0x000008, "Wrong size on InteractionRespawnableTrigger_Authority_OnInteractionEnded");
static_assert(offsetof(InteractionRespawnableTrigger_Authority_OnInteractionEnded, RespawnableInteractable) == 0x000000, "Member 'InteractionRespawnableTrigger_Authority_OnInteractionEnded::RespawnableInteractable' has a wrong offset!");

// Function SpecialEventUtilities.InteractionRespawnableTrigger.Authority_OnNewRespawnableSubscribed
// 0x0008 (0x0008 - 0x0000)
struct InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed final
{
public:
	class ARespawnableInteractable*               NewRespawnableInteractable;                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed) == 0x000008, "Wrong alignment on InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed");
static_assert(sizeof(InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed) == 0x000008, "Wrong size on InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed");
static_assert(offsetof(InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed, NewRespawnableInteractable) == 0x000000, "Member 'InteractionRespawnableTrigger_Authority_OnNewRespawnableSubscribed::NewRespawnableInteractable' has a wrong offset!");

// Function SpecialEventUtilities.RespawnablePositioner.Authority_OnIsInteractingChangedEvent
// 0x0010 (0x0010 - 0x0000)
struct RespawnablePositioner_Authority_OnIsInteractingChangedEvent final
{
public:
	class ARespawnableInteractable*               RespawnableInteractable;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsInteracting;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RespawnablePositioner_Authority_OnIsInteractingChangedEvent) == 0x000008, "Wrong alignment on RespawnablePositioner_Authority_OnIsInteractingChangedEvent");
static_assert(sizeof(RespawnablePositioner_Authority_OnIsInteractingChangedEvent) == 0x000010, "Wrong size on RespawnablePositioner_Authority_OnIsInteractingChangedEvent");
static_assert(offsetof(RespawnablePositioner_Authority_OnIsInteractingChangedEvent, RespawnableInteractable) == 0x000000, "Member 'RespawnablePositioner_Authority_OnIsInteractingChangedEvent::RespawnableInteractable' has a wrong offset!");
static_assert(offsetof(RespawnablePositioner_Authority_OnIsInteractingChangedEvent, IsInteracting) == 0x000008, "Member 'RespawnablePositioner_Authority_OnIsInteractingChangedEvent::IsInteracting' has a wrong offset!");

// Function SpecialEventUtilities.RespawnablePositioner.Authority_GetRespawnables
// 0x0010 (0x0010 - 0x0000)
struct RespawnablePositioner_Authority_GetRespawnables final
{
public:
	TArray<class ARespawnableInteractable*>       ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RespawnablePositioner_Authority_GetRespawnables) == 0x000008, "Wrong alignment on RespawnablePositioner_Authority_GetRespawnables");
static_assert(sizeof(RespawnablePositioner_Authority_GetRespawnables) == 0x000010, "Wrong size on RespawnablePositioner_Authority_GetRespawnables");
static_assert(offsetof(RespawnablePositioner_Authority_GetRespawnables, ReturnValue) == 0x000000, "Member 'RespawnablePositioner_Authority_GetRespawnables::ReturnValue' has a wrong offset!");

// DelegateFunction SpecialEventUtilities.SpecialEventVFXHelperComponent.HideVfxTagAddedOrRemovedDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature final
{
public:
	bool                                          Added;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature");
static_assert(sizeof(SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature) == 0x000001, "Wrong size on SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature");
static_assert(offsetof(SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature, Added) == 0x000000, "Member 'SpecialEventVFXHelperComponent_HideVfxTagAddedOrRemovedDelegate__DelegateSignature::Added' has a wrong offset!");

// DelegateFunction SpecialEventUtilities.SpecialEventVFXHelperComponent.HideVignetteTagAddedOrRemovedDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature final
{
public:
	bool                                          Added;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature");
static_assert(sizeof(SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature) == 0x000001, "Wrong size on SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature");
static_assert(offsetof(SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature, Added) == 0x000000, "Member 'SpecialEventVFXHelperComponent_HideVignetteTagAddedOrRemovedDelegate__DelegateSignature::Added' has a wrong offset!");

}

