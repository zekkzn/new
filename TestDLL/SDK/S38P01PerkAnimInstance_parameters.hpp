#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S38P01PerkAnimInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function S38P01PerkAnimInstance.S38P01PerkAnimInstance_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct S38P01PerkAnimInstance_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(S38P01PerkAnimInstance_C_AnimGraph) == 0x000008, "Wrong alignment on S38P01PerkAnimInstance_C_AnimGraph");
static_assert(sizeof(S38P01PerkAnimInstance_C_AnimGraph) == 0x000020, "Wrong size on S38P01PerkAnimInstance_C_AnimGraph");
static_assert(offsetof(S38P01PerkAnimInstance_C_AnimGraph, InPose) == 0x000000, "Member 'S38P01PerkAnimInstance_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(S38P01PerkAnimInstance_C_AnimGraph, Param_AnimGraph) == 0x000010, "Member 'S38P01PerkAnimInstance_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function S38P01PerkAnimInstance.S38P01PerkAnimInstance_C.ExecuteUbergraph_S38P01PerkAnimInstance
// 0x0004 (0x0004 - 0x0000)
struct S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance) == 0x000004, "Wrong alignment on S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance");
static_assert(sizeof(S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance) == 0x000004, "Wrong size on S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance");
static_assert(offsetof(S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance, EntryPoint) == 0x000000, "Member 'S38P01PerkAnimInstance_C_ExecuteUbergraph_S38P01PerkAnimInstance::EntryPoint' has a wrong offset!");

// Function S38P01PerkAnimInstance.S38P01PerkAnimInstance_C.Survivor_Perk_Layer
// 0x0020 (0x0020 - 0x0000)
struct S38P01PerkAnimInstance_C_Survivor_Perk_Layer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_Survivor_Perk_Layer;                         // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(S38P01PerkAnimInstance_C_Survivor_Perk_Layer) == 0x000008, "Wrong alignment on S38P01PerkAnimInstance_C_Survivor_Perk_Layer");
static_assert(sizeof(S38P01PerkAnimInstance_C_Survivor_Perk_Layer) == 0x000020, "Wrong size on S38P01PerkAnimInstance_C_Survivor_Perk_Layer");
static_assert(offsetof(S38P01PerkAnimInstance_C_Survivor_Perk_Layer, InPose) == 0x000000, "Member 'S38P01PerkAnimInstance_C_Survivor_Perk_Layer::InPose' has a wrong offset!");
static_assert(offsetof(S38P01PerkAnimInstance_C_Survivor_Perk_Layer, Param_Survivor_Perk_Layer) == 0x000010, "Member 'S38P01PerkAnimInstance_C_Survivor_Perk_Layer::Param_Survivor_Perk_Layer' has a wrong offset!");

}

