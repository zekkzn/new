#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayTagUtilities

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayTagUtilities_structs.hpp"


namespace SDK
{

// Class GameplayTagUtilities.DBDGameplayTagUtilities
// 0x0000 (0x0030 - 0x0030)
class UDBDGameplayTagUtilities final : public UBlueprintFunctionLibrary
{
public:
	static bool GameplayTagExists(class FName TagName);
	static class FName GetScoreModifierName(class FName ScoreEventID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDGameplayTagUtilities">();
	}
	static class UDBDGameplayTagUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDGameplayTagUtilities>();
	}
};
static_assert(alignof(UDBDGameplayTagUtilities) == 0x000008, "Wrong alignment on UDBDGameplayTagUtilities");
static_assert(sizeof(UDBDGameplayTagUtilities) == 0x000030, "Wrong size on UDBDGameplayTagUtilities");

// Class GameplayTagUtilities.TagContainerQueryInstance
// 0x0068 (0x0098 - 0x0030)
class UTagContainerQueryInstance final : public UObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      Query;                                             // 0x0038(0x0048)(NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TagContainerQueryInstance">();
	}
	static class UTagContainerQueryInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTagContainerQueryInstance>();
	}
};
static_assert(alignof(UTagContainerQueryInstance) == 0x000008, "Wrong alignment on UTagContainerQueryInstance");
static_assert(sizeof(UTagContainerQueryInstance) == 0x000098, "Wrong size on UTagContainerQueryInstance");
static_assert(offsetof(UTagContainerQueryInstance, Query) == 0x000038, "Member 'UTagContainerQueryInstance::Query' has a wrong offset!");

// Class GameplayTagUtilities.GameplayTagContainerComponent
// 0x0168 (0x0210 - 0x00A8)
class UGameplayTagContainerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0xC8];                                      // 0x00A8(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FQueryInstanceCollection> _tagToQueries;                                     // 0x0170(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class UObject*, struct FQueryInstanceCollection> _ownerToQueries;                                   // 0x01C0(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	void Add(const struct FGameplayTag& State);
	void AddTagWithSource(const struct FGameplayTag& State, const class UObject* Source);
	void Remove(const struct FGameplayTag& State);
	void RemoveTagWithSource(const struct FGameplayTag& State, const class UObject* Source);

	const struct FGameplayTagContainer GetTags() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayTagContainerComponent">();
	}
	static class UGameplayTagContainerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayTagContainerComponent>();
	}
};
static_assert(alignof(UGameplayTagContainerComponent) == 0x000008, "Wrong alignment on UGameplayTagContainerComponent");
static_assert(sizeof(UGameplayTagContainerComponent) == 0x000210, "Wrong size on UGameplayTagContainerComponent");
static_assert(offsetof(UGameplayTagContainerComponent, _tagToQueries) == 0x000170, "Member 'UGameplayTagContainerComponent::_tagToQueries' has a wrong offset!");
static_assert(offsetof(UGameplayTagContainerComponent, _ownerToQueries) == 0x0001C0, "Member 'UGameplayTagContainerComponent::_ownerToQueries' has a wrong offset!");

// Class GameplayTagUtilities.ObjectStateProvider
// 0x0000 (0x0030 - 0x0030)
class IObjectStateProvider final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectStateProvider">();
	}
	static class IObjectStateProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<IObjectStateProvider>();
	}
};
static_assert(alignof(IObjectStateProvider) == 0x000008, "Wrong alignment on IObjectStateProvider");
static_assert(sizeof(IObjectStateProvider) == 0x000030, "Wrong size on IObjectStateProvider");

}

