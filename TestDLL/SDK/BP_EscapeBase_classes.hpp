#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EscapeBase

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EscapeBase.BP_EscapeBase_C
// 0x01F8 (0x0688 - 0x0490)
class ABP_EscapeBase_C : public AEscapeDoor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ExitAreaNavModifierVolume4;                        // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ExitAreaNavModifierVolume3;                        // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ExitAreaNavModifierVolume2;                        // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ExitAreaNavModifierVolume1;                        // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ExitAreaNavModifierVolume;                         // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Switch_Loop;                                     // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDSkeletalMeshComponentBudgeted*      ExitDoorsMesh;                                     // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NearExitCollider;                                  // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_TL_ParadiseServer;                              // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RBTNavBlocker;                                     // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Entity_Switch_02;                               // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Entity_Blocker;                                 // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          AboveGateCollisionBlocker;                         // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fx_GateOpenSparks;                                 // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavLinkBlink;                                      // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInterruptionDefinition*                OpenInterruption;                                  // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOpenEscape_C*                          OpenEscape;                                        // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fx_redlight3;                                      // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fx_redlight2;                                      // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fx_redlight;                                       // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          KillerInteractionZone;                             // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_KillerOpenGate_C*                   KillerOpenGate;                                    // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ExitArea;                                          // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEscapeOutlineUpdateStrategy*           EscapeOutlineUpdateStrategy;                       // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ReverseBearTrapWarningZone;                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ReverseBearTrapTriggerZone;                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSpawner*                          EscapeBlocker;                                     // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMapActorComponent*                     MapActor;                                          // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Fire;                                            // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FocalPoint;                                        // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Switch_FX_Location;                                // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SwitchBox;                                         // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MapActorPrimitive;                                 // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fx_ExitLights;                                     // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SwitchPanelCustomDepth;                            // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SwitchPanelOutline;                                // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_FxSwitchPanel;                                   // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Step01;                                            // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EscapeSteps;                                       // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDOutlineComponent*                   DBDOutline;                                        // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EscapeZone;                                        // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            InteractorCamper;                                  // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractorZone;                                    // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorDependency*                       ActorDependency;                                   // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TML_EscapeBlocker_DissolveProgress_DC446D334B5F556AAFA70592D41A8E04; // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_EscapeBlocker__Direction_DC446D334B5F556AAFA70592D41A8E04; // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_EscapeBlocker;                                 // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CamperInteractionSocketName;                       // 0x0628(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaySound1;                                        // 0x0634(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaySound2;                                        // 0x0635(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaySound3;                                        // 0x0636(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_637[0x1];                                      // 0x0637(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SoundCooldown;                                     // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SoundCooldown3;                                    // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_Sparks;                                      // 0x0648(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Exit_Montage;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Lights_Open_Count;                                 // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   ExitGateIndicatorDuration;                         // 0x0660(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActivateSwitchSpark();
	void BndEvt___openChargeable_K2Node_ComponentBoundEvent_5_ChargeableCompletionPercentChangeCosmeticDelegate__DelegateSignature(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
	void BndEvt___openChargeable_K2Node_ComponentBoundEvent_7_DechargeBegin__DelegateSignature(class UChargeableComponent* ChargeableComponent);
	void BndEvt___openChargeable_K2Node_ComponentBoundEvent_8_DechargeEnd__DelegateSignature(class UChargeableComponent* ChargeableComponent);
	void BndEvt__EscapeZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__EscapeZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ExitArea_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ExitArea_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_EscapeBase(int32 EntryPoint);
	class UChargeableInteractionDefinition* GetOpenEscapeInteraction();
	void LightAllLights();
	void OnBlockDoorSwitchCosmetic();
	void OnExitActivationChanged(bool Activated);
	void OnExitOpenChanged(bool OPENED);
	void OnUnblockDoorSwitchCosmetic();
	void ReceiveBeginPlay();
	void SetMontage();
	void SetPlaySound1();
	void SetPlaySound2();
	void SetPlaySound3();
	void TML_EscapeBlocker__FinishedFunc();
	void TML_EscapeBlocker__UpdateFunc();
	void UpdateLightProgress(double CompletionPercent);
	void UserConstructionScript();

	class USkeletalMeshComponent* GetDoorSkeletalMeshComponent() const;
	struct FVector GetEscapeSwitchFloorLocation() const;
	class UBoxComponent* GetExitArea() const;
	struct FVector GetFocalPointPosition(const class ADBDPlayer* Player, const class UInteractionDefinition* Definition) const;
	struct FVector GetParadiseServerLocation() const;
	class USceneComponent* GetSwitchSceneComponent() const;
	bool IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EscapeBase_C">();
	}
	static class ABP_EscapeBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EscapeBase_C>();
	}
};
static_assert(alignof(ABP_EscapeBase_C) == 0x000008, "Wrong alignment on ABP_EscapeBase_C");
static_assert(sizeof(ABP_EscapeBase_C) == 0x000688, "Wrong size on ABP_EscapeBase_C");
static_assert(offsetof(ABP_EscapeBase_C, UberGraphFrame) == 0x000490, "Member 'ABP_EscapeBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitAreaNavModifierVolume4) == 0x000498, "Member 'ABP_EscapeBase_C::ExitAreaNavModifierVolume4' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitAreaNavModifierVolume3) == 0x0004A0, "Member 'ABP_EscapeBase_C::ExitAreaNavModifierVolume3' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitAreaNavModifierVolume2) == 0x0004A8, "Member 'ABP_EscapeBase_C::ExitAreaNavModifierVolume2' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitAreaNavModifierVolume1) == 0x0004B0, "Member 'ABP_EscapeBase_C::ExitAreaNavModifierVolume1' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitAreaNavModifierVolume) == 0x0004B8, "Member 'ABP_EscapeBase_C::ExitAreaNavModifierVolume' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, P_Switch_Loop) == 0x0004C0, "Member 'ABP_EscapeBase_C::P_Switch_Loop' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitDoorsMesh) == 0x0004C8, "Member 'ABP_EscapeBase_C::ExitDoorsMesh' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, NearExitCollider) == 0x0004D0, "Member 'ABP_EscapeBase_C::NearExitCollider' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, BP_TL_ParadiseServer) == 0x0004D8, "Member 'ABP_EscapeBase_C::BP_TL_ParadiseServer' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, RBTNavBlocker) == 0x0004E0, "Member 'ABP_EscapeBase_C::RBTNavBlocker' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SM_Entity_Switch_02) == 0x0004E8, "Member 'ABP_EscapeBase_C::SM_Entity_Switch_02' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, NS_Entity_Blocker) == 0x0004F0, "Member 'ABP_EscapeBase_C::NS_Entity_Blocker' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, AboveGateCollisionBlocker) == 0x0004F8, "Member 'ABP_EscapeBase_C::AboveGateCollisionBlocker' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Fx_GateOpenSparks) == 0x000500, "Member 'ABP_EscapeBase_C::Fx_GateOpenSparks' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, NavLinkBlink) == 0x000508, "Member 'ABP_EscapeBase_C::NavLinkBlink' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, OpenInterruption) == 0x000510, "Member 'ABP_EscapeBase_C::OpenInterruption' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, OpenEscape) == 0x000518, "Member 'ABP_EscapeBase_C::OpenEscape' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Fx_redlight3) == 0x000520, "Member 'ABP_EscapeBase_C::Fx_redlight3' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Fx_redlight2) == 0x000528, "Member 'ABP_EscapeBase_C::Fx_redlight2' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Fx_redlight) == 0x000530, "Member 'ABP_EscapeBase_C::Fx_redlight' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, KillerInteractionZone) == 0x000538, "Member 'ABP_EscapeBase_C::KillerInteractionZone' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, KillerOpenGate) == 0x000540, "Member 'ABP_EscapeBase_C::KillerOpenGate' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitArea) == 0x000548, "Member 'ABP_EscapeBase_C::ExitArea' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, EscapeOutlineUpdateStrategy) == 0x000550, "Member 'ABP_EscapeBase_C::EscapeOutlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ReverseBearTrapWarningZone) == 0x000558, "Member 'ABP_EscapeBase_C::ReverseBearTrapWarningZone' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ReverseBearTrapTriggerZone) == 0x000560, "Member 'ABP_EscapeBase_C::ReverseBearTrapTriggerZone' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, EscapeBlocker) == 0x000568, "Member 'ABP_EscapeBase_C::EscapeBlocker' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Scene) == 0x000570, "Member 'ABP_EscapeBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, MapActor) == 0x000578, "Member 'ABP_EscapeBase_C::MapActor' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, PointLight) == 0x000580, "Member 'ABP_EscapeBase_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, P_Fire) == 0x000588, "Member 'ABP_EscapeBase_C::P_Fire' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, FocalPoint) == 0x000590, "Member 'ABP_EscapeBase_C::FocalPoint' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Switch_FX_Location) == 0x000598, "Member 'ABP_EscapeBase_C::Switch_FX_Location' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SwitchBox) == 0x0005A0, "Member 'ABP_EscapeBase_C::SwitchBox' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, MapActorPrimitive) == 0x0005A8, "Member 'ABP_EscapeBase_C::MapActorPrimitive' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Fx_ExitLights) == 0x0005B0, "Member 'ABP_EscapeBase_C::Fx_ExitLights' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SwitchPanelCustomDepth) == 0x0005B8, "Member 'ABP_EscapeBase_C::SwitchPanelCustomDepth' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SwitchPanelOutline) == 0x0005C0, "Member 'ABP_EscapeBase_C::SwitchPanelOutline' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, P_FxSwitchPanel) == 0x0005C8, "Member 'ABP_EscapeBase_C::P_FxSwitchPanel' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Step01) == 0x0005D0, "Member 'ABP_EscapeBase_C::Step01' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, EscapeSteps) == 0x0005D8, "Member 'ABP_EscapeBase_C::EscapeSteps' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, DBDOutline) == 0x0005E0, "Member 'ABP_EscapeBase_C::DBDOutline' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, EscapeZone) == 0x0005E8, "Member 'ABP_EscapeBase_C::EscapeZone' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SpotLight) == 0x0005F0, "Member 'ABP_EscapeBase_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, InteractorCamper) == 0x0005F8, "Member 'ABP_EscapeBase_C::InteractorCamper' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, InteractorZone) == 0x000600, "Member 'ABP_EscapeBase_C::InteractorZone' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Root) == 0x000608, "Member 'ABP_EscapeBase_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ActorDependency) == 0x000610, "Member 'ABP_EscapeBase_C::ActorDependency' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, TML_EscapeBlocker_DissolveProgress_DC446D334B5F556AAFA70592D41A8E04) == 0x000618, "Member 'ABP_EscapeBase_C::TML_EscapeBlocker_DissolveProgress_DC446D334B5F556AAFA70592D41A8E04' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, TML_EscapeBlocker__Direction_DC446D334B5F556AAFA70592D41A8E04) == 0x00061C, "Member 'ABP_EscapeBase_C::TML_EscapeBlocker__Direction_DC446D334B5F556AAFA70592D41A8E04' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, TML_EscapeBlocker) == 0x000620, "Member 'ABP_EscapeBase_C::TML_EscapeBlocker' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, CamperInteractionSocketName) == 0x000628, "Member 'ABP_EscapeBase_C::CamperInteractionSocketName' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, PlaySound1) == 0x000634, "Member 'ABP_EscapeBase_C::PlaySound1' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, PlaySound2) == 0x000635, "Member 'ABP_EscapeBase_C::PlaySound2' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, PlaySound3) == 0x000636, "Member 'ABP_EscapeBase_C::PlaySound3' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SoundCooldown) == 0x000638, "Member 'ABP_EscapeBase_C::SoundCooldown' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, SoundCooldown3) == 0x000640, "Member 'ABP_EscapeBase_C::SoundCooldown3' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Timer_Sparks) == 0x000648, "Member 'ABP_EscapeBase_C::Timer_Sparks' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Exit_Montage) == 0x000650, "Member 'ABP_EscapeBase_C::Exit_Montage' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, Lights_Open_Count) == 0x000658, "Member 'ABP_EscapeBase_C::Lights_Open_Count' has a wrong offset!");
static_assert(offsetof(ABP_EscapeBase_C, ExitGateIndicatorDuration) == 0x000660, "Member 'ABP_EscapeBase_C::ExitGateIndicatorDuration' has a wrong offset!");

}

