#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SacrificeSequence

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SacrificeSequence.BP_SacrificeSequence_C
// 0x0078 (0x0318 - 0x02A0)
class ABP_SacrificeSequence_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak_Audio_Sacrifice;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialHelper*                        MaterialHelper;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Sacrifice;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SacrificeDistortion;                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fx_SacrificeActivation;                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_FadeColor_B5CF30784FF84A856E00158ED96D0314; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_Fade_B5CF30784FF84A856E00158ED96D0314;    // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dissolve_DissolveSize_B5CF30784FF84A856E00158ED96D0314; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Dissolve__Direction_B5CF30784FF84A856E00158ED96D0314; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Dissolve;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MaxGlowIntensity;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxBurstSize;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDissolveSize;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Dissolve__FinishedFunc();
	void Dissolve__UpdateFunc();
	void ExecuteUbergraph_BP_SacrificeSequence(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SacrificeSequence_C">();
	}
	static class ABP_SacrificeSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SacrificeSequence_C>();
	}
};
static_assert(alignof(ABP_SacrificeSequence_C) == 0x000008, "Wrong alignment on ABP_SacrificeSequence_C");
static_assert(sizeof(ABP_SacrificeSequence_C) == 0x000318, "Wrong size on ABP_SacrificeSequence_C");
static_assert(offsetof(ABP_SacrificeSequence_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_SacrificeSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Ak_Audio_Sacrifice) == 0x0002A8, "Member 'ABP_SacrificeSequence_C::Ak_Audio_Sacrifice' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, MaterialHelper) == 0x0002B0, "Member 'ABP_SacrificeSequence_C::MaterialHelper' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, P_Sacrifice) == 0x0002B8, "Member 'ABP_SacrificeSequence_C::P_Sacrifice' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, P_SacrificeDistortion) == 0x0002C0, "Member 'ABP_SacrificeSequence_C::P_SacrificeDistortion' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Fx_SacrificeActivation) == 0x0002C8, "Member 'ABP_SacrificeSequence_C::Fx_SacrificeActivation' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Sphere) == 0x0002D0, "Member 'ABP_SacrificeSequence_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, PointLight) == 0x0002D8, "Member 'ABP_SacrificeSequence_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_SacrificeSequence_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Dissolve_FadeColor_B5CF30784FF84A856E00158ED96D0314) == 0x0002E8, "Member 'ABP_SacrificeSequence_C::Dissolve_FadeColor_B5CF30784FF84A856E00158ED96D0314' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Dissolve_Fade_B5CF30784FF84A856E00158ED96D0314) == 0x0002EC, "Member 'ABP_SacrificeSequence_C::Dissolve_Fade_B5CF30784FF84A856E00158ED96D0314' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Dissolve_DissolveSize_B5CF30784FF84A856E00158ED96D0314) == 0x0002F0, "Member 'ABP_SacrificeSequence_C::Dissolve_DissolveSize_B5CF30784FF84A856E00158ED96D0314' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Dissolve__Direction_B5CF30784FF84A856E00158ED96D0314) == 0x0002F4, "Member 'ABP_SacrificeSequence_C::Dissolve__Direction_B5CF30784FF84A856E00158ED96D0314' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, Dissolve) == 0x0002F8, "Member 'ABP_SacrificeSequence_C::Dissolve' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, MaxGlowIntensity) == 0x000300, "Member 'ABP_SacrificeSequence_C::MaxGlowIntensity' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, MaxBurstSize) == 0x000308, "Member 'ABP_SacrificeSequence_C::MaxBurstSize' has a wrong offset!");
static_assert(offsetof(ABP_SacrificeSequence_C, MaxDissolveSize) == 0x000310, "Member 'ABP_SacrificeSequence_C::MaxDissolveSize' has a wrong offset!");

}

