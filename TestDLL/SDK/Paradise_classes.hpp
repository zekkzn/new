#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Paradise

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Paradise.Paradise_C
// 0x00B0 (0x03E0 - 0x0330)
class Paradise::AParadise_C final : public ALevelParadise
{
public:
	class UStaticMeshComponent*                   Cube07;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn07;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube06;                                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn06;                                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube05;                                            // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn05;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube04;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn04;                                   // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_TL_16x16_Paradise03;                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_TL_16x16_Paradise02;                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_TL_16x16_Paradise01;                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube02;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn02;                                   // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ParadiseCam;                                       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube03;                                            // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn03;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube01;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SurvivorSpawn01;                                   // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MainPlayerSpawn;                                   // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParadiseElement;                                   // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Paradise;                                          // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueprintGeneratedClass Paradise.Paradise_C", true, "Paradise_C">();
	}
	static class Paradise::AParadise_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Paradise::AParadise_C>();
	}
};
static_assert(alignof(Paradise::AParadise_C) == 0x000008, "Wrong alignment on Paradise::AParadise_C");
static_assert(sizeof(Paradise::AParadise_C) == 0x0003E0, "Wrong size on Paradise::AParadise_C");
static_assert(offsetof(Paradise::AParadise_C, Cube07) == 0x000330, "Member 'Paradise::AParadise_C::Cube07' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn07) == 0x000338, "Member 'Paradise::AParadise_C::SurvivorSpawn07' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube06) == 0x000340, "Member 'Paradise::AParadise_C::Cube06' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn06) == 0x000348, "Member 'Paradise::AParadise_C::SurvivorSpawn06' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube05) == 0x000350, "Member 'Paradise::AParadise_C::Cube05' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn05) == 0x000358, "Member 'Paradise::AParadise_C::SurvivorSpawn05' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube04) == 0x000360, "Member 'Paradise::AParadise_C::Cube04' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn04) == 0x000368, "Member 'Paradise::AParadise_C::SurvivorSpawn04' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, BP_TL_16x16_Paradise03) == 0x000370, "Member 'Paradise::AParadise_C::BP_TL_16x16_Paradise03' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, BP_TL_16x16_Paradise02) == 0x000378, "Member 'Paradise::AParadise_C::BP_TL_16x16_Paradise02' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, BP_TL_16x16_Paradise01) == 0x000380, "Member 'Paradise::AParadise_C::BP_TL_16x16_Paradise01' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube02) == 0x000388, "Member 'Paradise::AParadise_C::Cube02' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn02) == 0x000390, "Member 'Paradise::AParadise_C::SurvivorSpawn02' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, ParadiseCam) == 0x000398, "Member 'Paradise::AParadise_C::ParadiseCam' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube03) == 0x0003A0, "Member 'Paradise::AParadise_C::Cube03' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn03) == 0x0003A8, "Member 'Paradise::AParadise_C::SurvivorSpawn03' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube01) == 0x0003B0, "Member 'Paradise::AParadise_C::Cube01' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, SurvivorSpawn01) == 0x0003B8, "Member 'Paradise::AParadise_C::SurvivorSpawn01' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Cube) == 0x0003C0, "Member 'Paradise::AParadise_C::Cube' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, MainPlayerSpawn) == 0x0003C8, "Member 'Paradise::AParadise_C::MainPlayerSpawn' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, ParadiseElement) == 0x0003D0, "Member 'Paradise::AParadise_C::ParadiseElement' has a wrong offset!");
static_assert(offsetof(Paradise::AParadise_C, Paradise) == 0x0003D8, "Member 'Paradise::AParadise_C::Paradise' has a wrong offset!");

}

