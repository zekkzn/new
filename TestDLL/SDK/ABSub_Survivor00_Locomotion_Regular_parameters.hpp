#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABSub_Survivor00_Locomotion_Regular

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABSub_Survivor00_Locomotion_Regular.ABSub_Survivor00_Locomotion_Regular_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABSub_Survivor00_Locomotion_Regular_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABSub_Survivor00_Locomotion_Regular_C_AnimGraph) == 0x000008, "Wrong alignment on ABSub_Survivor00_Locomotion_Regular_C_AnimGraph");
static_assert(sizeof(ABSub_Survivor00_Locomotion_Regular_C_AnimGraph) == 0x000010, "Wrong size on ABSub_Survivor00_Locomotion_Regular_C_AnimGraph");
static_assert(offsetof(ABSub_Survivor00_Locomotion_Regular_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABSub_Survivor00_Locomotion_Regular_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABSub_Survivor00_Locomotion_Regular.ABSub_Survivor00_Locomotion_Regular_C.ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular
// 0x0010 (0x0010 - 0x0000)
struct ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular) == 0x000008, "Wrong alignment on ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular");
static_assert(sizeof(ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular) == 0x000010, "Wrong size on ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular");
static_assert(offsetof(ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular, EntryPoint) == 0x000000, "Member 'ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular, CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component) == 0x000008, "Member 'ABSub_Survivor00_Locomotion_Regular_C_ExecuteUbergraph_ABSub_Survivor00_Locomotion_Regular::CallFunc_GetOwningSkeletalMesh_Skeletal_Mesh_Component' has a wrong offset!");

// Function ABSub_Survivor00_Locomotion_Regular.ABSub_Survivor00_Locomotion_Regular_C.Survivor_Locomotion_Layer
// 0x0010 (0x0010 - 0x0000)
struct ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer final
{
public:
	struct FPoseLink                              Param_Survivor_Locomotion_Layer;                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer) == 0x000008, "Wrong alignment on ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer");
static_assert(sizeof(ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer) == 0x000010, "Wrong size on ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer");
static_assert(offsetof(ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer, Param_Survivor_Locomotion_Layer) == 0x000000, "Member 'ABSub_Survivor00_Locomotion_Regular_C_Survivor_Locomotion_Layer::Param_Survivor_Locomotion_Layer' has a wrong offset!");

}

