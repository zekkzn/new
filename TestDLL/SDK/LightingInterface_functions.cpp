#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LightingInterface

#include "Basic.hpp"

#include "LightingInterface_classes.hpp"
#include "LightingInterface_parameters.hpp"


namespace SDK
{

// Function LightingInterface.LightingInterface_C.GetBasementPost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDBDPerPlatformFloat             Override                                               (Parm, OutParm, NoDestructor)

void ILightingInterface_C::GetBasementPost(ELightingInterfaceEnum* BP_Type, struct FDBDPerPlatformFloat* Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingInterface_C", "GetBasementPost");

	Params::LightingInterface_C_GetBasementPost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (Override != nullptr)
		*Override = std::move(Parms.Override);
}


// Function LightingInterface.LightingInterface_C.GetCondemnedStatusVignetteIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CondemnedStatusIntensityOverride                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ILightingInterface_C::GetCondemnedStatusVignetteIntensity(ELightingInterfaceEnum* BP_Type, double* CondemnedStatusIntensityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingInterface_C", "GetCondemnedStatusVignetteIntensity");

	Params::LightingInterface_C_GetCondemnedStatusVignetteIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (CondemnedStatusIntensityOverride != nullptr)
		*CondemnedStatusIntensityOverride = Parms.CondemnedStatusIntensityOverride;
}


// Function LightingInterface.LightingInterface_C.GetDetectionZoneIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectionZoneCylinderIntensityOverride                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectionZoneDecalIntensityOverride                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ILightingInterface_C::GetDetectionZoneIntensity(ELightingInterfaceEnum* BP_Type, double* DetectionZoneCylinderIntensityOverride, double* DetectionZoneDecalIntensityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingInterface_C", "GetDetectionZoneIntensity");

	Params::LightingInterface_C_GetDetectionZoneIntensity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;

	if (DetectionZoneCylinderIntensityOverride != nullptr)
		*DetectionZoneCylinderIntensityOverride = Parms.DetectionZoneCylinderIntensityOverride;

	if (DetectionZoneDecalIntensityOverride != nullptr)
		*DetectionZoneDecalIntensityOverride = Parms.DetectionZoneDecalIntensityOverride;
}


// Function LightingInterface.LightingInterface_C.GetLightingPost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPostProcessComponent*>    PostProcess                                            (Parm, OutParm, ContainsInstancedReference)
// ELightingInterfaceEnum                  BP_Type                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ILightingInterface_C::GetLightingPost(TArray<class UPostProcessComponent*>* PostProcess, ELightingInterfaceEnum* BP_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingInterface_C", "GetLightingPost");

	Params::LightingInterface_C_GetLightingPost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PostProcess != nullptr)
		*PostProcess = std::move(Parms.PostProcess);

	if (BP_Type != nullptr)
		*BP_Type = Parms.BP_Type;
}


// Function LightingInterface.LightingInterface_C.SetPostOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPostProcessSettings             PostSettings                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class UPostProcessComponent*            PostProcess                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ILightingInterface_C::SetPostOverride(const struct FPostProcessSettings& PostSettings, class UPostProcessComponent* PostProcess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LightingInterface_C", "SetPostOverride");

	Params::LightingInterface_C_SetPostOverride Parms{};

	Parms.PostSettings = std::move(PostSettings);
	Parms.PostProcess = PostProcess;

	UObject::ProcessEvent(Func, &Parms);
}

}

