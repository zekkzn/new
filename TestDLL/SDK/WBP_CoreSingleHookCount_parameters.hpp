#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreSingleHookCount

#include "Basic.hpp"

#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.UpdateState
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreSingleHookCount_C_UpdateState final
{
public:
	ESingleHookState                              HookState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSingleHookCount_C_UpdateState) == 0x000001, "Wrong alignment on WBP_CoreSingleHookCount_C_UpdateState");
static_assert(sizeof(WBP_CoreSingleHookCount_C_UpdateState) == 0x000004, "Wrong size on WBP_CoreSingleHookCount_C_UpdateState");
static_assert(offsetof(WBP_CoreSingleHookCount_C_UpdateState, HookState) == 0x000000, "Member 'WBP_CoreSingleHookCount_C_UpdateState::HookState' has a wrong offset!");
static_assert(offsetof(WBP_CoreSingleHookCount_C_UpdateState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_CoreSingleHookCount_C_UpdateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreSingleHookCount_C_UpdateState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_CoreSingleHookCount_C_UpdateState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSingleHookCount_C_UpdateState, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'WBP_CoreSingleHookCount_C_UpdateState::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.playSingleHookAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreSingleHookCount_C_PlaySingleHookAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSingleHookCount_C_PlaySingleHookAnimation) == 0x000008, "Wrong alignment on WBP_CoreSingleHookCount_C_PlaySingleHookAnimation");
static_assert(sizeof(WBP_CoreSingleHookCount_C_PlaySingleHookAnimation) == 0x000008, "Wrong size on WBP_CoreSingleHookCount_C_PlaySingleHookAnimation");
static_assert(offsetof(WBP_CoreSingleHookCount_C_PlaySingleHookAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_CoreSingleHookCount_C_PlaySingleHookAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CoreSingleHookCount.WBP_CoreSingleHookCount_C.InitHookSegment
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreSingleHookCount_C_InitHookSegment final
{
public:
	bool                                          IsSmallVersion;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSingleHookCount_C_InitHookSegment) == 0x000001, "Wrong alignment on WBP_CoreSingleHookCount_C_InitHookSegment");
static_assert(sizeof(WBP_CoreSingleHookCount_C_InitHookSegment) == 0x000001, "Wrong size on WBP_CoreSingleHookCount_C_InitHookSegment");
static_assert(offsetof(WBP_CoreSingleHookCount_C_InitHookSegment, IsSmallVersion) == 0x000000, "Member 'WBP_CoreSingleHookCount_C_InitHookSegment::IsSmallVersion' has a wrong offset!");

}

