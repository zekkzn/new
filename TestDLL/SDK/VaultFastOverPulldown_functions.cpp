#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultFastOverPulldown

#include "Basic.hpp"

#include "VaultFastOverPulldown_classes.hpp"
#include "VaultFastOverPulldown_parameters.hpp"


namespace SDK
{

// Function VaultFastOverPulldown.VaultFastOverPulldown_C.OnInteractionUpdateStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVaultFastOverPulldown_C::OnInteractionUpdateStart(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultFastOverPulldown_C", "OnInteractionUpdateStart");

	Params::VaultFastOverPulldown_C_OnInteractionUpdateStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultFastOverPulldown.VaultFastOverPulldown_C.ExecuteUbergraph_VaultFastOverPulldown
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVaultFastOverPulldown_C::ExecuteUbergraph_VaultFastOverPulldown(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultFastOverPulldown_C", "ExecuteUbergraph_VaultFastOverPulldown");

	Params::VaultFastOverPulldown_C_ExecuteUbergraph_VaultFastOverPulldown Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultFastOverPulldown.VaultFastOverPulldown_C.IsInteractionPossibleClient
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputInteractionType                   InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UVaultFastOverPulldown_C::IsInteractionPossibleClient(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultFastOverPulldown_C", "IsInteractionPossibleClient");

	Params::VaultFastOverPulldown_C_IsInteractionPossibleClient Parms{};

	Parms.Player = Player;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VaultFastOverPulldown.VaultFastOverPulldown_C.IsInteractionPossibleBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputInteractionType                   InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UVaultFastOverPulldown_C::IsInteractionPossibleBP(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultFastOverPulldown_C", "IsInteractionPossibleBP");

	Params::VaultFastOverPulldown_C_IsInteractionPossibleBP Parms{};

	Parms.Player = Player;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

