#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IND_Escape_01

#include "Basic.hpp"

#include "BP_EscapeBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IND_Escape_01.BP_IND_Escape_01_C
// 0x0028 (0x06B0 - 0x0688)
class ABP_IND_Escape_01_C final : public ABP_EscapeBase_C
{
public:
	class UChildActorComponent*                   K32KillerPodRestrictedZoneBox1;                    // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   K32KillerPodRestrictedZoneBox;                     // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorPanelC;                                        // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorPanelB;                                        // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorPanelA;                                        // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IND_Escape_01_C">();
	}
	static class ABP_IND_Escape_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IND_Escape_01_C>();
	}
};
static_assert(alignof(ABP_IND_Escape_01_C) == 0x000008, "Wrong alignment on ABP_IND_Escape_01_C");
static_assert(sizeof(ABP_IND_Escape_01_C) == 0x0006B0, "Wrong size on ABP_IND_Escape_01_C");
static_assert(offsetof(ABP_IND_Escape_01_C, K32KillerPodRestrictedZoneBox1) == 0x000688, "Member 'ABP_IND_Escape_01_C::K32KillerPodRestrictedZoneBox1' has a wrong offset!");
static_assert(offsetof(ABP_IND_Escape_01_C, K32KillerPodRestrictedZoneBox) == 0x000690, "Member 'ABP_IND_Escape_01_C::K32KillerPodRestrictedZoneBox' has a wrong offset!");
static_assert(offsetof(ABP_IND_Escape_01_C, DoorPanelC) == 0x000698, "Member 'ABP_IND_Escape_01_C::DoorPanelC' has a wrong offset!");
static_assert(offsetof(ABP_IND_Escape_01_C, DoorPanelB) == 0x0006A0, "Member 'ABP_IND_Escape_01_C::DoorPanelB' has a wrong offset!");
static_assert(offsetof(ABP_IND_Escape_01_C, DoorPanelA) == 0x0006A8, "Member 'ABP_IND_Escape_01_C::DoorPanelA' has a wrong offset!");

}

