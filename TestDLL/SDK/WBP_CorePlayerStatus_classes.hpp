#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePlayerStatus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CorePlayerStatus.WBP_CorePlayerStatus_C
// 0x07E8 (0x0C90 - 0x04A8)
class UWBP_CorePlayerStatus_C final : public UCorePlayerStatusWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BotNameSlideIn;                                    // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SuvivorNameFadeOut;                                // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SurvivorActivityAnimation;                         // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BloodAnimationTop;                                 // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BloodAnimationBottom;                              // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RedBarGlowAnimation;                               // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FocusHiglight;                                     // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StateChangePositive;                               // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StateChangeAnimationBasic;                         // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InjuredPlayerIntro;                                // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InjuredReset;                                      // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InjuredPlayerAnimation;                            // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WhiteBarGlowAnimation;                             // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayerNameAnimation;                               // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ObsessionAnimationReset;                           // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ObsessionAnimationTarget;                          // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChasedAnimation;                                   // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ObsessionAnimationDead;                            // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              ActivityBG;                                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ActivityClassScaleBox;                             // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ActivityGaugeBG;                                   // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ActivityIcon;                                      // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ActivityProgress;                                  // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ActivitySmoke;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TutorialHighlight_C*               AvatarTutorialHighlight;                           // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BlooodSplater_00;                                  // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BlooodSplater_01;                                  // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              BotTag;                                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BrokenIndicator;                                   // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ChaseIconLeftImage;                                // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ChaseIconRightImage;                               // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ChaseLeft;                                         // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ChaseRight;                                        // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             ClassIcon;                                         // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ClassIconBG;                                       // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ClassIconIMG;                                      // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              CriticalPing;                                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              EventStatusIcon;                                   // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              GlowLeft;                                          // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              GlowRight;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HealthBar;                                         // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HealthBarBG;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               HealthBarSize;                                     // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HealthContainer;                                   // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HealthyChange;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TutorialHighlight_C*               HookCountTutorialHighlight;                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HookStrike_01;                                     // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              HookStrike_02;                                     // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             HookStrikesGroup;                                  // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ObessionRight;                                     // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ObsessionIconLeftImage;                            // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ObsessionIconRightImage;                           // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ObsessionLeft;                                     // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             PlayerEffectsContainer;                            // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              PortraitPanelScaleBox;                             // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Root;                                              // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScalingHighlight;                                  // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SidelPanelScaleBox;                                // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               StateChangeGroup;                                  // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              StatusBg;                                          // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               StatusIconGroup;                                   // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              StatusImage;                                       // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             SurvivorActivity;                                  // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      OrangeBarStyle;                                    // 0x06B0(0x0290)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FProgressBarStyle                      RedBarStyle;                                       // 0x0940(0x0290)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          IsPriorityHealthBarAnimationPlaying;               // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CurrentHealthBarAnimation;                         // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DefaultIconTexture;                                // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BloodTopIcon;                                      // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Blood_Bottom_Icon;                                 // 0x0BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTimerObject*                           FocusTimer;                                        // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        FocusAnimStartTime;                                // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCharacters;                                     // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCharactersSmall;                                // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            ClawsEnabledColor;                                 // 0x0C10(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ClawsDisabledColor;                                // 0x0C24(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DEBUG_SHOW_BAR;                                    // 0x0C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEBUG_SMALL_TEMPLATE;                              // 0x0C39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3A[0x6];                                      // 0x0C3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UTexture2D*>        EventIconMap;                                      // 0x0C40(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateSurvivorSpecificPingIcon(const EConnectionQuality& ConnectionQuality);
	void UpdateSurvivorActivityProgress(const float Progress);
	void TriggerAfflictionHit();
	void ShowSurvivorActivity(const TSoftObjectPtr<class UTexture2D>& Param_ActivityIcon, const bool ShouldDisplayProgress);
	void SetVisual(struct FPlayerStatusViewData& Data);
	void SetTimerProgressVisual(double TimerValue, bool IsDeepWound);
	void SetTimerProgress(float Value, bool IsDeepWound);
	void SetTemplate(EPlayerStatusTemplate Template);
	void SetStatusIcon(EPlayerStatus PlayerStatusState, class UTexture2D* Player_Portrait, class UTexture2D* Player_Portrait_Icon_Overwrite, bool IsCalamariMode);
	void SetPlayerPortrait(class UTexture2D* PortraitIcon);
	void SetPlayerName(const class FString& PlayerName, int32 PlayerNameMaxCharacters);
	void SetPingVisual(EConnectionQuality Ping);
	void SetObsessionState(EObsessionUIState Obsession_State);
	void SetName();
	void SetKillerData(const struct FPlayerStatusViewData& Data);
	void SetHookStrikeVisual(class UDBDImage* HookStrikeImage, bool IsOn, bool IsKiller);
	void SetEventIcon(const class FString& EventBannerLabel, bool IsActive);
	void SetData(const struct FPlayerStatusViewData& Data);
	void SetClassIcon(TSoftObjectPtr<class UTexture2D> Param_ClassIcon, const bool IsCalamariMode, bool Is_Player_Killer, bool Is_Local_Player_Killer);
	void SetBrokenIcon(bool IsBroken);
	void SetBotTag(bool IsBot);
	void Set_Hooked_Count(int32 DrainStage, bool Is_Killer);
	void PreConstruct(bool IsDesignTime);
	void PlayUpdateAnimations(struct FPlayerStatusViewData& Data);
	void PlayTimerBarAnimation(bool IsLooping);
	void PlayTimerAnimation();
	void PlayHookEscapeFailedAnimation();
	void PlayFocusAnimation();
	void Player_Injured_Intro_Animation(int32 Loop, class UWidgetAnimation** Animation);
	void Player_Injured_Idle_Animation(int32 Loops, bool RestoreState, class UWidgetAnimation** Animation);
	void PlayBloodSplatterAnimation(EPlayerStatus StatusState);
	void Play_Injured_Player_Intro();
	void Play_Bot_Name_Animation(bool IsBot, const class FString& PlayerName);
	void OnPlayFocusAnimation(bool Forward, double TweenDelay);
	void HideSurvivorActivity();
	void GetStatusIconTexture(EPlayerStatus PlayerStatusState, bool IsCalamariMode, class UTexture2D** IconTexture);
	void GetBloodImageTopBottom(EPlayerStatus Player_Status);
	void GetBloodAnimationAssets(EPlayerStatus State, class UTexture2D** Texture, class UWidgetAnimation** Animation);
	void GetBloodAnimation(EPlayerStatus PlayerStatus, class UWidgetAnimation** Animation);
	void Finished_2F445E62418C04231C6746B2B335C514();
	void Finish_Intro_Animation();
	void ExecuteUbergraph_WBP_CorePlayerStatus(int32 EntryPoint);
	void Event_Bot_Name_Change(const class FString& PlayerName);
	void EnableChasesMode(const bool IsChased);
	void DimObsessionAndChaseClaws(const bool DisableLeftClaw, const bool DisableRightClaw);
	void Construct();
	void ClearVisual();
	void ClearKillerVisual();
	void ClearData();

	bool ShouldPlayFocusAnimation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CorePlayerStatus_C">();
	}
	static class UWBP_CorePlayerStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CorePlayerStatus_C>();
	}
};
static_assert(alignof(UWBP_CorePlayerStatus_C) == 0x000010, "Wrong alignment on UWBP_CorePlayerStatus_C");
static_assert(sizeof(UWBP_CorePlayerStatus_C) == 0x000C90, "Wrong size on UWBP_CorePlayerStatus_C");
static_assert(offsetof(UWBP_CorePlayerStatus_C, UberGraphFrame) == 0x0004A8, "Member 'UWBP_CorePlayerStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BotNameSlideIn) == 0x0004B0, "Member 'UWBP_CorePlayerStatus_C::BotNameSlideIn' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, SuvivorNameFadeOut) == 0x0004B8, "Member 'UWBP_CorePlayerStatus_C::SuvivorNameFadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, SurvivorActivityAnimation) == 0x0004C0, "Member 'UWBP_CorePlayerStatus_C::SurvivorActivityAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BloodAnimationTop) == 0x0004C8, "Member 'UWBP_CorePlayerStatus_C::BloodAnimationTop' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BloodAnimationBottom) == 0x0004D0, "Member 'UWBP_CorePlayerStatus_C::BloodAnimationBottom' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, RedBarGlowAnimation) == 0x0004D8, "Member 'UWBP_CorePlayerStatus_C::RedBarGlowAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, FocusHiglight) == 0x0004E0, "Member 'UWBP_CorePlayerStatus_C::FocusHiglight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StateChangePositive) == 0x0004E8, "Member 'UWBP_CorePlayerStatus_C::StateChangePositive' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StateChangeAnimationBasic) == 0x0004F0, "Member 'UWBP_CorePlayerStatus_C::StateChangeAnimationBasic' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, InjuredPlayerIntro) == 0x0004F8, "Member 'UWBP_CorePlayerStatus_C::InjuredPlayerIntro' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, InjuredReset) == 0x000500, "Member 'UWBP_CorePlayerStatus_C::InjuredReset' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, InjuredPlayerAnimation) == 0x000508, "Member 'UWBP_CorePlayerStatus_C::InjuredPlayerAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, WhiteBarGlowAnimation) == 0x000510, "Member 'UWBP_CorePlayerStatus_C::WhiteBarGlowAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, PlayerNameAnimation) == 0x000518, "Member 'UWBP_CorePlayerStatus_C::PlayerNameAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionAnimationReset) == 0x000520, "Member 'UWBP_CorePlayerStatus_C::ObsessionAnimationReset' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionAnimationTarget) == 0x000528, "Member 'UWBP_CorePlayerStatus_C::ObsessionAnimationTarget' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ChasedAnimation) == 0x000530, "Member 'UWBP_CorePlayerStatus_C::ChasedAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionAnimationDead) == 0x000538, "Member 'UWBP_CorePlayerStatus_C::ObsessionAnimationDead' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivityBG) == 0x000540, "Member 'UWBP_CorePlayerStatus_C::ActivityBG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivityClassScaleBox) == 0x000548, "Member 'UWBP_CorePlayerStatus_C::ActivityClassScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivityGaugeBG) == 0x000550, "Member 'UWBP_CorePlayerStatus_C::ActivityGaugeBG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivityIcon) == 0x000558, "Member 'UWBP_CorePlayerStatus_C::ActivityIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivityProgress) == 0x000560, "Member 'UWBP_CorePlayerStatus_C::ActivityProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ActivitySmoke) == 0x000568, "Member 'UWBP_CorePlayerStatus_C::ActivitySmoke' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, AvatarTutorialHighlight) == 0x000570, "Member 'UWBP_CorePlayerStatus_C::AvatarTutorialHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BlooodSplater_00) == 0x000578, "Member 'UWBP_CorePlayerStatus_C::BlooodSplater_00' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BlooodSplater_01) == 0x000580, "Member 'UWBP_CorePlayerStatus_C::BlooodSplater_01' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BotTag) == 0x000588, "Member 'UWBP_CorePlayerStatus_C::BotTag' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BrokenIndicator) == 0x000590, "Member 'UWBP_CorePlayerStatus_C::BrokenIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ChaseIconLeftImage) == 0x000598, "Member 'UWBP_CorePlayerStatus_C::ChaseIconLeftImage' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ChaseIconRightImage) == 0x0005A0, "Member 'UWBP_CorePlayerStatus_C::ChaseIconRightImage' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ChaseLeft) == 0x0005A8, "Member 'UWBP_CorePlayerStatus_C::ChaseLeft' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ChaseRight) == 0x0005B0, "Member 'UWBP_CorePlayerStatus_C::ChaseRight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ClassIcon) == 0x0005B8, "Member 'UWBP_CorePlayerStatus_C::ClassIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ClassIconBG) == 0x0005C0, "Member 'UWBP_CorePlayerStatus_C::ClassIconBG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ClassIconIMG) == 0x0005C8, "Member 'UWBP_CorePlayerStatus_C::ClassIconIMG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, CriticalPing) == 0x0005D0, "Member 'UWBP_CorePlayerStatus_C::CriticalPing' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, EventStatusIcon) == 0x0005D8, "Member 'UWBP_CorePlayerStatus_C::EventStatusIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, GlowLeft) == 0x0005E0, "Member 'UWBP_CorePlayerStatus_C::GlowLeft' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, GlowRight) == 0x0005E8, "Member 'UWBP_CorePlayerStatus_C::GlowRight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HealthBar) == 0x0005F0, "Member 'UWBP_CorePlayerStatus_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HealthBarBG) == 0x0005F8, "Member 'UWBP_CorePlayerStatus_C::HealthBarBG' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HealthBarSize) == 0x000600, "Member 'UWBP_CorePlayerStatus_C::HealthBarSize' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HealthContainer) == 0x000608, "Member 'UWBP_CorePlayerStatus_C::HealthContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HealthyChange) == 0x000610, "Member 'UWBP_CorePlayerStatus_C::HealthyChange' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HookCountTutorialHighlight) == 0x000618, "Member 'UWBP_CorePlayerStatus_C::HookCountTutorialHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HookStrike_01) == 0x000620, "Member 'UWBP_CorePlayerStatus_C::HookStrike_01' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HookStrike_02) == 0x000628, "Member 'UWBP_CorePlayerStatus_C::HookStrike_02' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, HookStrikesGroup) == 0x000630, "Member 'UWBP_CorePlayerStatus_C::HookStrikesGroup' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObessionRight) == 0x000638, "Member 'UWBP_CorePlayerStatus_C::ObessionRight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionIconLeftImage) == 0x000640, "Member 'UWBP_CorePlayerStatus_C::ObsessionIconLeftImage' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionIconRightImage) == 0x000648, "Member 'UWBP_CorePlayerStatus_C::ObsessionIconRightImage' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ObsessionLeft) == 0x000650, "Member 'UWBP_CorePlayerStatus_C::ObsessionLeft' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, PlayerEffectsContainer) == 0x000658, "Member 'UWBP_CorePlayerStatus_C::PlayerEffectsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, PortraitPanelScaleBox) == 0x000660, "Member 'UWBP_CorePlayerStatus_C::PortraitPanelScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, Root) == 0x000668, "Member 'UWBP_CorePlayerStatus_C::Root' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ScalingHighlight) == 0x000670, "Member 'UWBP_CorePlayerStatus_C::ScalingHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, SidelPanelScaleBox) == 0x000678, "Member 'UWBP_CorePlayerStatus_C::SidelPanelScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StateChangeGroup) == 0x000680, "Member 'UWBP_CorePlayerStatus_C::StateChangeGroup' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StatusBg) == 0x000688, "Member 'UWBP_CorePlayerStatus_C::StatusBg' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StatusIconGroup) == 0x000690, "Member 'UWBP_CorePlayerStatus_C::StatusIconGroup' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, StatusImage) == 0x000698, "Member 'UWBP_CorePlayerStatus_C::StatusImage' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, SurvivorActivity) == 0x0006A0, "Member 'UWBP_CorePlayerStatus_C::SurvivorActivity' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, OrangeBarStyle) == 0x0006B0, "Member 'UWBP_CorePlayerStatus_C::OrangeBarStyle' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, RedBarStyle) == 0x000940, "Member 'UWBP_CorePlayerStatus_C::RedBarStyle' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, IsPriorityHealthBarAnimationPlaying) == 0x000BD0, "Member 'UWBP_CorePlayerStatus_C::IsPriorityHealthBarAnimationPlaying' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, CurrentHealthBarAnimation) == 0x000BD8, "Member 'UWBP_CorePlayerStatus_C::CurrentHealthBarAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, DefaultIconTexture) == 0x000BE0, "Member 'UWBP_CorePlayerStatus_C::DefaultIconTexture' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, BloodTopIcon) == 0x000BE8, "Member 'UWBP_CorePlayerStatus_C::BloodTopIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, Blood_Bottom_Icon) == 0x000BF0, "Member 'UWBP_CorePlayerStatus_C::Blood_Bottom_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, FocusTimer) == 0x000BF8, "Member 'UWBP_CorePlayerStatus_C::FocusTimer' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, FocusAnimStartTime) == 0x000C00, "Member 'UWBP_CorePlayerStatus_C::FocusAnimStartTime' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, MaxCharacters) == 0x000C08, "Member 'UWBP_CorePlayerStatus_C::MaxCharacters' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, MaxCharactersSmall) == 0x000C0C, "Member 'UWBP_CorePlayerStatus_C::MaxCharactersSmall' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ClawsEnabledColor) == 0x000C10, "Member 'UWBP_CorePlayerStatus_C::ClawsEnabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, ClawsDisabledColor) == 0x000C24, "Member 'UWBP_CorePlayerStatus_C::ClawsDisabledColor' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, DEBUG_SHOW_BAR) == 0x000C38, "Member 'UWBP_CorePlayerStatus_C::DEBUG_SHOW_BAR' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, DEBUG_SMALL_TEMPLATE) == 0x000C39, "Member 'UWBP_CorePlayerStatus_C::DEBUG_SMALL_TEMPLATE' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerStatus_C, EventIconMap) == 0x000C40, "Member 'UWBP_CorePlayerStatus_C::EventIconMap' has a wrong offset!");

}

