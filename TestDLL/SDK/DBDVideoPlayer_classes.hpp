#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDVideoPlayer

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class DBDVideoPlayer.VideoNativePlayer
// 0x0060 (0x0300 - 0x02A0)
class AVideoNativePlayer final : public AActor
{
public:
	uint8                                         Pad_2A0[0x60];                                     // 0x02A0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VideoNativePlayer">();
	}
	static class AVideoNativePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVideoNativePlayer>();
	}
};
static_assert(alignof(AVideoNativePlayer) == 0x000008, "Wrong alignment on AVideoNativePlayer");
static_assert(sizeof(AVideoNativePlayer) == 0x000300, "Wrong size on AVideoNativePlayer");

// Class DBDVideoPlayer.VideoPlayer
// 0x0000 (0x0030 - 0x0030)
class IVideoPlayer final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VideoPlayer">();
	}
	static class IVideoPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<IVideoPlayer>();
	}
};
static_assert(alignof(IVideoPlayer) == 0x000008, "Wrong alignment on IVideoPlayer");
static_assert(sizeof(IVideoPlayer) == 0x000030, "Wrong size on IVideoPlayer");

// Class DBDVideoPlayer.VideoThumbnailPlayer
// 0x00E8 (0x0388 - 0x02A0)
class AVideoThumbnailPlayer final : public AActor
{
public:
	uint8                                         Pad_2A0[0x50];                                     // 0x02A0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaPlayer*                           MediaPlayer;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaSoundComponent*                   SoundComponent;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                            VideoPlayerWidget;                                 // 0x0300(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        _audioComponent;                                   // 0x0308(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_310[0x28];                                     // 0x0310(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMediaSource>            _source;                                           // 0x0338(0x0038)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_370[0x18];                                     // 0x0370(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndReached();
	void OnMediaClosed();
	void OnMediaOpened(const class FString& OpenedUrl);
	void OnVideoAssetLoaded();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VideoThumbnailPlayer">();
	}
	static class AVideoThumbnailPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVideoThumbnailPlayer>();
	}
};
static_assert(alignof(AVideoThumbnailPlayer) == 0x000008, "Wrong alignment on AVideoThumbnailPlayer");
static_assert(sizeof(AVideoThumbnailPlayer) == 0x000388, "Wrong size on AVideoThumbnailPlayer");
static_assert(offsetof(AVideoThumbnailPlayer, MediaPlayer) == 0x0002F0, "Member 'AVideoThumbnailPlayer::MediaPlayer' has a wrong offset!");
static_assert(offsetof(AVideoThumbnailPlayer, SoundComponent) == 0x0002F8, "Member 'AVideoThumbnailPlayer::SoundComponent' has a wrong offset!");
static_assert(offsetof(AVideoThumbnailPlayer, VideoPlayerWidget) == 0x000300, "Member 'AVideoThumbnailPlayer::VideoPlayerWidget' has a wrong offset!");
static_assert(offsetof(AVideoThumbnailPlayer, _audioComponent) == 0x000308, "Member 'AVideoThumbnailPlayer::_audioComponent' has a wrong offset!");
static_assert(offsetof(AVideoThumbnailPlayer, _source) == 0x000338, "Member 'AVideoThumbnailPlayer::_source' has a wrong offset!");

}

