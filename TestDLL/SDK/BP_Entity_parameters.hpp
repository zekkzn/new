#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Entity

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Entity.BP_Entity_C.SetAnimationStrugglePercent
// 0x0004 (0x0004 - 0x0000)
struct BP_Entity_C_SetAnimationStrugglePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_SetAnimationStrugglePercent) == 0x000004, "Wrong alignment on BP_Entity_C_SetAnimationStrugglePercent");
static_assert(sizeof(BP_Entity_C_SetAnimationStrugglePercent) == 0x000004, "Wrong size on BP_Entity_C_SetAnimationStrugglePercent");
static_assert(offsetof(BP_Entity_C_SetAnimationStrugglePercent, Percent) == 0x000000, "Member 'BP_Entity_C_SetAnimationStrugglePercent::Percent' has a wrong offset!");

// Function BP_Entity.BP_Entity_C.SetAnimationIsStruggling
// 0x0001 (0x0001 - 0x0000)
struct BP_Entity_C_SetAnimationIsStruggling final
{
public:
	bool                                          IsStruggling;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_SetAnimationIsStruggling) == 0x000001, "Wrong alignment on BP_Entity_C_SetAnimationIsStruggling");
static_assert(sizeof(BP_Entity_C_SetAnimationIsStruggling) == 0x000001, "Wrong size on BP_Entity_C_SetAnimationIsStruggling");
static_assert(offsetof(BP_Entity_C_SetAnimationIsStruggling, IsStruggling) == 0x000000, "Member 'BP_Entity_C_SetAnimationIsStruggling::IsStruggling' has a wrong offset!");

// Function BP_Entity.BP_Entity_C.InitEntity
// 0x0008 (0x0008 - 0x0000)
struct BP_Entity_C_InitEntity final
{
public:
	class AMeatHook*                              MeatHook;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_InitEntity) == 0x000008, "Wrong alignment on BP_Entity_C_InitEntity");
static_assert(sizeof(BP_Entity_C_InitEntity) == 0x000008, "Wrong size on BP_Entity_C_InitEntity");
static_assert(offsetof(BP_Entity_C_InitEntity, MeatHook) == 0x000000, "Member 'BP_Entity_C_InitEntity::MeatHook' has a wrong offset!");

// Function BP_Entity.BP_Entity_C.GetAnimInstance
// 0x0020 (0x0020 - 0x0000)
struct BP_Entity_C_GetAnimInstance final
{
public:
	class UEntityAnimInstance*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEntityAnimInstance*                    K2Node_DynamicCast_AsEntity_Anim_Instance;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_GetAnimInstance) == 0x000008, "Wrong alignment on BP_Entity_C_GetAnimInstance");
static_assert(sizeof(BP_Entity_C_GetAnimInstance) == 0x000020, "Wrong size on BP_Entity_C_GetAnimInstance");
static_assert(offsetof(BP_Entity_C_GetAnimInstance, ReturnValue) == 0x000000, "Member 'BP_Entity_C_GetAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_GetAnimInstance, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_Entity_C_GetAnimInstance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_GetAnimInstance, K2Node_DynamicCast_AsEntity_Anim_Instance) == 0x000010, "Member 'BP_Entity_C_GetAnimInstance::K2Node_DynamicCast_AsEntity_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_GetAnimInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Entity_C_GetAnimInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Entity.BP_Entity_C.ExecuteUbergraph_BP_Entity
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Entity_C_ExecuteUbergraph_BP_Entity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMeatHook*                              K2Node_Event_meatHook;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMontagePlayer*                         CallFunc_GetMontagePlayer_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isBasementHook;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x001C(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_K2_GetChildActor_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASacrificeEnd*                          K2Node_DynamicCast_AsSacrifice_End;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0080(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x0094(0x0014)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isStruggling;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEntityAnimInstance*                    CallFunc_GetAnimInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_percent;                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_ExecuteUbergraph_BP_Entity) == 0x000008, "Wrong alignment on BP_Entity_C_ExecuteUbergraph_BP_Entity");
static_assert(sizeof(BP_Entity_C_ExecuteUbergraph_BP_Entity) == 0x0000C8, "Wrong size on BP_Entity_C_ExecuteUbergraph_BP_Entity");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, EntryPoint) == 0x000000, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_Event_meatHook) == 0x000008, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_Event_meatHook' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_GetMontagePlayer_ReturnValue) == 0x000010, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_GetMontagePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_Event_isBasementHook) == 0x000018, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_Event_isBasementHook' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, Temp_delegate_Variable) == 0x00001C, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_PostAkEvent_ReturnValue) == 0x000030, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_K2_GetChildActor_ReturnValue) == 0x000038, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_K2_GetChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_DynamicCast_AsSacrifice_End) == 0x000058, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_DynamicCast_AsSacrifice_End' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_PostAkEvent_ReturnValue_1) == 0x000064, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_PostAkEvent_ReturnValue_2) == 0x00007C, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, Temp_delegate_Variable_3) == 0x000080, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, Temp_delegate_Variable_4) == 0x000094, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_PostAkEvent_ReturnValue_3) == 0x0000A8, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_PostAkEvent_ReturnValue_4) == 0x0000AC, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_Event_isStruggling) == 0x0000B0, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_Event_isStruggling' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B8, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Entity_C_ExecuteUbergraph_BP_Entity, K2Node_Event_percent) == 0x0000C0, "Member 'BP_Entity_C_ExecuteUbergraph_BP_Entity::K2Node_Event_percent' has a wrong offset!");

// Function BP_Entity.BP_Entity_C.CompleteSacrifice
// 0x0001 (0x0001 - 0x0000)
struct BP_Entity_C_CompleteSacrifice final
{
public:
	bool                                          IsBasementHook;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Entity_C_CompleteSacrifice) == 0x000001, "Wrong alignment on BP_Entity_C_CompleteSacrifice");
static_assert(sizeof(BP_Entity_C_CompleteSacrifice) == 0x000001, "Wrong size on BP_Entity_C_CompleteSacrifice");
static_assert(offsetof(BP_Entity_C_CompleteSacrifice, IsBasementHook) == 0x000000, "Member 'BP_Entity_C_CompleteSacrifice::IsBasementHook' has a wrong offset!");

}

