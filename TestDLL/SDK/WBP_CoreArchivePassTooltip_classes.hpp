#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreArchivePassTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreArchivePassTooltip.WBP_CoreArchivePassTooltip_C
// 0x00A8 (0x0400 - 0x0358)
class UWBP_CoreArchivePassTooltip_C final : public UArchivePassTooltipWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              Bg;                                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              EventHeader;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Line;                                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              RarityBG;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              VisceralImage;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            LockedColor;                                       // 0x0388(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            OwnedColor;                                        // 0x039C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            EquippedColor;                                     // 0x03B0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CurrencyObjectClass;                               // 0x03C8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CoreArchivePassTooltip(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetTooltipData(const struct FArchivePassTooltipViewData& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreArchivePassTooltip_C">();
	}
	static class UWBP_CoreArchivePassTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreArchivePassTooltip_C>();
	}
};
static_assert(alignof(UWBP_CoreArchivePassTooltip_C) == 0x000008, "Wrong alignment on UWBP_CoreArchivePassTooltip_C");
static_assert(sizeof(UWBP_CoreArchivePassTooltip_C) == 0x000400, "Wrong size on UWBP_CoreArchivePassTooltip_C");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, UberGraphFrame) == 0x000358, "Member 'UWBP_CoreArchivePassTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, Bg) == 0x000360, "Member 'UWBP_CoreArchivePassTooltip_C::Bg' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, EventHeader) == 0x000368, "Member 'UWBP_CoreArchivePassTooltip_C::EventHeader' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, Line) == 0x000370, "Member 'UWBP_CoreArchivePassTooltip_C::Line' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, RarityBG) == 0x000378, "Member 'UWBP_CoreArchivePassTooltip_C::RarityBG' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, VisceralImage) == 0x000380, "Member 'UWBP_CoreArchivePassTooltip_C::VisceralImage' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, LockedColor) == 0x000388, "Member 'UWBP_CoreArchivePassTooltip_C::LockedColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, OwnedColor) == 0x00039C, "Member 'UWBP_CoreArchivePassTooltip_C::OwnedColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, EquippedColor) == 0x0003B0, "Member 'UWBP_CoreArchivePassTooltip_C::EquippedColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreArchivePassTooltip_C, CurrencyObjectClass) == 0x0003C8, "Member 'UWBP_CoreArchivePassTooltip_C::CurrencyObjectClass' has a wrong offset!");

}

