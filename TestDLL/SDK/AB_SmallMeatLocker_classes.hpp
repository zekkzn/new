#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_SmallMeatLocker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_SmallMeatLocker.AB_SmallMeatLocker_C
// 0x0860 (0x0BC0 - 0x0360)
class UAB_SmallMeatLocker_C final : public UMeatHookAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0368(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0370(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0410(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0438(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0480(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x04C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0510(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0530(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0578(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0598(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0660(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0680(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06C8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06E8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x07B0(0x0050)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0800(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0908(0x0030)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0938(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0A00(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0A30(0x0138)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0B68(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0B88(0x0020)()
	class UAnimSequenceBase*                      Sequence_Broken_Idle;                              // 0x0BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Sequence_Breaking;                                 // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_SmallMeatLocker(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_SmallMeatLocker_AnimGraphNode_ModifyBone_8C4C8E5C440D27E9E9AA7597CEE033EA();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_SmallMeatLocker_C">();
	}
	static class UAB_SmallMeatLocker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_SmallMeatLocker_C>();
	}
};
static_assert(alignof(UAB_SmallMeatLocker_C) == 0x000010, "Wrong alignment on UAB_SmallMeatLocker_C");
static_assert(sizeof(UAB_SmallMeatLocker_C) == 0x000BC0, "Wrong size on UAB_SmallMeatLocker_C");
static_assert(offsetof(UAB_SmallMeatLocker_C, UberGraphFrame) == 0x000360, "Member 'UAB_SmallMeatLocker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimBlueprintExtension_PropertyAccess) == 0x000368, "Member 'UAB_SmallMeatLocker_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimBlueprintExtension_Base) == 0x000370, "Member 'UAB_SmallMeatLocker_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_Root) == 0x000378, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TransitionResult_4) == 0x000398, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TransitionResult_3) == 0x0003C0, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TransitionResult_2) == 0x0003E8, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TransitionResult_1) == 0x000410, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_SequencePlayer_3) == 0x000438, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateResult_4) == 0x000480, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TransitionResult) == 0x0004A0, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_SequencePlayer_2) == 0x0004C8, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateResult_3) == 0x000510, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_SequencePlayer_1) == 0x000530, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateResult_2) == 0x000578, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateMachine_1) == 0x000598, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateResult_1) == 0x000660, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_SequencePlayer) == 0x000680, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateResult) == 0x0006C8, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_StateMachine) == 0x0006E8, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_Slot) == 0x0007B0, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_SaveCachedPose) == 0x000800, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_UseCachedPose_1) == 0x000908, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_TwoWayBlend) == 0x000938, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_UseCachedPose) == 0x000A00, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_ModifyBone) == 0x000A30, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_LocalToComponentSpace) == 0x000B68, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, AnimGraphNode_ComponentToLocalSpace) == 0x000B88, "Member 'UAB_SmallMeatLocker_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, Sequence_Broken_Idle) == 0x000BA8, "Member 'UAB_SmallMeatLocker_C::Sequence_Broken_Idle' has a wrong offset!");
static_assert(offsetof(UAB_SmallMeatLocker_C, Sequence_Breaking) == 0x000BB0, "Member 'UAB_SmallMeatLocker_C::Sequence_Breaking' has a wrong offset!");

}

