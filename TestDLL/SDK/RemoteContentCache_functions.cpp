#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RemoteContentCache

#include "Basic.hpp"

#include "RemoteContentCache_classes.hpp"
#include "RemoteContentCache_parameters.hpp"


namespace SDK
{

// Function RemoteContentCache.AsyncLoadSoftPtrAsTexture2DNode.LoadAsTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftRemoteContentCacheObjectPtr PtrToLoad                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncLoadSoftPtrAsTexture2DNode* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncLoadSoftPtrAsTexture2DNode* UAsyncLoadSoftPtrAsTexture2DNode::LoadAsTexture2D(class UObject* WorldContextObject, const struct FSoftRemoteContentCacheObjectPtr& PtrToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncLoadSoftPtrAsTexture2DNode", "LoadAsTexture2D");

	Params::AsyncLoadSoftPtrAsTexture2DNode_LoadAsTexture2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PtrToLoad = std::move(PtrToLoad);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction RemoteContentCache.AsyncLoadSoftPtrAsTexture2DNode.SoftPtrAsyncLoadAsTexture2DCompleted__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UTexture2D*                       LoadedTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsyncLoadSoftPtrAsTexture2DNode::SoftPtrAsyncLoadAsTexture2DCompleted__DelegateSignature(class UTexture2D* LoadedTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncLoadSoftPtrAsTexture2DNode", "SoftPtrAsyncLoadAsTexture2DCompleted__DelegateSignature");

	Params::AsyncLoadSoftPtrAsTexture2DNode_SoftPtrAsyncLoadAsTexture2DCompleted__DelegateSignature Parms{};

	Parms.LoadedTexture = LoadedTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RemoteContentCache.SoftRemoteContentCacheObjectPtrLibrary.BindToImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftRemoteContentCacheObjectPtr PtrToBind                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USoftRemoteContentCacheObjectPtrLibrary::BindToImage(class UObject* WorldContextObject, const struct FSoftRemoteContentCacheObjectPtr& PtrToBind, class UImage* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SoftRemoteContentCacheObjectPtrLibrary", "BindToImage");

	Params::SoftRemoteContentCacheObjectPtrLibrary_BindToImage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PtrToBind = std::move(PtrToBind);
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

