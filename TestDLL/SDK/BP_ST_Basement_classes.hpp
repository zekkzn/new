#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ST_Basement

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ST_Basement.BP_ST_Basement_C
// 0x02A0 (0x0540 - 0x02A0)
class ABP_ST_Basement_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SnareBlocker1;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SnareBlocker;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trap_Blocker2;                                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trap_Blocker1;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainALong_03;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainBMed_02;                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal21;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal22;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainBMed_01;                               // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainBLong_03;                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainAShort_01;                             // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainALong_02;                              // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainBLong_02;                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainALong_01;                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WAL_ChainBLong_01;                              // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Chains;                                            // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal10;                                           // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal2;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal3;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal4;                                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal6;                                            // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal11;                                           // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal12;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal13;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal14;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal16;                                           // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal18;                                           // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal19;                                           // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal30;                                           // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal23;                                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal25;                                           // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal26;                                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal27;                                           // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal28;                                           // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal29;                                           // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal41;                                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal33;                                           // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal32;                                           // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal31;                                           // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal39;                                           // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal40;                                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Decals_Minus_Extras;                               // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane8;                                            // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane7;                                            // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane5;                                            // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal38;                                           // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal37;                                           // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal36;                                           // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal35;                                           // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal34;                                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal24;                                           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal20;                                           // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal17;                                           // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal15;                                           // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal9;                                            // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal8;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal7;                                            // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal5;                                            // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Decals_Minus_Essentials;                           // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Basement;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Ceiling_SpiderWebs;                 // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_West_SpiderWebs;               // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_South_SpiderWebs;              // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_East_SpiderWebs;               // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_Center_SpiderWebs;             // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_West;                          // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_South_Pipes;                   // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_South;                         // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_North_SpiderWeb;               // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_North_Pipes;                   // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_North;                         // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_East_Pipes;                    // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_East;                          // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_Center_Pipes;                  // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_Center;                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Stair;                              // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Ground;                             // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Ceiling_Pipes;                      // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Ceiling;                            // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ST_Basement_Wall_West_Pipes;                    // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ST_Basement_C">();
	}
	static class ABP_ST_Basement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ST_Basement_C>();
	}
};
static_assert(alignof(ABP_ST_Basement_C) == 0x000008, "Wrong alignment on ABP_ST_Basement_C");
static_assert(sizeof(ABP_ST_Basement_C) == 0x000540, "Wrong size on ABP_ST_Basement_C");
static_assert(offsetof(ABP_ST_Basement_C, SnareBlocker1) == 0x0002A0, "Member 'ABP_ST_Basement_C::SnareBlocker1' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SnareBlocker) == 0x0002A8, "Member 'ABP_ST_Basement_C::SnareBlocker' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Trap_Blocker2) == 0x0002B0, "Member 'ABP_ST_Basement_C::Trap_Blocker2' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Trap_Blocker1) == 0x0002B8, "Member 'ABP_ST_Basement_C::Trap_Blocker1' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainALong_03) == 0x0002C0, "Member 'ABP_ST_Basement_C::SM_WAL_ChainALong_03' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainBMed_02) == 0x0002C8, "Member 'ABP_ST_Basement_C::SM_WAL_ChainBMed_02' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal21) == 0x0002D0, "Member 'ABP_ST_Basement_C::Decal21' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal22) == 0x0002D8, "Member 'ABP_ST_Basement_C::Decal22' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainBMed_01) == 0x0002E0, "Member 'ABP_ST_Basement_C::SM_WAL_ChainBMed_01' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainBLong_03) == 0x0002E8, "Member 'ABP_ST_Basement_C::SM_WAL_ChainBLong_03' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainAShort_01) == 0x0002F0, "Member 'ABP_ST_Basement_C::SM_WAL_ChainAShort_01' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainALong_02) == 0x0002F8, "Member 'ABP_ST_Basement_C::SM_WAL_ChainALong_02' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainBLong_02) == 0x000300, "Member 'ABP_ST_Basement_C::SM_WAL_ChainBLong_02' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainALong_01) == 0x000308, "Member 'ABP_ST_Basement_C::SM_WAL_ChainALong_01' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_WAL_ChainBLong_01) == 0x000310, "Member 'ABP_ST_Basement_C::SM_WAL_ChainBLong_01' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Chains) == 0x000318, "Member 'ABP_ST_Basement_C::Chains' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal10) == 0x000320, "Member 'ABP_ST_Basement_C::Decal10' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal) == 0x000328, "Member 'ABP_ST_Basement_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal2) == 0x000330, "Member 'ABP_ST_Basement_C::Decal2' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal3) == 0x000338, "Member 'ABP_ST_Basement_C::Decal3' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal4) == 0x000340, "Member 'ABP_ST_Basement_C::Decal4' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal6) == 0x000348, "Member 'ABP_ST_Basement_C::Decal6' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal11) == 0x000350, "Member 'ABP_ST_Basement_C::Decal11' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal12) == 0x000358, "Member 'ABP_ST_Basement_C::Decal12' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal13) == 0x000360, "Member 'ABP_ST_Basement_C::Decal13' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal14) == 0x000368, "Member 'ABP_ST_Basement_C::Decal14' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal16) == 0x000370, "Member 'ABP_ST_Basement_C::Decal16' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal18) == 0x000378, "Member 'ABP_ST_Basement_C::Decal18' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal19) == 0x000380, "Member 'ABP_ST_Basement_C::Decal19' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal30) == 0x000388, "Member 'ABP_ST_Basement_C::Decal30' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal23) == 0x000390, "Member 'ABP_ST_Basement_C::Decal23' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal25) == 0x000398, "Member 'ABP_ST_Basement_C::Decal25' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal26) == 0x0003A0, "Member 'ABP_ST_Basement_C::Decal26' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal27) == 0x0003A8, "Member 'ABP_ST_Basement_C::Decal27' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal28) == 0x0003B0, "Member 'ABP_ST_Basement_C::Decal28' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal29) == 0x0003B8, "Member 'ABP_ST_Basement_C::Decal29' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal41) == 0x0003C0, "Member 'ABP_ST_Basement_C::Decal41' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal33) == 0x0003C8, "Member 'ABP_ST_Basement_C::Decal33' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal32) == 0x0003D0, "Member 'ABP_ST_Basement_C::Decal32' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal31) == 0x0003D8, "Member 'ABP_ST_Basement_C::Decal31' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal39) == 0x0003E0, "Member 'ABP_ST_Basement_C::Decal39' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal40) == 0x0003E8, "Member 'ABP_ST_Basement_C::Decal40' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decals_Minus_Extras) == 0x0003F0, "Member 'ABP_ST_Basement_C::Decals_Minus_Extras' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Plane8) == 0x0003F8, "Member 'ABP_ST_Basement_C::Plane8' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Plane7) == 0x000400, "Member 'ABP_ST_Basement_C::Plane7' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Plane5) == 0x000408, "Member 'ABP_ST_Basement_C::Plane5' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal38) == 0x000410, "Member 'ABP_ST_Basement_C::Decal38' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal37) == 0x000418, "Member 'ABP_ST_Basement_C::Decal37' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal36) == 0x000420, "Member 'ABP_ST_Basement_C::Decal36' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal35) == 0x000428, "Member 'ABP_ST_Basement_C::Decal35' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal34) == 0x000430, "Member 'ABP_ST_Basement_C::Decal34' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Plane) == 0x000438, "Member 'ABP_ST_Basement_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Plane2) == 0x000440, "Member 'ABP_ST_Basement_C::Plane2' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal24) == 0x000448, "Member 'ABP_ST_Basement_C::Decal24' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal20) == 0x000450, "Member 'ABP_ST_Basement_C::Decal20' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal17) == 0x000458, "Member 'ABP_ST_Basement_C::Decal17' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal15) == 0x000460, "Member 'ABP_ST_Basement_C::Decal15' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal9) == 0x000468, "Member 'ABP_ST_Basement_C::Decal9' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal8) == 0x000470, "Member 'ABP_ST_Basement_C::Decal8' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal7) == 0x000478, "Member 'ABP_ST_Basement_C::Decal7' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal5) == 0x000480, "Member 'ABP_ST_Basement_C::Decal5' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decal1) == 0x000488, "Member 'ABP_ST_Basement_C::Decal1' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Decals_Minus_Essentials) == 0x000490, "Member 'ABP_ST_Basement_C::Decals_Minus_Essentials' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, Basement) == 0x000498, "Member 'ABP_ST_Basement_C::Basement' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Ceiling_SpiderWebs) == 0x0004A0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Ceiling_SpiderWebs' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_West_SpiderWebs) == 0x0004A8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_West_SpiderWebs' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_South_SpiderWebs) == 0x0004B0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_South_SpiderWebs' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_East_SpiderWebs) == 0x0004B8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_East_SpiderWebs' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_Center_SpiderWebs) == 0x0004C0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_Center_SpiderWebs' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_West) == 0x0004C8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_West' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_South_Pipes) == 0x0004D0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_South_Pipes' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_South) == 0x0004D8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_South' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_North_SpiderWeb) == 0x0004E0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_North_SpiderWeb' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_North_Pipes) == 0x0004E8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_North_Pipes' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_North) == 0x0004F0, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_North' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_East_Pipes) == 0x0004F8, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_East_Pipes' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_East) == 0x000500, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_East' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_Center_Pipes) == 0x000508, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_Center_Pipes' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_Center) == 0x000510, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_Center' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Stair) == 0x000518, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Stair' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Ground) == 0x000520, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Ground' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Ceiling_Pipes) == 0x000528, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Ceiling_Pipes' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Ceiling) == 0x000530, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Ceiling' has a wrong offset!");
static_assert(offsetof(ABP_ST_Basement_C, SM_ST_Basement_Wall_West_Pipes) == 0x000538, "Member 'ABP_ST_Basement_C::SM_ST_Basement_Wall_West_Pipes' has a wrong offset!");

}

