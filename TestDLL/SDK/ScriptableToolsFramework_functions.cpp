#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptableToolsFramework

#include "Basic.hpp"

#include "ScriptableToolsFramework_classes.hpp"
#include "ScriptableToolsFramework_parameters.hpp"


namespace SDK
{

// Function ScriptableToolsFramework.ScriptableInteractiveTool.AddLogMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// bool                                    bHighlighted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::AddLogMessage(const class FText& Message, bool bHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "AddLogMessage");

	Params::ScriptableInteractiveTool_AddLogMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.bHighlighted = bHighlighted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.AddPropertySetOfType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UScriptableInteractiveToolPropertySet>PropertySetType                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EToolsFrameworkOutcomePins              Outcome                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::AddPropertySetOfType(TSubclassOf<class UScriptableInteractiveToolPropertySet> PropertySetType, const class FString& Identifier, EToolsFrameworkOutcomePins* Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "AddPropertySetOfType");

	Params::ScriptableInteractiveTool_AddPropertySetOfType Parms{};

	Parms.PropertySetType = PropertySetType;
	Parms.Identifier = std::move(Identifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outcome != nullptr)
		*Outcome = Parms.Outcome;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.ClearUserMessages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHelpMessage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWarningMessage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::ClearUserMessages(bool bHelpMessage, bool bWarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "ClearUserMessages");

	Params::ScriptableInteractiveTool_ClearUserMessages Parms{};

	Parms.bHelpMessage = bHelpMessage;
	Parms.bWarningMessage = bWarningMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.CreateTRSGizmo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InitialTransform                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FScriptableToolGizmoOptions      GizmoOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EToolsFrameworkOutcomePins              Outcome                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::CreateTRSGizmo(const class FString& Identifier, const struct FTransform& InitialTransform, const struct FScriptableToolGizmoOptions& GizmoOptions, EToolsFrameworkOutcomePins* Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "CreateTRSGizmo");

	Params::ScriptableInteractiveTool_CreateTRSGizmo Parms{};

	Parms.Identifier = std::move(Identifier);
	Parms.InitialTransform = std::move(InitialTransform);
	Parms.GizmoOptions = std::move(GizmoOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outcome != nullptr)
		*Outcome = Parms.Outcome;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.DestroyTRSGizmo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EToolsFrameworkOutcomePins              Outcome                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::DestroyTRSGizmo(const class FString& Identifier, EToolsFrameworkOutcomePins* Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "DestroyTRSGizmo");

	Params::ScriptableInteractiveTool_DestroyTRSGizmo Parms{};

	Parms.Identifier = std::move(Identifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outcome != nullptr)
		*Outcome = Parms.Outcome;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.DisplayUserHelpMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::DisplayUserHelpMessage(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "DisplayUserHelpMessage");

	Params::ScriptableInteractiveTool_DisplayUserHelpMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.DisplayUserWarningMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::DisplayUserWarningMessage(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "DisplayUserWarningMessage");

	Params::ScriptableInteractiveTool_DisplayUserWarningMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.ForcePropertySetUpdateByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::ForcePropertySetUpdateByName(const class FString& Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "ForcePropertySetUpdateByName");

	Params::ScriptableInteractiveTool_ForcePropertySetUpdateByName Parms{};

	Parms.Identifier = std::move(Identifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.GetGizmoTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UScriptableInteractiveTool::GetGizmoTransform(const class FString& Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "GetGizmoTransform");

	Params::ScriptableInteractiveTool_GetGizmoTransform Parms{};

	Parms.Identifier = std::move(Identifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.GetToolWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UScriptableInteractiveTool::GetToolWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "GetToolWorld");

	Params::ScriptableInteractiveTool_GetToolWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnGizmoTransformChanged
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class FString                           GizmoIdentifier                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       NewTransform                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::OnGizmoTransformChanged(const class FString& GizmoIdentifier, const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnGizmoTransformChanged");

	Params::ScriptableInteractiveTool_OnGizmoTransformChanged Parms{};

	Parms.GizmoIdentifier = std::move(GizmoIdentifier);
	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptDrawHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// class UScriptableTool_HUDAPI*           DrawHUDAPI                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::OnScriptDrawHUD(class UScriptableTool_HUDAPI* DrawHUDAPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptDrawHUD");

	Params::ScriptableInteractiveTool_OnScriptDrawHUD Parms{};

	Parms.DrawHUDAPI = DrawHUDAPI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptRender
// (Event, Public, BlueprintEvent)
// Parameters:
// class UScriptableTool_RenderAPI*        RenderAPI                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::OnScriptRender(class UScriptableTool_RenderAPI* RenderAPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptRender");

	Params::ScriptableInteractiveTool_OnScriptRender Parms{};

	Parms.RenderAPI = RenderAPI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptSetup
// (Event, Public, BlueprintEvent)

void UScriptableInteractiveTool::OnScriptSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptShutdown
// (Event, Public, BlueprintEvent)
// Parameters:
// EToolShutdownType                       ShutdownType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::OnScriptShutdown(EToolShutdownType ShutdownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptShutdown");

	Params::ScriptableInteractiveTool_OnScriptShutdown Parms{};

	Parms.ShutdownType = ShutdownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::OnScriptTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptTick");

	Params::ScriptableInteractiveTool_OnScriptTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.RemovePropertySetByName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EToolsFrameworkOutcomePins              Outcome                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::RemovePropertySetByName(const class FString& Identifier, EToolsFrameworkOutcomePins* Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "RemovePropertySetByName");

	Params::ScriptableInteractiveTool_RemovePropertySetByName Parms{};

	Parms.Identifier = std::move(Identifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outcome != nullptr)
		*Outcome = Parms.Outcome;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.RequestToolShutdown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAccept                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowUserPopupMessage                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             UserMessage                                            (Parm, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::RequestToolShutdown(bool bAccept, bool bShowUserPopupMessage, const class FText& UserMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "RequestToolShutdown");

	Params::ScriptableInteractiveTool_RequestToolShutdown Parms{};

	Parms.bAccept = bAccept;
	Parms.bShowUserPopupMessage = bShowUserPopupMessage;
	Parms.UserMessage = std::move(UserMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.RestorePropertySetSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::RestorePropertySetSettings(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& SaveKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "RestorePropertySetSettings");

	Params::ScriptableInteractiveTool_RestorePropertySetSettings Parms{};

	Parms.PropertySet = PropertySet;
	Parms.SaveKey = std::move(SaveKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.SavePropertySetSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveKey                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::SavePropertySetSettings(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& SaveKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "SavePropertySetSettings");

	Params::ScriptableInteractiveTool_SavePropertySetSettings Parms{};

	Parms.PropertySet = PropertySet;
	Parms.SaveKey = std::move(SaveKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetGizmoTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       NewTransform                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUndoable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::SetGizmoTransform(const class FString& Identifier, const struct FTransform& NewTransform, bool bUndoable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "SetGizmoTransform");

	Params::ScriptableInteractiveTool_SetGizmoTransform Parms{};

	Parms.Identifier = std::move(Identifier);
	Parms.NewTransform = std::move(NewTransform);
	Parms.bUndoable = bUndoable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetGizmoVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::SetGizmoVisible(const class FString& Identifier, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "SetGizmoVisible");

	Params::ScriptableInteractiveTool_SetGizmoVisible Parms{};

	Parms.Identifier = std::move(Identifier);
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.SetPropertySetVisibleByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Identifier                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptableInteractiveTool::SetPropertySetVisibleByName(const class FString& Identifier, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "SetPropertySetVisibleByName");

	Params::ScriptableInteractiveTool_SetPropertySetVisibleByName Parms{};

	Parms.Identifier = std::move(Identifier);
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchBoolProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, bool bNewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchBoolProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, bool bNewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchBoolProperty");

	Params::ScriptableInteractiveTool_WatchBoolProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchEnumProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, uint8 NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchEnumProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, uint8 NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchEnumProperty");

	Params::ScriptableInteractiveTool_WatchEnumProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchFloatProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, double NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchFloatProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, double NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchFloatProperty");

	Params::ScriptableInteractiveTool_WatchFloatProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchIntProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, int32 NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchIntProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, int32 NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchIntProperty");

	Params::ScriptableInteractiveTool_WatchIntProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchNameProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class FName NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchNameProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class FName NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchNameProperty");

	Params::ScriptableInteractiveTool_WatchNameProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchObjectProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class UObject* NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchObjectProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, class UObject* NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchObjectProperty");

	Params::ScriptableInteractiveTool_WatchObjectProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchProperty");

	Params::ScriptableInteractiveTool_WatchProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.WatchStringProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UScriptableInteractiveToolPropertySet*PropertySet                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const class FString& NewValue)>OnModified                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveToolPropertySet*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveToolPropertySet* UScriptableInteractiveTool::WatchStringProperty(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const TDelegate<void(class UScriptableInteractiveToolPropertySet* PropertySet, const class FString& PropertyName, const class FString& NewValue)>& OnModified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "WatchStringProperty");

	Params::ScriptableInteractiveTool_WatchStringProperty Parms{};

	Parms.PropertySet = PropertySet;
	Parms.PropertyName = std::move(PropertyName);
	Parms.OnModified = OnModified;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveTool.OnScriptCanAccept
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableInteractiveTool::OnScriptCanAccept() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveTool", "OnScriptCanAccept");

	Params::ScriptableInteractiveTool_OnScriptCanAccept Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.GetActiveModifiers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptableToolModifierStates    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FScriptableToolModifierStates UScriptableClickDragTool::GetActiveModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "GetActiveModifiers");

	Params::ScriptableClickDragTool_GetActiveModifiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragBegin
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  StartPosition                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableClickDragTool::OnDragBegin(const struct FInputDeviceRay& StartPosition, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnDragBegin");

	Params::ScriptableClickDragTool_OnDragBegin Parms{};

	Parms.StartPosition = std::move(StartPosition);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragEnd
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  EndPosition                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableClickDragTool::OnDragEnd(const struct FInputDeviceRay& EndPosition, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnDragEnd");

	Params::ScriptableClickDragTool_OnDragEnd Parms{};

	Parms.EndPosition = std::move(EndPosition);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragSequenceCancelled
// (Native, Event, Public, BlueprintEvent)

void UScriptableClickDragTool::OnDragSequenceCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnDragSequenceCancelled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnDragUpdatePosition
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  NewPosition                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableClickDragTool::OnDragUpdatePosition(const struct FInputDeviceRay& NewPosition, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnDragUpdatePosition");

	Params::ScriptableClickDragTool_OnDragUpdatePosition Parms{};

	Parms.NewPosition = std::move(NewPosition);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverBegin
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableClickDragTool::OnHoverBegin(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnHoverBegin");

	Params::ScriptableClickDragTool_OnHoverBegin Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverEnd
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableClickDragTool::OnHoverEnd(const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnHoverEnd");

	Params::ScriptableClickDragTool_OnHoverEnd Parms{};

	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverHitTest
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableClickDragTool::OnHoverHitTest(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnHoverHitTest");

	Params::ScriptableClickDragTool_OnHoverHitTest Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.OnHoverUpdate
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::OnHoverUpdate(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "OnHoverUpdate");

	Params::ScriptableClickDragTool_OnHoverUpdate Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.TestIfCanBeginClickDrag
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  ClickPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableClickDragTool::TestIfCanBeginClickDrag(const struct FInputDeviceRay& ClickPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "TestIfCanBeginClickDrag");

	Params::ScriptableClickDragTool_TestIfCanBeginClickDrag Parms{};

	Parms.ClickPos = std::move(ClickPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.InActiveClickDrag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::InActiveClickDrag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "InActiveClickDrag");

	Params::ScriptableClickDragTool_InActiveClickDrag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.InActiveHover
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::InActiveHover() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "InActiveHover");

	Params::ScriptableClickDragTool_InActiveHover Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.IsAltDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::IsAltDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "IsAltDown");

	Params::ScriptableClickDragTool_IsAltDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.IsCtrlDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::IsCtrlDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "IsCtrlDown");

	Params::ScriptableClickDragTool_IsCtrlDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableClickDragTool.IsShiftDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableClickDragTool::IsShiftDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableClickDragTool", "IsShiftDown");

	Params::ScriptableClickDragTool_IsShiftDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableTool_RenderAPI.DrawLine
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Start                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DepthBias                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDepthTested                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableTool_RenderAPI*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableTool_RenderAPI* UScriptableTool_RenderAPI::DrawLine(const struct FVector& Start, const struct FVector& End, const struct FLinearColor& Color, float Thickness, float DepthBias, bool bDepthTested)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableTool_RenderAPI", "DrawLine");

	Params::ScriptableTool_RenderAPI_DrawLine Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.Color = std::move(Color);
	Parms.Thickness = Thickness;
	Parms.DepthBias = DepthBias;
	Parms.bDepthTested = bDepthTested;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableTool_RenderAPI.DrawRectWidthHeightXY
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LineThickness                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DepthBias                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDepthTested                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCentered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableTool_RenderAPI*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableTool_RenderAPI* UScriptableTool_RenderAPI::DrawRectWidthHeightXY(const struct FTransform& Transform, double Width, double Height, const struct FLinearColor& Color, float LineThickness, float DepthBias, bool bDepthTested, bool bCentered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableTool_RenderAPI", "DrawRectWidthHeightXY");

	Params::ScriptableTool_RenderAPI_DrawRectWidthHeightXY Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Width = Width;
	Parms.Height = Height;
	Parms.Color = std::move(Color);
	Parms.LineThickness = LineThickness;
	Parms.DepthBias = DepthBias;
	Parms.bDepthTested = bDepthTested;
	Parms.bCentered = bCentered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.DrawTextArrayAtLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Strings                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCentered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShiftRowsY                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableTool_HUDAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableTool_HUDAPI* UScriptableTool_HUDAPI::DrawTextArrayAtLocation(const struct FVector& Location, const TArray<class FString>& Strings, const struct FLinearColor& Color, bool bCentered, float ShiftRowsY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableTool_HUDAPI", "DrawTextArrayAtLocation");

	Params::ScriptableTool_HUDAPI_DrawTextArrayAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Strings = std::move(Strings);
	Parms.Color = std::move(Color);
	Parms.bCentered = bCentered;
	Parms.ShiftRowsY = ShiftRowsY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.DrawTextAtLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCentered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShiftRowsY                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableTool_HUDAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableTool_HUDAPI* UScriptableTool_HUDAPI::DrawTextAtLocation(const struct FVector& Location, const class FString& String, const struct FLinearColor& Color, bool bCentered, float ShiftRowsY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableTool_HUDAPI", "DrawTextAtLocation");

	Params::ScriptableTool_HUDAPI_DrawTextAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.String = std::move(String);
	Parms.Color = std::move(Color);
	Parms.bCentered = bCentered;
	Parms.ShiftRowsY = ShiftRowsY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableTool_HUDAPI.GetCanvasLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CanvasLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableTool_HUDAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableTool_HUDAPI* UScriptableTool_HUDAPI::GetCanvasLocation(const struct FVector& Location, struct FVector2D* CanvasLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableTool_HUDAPI", "GetCanvasLocation");

	Params::ScriptableTool_HUDAPI_GetCanvasLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CanvasLocation != nullptr)
		*CanvasLocation = std::move(Parms.CanvasLocation);

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableInteractiveToolPropertySet.GetOwningTool
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// EToolsFrameworkOutcomePins              Outcome                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptableInteractiveTool*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScriptableInteractiveTool* UScriptableInteractiveToolPropertySet::GetOwningTool(EToolsFrameworkOutcomePins* Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableInteractiveToolPropertySet", "GetOwningTool");

	Params::ScriptableInteractiveToolPropertySet_GetOwningTool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Outcome != nullptr)
		*Outcome = Parms.Outcome;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// double                                  HitDepth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OptionalHitObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableToolsUtilityLibrary::MakeInputRayHit(double HitDepth, class UObject* OptionalHitObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ScriptableToolsUtilityLibrary", "MakeInputRayHit");

	Params::ScriptableToolsUtilityLibrary_MakeInputRayHit Parms{};

	Parms.HitDepth = HitDepth;
	Parms.OptionalHitObject = OptionalHitObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit_MaxDepth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableToolsUtilityLibrary::MakeInputRayHit_MaxDepth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ScriptableToolsUtilityLibrary", "MakeInputRayHit_MaxDepth");

	Params::ScriptableToolsUtilityLibrary_MakeInputRayHit_MaxDepth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableToolsUtilityLibrary.MakeInputRayHit_Miss
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableToolsUtilityLibrary::MakeInputRayHit_Miss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ScriptableToolsUtilityLibrary", "MakeInputRayHit_Miss");

	Params::ScriptableToolsUtilityLibrary_MakeInputRayHit_Miss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.GetActiveModifiers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptableToolModifierStates    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FScriptableToolModifierStates UScriptableSingleClickTool::GetActiveModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "GetActiveModifiers");

	Params::ScriptableSingleClickTool_GetActiveModifiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHitByClick
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  ClickPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableSingleClickTool::OnHitByClick(const struct FInputDeviceRay& ClickPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "OnHitByClick");

	Params::ScriptableSingleClickTool_OnHitByClick Parms{};

	Parms.ClickPos = std::move(ClickPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverBegin
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableSingleClickTool::OnHoverBegin(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "OnHoverBegin");

	Params::ScriptableSingleClickTool_OnHoverBegin Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverEnd
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UScriptableSingleClickTool::OnHoverEnd(const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "OnHoverEnd");

	Params::ScriptableSingleClickTool_OnHoverEnd Parms{};

	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverHitTest
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableSingleClickTool::OnHoverHitTest(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "OnHoverHitTest");

	Params::ScriptableSingleClickTool_OnHoverHitTest Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.OnHoverUpdate
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  HoverPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableSingleClickTool::OnHoverUpdate(const struct FInputDeviceRay& HoverPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "OnHoverUpdate");

	Params::ScriptableSingleClickTool_OnHoverUpdate Parms{};

	Parms.HoverPos = std::move(HoverPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.TestIfHitByClick
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDeviceRay                  ClickPos                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FScriptableToolModifierStates    Modifiers                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FInputRayHit                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInputRayHit UScriptableSingleClickTool::TestIfHitByClick(const struct FInputDeviceRay& ClickPos, const struct FScriptableToolModifierStates& Modifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "TestIfHitByClick");

	Params::ScriptableSingleClickTool_TestIfHitByClick Parms{};

	Parms.ClickPos = std::move(ClickPos);
	Parms.Modifiers = std::move(Modifiers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.InActiveHover
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableSingleClickTool::InActiveHover() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "InActiveHover");

	Params::ScriptableSingleClickTool_InActiveHover Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsAltDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableSingleClickTool::IsAltDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "IsAltDown");

	Params::ScriptableSingleClickTool_IsAltDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsCtrlDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableSingleClickTool::IsCtrlDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "IsCtrlDown");

	Params::ScriptableSingleClickTool_IsCtrlDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScriptableToolsFramework.ScriptableSingleClickTool.IsShiftDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScriptableSingleClickTool::IsShiftDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptableSingleClickTool", "IsShiftDown");

	Params::ScriptableSingleClickTool_IsShiftDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

