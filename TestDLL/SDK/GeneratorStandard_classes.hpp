#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeneratorStandard

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GeneratorStandard.GeneratorStandard_C
// 0x0648 (0x0D60 - 0x0718)
class AGeneratorStandard_C final : public AGenerator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0718(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Collision_TrapBlocker2;                            // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Collision_TrapBlocker1;                            // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SpikesAdditional;                               // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SpikesSeparate;                                 // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SpikesTogether;                                 // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SpikesSmaller;                                  // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_3GensBlocked;                                   // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ThreeGens;                                         // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGMAdaptiveShadowMapSourceComponent*    GMAdaptiveShadowMapSource1;                        // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULimitGeneratorRegressionEventComponent* LimitGeneratorRegressionEvent;                     // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_GeneratorBlocker;                               // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapGeneratorInteraction_C*            TrapGeneratorInteraction_Back;                     // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapGeneratorInteraction_C*            TrapGeneratorInteraction_Right;                    // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapGeneratorInteraction_C*            TrapGeneratorInteraction_Left;                     // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTrapGeneratorInteraction_C*            TrapGeneratorInteraction_Front;                    // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialHelper*                        MaterialHelper;                                    // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Generator_Activation_Bubble;                    // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Generator_Activation_Burst;                     // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Generator_Base_Activation;                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Generator_Idle_Lights;                          // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Generator_Top_Activation;                       // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_LampPole;                                       // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Generator_Fail_Center;                           // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Flood_light_Atlanta;                               // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_MK_InfectedObject_Generator;                     // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Entity;                                            // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Generator_Hit_Sparks_Intensified;                // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Generator_IntensifiedDamage;                     // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_sparkEmitterHit;                                 // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FocalPoint;                                        // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_GeneratorOutline;                               // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BigThreeHelper;                                    // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_generatorCLONE;                                 // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDOutlineComponent*                   DBDOutline;                                        // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Audio_Generator;                                // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_RushFailSparks;                                  // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Flood_light;                                       // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDSkeletalMeshComponentBudgeted*      SkeletalMeshComponent;                             // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ActivatedLight3Direction;                          // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ActivatedLight4Direction;                          // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ActivatedLight2Direction;                          // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ActivatedLight1Direction;                          // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ActivatedLightDirections;                          // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SL_Generator_LF_on;                                // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGMAdaptiveShadowMapSourceComponent*    GMAdaptiveShadowMapSource;                         // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionGenerato02;                               // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USleepingSkinnedMeshRegisterer*         SleepingSkinnedMeshRegisterer;                     // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SD_Teleport_Generator_Indicator;                 // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorOutlineUpdateStrategy*        GeneratorOutlineUpdateStrategy;                    // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstallBrandNewPart_C*                 InstallBrandNewPart_Right;                         // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         InstallBrandNewPartInterruption_Front;             // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         InstallBrandNewPartInterruption_Back;              // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         InstallBrandNewPartInterruption_Right;             // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         InstallBrandNewPartInterruption_Left;              // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstallBrandNewPart_C*                 InstallBrandNewPart_Front;                         // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstallBrandNewPart_C*                 InstallBrandNewPart_Back;                          // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstallBrandNewPart_C*                 InstallBrandNewPart_Left;                          // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_BackToolkit;           // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_Back;                  // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_RightToolkit;          // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_Right;                 // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_LeftToolkit;           // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_Left;                  // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_FrontToolkit;          // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepairInterruption_C*         GeneratorRepairInterruption_Front;                 // 0x0928(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          MapActorPrimitive;                                 // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionGenerato01;                               // 0x0938(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractorZone_Back;                               // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractorZone_Right;                              // 0x0948(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractorZone_Left;                               // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractorZone_Front;                              // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneRoot;                                         // 0x0960(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   DamageCharge;                                      // 0x0968(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMapActorComponent*                     MapActor;                                          // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChargeableComponent*                   GeneratorCharge;                                   // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorDamage_C*                     GeneratorDamage_Back;                              // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorToolkitRepair_C*              GeneratorToolkitRepair_Back;                       // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepair_C*                     GeneratorRepair_Back;                              // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            Interactor_Back;                                   // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorDamage_C*                     GeneratorDamage_Right;                             // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorToolkitRepair_C*              GeneratorToolkitRepair_Right;                      // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepair_C*                     GeneratorRepair_Right;                             // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            Interactor_Right;                                  // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorDamage_C*                     GeneratorDamage_Left;                              // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorToolkitRepair_C*              GeneratorToolkitRepair_Left;                       // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepair_C*                     GeneratorRepair_Left;                              // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            Interactor_Left;                                   // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorDamage_C*                     GeneratorDamage_Front;                             // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorToolkitRepair_C*              GeneratorToolkitRepair_Front;                      // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGeneratorRepair_C*                     GeneratorRepair_Front;                             // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractor*                            Interactor_Front;                                  // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Spikes_OnGround_NewTrack_0_02BE006F4B4F1E803D83FD8B76744BA1; // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Spikes_OnGround__Direction_02BE006F4B4F1E803D83FD8B76744BA1; // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A05[0x3];                                      // 0x0A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Spikes_OnGround;                                   // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_2_0C99000C4EFD2624241D7B81D68B28D1; // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_1_0C99000C4EFD2624241D7B81D68B28D1; // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_0C99000C4EFD2624241D7B81D68B28D1; // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_0C99000C4EFD2624241D7B81D68B28D1; // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1D[0x3];                                      // 0x0A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_3_NewTrack_0_20DE75464C704F76D737C099761CDE1F; // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_3__Direction_20DE75464C704F76D737C099761CDE1F; // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2D[0x3];                                      // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_3;                                        // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         SurvivorRepair_ReverseSpikes_NewTrack_0_8BDBD2354B8156AAF2DC3BB33E80F5DC; // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SurvivorRepair_ReverseSpikes__Direction_8BDBD2354B8156AAF2DC3BB33E80F5DC; // 0x0A3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3D[0x3];                                      // 0x0A3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SurvivorRepair_ReverseSpikes;                      // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Regression_Enter_Exit_NewTrack_1_8F693B4C403D7DCEE0946A87B61AA68F; // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regression_Enter_Exit_NewTrack_0_8F693B4C403D7DCEE0946A87B61AA68F; // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regression_Enter_Exit_Main_Additional_Smaller_8F693B4C403D7DCEE0946A87B61AA68F; // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Regression_Enter_Exit__Direction_8F693B4C403D7DCEE0946A87B61AA68F; // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A55[0x3];                                      // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Exit;                                              // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Regression_Update_NewTrack_1_3EDE0F5B4E88730BDCD4B286E161DAE0; // 0x0A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regression_Update_NewTrack_0_3EDE0F5B4E88730BDCD4B286E161DAE0; // 0x0A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Regression_Update__Direction_3EDE0F5B4E88730BDCD4B286E161DAE0; // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Regression_Update;                                 // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_NewTrack_0_78B96E0448F35C72D0AD66B42A9F6C10; // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Delay__Direction_78B96E0448F35C72D0AD66B42A9F6C10; // 0x0A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7D[0x3];                                      // 0x0A7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Delay;                                             // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Regression_NewTrack_2_DC5A64E649D1F601B6D879A74F96EEB3; // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Regression_NewTrack_1_DC5A64E649D1F601B6D879A74F96EEB3; // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Regression_NewTrack_0_DC5A64E649D1F601B6D879A74F96EEB3; // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Final_Regression__Direction_DC5A64E649D1F601B6D879A74F96EEB3; // 0x0A94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A95[0x3];                                      // 0x0A95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Final_Regression;                                  // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TML_Outline_NewTrack_0_2166C1704CD71C1B7E08C3B26FEFBB9A; // 0x0AA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_Outline__Direction_2166C1704CD71C1B7E08C3B26FEFBB9A; // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x7];                                      // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_Outline;                                       // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TML_FailureSparks_GreenTubeEmissive_6E5137414A6EA155769A0DA2FC6E3FBD; // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TML_FailureSparks_GreenTubeIntensity_6E5137414A6EA155769A0DA2FC6E3FBD; // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TML_FailureSparks__Direction_6E5137414A6EA155769A0DA2FC6E3FBD; // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x7];                                      // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TML_FailureSparks;                                 // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Skill_Check_Failure_Flood_Lights_Timeline_Intensity_8E8E164D4DB887CC86D778B2BD6EDFFC; // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Skill_Check_Failure_Flood_Lights_Timeline__Direction_8E8E164D4DB887CC86D778B2BD6EDFFC; // 0x0ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADD[0x3];                                      // 0x0ADD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Skill_Check_Failure_Flood_Lights_Timeline;         // 0x0AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartTimer;                                        // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OutlineUtility;                                    // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Obstructed1;                                       // 0x0B00(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Obstructed2;                                       // 0x0B01(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Obstructed3;                                       // 0x0B02(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Obstructed4;                                       // 0x0B03(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Rushing;                                           // 0x0B04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B05[0x3];                                      // 0x0B05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ToolkitBonus;                                      // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket1;                                       // 0x0B10(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket2;                                       // 0x0B1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket3;                                       // 0x0B28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket4;                                       // 0x0B34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket5;                                       // 0x0B40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket6;                                       // 0x0B4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket7;                                       // 0x0B58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket8;                                       // 0x0B64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket9;                                       // 0x0B70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket10;                                      // 0x0B7C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket11;                                      // 0x0B88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket12;                                      // 0x0B94(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket13;                                      // 0x0BA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket14;                                      // 0x0BAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket15;                                      // 0x0BB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket16;                                      // 0x0BC4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFailed;                                          // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GeneratorFailSparks_C*              GeneratorFailSparks;                               // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        PercentCompleteAtAutoComplete;                     // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ADBDPlayer*>                     SurvivorsReactingToEntity;                         // 0x0BE8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   BeamSocket01;                                      // 0x0BF8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket02;                                      // 0x0C04(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket03;                                      // 0x0C10(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket04;                                      // 0x0C1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket05;                                      // 0x0C28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket06;                                      // 0x0C34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket07;                                      // 0x0C40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeamSocket08;                                      // 0x0C4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Joint_Light_1;                                     // 0x0C58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Joint_Light_2;                                     // 0x0C64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Joint_Light_3;                                     // 0x0C70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Joint_Light_4;                                     // 0x0C7C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_GeneratorFailCenter;                            // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   CenterSocket;                                      // 0x0C90(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9C[0x4];                                      // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Actor_SparksAlongWires;                            // 0x0CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Lamp_Material;                                     // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Green_Tube_Material;                               // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Light_Distance_01;                             // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Light_Distance_02;                             // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Light_Distance_03;                             // 0x0CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Light_Distance_04;                             // 0x0CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VFX_Light_Distance_Default;                        // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GeneratorFailSparks_C*              GeneratorFailVFX_Sparks;                           // 0x0CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 GeneratorFailVFX_SparksPole;                       // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SL_Generator_LF_LightIntensity;                    // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SL_Generator_LF_FullLightIntensity;                // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_SpikesMain;                                    // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_SpikesAdditional;                              // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasExitedRegressionZone;                           // 0x0D10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D11[0x7];                                      // 0x0D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMI_SpikesSeparate;                                // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Growth;                                     // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Regression_Level;                              // 0x0D28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2C[0x4];                                      // 0x0D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UpwardSmokeVelocity;                               // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentGrowth;                                     // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtFinalRegression;                               // 0x0D40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTimerElapsed;                                    // 0x0D41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D42[0x6];                                      // 0x0D42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMI_SpikesSmaller;                                 // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_SmokeDecal;                                    // 0x0D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRepairingGen;                                    // 0x0D58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBlockedByEntityCosmetic;                         // 0x0D59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInGracePeriod;                                   // 0x0D5A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDamageIntensified;                               // 0x0D5B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGenRepaired;                                     // 0x0D5C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Activate_Damage_Particles(class UParticleSystemComponent* Particles, class ADBDPlayer* Repairer);
	void AddHidingPanel(class UInteractor* Interactor);
	void BndEvt__GeneratorCharge_K2Node_ComponentBoundEvent_209_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt__GeneratorCharge_K2Node_ComponentBoundEvent_297_ChargeableSkillCheckResponse__DelegateSignature(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool HadInput, ESkillCheckCustomType Type, float ChargeChange);
	void BndEvt__GeneratorStandard__generatorDamageComponent_K2Node_ComponentBoundEvent_5_CosmeticGeneratorDamagedDelegate__DelegateSignature(bool Intense);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_0_CosmeticEvent__DelegateSignature(int32 CurrentRegressionLevel);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_0_OnBlockingStatusChanged__DelegateSignature(int32 CurrentRegressionLevel, bool Blocked);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_10_CosmeticEvent__DelegateSignature(int32 CurrentRegressionLevel);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_6_CosmeticEvent__DelegateSignature(int32 CurrentRegressionLevel);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_7_CosmeticEvent__DelegateSignature(int32 CurrentRegressionLevel, bool SurvivorInteracting);
	void BndEvt__GeneratorStandard_LimitGeneratorRegressionEvent_K2Node_ComponentBoundEvent_8_CosmeticEvent__DelegateSignature(int32 CurrentRegressionLevel);
	void CheckInteractorObstruction();
	void CheckToolkitShouldContinue(class ADBDPlayer* Player, class UInteractionDefinition* InteractionDefinition, bool* ShouldContinue);
	void Delay__FinishedFunc();
	void Delay__UpdateFunc();
	void ExecuteUbergraph_GeneratorStandard(int32 EntryPoint);
	void FillActivatedTopLightsTransformMap();
	void Final_Regression__FinishedFunc();
	void Final_Regression__UpdateFunc();
	void FX_Generator_HideOutline();
	void FX_Generator_ShowOutline();
	void FX_OnDamageEnd();
	void FX_OnDamageStart(bool Intensified);
	void GenRepaired_HideSpikes();
	void GetRandomBeamSocketTransform(struct FTransform* OutVector);
	void HandleParticleProximity();
	void InitializeDynamicMat();
	void ModifyChargePercent(class UChargeableInteractionDefinition* Definition, class ADBDPlayer* Player, double InitialCharge, double* Charge_Percent);
	void Multicast_BlockGenerator(const TArray<class ADBDPlayer*>& InteractingPlayers);
	void Multicast_SetRepairInteractionObstructed(class UGeneratorRepairInteraction* RepairInteraction, bool Obstructed);
	void NotifyRepairFinish(const class ADBDPlayer* Player, class UInteractor* Interactor);
	void NotifyRepairStart(const class ADBDPlayer* Player);
	void On_Is_Damaged_Changed(class AGenerator* Generator, class ADBDPlayer* Player);
	void On_Trigger_Smoke_Burst();
	void OnAuthorityChargeApplied(float IndividualChargeAmount, float TotalChargeAmount, class AActor* ChargeInstigator, bool WasCoop, float DeltaTime);
	void OnBlockingStatusChanged(const bool Param_IsBlocked);
	void OnCaptureProbeSecondState();
	void OnEscapeDoorActivated();
	void OnLevelReadyToPlay();
	void OnMontageEnded_Event(const struct FAnimationMontageDescriptor& AnimMontageID, bool Interrupted);
	void OnPreWarmASMCache();
	void OnRep_AddPanel1();
	void OnRep_AddPanel2();
	void OnRep_AddPanel3();
	void OnRep_AddPanel4();
	void OnRepairedBP(const bool ShowGeneratorCloneLoudNoise, const bool IsAutoCompleted);
	void OnResetGenerator();
	void OnUpdateChargeProgress(float NewPercentComplete);
	void Play_Spikes_OnGround();
	void Play_SurvivorRepair_ReverseSpikes();
	void PlayExplosionProtectionMontage(class ACharacter* Player);
	void PlayFailSparksFX(class ADBDPlayer* InteractingPlayer, bool Explode);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Exit__FinishedFunc();
	void Exit__UpdateFunc();
	void Regression_Update__Audio_Appear_Start__EventFunc();
	void Regression_Update__Audio_Appear_Stop__EventFunc();
	void Regression_Update__Audio_Disappear_Start__EventFunc();
	void Regression_Update__Audio_Disappear_Stop__EventFunc();
	void Regression_Update__FinishedFunc();
	void Regression_Update__UpdateFunc();
	void Reverse_Spikes_OnGround();
	void Reverse_SurvivorRepair_ReverseSpikes();
	void SetComplete(bool Complete);
	void SetTo0_SurvivorRepair_ReverseSpikes();
	void Skill_Check_Failure_Flood_Lights();
	void Skill_Check_Failure_Flood_Lights_Timeline__FinishedFunc();
	void Skill_Check_Failure_Flood_Lights_Timeline__UpdateFunc();
	void SkillCheckFailureLoudNoise(class ADBDPlayer* InstigatingPlayer);
	void SkillCheckResponseAesthetic(bool Success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, double ChargeChange);
	void SpawnBloodEffectToSocket(const class FName Param_Name);
	void Spikes_OnGround__FinishedFunc();
	void Spikes_OnGround__UpdateFunc();
	void Stop_FinalRegressionEvent();
	void SurvivorRepair_ReverseSpikes__FinishedFunc();
	void SurvivorRepair_ReverseSpikes__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_3__FinishedFunc();
	void Timeline_3__UpdateFunc();
	void TML_FailureSparks__Beam_Event__EventFunc();
	void TML_FailureSparks__Emit_Sparks__EventFunc();
	void TML_FailureSparks__FinishedFunc();
	void TML_FailureSparks__UpdateFunc();
	void TML_Outline__FinishedFunc();
	void TML_Outline__UpdateFunc();
	void TriggerSmokeBurst(class UMaterialInstanceDynamic* DMI_Spikes_01, class UMaterialInstanceDynamic* DMI_Spikes_02, class UMaterialInstanceDynamic* DMI_Spikes_03);
	void Update_Particle_On_Failed();
	void UserConstructionScript();
	void VFXClampTopActivationSingleLight(float Distance, class FName ParameterName);

	void ActivateTeleportGeneratorIndicator(bool Activate) const;
	float GetChargePercentComplete() const;
	struct FVector GetDefaultSparkLocation() const;
	struct FRotator GetDefaultSparkRotation() const;
	struct FVector GetFocalPointPosition(const class ADBDPlayer* Player, const class UInteractionDefinition* Definition) const;
	void GetGameInstance(class UDBDGameInstance** AsDBDGame_Instance) const;
	class UAkComponent* GetGeneratorAudioComponent() const;
	class UChargeableComponent* GetGeneratorChargeComponent() const;
	void GetInfectedDecals(TArray<class UDecalComponent*>* InfectedDecals) const;
	void GetInfectedParticles(TArray<class UParticleSystemComponent*>* InfectedParticleArray) const;
	int32 GetInteractingCount() const;
	class UMapActorComponent* GetMapActorComponent() const;
	void GetNewPercentComplete(double* Return) const;
	float GetRepairPercentComplete() const;
	class USkeletalMeshComponent* GetSkeletalMesh() const;
	void GetSparkLocationOnRepairer(class ADBDPlayer* Player, struct FVector* Location, struct FRotator* Rotation) const;
	void Is_Player_Repairing(class ADBDPlayer* Player, bool* Is_Repairing) const;
	bool IsBeingInteractedWith() const;
	bool IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const;
	void UpdatePistonSounds(double NewPercentComplete) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GeneratorStandard_C">();
	}
	static class AGeneratorStandard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGeneratorStandard_C>();
	}
};
static_assert(alignof(AGeneratorStandard_C) == 0x000008, "Wrong alignment on AGeneratorStandard_C");
static_assert(sizeof(AGeneratorStandard_C) == 0x000D60, "Wrong size on AGeneratorStandard_C");
static_assert(offsetof(AGeneratorStandard_C, UberGraphFrame) == 0x000718, "Member 'AGeneratorStandard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Collision_TrapBlocker2) == 0x000720, "Member 'AGeneratorStandard_C::Collision_TrapBlocker2' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Collision_TrapBlocker1) == 0x000728, "Member 'AGeneratorStandard_C::Collision_TrapBlocker1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Decal) == 0x000730, "Member 'AGeneratorStandard_C::Decal' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_SpikesAdditional) == 0x000738, "Member 'AGeneratorStandard_C::SM_SpikesAdditional' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_SpikesSeparate) == 0x000740, "Member 'AGeneratorStandard_C::SM_SpikesSeparate' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_SpikesTogether) == 0x000748, "Member 'AGeneratorStandard_C::SM_SpikesTogether' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_SpikesSmaller) == 0x000750, "Member 'AGeneratorStandard_C::SM_SpikesSmaller' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_3GensBlocked) == 0x000758, "Member 'AGeneratorStandard_C::NS_3GensBlocked' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ThreeGens) == 0x000760, "Member 'AGeneratorStandard_C::ThreeGens' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GMAdaptiveShadowMapSource1) == 0x000768, "Member 'AGeneratorStandard_C::GMAdaptiveShadowMapSource1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, LimitGeneratorRegressionEvent) == 0x000770, "Member 'AGeneratorStandard_C::LimitGeneratorRegressionEvent' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_GeneratorBlocker) == 0x000778, "Member 'AGeneratorStandard_C::NS_GeneratorBlocker' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TrapGeneratorInteraction_Back) == 0x000780, "Member 'AGeneratorStandard_C::TrapGeneratorInteraction_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TrapGeneratorInteraction_Right) == 0x000788, "Member 'AGeneratorStandard_C::TrapGeneratorInteraction_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TrapGeneratorInteraction_Left) == 0x000790, "Member 'AGeneratorStandard_C::TrapGeneratorInteraction_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TrapGeneratorInteraction_Front) == 0x000798, "Member 'AGeneratorStandard_C::TrapGeneratorInteraction_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, MaterialHelper) == 0x0007A0, "Member 'AGeneratorStandard_C::MaterialHelper' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_Generator_Activation_Bubble) == 0x0007A8, "Member 'AGeneratorStandard_C::NS_Generator_Activation_Bubble' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_Generator_Activation_Burst) == 0x0007B0, "Member 'AGeneratorStandard_C::NS_Generator_Activation_Burst' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_Generator_Base_Activation) == 0x0007B8, "Member 'AGeneratorStandard_C::NS_Generator_Base_Activation' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_Generator_Idle_Lights) == 0x0007C0, "Member 'AGeneratorStandard_C::NS_Generator_Idle_Lights' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, NS_Generator_Top_Activation) == 0x0007C8, "Member 'AGeneratorStandard_C::NS_Generator_Top_Activation' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_LampPole) == 0x0007D0, "Member 'AGeneratorStandard_C::SM_LampPole' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_Generator_Fail_Center) == 0x0007D8, "Member 'AGeneratorStandard_C::P_Generator_Fail_Center' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Flood_light_Atlanta) == 0x0007E0, "Member 'AGeneratorStandard_C::Flood_light_Atlanta' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_MK_InfectedObject_Generator) == 0x0007E8, "Member 'AGeneratorStandard_C::P_MK_InfectedObject_Generator' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Entity) == 0x0007F0, "Member 'AGeneratorStandard_C::Entity' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_Generator_Hit_Sparks_Intensified) == 0x0007F8, "Member 'AGeneratorStandard_C::P_Generator_Hit_Sparks_Intensified' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_Generator_IntensifiedDamage) == 0x000800, "Member 'AGeneratorStandard_C::P_Generator_IntensifiedDamage' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_sparkEmitterHit) == 0x000808, "Member 'AGeneratorStandard_C::P_sparkEmitterHit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, FocalPoint) == 0x000810, "Member 'AGeneratorStandard_C::FocalPoint' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_GeneratorOutline) == 0x000818, "Member 'AGeneratorStandard_C::SM_GeneratorOutline' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BigThreeHelper) == 0x000820, "Member 'AGeneratorStandard_C::BigThreeHelper' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SM_generatorCLONE) == 0x000828, "Member 'AGeneratorStandard_C::SM_generatorCLONE' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DBDOutline) == 0x000830, "Member 'AGeneratorStandard_C::DBDOutline' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Ak_Audio_Generator) == 0x000838, "Member 'AGeneratorStandard_C::Ak_Audio_Generator' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_RushFailSparks) == 0x000840, "Member 'AGeneratorStandard_C::P_RushFailSparks' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Flood_light) == 0x000848, "Member 'AGeneratorStandard_C::Flood_light' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SkeletalMeshComponent) == 0x000850, "Member 'AGeneratorStandard_C::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ActivatedLight3Direction) == 0x000858, "Member 'AGeneratorStandard_C::ActivatedLight3Direction' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ActivatedLight4Direction) == 0x000860, "Member 'AGeneratorStandard_C::ActivatedLight4Direction' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ActivatedLight2Direction) == 0x000868, "Member 'AGeneratorStandard_C::ActivatedLight2Direction' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ActivatedLight1Direction) == 0x000870, "Member 'AGeneratorStandard_C::ActivatedLight1Direction' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ActivatedLightDirections) == 0x000878, "Member 'AGeneratorStandard_C::ActivatedLightDirections' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SL_Generator_LF_on) == 0x000880, "Member 'AGeneratorStandard_C::SL_Generator_LF_on' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GMAdaptiveShadowMapSource) == 0x000888, "Member 'AGeneratorStandard_C::GMAdaptiveShadowMapSource' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, CollisionGenerato02) == 0x000890, "Member 'AGeneratorStandard_C::CollisionGenerato02' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SleepingSkinnedMeshRegisterer) == 0x000898, "Member 'AGeneratorStandard_C::SleepingSkinnedMeshRegisterer' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, P_SD_Teleport_Generator_Indicator) == 0x0008A0, "Member 'AGeneratorStandard_C::P_SD_Teleport_Generator_Indicator' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorOutlineUpdateStrategy) == 0x0008A8, "Member 'AGeneratorStandard_C::GeneratorOutlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPart_Right) == 0x0008B0, "Member 'AGeneratorStandard_C::InstallBrandNewPart_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPartInterruption_Front) == 0x0008B8, "Member 'AGeneratorStandard_C::InstallBrandNewPartInterruption_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPartInterruption_Back) == 0x0008C0, "Member 'AGeneratorStandard_C::InstallBrandNewPartInterruption_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPartInterruption_Right) == 0x0008C8, "Member 'AGeneratorStandard_C::InstallBrandNewPartInterruption_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPartInterruption_Left) == 0x0008D0, "Member 'AGeneratorStandard_C::InstallBrandNewPartInterruption_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPart_Front) == 0x0008D8, "Member 'AGeneratorStandard_C::InstallBrandNewPart_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPart_Back) == 0x0008E0, "Member 'AGeneratorStandard_C::InstallBrandNewPart_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InstallBrandNewPart_Left) == 0x0008E8, "Member 'AGeneratorStandard_C::InstallBrandNewPart_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_BackToolkit) == 0x0008F0, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_BackToolkit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_Back) == 0x0008F8, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_RightToolkit) == 0x000900, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_RightToolkit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_Right) == 0x000908, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_LeftToolkit) == 0x000910, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_LeftToolkit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_Left) == 0x000918, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_FrontToolkit) == 0x000920, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_FrontToolkit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepairInterruption_Front) == 0x000928, "Member 'AGeneratorStandard_C::GeneratorRepairInterruption_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, MapActorPrimitive) == 0x000930, "Member 'AGeneratorStandard_C::MapActorPrimitive' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, CollisionGenerato01) == 0x000938, "Member 'AGeneratorStandard_C::CollisionGenerato01' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InteractorZone_Back) == 0x000940, "Member 'AGeneratorStandard_C::InteractorZone_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InteractorZone_Right) == 0x000948, "Member 'AGeneratorStandard_C::InteractorZone_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InteractorZone_Left) == 0x000950, "Member 'AGeneratorStandard_C::InteractorZone_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, InteractorZone_Front) == 0x000958, "Member 'AGeneratorStandard_C::InteractorZone_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SceneRoot) == 0x000960, "Member 'AGeneratorStandard_C::SceneRoot' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DamageCharge) == 0x000968, "Member 'AGeneratorStandard_C::DamageCharge' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, MapActor) == 0x000970, "Member 'AGeneratorStandard_C::MapActor' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorCharge) == 0x000978, "Member 'AGeneratorStandard_C::GeneratorCharge' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorDamage_Back) == 0x000980, "Member 'AGeneratorStandard_C::GeneratorDamage_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorToolkitRepair_Back) == 0x000988, "Member 'AGeneratorStandard_C::GeneratorToolkitRepair_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepair_Back) == 0x000990, "Member 'AGeneratorStandard_C::GeneratorRepair_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Interactor_Back) == 0x000998, "Member 'AGeneratorStandard_C::Interactor_Back' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorDamage_Right) == 0x0009A0, "Member 'AGeneratorStandard_C::GeneratorDamage_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorToolkitRepair_Right) == 0x0009A8, "Member 'AGeneratorStandard_C::GeneratorToolkitRepair_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepair_Right) == 0x0009B0, "Member 'AGeneratorStandard_C::GeneratorRepair_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Interactor_Right) == 0x0009B8, "Member 'AGeneratorStandard_C::Interactor_Right' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorDamage_Left) == 0x0009C0, "Member 'AGeneratorStandard_C::GeneratorDamage_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorToolkitRepair_Left) == 0x0009C8, "Member 'AGeneratorStandard_C::GeneratorToolkitRepair_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepair_Left) == 0x0009D0, "Member 'AGeneratorStandard_C::GeneratorRepair_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Interactor_Left) == 0x0009D8, "Member 'AGeneratorStandard_C::Interactor_Left' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorDamage_Front) == 0x0009E0, "Member 'AGeneratorStandard_C::GeneratorDamage_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorToolkitRepair_Front) == 0x0009E8, "Member 'AGeneratorStandard_C::GeneratorToolkitRepair_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorRepair_Front) == 0x0009F0, "Member 'AGeneratorStandard_C::GeneratorRepair_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Interactor_Front) == 0x0009F8, "Member 'AGeneratorStandard_C::Interactor_Front' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Spikes_OnGround_NewTrack_0_02BE006F4B4F1E803D83FD8B76744BA1) == 0x000A00, "Member 'AGeneratorStandard_C::Spikes_OnGround_NewTrack_0_02BE006F4B4F1E803D83FD8B76744BA1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Spikes_OnGround__Direction_02BE006F4B4F1E803D83FD8B76744BA1) == 0x000A04, "Member 'AGeneratorStandard_C::Spikes_OnGround__Direction_02BE006F4B4F1E803D83FD8B76744BA1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Spikes_OnGround) == 0x000A08, "Member 'AGeneratorStandard_C::Spikes_OnGround' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_1_NewTrack_2_0C99000C4EFD2624241D7B81D68B28D1) == 0x000A10, "Member 'AGeneratorStandard_C::Timeline_1_NewTrack_2_0C99000C4EFD2624241D7B81D68B28D1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_1_NewTrack_1_0C99000C4EFD2624241D7B81D68B28D1) == 0x000A14, "Member 'AGeneratorStandard_C::Timeline_1_NewTrack_1_0C99000C4EFD2624241D7B81D68B28D1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_1_NewTrack_0_0C99000C4EFD2624241D7B81D68B28D1) == 0x000A18, "Member 'AGeneratorStandard_C::Timeline_1_NewTrack_0_0C99000C4EFD2624241D7B81D68B28D1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_1__Direction_0C99000C4EFD2624241D7B81D68B28D1) == 0x000A1C, "Member 'AGeneratorStandard_C::Timeline_1__Direction_0C99000C4EFD2624241D7B81D68B28D1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_1) == 0x000A20, "Member 'AGeneratorStandard_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_3_NewTrack_0_20DE75464C704F76D737C099761CDE1F) == 0x000A28, "Member 'AGeneratorStandard_C::Timeline_3_NewTrack_0_20DE75464C704F76D737C099761CDE1F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_3__Direction_20DE75464C704F76D737C099761CDE1F) == 0x000A2C, "Member 'AGeneratorStandard_C::Timeline_3__Direction_20DE75464C704F76D737C099761CDE1F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timeline_3) == 0x000A30, "Member 'AGeneratorStandard_C::Timeline_3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SurvivorRepair_ReverseSpikes_NewTrack_0_8BDBD2354B8156AAF2DC3BB33E80F5DC) == 0x000A38, "Member 'AGeneratorStandard_C::SurvivorRepair_ReverseSpikes_NewTrack_0_8BDBD2354B8156AAF2DC3BB33E80F5DC' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SurvivorRepair_ReverseSpikes__Direction_8BDBD2354B8156AAF2DC3BB33E80F5DC) == 0x000A3C, "Member 'AGeneratorStandard_C::SurvivorRepair_ReverseSpikes__Direction_8BDBD2354B8156AAF2DC3BB33E80F5DC' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SurvivorRepair_ReverseSpikes) == 0x000A40, "Member 'AGeneratorStandard_C::SurvivorRepair_ReverseSpikes' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Enter_Exit_NewTrack_1_8F693B4C403D7DCEE0946A87B61AA68F) == 0x000A48, "Member 'AGeneratorStandard_C::Regression_Enter_Exit_NewTrack_1_8F693B4C403D7DCEE0946A87B61AA68F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Enter_Exit_NewTrack_0_8F693B4C403D7DCEE0946A87B61AA68F) == 0x000A4C, "Member 'AGeneratorStandard_C::Regression_Enter_Exit_NewTrack_0_8F693B4C403D7DCEE0946A87B61AA68F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Enter_Exit_Main_Additional_Smaller_8F693B4C403D7DCEE0946A87B61AA68F) == 0x000A50, "Member 'AGeneratorStandard_C::Regression_Enter_Exit_Main_Additional_Smaller_8F693B4C403D7DCEE0946A87B61AA68F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Enter_Exit__Direction_8F693B4C403D7DCEE0946A87B61AA68F) == 0x000A54, "Member 'AGeneratorStandard_C::Regression_Enter_Exit__Direction_8F693B4C403D7DCEE0946A87B61AA68F' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Exit) == 0x000A58, "Member 'AGeneratorStandard_C::Exit' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Update_NewTrack_1_3EDE0F5B4E88730BDCD4B286E161DAE0) == 0x000A60, "Member 'AGeneratorStandard_C::Regression_Update_NewTrack_1_3EDE0F5B4E88730BDCD4B286E161DAE0' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Update_NewTrack_0_3EDE0F5B4E88730BDCD4B286E161DAE0) == 0x000A64, "Member 'AGeneratorStandard_C::Regression_Update_NewTrack_0_3EDE0F5B4E88730BDCD4B286E161DAE0' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Update__Direction_3EDE0F5B4E88730BDCD4B286E161DAE0) == 0x000A68, "Member 'AGeneratorStandard_C::Regression_Update__Direction_3EDE0F5B4E88730BDCD4B286E161DAE0' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Regression_Update) == 0x000A70, "Member 'AGeneratorStandard_C::Regression_Update' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Delay_NewTrack_0_78B96E0448F35C72D0AD66B42A9F6C10) == 0x000A78, "Member 'AGeneratorStandard_C::Delay_NewTrack_0_78B96E0448F35C72D0AD66B42A9F6C10' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Delay__Direction_78B96E0448F35C72D0AD66B42A9F6C10) == 0x000A7C, "Member 'AGeneratorStandard_C::Delay__Direction_78B96E0448F35C72D0AD66B42A9F6C10' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Delay) == 0x000A80, "Member 'AGeneratorStandard_C::Delay' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Final_Regression_NewTrack_2_DC5A64E649D1F601B6D879A74F96EEB3) == 0x000A88, "Member 'AGeneratorStandard_C::Final_Regression_NewTrack_2_DC5A64E649D1F601B6D879A74F96EEB3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Final_Regression_NewTrack_1_DC5A64E649D1F601B6D879A74F96EEB3) == 0x000A8C, "Member 'AGeneratorStandard_C::Final_Regression_NewTrack_1_DC5A64E649D1F601B6D879A74F96EEB3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Final_Regression_NewTrack_0_DC5A64E649D1F601B6D879A74F96EEB3) == 0x000A90, "Member 'AGeneratorStandard_C::Final_Regression_NewTrack_0_DC5A64E649D1F601B6D879A74F96EEB3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Final_Regression__Direction_DC5A64E649D1F601B6D879A74F96EEB3) == 0x000A94, "Member 'AGeneratorStandard_C::Final_Regression__Direction_DC5A64E649D1F601B6D879A74F96EEB3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Final_Regression) == 0x000A98, "Member 'AGeneratorStandard_C::Final_Regression' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_Outline_NewTrack_0_2166C1704CD71C1B7E08C3B26FEFBB9A) == 0x000AA0, "Member 'AGeneratorStandard_C::TML_Outline_NewTrack_0_2166C1704CD71C1B7E08C3B26FEFBB9A' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_Outline__Direction_2166C1704CD71C1B7E08C3B26FEFBB9A) == 0x000AB0, "Member 'AGeneratorStandard_C::TML_Outline__Direction_2166C1704CD71C1B7E08C3B26FEFBB9A' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_Outline) == 0x000AB8, "Member 'AGeneratorStandard_C::TML_Outline' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_FailureSparks_GreenTubeEmissive_6E5137414A6EA155769A0DA2FC6E3FBD) == 0x000AC0, "Member 'AGeneratorStandard_C::TML_FailureSparks_GreenTubeEmissive_6E5137414A6EA155769A0DA2FC6E3FBD' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_FailureSparks_GreenTubeIntensity_6E5137414A6EA155769A0DA2FC6E3FBD) == 0x000AC4, "Member 'AGeneratorStandard_C::TML_FailureSparks_GreenTubeIntensity_6E5137414A6EA155769A0DA2FC6E3FBD' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_FailureSparks__Direction_6E5137414A6EA155769A0DA2FC6E3FBD) == 0x000AC8, "Member 'AGeneratorStandard_C::TML_FailureSparks__Direction_6E5137414A6EA155769A0DA2FC6E3FBD' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, TML_FailureSparks) == 0x000AD0, "Member 'AGeneratorStandard_C::TML_FailureSparks' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Skill_Check_Failure_Flood_Lights_Timeline_Intensity_8E8E164D4DB887CC86D778B2BD6EDFFC) == 0x000AD8, "Member 'AGeneratorStandard_C::Skill_Check_Failure_Flood_Lights_Timeline_Intensity_8E8E164D4DB887CC86D778B2BD6EDFFC' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Skill_Check_Failure_Flood_Lights_Timeline__Direction_8E8E164D4DB887CC86D778B2BD6EDFFC) == 0x000ADC, "Member 'AGeneratorStandard_C::Skill_Check_Failure_Flood_Lights_Timeline__Direction_8E8E164D4DB887CC86D778B2BD6EDFFC' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Skill_Check_Failure_Flood_Lights_Timeline) == 0x000AE0, "Member 'AGeneratorStandard_C::Skill_Check_Failure_Flood_Lights_Timeline' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Timer) == 0x000AE8, "Member 'AGeneratorStandard_C::Timer' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, StartTimer) == 0x000AF0, "Member 'AGeneratorStandard_C::StartTimer' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, OutlineUtility) == 0x000AF8, "Member 'AGeneratorStandard_C::OutlineUtility' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Obstructed1) == 0x000B00, "Member 'AGeneratorStandard_C::Obstructed1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Obstructed2) == 0x000B01, "Member 'AGeneratorStandard_C::Obstructed2' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Obstructed3) == 0x000B02, "Member 'AGeneratorStandard_C::Obstructed3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Obstructed4) == 0x000B03, "Member 'AGeneratorStandard_C::Obstructed4' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Rushing) == 0x000B04, "Member 'AGeneratorStandard_C::Rushing' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, ToolkitBonus) == 0x000B08, "Member 'AGeneratorStandard_C::ToolkitBonus' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket1) == 0x000B10, "Member 'AGeneratorStandard_C::BeamSocket1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket2) == 0x000B1C, "Member 'AGeneratorStandard_C::BeamSocket2' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket3) == 0x000B28, "Member 'AGeneratorStandard_C::BeamSocket3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket4) == 0x000B34, "Member 'AGeneratorStandard_C::BeamSocket4' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket5) == 0x000B40, "Member 'AGeneratorStandard_C::BeamSocket5' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket6) == 0x000B4C, "Member 'AGeneratorStandard_C::BeamSocket6' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket7) == 0x000B58, "Member 'AGeneratorStandard_C::BeamSocket7' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket8) == 0x000B64, "Member 'AGeneratorStandard_C::BeamSocket8' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket9) == 0x000B70, "Member 'AGeneratorStandard_C::BeamSocket9' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket10) == 0x000B7C, "Member 'AGeneratorStandard_C::BeamSocket10' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket11) == 0x000B88, "Member 'AGeneratorStandard_C::BeamSocket11' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket12) == 0x000B94, "Member 'AGeneratorStandard_C::BeamSocket12' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket13) == 0x000BA0, "Member 'AGeneratorStandard_C::BeamSocket13' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket14) == 0x000BAC, "Member 'AGeneratorStandard_C::BeamSocket14' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket15) == 0x000BB8, "Member 'AGeneratorStandard_C::BeamSocket15' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket16) == 0x000BC4, "Member 'AGeneratorStandard_C::BeamSocket16' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsFailed) == 0x000BD0, "Member 'AGeneratorStandard_C::IsFailed' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorFailSparks) == 0x000BD8, "Member 'AGeneratorStandard_C::GeneratorFailSparks' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, PercentCompleteAtAutoComplete) == 0x000BE0, "Member 'AGeneratorStandard_C::PercentCompleteAtAutoComplete' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SurvivorsReactingToEntity) == 0x000BE8, "Member 'AGeneratorStandard_C::SurvivorsReactingToEntity' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket01) == 0x000BF8, "Member 'AGeneratorStandard_C::BeamSocket01' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket02) == 0x000C04, "Member 'AGeneratorStandard_C::BeamSocket02' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket03) == 0x000C10, "Member 'AGeneratorStandard_C::BeamSocket03' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket04) == 0x000C1C, "Member 'AGeneratorStandard_C::BeamSocket04' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket05) == 0x000C28, "Member 'AGeneratorStandard_C::BeamSocket05' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket06) == 0x000C34, "Member 'AGeneratorStandard_C::BeamSocket06' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket07) == 0x000C40, "Member 'AGeneratorStandard_C::BeamSocket07' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, BeamSocket08) == 0x000C4C, "Member 'AGeneratorStandard_C::BeamSocket08' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Joint_Light_1) == 0x000C58, "Member 'AGeneratorStandard_C::Joint_Light_1' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Joint_Light_2) == 0x000C64, "Member 'AGeneratorStandard_C::Joint_Light_2' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Joint_Light_3) == 0x000C70, "Member 'AGeneratorStandard_C::Joint_Light_3' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Joint_Light_4) == 0x000C7C, "Member 'AGeneratorStandard_C::Joint_Light_4' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, FX_GeneratorFailCenter) == 0x000C88, "Member 'AGeneratorStandard_C::FX_GeneratorFailCenter' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, CenterSocket) == 0x000C90, "Member 'AGeneratorStandard_C::CenterSocket' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Actor_SparksAlongWires) == 0x000CA0, "Member 'AGeneratorStandard_C::Actor_SparksAlongWires' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Lamp_Material) == 0x000CA8, "Member 'AGeneratorStandard_C::Lamp_Material' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Green_Tube_Material) == 0x000CB0, "Member 'AGeneratorStandard_C::Green_Tube_Material' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, VFX_Light_Distance_01) == 0x000CB8, "Member 'AGeneratorStandard_C::VFX_Light_Distance_01' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, VFX_Light_Distance_02) == 0x000CC0, "Member 'AGeneratorStandard_C::VFX_Light_Distance_02' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, VFX_Light_Distance_03) == 0x000CC8, "Member 'AGeneratorStandard_C::VFX_Light_Distance_03' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, VFX_Light_Distance_04) == 0x000CD0, "Member 'AGeneratorStandard_C::VFX_Light_Distance_04' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, VFX_Light_Distance_Default) == 0x000CD8, "Member 'AGeneratorStandard_C::VFX_Light_Distance_Default' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorFailVFX_Sparks) == 0x000CE0, "Member 'AGeneratorStandard_C::GeneratorFailVFX_Sparks' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, GeneratorFailVFX_SparksPole) == 0x000CE8, "Member 'AGeneratorStandard_C::GeneratorFailVFX_SparksPole' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SL_Generator_LF_LightIntensity) == 0x000CF0, "Member 'AGeneratorStandard_C::SL_Generator_LF_LightIntensity' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, SL_Generator_LF_FullLightIntensity) == 0x000CF8, "Member 'AGeneratorStandard_C::SL_Generator_LF_FullLightIntensity' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DMI_SpikesMain) == 0x000D00, "Member 'AGeneratorStandard_C::DMI_SpikesMain' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DMI_SpikesAdditional) == 0x000D08, "Member 'AGeneratorStandard_C::DMI_SpikesAdditional' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, HasExitedRegressionZone) == 0x000D10, "Member 'AGeneratorStandard_C::HasExitedRegressionZone' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DMI_SpikesSeparate) == 0x000D18, "Member 'AGeneratorStandard_C::DMI_SpikesSeparate' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Target_Growth) == 0x000D20, "Member 'AGeneratorStandard_C::Target_Growth' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, Max_Regression_Level) == 0x000D28, "Member 'AGeneratorStandard_C::Max_Regression_Level' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, UpwardSmokeVelocity) == 0x000D30, "Member 'AGeneratorStandard_C::UpwardSmokeVelocity' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, CurrentGrowth) == 0x000D38, "Member 'AGeneratorStandard_C::CurrentGrowth' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsAtFinalRegression) == 0x000D40, "Member 'AGeneratorStandard_C::IsAtFinalRegression' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsTimerElapsed) == 0x000D41, "Member 'AGeneratorStandard_C::IsTimerElapsed' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DMI_SpikesSmaller) == 0x000D48, "Member 'AGeneratorStandard_C::DMI_SpikesSmaller' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, DMI_SmokeDecal) == 0x000D50, "Member 'AGeneratorStandard_C::DMI_SmokeDecal' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsRepairingGen) == 0x000D58, "Member 'AGeneratorStandard_C::IsRepairingGen' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsBlockedByEntityCosmetic) == 0x000D59, "Member 'AGeneratorStandard_C::IsBlockedByEntityCosmetic' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsInGracePeriod) == 0x000D5A, "Member 'AGeneratorStandard_C::IsInGracePeriod' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsDamageIntensified) == 0x000D5B, "Member 'AGeneratorStandard_C::IsDamageIntensified' has a wrong offset!");
static_assert(offsetof(AGeneratorStandard_C, IsGenRepaired) == 0x000D5C, "Member 'AGeneratorStandard_C::IsGenRepaired' has a wrong offset!");

}

