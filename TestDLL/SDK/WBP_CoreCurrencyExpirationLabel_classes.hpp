#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreCurrencyExpirationLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreCurrencyExpirationLabel.WBP_CoreCurrencyExpirationLabel_C
// 0x0028 (0x0348 - 0x0320)
class UWBP_CoreCurrencyExpirationLabel_C final : public UCoreCurrencyExpirationLabelWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDTextBlock*                          AmountTB;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              CurrencyIMG;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          ExpirationDateTB;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          SeparatorTB;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_CoreCurrencyExpirationLabel(int32 EntryPoint);
	void SetData(const struct FCurrencyExpirationLabelViewData& ViewData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreCurrencyExpirationLabel_C">();
	}
	static class UWBP_CoreCurrencyExpirationLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreCurrencyExpirationLabel_C>();
	}
};
static_assert(alignof(UWBP_CoreCurrencyExpirationLabel_C) == 0x000008, "Wrong alignment on UWBP_CoreCurrencyExpirationLabel_C");
static_assert(sizeof(UWBP_CoreCurrencyExpirationLabel_C) == 0x000348, "Wrong size on UWBP_CoreCurrencyExpirationLabel_C");
static_assert(offsetof(UWBP_CoreCurrencyExpirationLabel_C, UberGraphFrame) == 0x000320, "Member 'UWBP_CoreCurrencyExpirationLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreCurrencyExpirationLabel_C, AmountTB) == 0x000328, "Member 'UWBP_CoreCurrencyExpirationLabel_C::AmountTB' has a wrong offset!");
static_assert(offsetof(UWBP_CoreCurrencyExpirationLabel_C, CurrencyIMG) == 0x000330, "Member 'UWBP_CoreCurrencyExpirationLabel_C::CurrencyIMG' has a wrong offset!");
static_assert(offsetof(UWBP_CoreCurrencyExpirationLabel_C, ExpirationDateTB) == 0x000338, "Member 'UWBP_CoreCurrencyExpirationLabel_C::ExpirationDateTB' has a wrong offset!");
static_assert(offsetof(UWBP_CoreCurrencyExpirationLabel_C, SeparatorTB) == 0x000340, "Member 'UWBP_CoreCurrencyExpirationLabel_C::SeparatorTB' has a wrong offset!");

}

