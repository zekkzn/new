#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreScreenIndicatorsContainer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreScreenIndicatorsContainer.WBP_CoreScreenIndicatorsContainer_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_CoreScreenIndicatorsContainer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreScreenIndicatorsContainer_C_Tick) == 0x000004, "Wrong alignment on WBP_CoreScreenIndicatorsContainer_C_Tick");
static_assert(sizeof(WBP_CoreScreenIndicatorsContainer_C_Tick) == 0x00003C, "Wrong size on WBP_CoreScreenIndicatorsContainer_C_Tick");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_CoreScreenIndicatorsContainer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_CoreScreenIndicatorsContainer_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_CoreScreenIndicatorsContainer.WBP_CoreScreenIndicatorsContainer_C.ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer
// 0x0048 (0x0048 - 0x0000)
struct WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Check_Inactive_Items_deltaTime_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer) == 0x000008, "Wrong alignment on WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer");
static_assert(sizeof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer) == 0x000048, "Wrong size on WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer, EntryPoint) == 0x000000, "Member 'WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer, CallFunc_Check_Inactive_Items_deltaTime_ImplicitCast) == 0x000040, "Member 'WBP_CoreScreenIndicatorsContainer_C_ExecuteUbergraph_WBP_CoreScreenIndicatorsContainer::CallFunc_Check_Inactive_Items_deltaTime_ImplicitCast' has a wrong offset!");

// Function WBP_CoreScreenIndicatorsContainer.WBP_CoreScreenIndicatorsContainer_C.Check Inactive Items
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCoreScreenIndicatorWidget*             CurrentIndicator;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UCoreScreenIndicatorWidget*> CallFunc_GetScreenIndicatorsMap_ReturnValue;       // 0x0020(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCoreScreenIndicatorWidget*>     CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UCoreScreenIndicatorWidget*             CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FindScreenIndicatorKey_ReturnValue;       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_B_ImplicitCast;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items) == 0x000008, "Wrong alignment on WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items");
static_assert(sizeof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items) == 0x0000B0, "Wrong size on WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, DeltaTime) == 0x000000, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CurrentIndicator) == 0x000008, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CurrentIndicator' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_GetScreenIndicatorsMap_ReturnValue) == 0x000020, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_GetScreenIndicatorsMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Map_Values_Values) == 0x000078, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Array_Get_Item) == 0x000088, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_FindScreenIndicatorKey_ReturnValue) == 0x000098, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_FindScreenIndicatorKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items, CallFunc_Add_FloatFloat_B_ImplicitCast) == 0x0000AC, "Member 'WBP_CoreScreenIndicatorsContainer_C_Check_Inactive_Items::CallFunc_Add_FloatFloat_B_ImplicitCast' has a wrong offset!");

}

