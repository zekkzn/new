#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SurvivorPlayerController

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SurvivorPlayerController.BP_SurvivorPlayerController_C
// 0x0030 (0x0BA8 - 0x0B78)
class ABP_SurvivorPlayerController_C final : public ADBDPlayerController
{
public:
	class UBPNearestOutsideMapBoundsLocator_C*    BPNearestOutsideMapBoundsLocator;                  // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEmblemAnalyticsComponent*              EmblemAnalytics;                                   // 0x0B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_SurvivorUnbroken*            DBDEmblem_SurvivorUnbroken;                        // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_SurvivorLightbringer*        DBDEmblem_SurvivorLightbringer;                    // 0x0B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_SurvivorEvader*              DBDEmblem_SurvivorEvader;                          // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDBDEmblem_SurvivorBenevolent*          DBDEmblem_SurvivorBenevolent;                      // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SurvivorPlayerController_C">();
	}
	static class ABP_SurvivorPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SurvivorPlayerController_C>();
	}
};
static_assert(alignof(ABP_SurvivorPlayerController_C) == 0x000008, "Wrong alignment on ABP_SurvivorPlayerController_C");
static_assert(sizeof(ABP_SurvivorPlayerController_C) == 0x000BA8, "Wrong size on ABP_SurvivorPlayerController_C");
static_assert(offsetof(ABP_SurvivorPlayerController_C, BPNearestOutsideMapBoundsLocator) == 0x000B78, "Member 'ABP_SurvivorPlayerController_C::BPNearestOutsideMapBoundsLocator' has a wrong offset!");
static_assert(offsetof(ABP_SurvivorPlayerController_C, EmblemAnalytics) == 0x000B80, "Member 'ABP_SurvivorPlayerController_C::EmblemAnalytics' has a wrong offset!");
static_assert(offsetof(ABP_SurvivorPlayerController_C, DBDEmblem_SurvivorUnbroken) == 0x000B88, "Member 'ABP_SurvivorPlayerController_C::DBDEmblem_SurvivorUnbroken' has a wrong offset!");
static_assert(offsetof(ABP_SurvivorPlayerController_C, DBDEmblem_SurvivorLightbringer) == 0x000B90, "Member 'ABP_SurvivorPlayerController_C::DBDEmblem_SurvivorLightbringer' has a wrong offset!");
static_assert(offsetof(ABP_SurvivorPlayerController_C, DBDEmblem_SurvivorEvader) == 0x000B98, "Member 'ABP_SurvivorPlayerController_C::DBDEmblem_SurvivorEvader' has a wrong offset!");
static_assert(offsetof(ABP_SurvivorPlayerController_C, DBDEmblem_SurvivorBenevolent) == 0x000BA0, "Member 'ABP_SurvivorPlayerController_C::DBDEmblem_SurvivorBenevolent' has a wrong offset!");

}

