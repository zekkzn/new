#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BHVRPhysicsUtilities

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BHVRPhysicsUtilities.DynamicCapsuleResizerComponent.OnHit
// 0x0120 (0x0120 - 0x0000)
struct DynamicCapsuleResizerComponent_OnHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             Hit;                                               // 0x0030(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicCapsuleResizerComponent_OnHit) == 0x000008, "Wrong alignment on DynamicCapsuleResizerComponent_OnHit");
static_assert(sizeof(DynamicCapsuleResizerComponent_OnHit) == 0x000120, "Wrong size on DynamicCapsuleResizerComponent_OnHit");
static_assert(offsetof(DynamicCapsuleResizerComponent_OnHit, HitComponent) == 0x000000, "Member 'DynamicCapsuleResizerComponent_OnHit::HitComponent' has a wrong offset!");
static_assert(offsetof(DynamicCapsuleResizerComponent_OnHit, OtherActor) == 0x000008, "Member 'DynamicCapsuleResizerComponent_OnHit::OtherActor' has a wrong offset!");
static_assert(offsetof(DynamicCapsuleResizerComponent_OnHit, OtherComp) == 0x000010, "Member 'DynamicCapsuleResizerComponent_OnHit::OtherComp' has a wrong offset!");
static_assert(offsetof(DynamicCapsuleResizerComponent_OnHit, NormalImpulse) == 0x000018, "Member 'DynamicCapsuleResizerComponent_OnHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(DynamicCapsuleResizerComponent_OnHit, Hit) == 0x000030, "Member 'DynamicCapsuleResizerComponent_OnHit::Hit' has a wrong offset!");

// Function BHVRPhysicsUtilities.DynamicCapsuleResizerComponent.SetShrinkingEnabled
// 0x0001 (0x0001 - 0x0000)
struct DynamicCapsuleResizerComponent_SetShrinkingEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicCapsuleResizerComponent_SetShrinkingEnabled) == 0x000001, "Wrong alignment on DynamicCapsuleResizerComponent_SetShrinkingEnabled");
static_assert(sizeof(DynamicCapsuleResizerComponent_SetShrinkingEnabled) == 0x000001, "Wrong size on DynamicCapsuleResizerComponent_SetShrinkingEnabled");
static_assert(offsetof(DynamicCapsuleResizerComponent_SetShrinkingEnabled, Enabled) == 0x000000, "Member 'DynamicCapsuleResizerComponent_SetShrinkingEnabled::Enabled' has a wrong offset!");

// Function BHVRPhysicsUtilities.PrimitiveCollection.Add
// 0x0008 (0x0008 - 0x0000)
struct PrimitiveCollection_Add final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrimitiveCollection_Add) == 0x000008, "Wrong alignment on PrimitiveCollection_Add");
static_assert(sizeof(PrimitiveCollection_Add) == 0x000008, "Wrong size on PrimitiveCollection_Add");
static_assert(offsetof(PrimitiveCollection_Add, Primitive) == 0x000000, "Member 'PrimitiveCollection_Add::Primitive' has a wrong offset!");

// Function BHVRPhysicsUtilities.PrimitiveCollection.Remove
// 0x0008 (0x0008 - 0x0000)
struct PrimitiveCollection_Remove final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrimitiveCollection_Remove) == 0x000008, "Wrong alignment on PrimitiveCollection_Remove");
static_assert(sizeof(PrimitiveCollection_Remove) == 0x000008, "Wrong size on PrimitiveCollection_Remove");
static_assert(offsetof(PrimitiveCollection_Remove, Primitive) == 0x000000, "Member 'PrimitiveCollection_Remove::Primitive' has a wrong offset!");

// Function BHVRPhysicsUtilities.PrimitivesRegistererComponent.SetPrimitives
// 0x0010 (0x0010 - 0x0000)
struct PrimitivesRegistererComponent_SetPrimitives final
{
public:
	TArray<class UPrimitiveComponent*>            Primitives;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PrimitivesRegistererComponent_SetPrimitives) == 0x000008, "Wrong alignment on PrimitivesRegistererComponent_SetPrimitives");
static_assert(sizeof(PrimitivesRegistererComponent_SetPrimitives) == 0x000010, "Wrong size on PrimitivesRegistererComponent_SetPrimitives");
static_assert(offsetof(PrimitivesRegistererComponent_SetPrimitives, Primitives) == 0x000000, "Member 'PrimitivesRegistererComponent_SetPrimitives::Primitives' has a wrong offset!");

}

