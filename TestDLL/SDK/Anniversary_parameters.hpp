#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anniversary

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Anniversary.AnniversaryMarionette.Authority_OnPlayerTrackerBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap) == 0x000008, "Wrong alignment on AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap");
static_assert(sizeof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap) == 0x000110, "Wrong size on AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, HitComponent) == 0x000000, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::HitComponent' has a wrong offset!");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, OtherActor) == 0x000008, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, OtherComp) == 0x000010, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, bFromSweep) == 0x00001C, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap, SweepResult) == 0x000020, "Member 'AnniversaryMarionette_Authority_OnPlayerTrackerBeginOverlap::SweepResult' has a wrong offset!");

// Function Anniversary.CrownPillarInteractable.Cosmetic_OnInteractionCompleted
// 0x0008 (0x0008 - 0x0000)
struct CrownPillarInteractable_Cosmetic_OnInteractionCompleted final
{
public:
	class ADBDPlayer*                             InteractingPlayer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrownPillarInteractable_Cosmetic_OnInteractionCompleted) == 0x000008, "Wrong alignment on CrownPillarInteractable_Cosmetic_OnInteractionCompleted");
static_assert(sizeof(CrownPillarInteractable_Cosmetic_OnInteractionCompleted) == 0x000008, "Wrong size on CrownPillarInteractable_Cosmetic_OnInteractionCompleted");
static_assert(offsetof(CrownPillarInteractable_Cosmetic_OnInteractionCompleted, InteractingPlayer) == 0x000000, "Member 'CrownPillarInteractable_Cosmetic_OnInteractionCompleted::InteractingPlayer' has a wrong offset!");

// Function Anniversary.CrownPillarInteractable.Cosmetic_OnStartedInteracting
// 0x0010 (0x0010 - 0x0000)
struct CrownPillarInteractable_Cosmetic_OnStartedInteracting final
{
public:
	class ADBDPlayer*                             InteractingPlayer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractionDuration;                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CrownPillarInteractable_Cosmetic_OnStartedInteracting) == 0x000008, "Wrong alignment on CrownPillarInteractable_Cosmetic_OnStartedInteracting");
static_assert(sizeof(CrownPillarInteractable_Cosmetic_OnStartedInteracting) == 0x000010, "Wrong size on CrownPillarInteractable_Cosmetic_OnStartedInteracting");
static_assert(offsetof(CrownPillarInteractable_Cosmetic_OnStartedInteracting, InteractingPlayer) == 0x000000, "Member 'CrownPillarInteractable_Cosmetic_OnStartedInteracting::InteractingPlayer' has a wrong offset!");
static_assert(offsetof(CrownPillarInteractable_Cosmetic_OnStartedInteracting, InteractionDuration) == 0x000008, "Member 'CrownPillarInteractable_Cosmetic_OnStartedInteracting::InteractionDuration' has a wrong offset!");

// Function Anniversary.CrownPillarInteractable.IsLocallyObservedPlayerEquippedWithAnniversaryOffering
// 0x0001 (0x0001 - 0x0000)
struct CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering) == 0x000001, "Wrong alignment on CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering");
static_assert(sizeof(CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering) == 0x000001, "Wrong size on CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering");
static_assert(offsetof(CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering, ReturnValue) == 0x000000, "Member 'CrownPillarInteractable_IsLocallyObservedPlayerEquippedWithAnniversaryOffering::ReturnValue' has a wrong offset!");

// Function Anniversary.CrownPlayerComponent.Cosmetic_SetVFXParticlesVisibility
// 0x0001 (0x0001 - 0x0000)
struct CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility) == 0x000001, "Wrong alignment on CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility");
static_assert(sizeof(CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility) == 0x000001, "Wrong size on CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility");
static_assert(offsetof(CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility, Param_IsVisible) == 0x000000, "Member 'CrownPlayerComponent_Cosmetic_SetVFXParticlesVisibility::Param_IsVisible' has a wrong offset!");

// Function Anniversary.InvitationInteractionDefinition.Server_TrySetInvitationTarget
// 0x0008 (0x0008 - 0x0000)
struct InvitationInteractionDefinition_Server_TrySetInvitationTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationInteractionDefinition_Server_TrySetInvitationTarget) == 0x000008, "Wrong alignment on InvitationInteractionDefinition_Server_TrySetInvitationTarget");
static_assert(sizeof(InvitationInteractionDefinition_Server_TrySetInvitationTarget) == 0x000008, "Wrong size on InvitationInteractionDefinition_Server_TrySetInvitationTarget");
static_assert(offsetof(InvitationInteractionDefinition_Server_TrySetInvitationTarget, Target) == 0x000000, "Member 'InvitationInteractionDefinition_Server_TrySetInvitationTarget::Target' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Cosmetic_OnInvitationChargesIntChanged
// 0x0004 (0x0004 - 0x0000)
struct InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged final
{
public:
	int32                                         InvitationCharge;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged) == 0x000004, "Wrong alignment on InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged");
static_assert(sizeof(InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged) == 0x000004, "Wrong size on InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged, InvitationCharge) == 0x000000, "Member 'InvitationPlayerComponent_Cosmetic_OnInvitationChargesIntChanged::InvitationCharge' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Cosmetic_OnInvitationInteractionActivate
// 0x0010 (0x0010 - 0x0000)
struct InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate final
{
public:
	class ADBDPlayer*                             AbilityCaster;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate) == 0x000008, "Wrong alignment on InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate");
static_assert(sizeof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate) == 0x000010, "Wrong size on InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate, AbilityCaster) == 0x000000, "Member 'InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate::AbilityCaster' has a wrong offset!");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate, Target) == 0x000008, "Member 'InvitationPlayerComponent_Cosmetic_OnInvitationInteractionActivate::Target' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Cosmetic_OnInvitationInteractionReady
// 0x0001 (0x0001 - 0x0000)
struct InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady final
{
public:
	bool                                          IsReady;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady) == 0x000001, "Wrong alignment on InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady");
static_assert(sizeof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady) == 0x000001, "Wrong size on InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady, IsReady) == 0x000000, "Member 'InvitationPlayerComponent_Cosmetic_OnInvitationInteractionReady::IsReady' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Cosmetic_OnPlayerInChaseStateChanged
// 0x0001 (0x0001 - 0x0000)
struct InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged final
{
public:
	bool                                          InChase;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged) == 0x000001, "Wrong alignment on InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged");
static_assert(sizeof(InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged) == 0x000001, "Wrong size on InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged, InChase) == 0x000000, "Member 'InvitationPlayerComponent_Cosmetic_OnPlayerInChaseStateChanged::InChase' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Cosmetic_SetVFXParticlesVisibility
// 0x0001 (0x0001 - 0x0000)
struct InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility) == 0x000001, "Wrong alignment on InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility");
static_assert(sizeof(InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility) == 0x000001, "Wrong size on InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility");
static_assert(offsetof(InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility, IsVisible) == 0x000000, "Member 'InvitationPlayerComponent_Cosmetic_SetVFXParticlesVisibility::IsVisible' has a wrong offset!");

// Function Anniversary.InvitationPlayerComponent.Multicast_CosmeticOnInvitationInteractionActivate
// 0x0010 (0x0010 - 0x0000)
struct InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate) == 0x000008, "Wrong alignment on InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate");
static_assert(sizeof(InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate) == 0x000010, "Wrong size on InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate");
static_assert(offsetof(InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate, Player) == 0x000000, "Member 'InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate::Player' has a wrong offset!");
static_assert(offsetof(InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate, Target) == 0x000008, "Member 'InvitationPlayerComponent_Multicast_CosmeticOnInvitationInteractionActivate::Target' has a wrong offset!");

// Function Anniversary.InvitationTargetComponent.Cosmetic_OnTargetObjectChanged
// 0x0010 (0x0010 - 0x0000)
struct InvitationTargetComponent_Cosmetic_OnTargetObjectChanged final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 LastTarget;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InvitationTargetComponent_Cosmetic_OnTargetObjectChanged) == 0x000008, "Wrong alignment on InvitationTargetComponent_Cosmetic_OnTargetObjectChanged");
static_assert(sizeof(InvitationTargetComponent_Cosmetic_OnTargetObjectChanged) == 0x000010, "Wrong size on InvitationTargetComponent_Cosmetic_OnTargetObjectChanged");
static_assert(offsetof(InvitationTargetComponent_Cosmetic_OnTargetObjectChanged, Target) == 0x000000, "Member 'InvitationTargetComponent_Cosmetic_OnTargetObjectChanged::Target' has a wrong offset!");
static_assert(offsetof(InvitationTargetComponent_Cosmetic_OnTargetObjectChanged, LastTarget) == 0x000008, "Member 'InvitationTargetComponent_Cosmetic_OnTargetObjectChanged::LastTarget' has a wrong offset!");

}

