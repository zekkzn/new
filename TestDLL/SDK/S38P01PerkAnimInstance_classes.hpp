#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S38P01PerkAnimInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "TheS38_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass S38P01PerkAnimInstance.S38P01PerkAnimInstance_C
// 0x04D0 (0x0AF0 - 0x0620)
class US38P01PerkAnimInstance_C final : public USurvivorPerkAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0628(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0630(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0638(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0658(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0728(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0858(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0880(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x08C8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x08E8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0918(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0938(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0A00(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0A20(0x00D0)()

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);
	void AnimNotify_PerksLayerDone();
	void ExecuteUbergraph_S38P01PerkAnimInstance(int32 EntryPoint);
	void Survivor_Perk_Layer(const struct FPoseLink& InPose, struct FPoseLink* Param_Survivor_Perk_Layer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"S38P01PerkAnimInstance_C">();
	}
	static class US38P01PerkAnimInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<US38P01PerkAnimInstance_C>();
	}
};
static_assert(alignof(US38P01PerkAnimInstance_C) == 0x000010, "Wrong alignment on US38P01PerkAnimInstance_C");
static_assert(sizeof(US38P01PerkAnimInstance_C) == 0x000AF0, "Wrong size on US38P01PerkAnimInstance_C");
static_assert(offsetof(US38P01PerkAnimInstance_C, UberGraphFrame) == 0x000620, "Member 'US38P01PerkAnimInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimBlueprintExtension_PropertyAccess) == 0x000628, "Member 'US38P01PerkAnimInstance_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimBlueprintExtension_Base) == 0x000630, "Member 'US38P01PerkAnimInstance_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_Root_1) == 0x000638, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_LinkedInputPose_1) == 0x000658, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_SaveCachedPose) == 0x000728, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_TransitionResult_1) == 0x000830, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_TransitionResult) == 0x000858, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_SequencePlayer) == 0x000880, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_StateResult_1) == 0x0008C8, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_UseCachedPose) == 0x0008E8, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_StateResult) == 0x000918, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_StateMachine) == 0x000938, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_Root) == 0x000A00, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(US38P01PerkAnimInstance_C, AnimGraphNode_LinkedInputPose) == 0x000A20, "Member 'US38P01PerkAnimInstance_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");

}

