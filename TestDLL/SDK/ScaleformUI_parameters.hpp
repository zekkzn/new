#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScaleformUI

#include "Basic.hpp"

#include "ScaleformUI_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ScaleformUI.GFxMoviePlayer.OpenMovie
// 0x0030 (0x0030 - 0x0000)
struct GFxMoviePlayer_OpenMovie final
{
public:
	class USwfMovie*                              SwfMovie;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ExternalScriptInterface;                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 RenderToTexture;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayWithHudOff;                                 // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StartPaused;                                       // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGFxMoviePlayer*                        ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_OpenMovie) == 0x000008, "Wrong alignment on GFxMoviePlayer_OpenMovie");
static_assert(sizeof(GFxMoviePlayer_OpenMovie) == 0x000030, "Wrong size on GFxMoviePlayer_OpenMovie");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, SwfMovie) == 0x000000, "Member 'GFxMoviePlayer_OpenMovie::SwfMovie' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, ExternalScriptInterface) == 0x000008, "Member 'GFxMoviePlayer_OpenMovie::ExternalScriptInterface' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, RenderToTexture) == 0x000010, "Member 'GFxMoviePlayer_OpenMovie::RenderToTexture' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, MoviePlayer) == 0x000018, "Member 'GFxMoviePlayer_OpenMovie::MoviePlayer' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, DisplayWithHudOff) == 0x000020, "Member 'GFxMoviePlayer_OpenMovie::DisplayWithHudOff' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, StartPaused) == 0x000021, "Member 'GFxMoviePlayer_OpenMovie::StartPaused' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_OpenMovie, ReturnValue) == 0x000028, "Member 'GFxMoviePlayer_OpenMovie::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.Close
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_Close final
{
public:
	bool                                          Unload;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_Close) == 0x000001, "Wrong alignment on GFxMoviePlayer_Close");
static_assert(sizeof(GFxMoviePlayer_Close) == 0x000001, "Wrong size on GFxMoviePlayer_Close");
static_assert(offsetof(GFxMoviePlayer_Close, Unload) == 0x000000, "Member 'GFxMoviePlayer_Close::Unload' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetColorTransform
// 0x0030 (0x0030 - 0x0000)
struct GFxMoviePlayer_GetColorTransform final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASColorTransform                      ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetColorTransform) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetColorTransform");
static_assert(sizeof(GFxMoviePlayer_GetColorTransform) == 0x000030, "Wrong size on GFxMoviePlayer_GetColorTransform");
static_assert(offsetof(GFxMoviePlayer_GetColorTransform, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetColorTransform::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetColorTransform, ReturnValue) == 0x000010, "Member 'GFxMoviePlayer_GetColorTransform::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetDisplayInfo
// 0x0058 (0x0058 - 0x0000)
struct GFxMoviePlayer_GetDisplayInfo final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASDisplayInfo                         ReturnValue;                                       // 0x0010(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetDisplayInfo) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetDisplayInfo");
static_assert(sizeof(GFxMoviePlayer_GetDisplayInfo) == 0x000058, "Wrong size on GFxMoviePlayer_GetDisplayInfo");
static_assert(offsetof(GFxMoviePlayer_GetDisplayInfo, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetDisplayInfo::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetDisplayInfo, ReturnValue) == 0x000010, "Member 'GFxMoviePlayer_GetDisplayInfo::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetDisplayTransform
// 0x0070 (0x0070 - 0x0000)
struct GFxMoviePlayer_GetDisplayTransform final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetDisplayTransform) == 0x000010, "Wrong alignment on GFxMoviePlayer_GetDisplayTransform");
static_assert(sizeof(GFxMoviePlayer_GetDisplayTransform) == 0x000070, "Wrong size on GFxMoviePlayer_GetDisplayTransform");
static_assert(offsetof(GFxMoviePlayer_GetDisplayTransform, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetDisplayTransform::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetDisplayTransform, ReturnValue) == 0x000010, "Member 'GFxMoviePlayer_GetDisplayTransform::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetMovieClip
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_GetMovieClip final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxObject*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetMovieClip) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetMovieClip");
static_assert(sizeof(GFxMoviePlayer_GetMovieClip) == 0x000018, "Wrong size on GFxMoviePlayer_GetMovieClip");
static_assert(offsetof(GFxMoviePlayer_GetMovieClip, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetMovieClip::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetMovieClip, ReturnValue) == 0x000010, "Member 'GFxMoviePlayer_GetMovieClip::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetPerspective3D
// 0x0080 (0x0080 - 0x0000)
struct GFxMoviePlayer_GetPerspective3D final
{
public:
	struct FASPerspectiveTransform                ReturnValue;                                       // 0x0000(0x0080)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetPerspective3D) == 0x000010, "Wrong alignment on GFxMoviePlayer_GetPerspective3D");
static_assert(sizeof(GFxMoviePlayer_GetPerspective3D) == 0x000080, "Wrong size on GFxMoviePlayer_GetPerspective3D");
static_assert(offsetof(GFxMoviePlayer_GetPerspective3D, ReturnValue) == 0x000000, "Member 'GFxMoviePlayer_GetPerspective3D::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetPosition
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_GetPosition final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         X;                                                 // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_GetPosition) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetPosition");
static_assert(sizeof(GFxMoviePlayer_GetPosition) == 0x000020, "Wrong size on GFxMoviePlayer_GetPosition");
static_assert(offsetof(GFxMoviePlayer_GetPosition, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetPosition::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetPosition, X) == 0x000010, "Member 'GFxMoviePlayer_GetPosition::X' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetPosition, Y) == 0x000014, "Member 'GFxMoviePlayer_GetPosition::Y' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetPosition, ReturnValue) == 0x000018, "Member 'GFxMoviePlayer_GetPosition::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetScale
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_GetScale final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         XScale;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YScale;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_GetScale) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetScale");
static_assert(sizeof(GFxMoviePlayer_GetScale) == 0x000020, "Wrong size on GFxMoviePlayer_GetScale");
static_assert(offsetof(GFxMoviePlayer_GetScale, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetScale::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetScale, XScale) == 0x000010, "Member 'GFxMoviePlayer_GetScale::XScale' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetScale, YScale) == 0x000014, "Member 'GFxMoviePlayer_GetScale::YScale' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetScale, ReturnValue) == 0x000018, "Member 'GFxMoviePlayer_GetScale::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetVariableValue
// 0x0058 (0x0058 - 0x0000)
struct GFxMoviePlayer_GetVariableValue final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0020(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetVariableValue) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetVariableValue");
static_assert(sizeof(GFxMoviePlayer_GetVariableValue) == 0x000058, "Wrong size on GFxMoviePlayer_GetVariableValue");
static_assert(offsetof(GFxMoviePlayer_GetVariableValue, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetVariableValue::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetVariableValue, MemberName) == 0x000010, "Member 'GFxMoviePlayer_GetVariableValue::MemberName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetVariableValue, ReturnValue) == 0x000020, "Member 'GFxMoviePlayer_GetVariableValue::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetVariableValueArray
// 0x0030 (0x0030 - 0x0000)
struct GFxMoviePlayer_GetVariableValueArray final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetVariableValueArray) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetVariableValueArray");
static_assert(sizeof(GFxMoviePlayer_GetVariableValueArray) == 0x000030, "Wrong size on GFxMoviePlayer_GetVariableValueArray");
static_assert(offsetof(GFxMoviePlayer_GetVariableValueArray, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetVariableValueArray::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetVariableValueArray, MemberName) == 0x000010, "Member 'GFxMoviePlayer_GetVariableValueArray::MemberName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetVariableValueArray, ReturnValue) == 0x000020, "Member 'GFxMoviePlayer_GetVariableValueArray::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetView3D
// 0x0060 (0x0060 - 0x0000)
struct GFxMoviePlayer_GetView3D final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GetView3D) == 0x000010, "Wrong alignment on GFxMoviePlayer_GetView3D");
static_assert(sizeof(GFxMoviePlayer_GetView3D) == 0x000060, "Wrong size on GFxMoviePlayer_GetView3D");
static_assert(offsetof(GFxMoviePlayer_GetView3D, ReturnValue) == 0x000000, "Member 'GFxMoviePlayer_GetView3D::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GetVisibility
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_GetVisibility final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_GetVisibility) == 0x000008, "Wrong alignment on GFxMoviePlayer_GetVisibility");
static_assert(sizeof(GFxMoviePlayer_GetVisibility) == 0x000018, "Wrong size on GFxMoviePlayer_GetVisibility");
static_assert(offsetof(GFxMoviePlayer_GetVisibility, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GetVisibility::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GetVisibility, ReturnValue) == 0x000010, "Member 'GFxMoviePlayer_GetVisibility::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GotoAndPlay
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_GotoAndPlay final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GotoAndPlay) == 0x000008, "Wrong alignment on GFxMoviePlayer_GotoAndPlay");
static_assert(sizeof(GFxMoviePlayer_GotoAndPlay) == 0x000020, "Wrong size on GFxMoviePlayer_GotoAndPlay");
static_assert(offsetof(GFxMoviePlayer_GotoAndPlay, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GotoAndPlay::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GotoAndPlay, Frame) == 0x000010, "Member 'GFxMoviePlayer_GotoAndPlay::Frame' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GotoAndPlayI
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_GotoAndPlayI final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Frame;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_GotoAndPlayI) == 0x000008, "Wrong alignment on GFxMoviePlayer_GotoAndPlayI");
static_assert(sizeof(GFxMoviePlayer_GotoAndPlayI) == 0x000018, "Wrong size on GFxMoviePlayer_GotoAndPlayI");
static_assert(offsetof(GFxMoviePlayer_GotoAndPlayI, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GotoAndPlayI::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GotoAndPlayI, Frame) == 0x000010, "Member 'GFxMoviePlayer_GotoAndPlayI::Frame' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GotoAndStop
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_GotoAndStop final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_GotoAndStop) == 0x000008, "Wrong alignment on GFxMoviePlayer_GotoAndStop");
static_assert(sizeof(GFxMoviePlayer_GotoAndStop) == 0x000020, "Wrong size on GFxMoviePlayer_GotoAndStop");
static_assert(offsetof(GFxMoviePlayer_GotoAndStop, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GotoAndStop::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GotoAndStop, Frame) == 0x000010, "Member 'GFxMoviePlayer_GotoAndStop::Frame' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.GotoAndStopI
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_GotoAndStopI final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Frame;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_GotoAndStopI) == 0x000008, "Wrong alignment on GFxMoviePlayer_GotoAndStopI");
static_assert(sizeof(GFxMoviePlayer_GotoAndStopI) == 0x000018, "Wrong size on GFxMoviePlayer_GotoAndStopI");
static_assert(offsetof(GFxMoviePlayer_GotoAndStopI, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_GotoAndStopI::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_GotoAndStopI, Frame) == 0x000010, "Member 'GFxMoviePlayer_GotoAndStopI::Frame' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.Invoke
// 0x0068 (0x0068 - 0x0000)
struct GFxMoviePlayer_Invoke final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FunctionName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       Params_0;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0030(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_Invoke) == 0x000008, "Wrong alignment on GFxMoviePlayer_Invoke");
static_assert(sizeof(GFxMoviePlayer_Invoke) == 0x000068, "Wrong size on GFxMoviePlayer_Invoke");
static_assert(offsetof(GFxMoviePlayer_Invoke, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_Invoke::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_Invoke, FunctionName) == 0x000010, "Member 'GFxMoviePlayer_Invoke::FunctionName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_Invoke, Params_0) == 0x000020, "Member 'GFxMoviePlayer_Invoke::Params_0' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_Invoke, ReturnValue) == 0x000030, "Member 'GFxMoviePlayer_Invoke::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.LoadAndStart
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_LoadAndStart final
{
public:
	class FString                                 InSwfAssetName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRefresh;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_LoadAndStart) == 0x000008, "Wrong alignment on GFxMoviePlayer_LoadAndStart");
static_assert(sizeof(GFxMoviePlayer_LoadAndStart) == 0x000018, "Wrong size on GFxMoviePlayer_LoadAndStart");
static_assert(offsetof(GFxMoviePlayer_LoadAndStart, InSwfAssetName) == 0x000000, "Member 'GFxMoviePlayer_LoadAndStart::InSwfAssetName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_LoadAndStart, bRefresh) == 0x000010, "Member 'GFxMoviePlayer_LoadAndStart::bRefresh' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_LoadAndStart, ReturnValue) == 0x000011, "Member 'GFxMoviePlayer_LoadAndStart::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.OnFocusGained
// 0x0004 (0x0004 - 0x0000)
struct GFxMoviePlayer_OnFocusGained final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_OnFocusGained) == 0x000004, "Wrong alignment on GFxMoviePlayer_OnFocusGained");
static_assert(sizeof(GFxMoviePlayer_OnFocusGained) == 0x000004, "Wrong size on GFxMoviePlayer_OnFocusGained");
static_assert(offsetof(GFxMoviePlayer_OnFocusGained, LocalPlayerIndex) == 0x000000, "Member 'GFxMoviePlayer_OnFocusGained::LocalPlayerIndex' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.OnFocusLost
// 0x0004 (0x0004 - 0x0000)
struct GFxMoviePlayer_OnFocusLost final
{
public:
	int32                                         LocalPlayerIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_OnFocusLost) == 0x000004, "Wrong alignment on GFxMoviePlayer_OnFocusLost");
static_assert(sizeof(GFxMoviePlayer_OnFocusLost) == 0x000004, "Wrong size on GFxMoviePlayer_OnFocusLost");
static_assert(offsetof(GFxMoviePlayer_OnFocusLost, LocalPlayerIndex) == 0x000000, "Member 'GFxMoviePlayer_OnFocusLost::LocalPlayerIndex' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.OnTick
// 0x0004 (0x0004 - 0x0000)
struct GFxMoviePlayer_OnTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_OnTick) == 0x000004, "Wrong alignment on GFxMoviePlayer_OnTick");
static_assert(sizeof(GFxMoviePlayer_OnTick) == 0x000004, "Wrong size on GFxMoviePlayer_OnTick");
static_assert(offsetof(GFxMoviePlayer_OnTick, DeltaTime) == 0x000000, "Member 'GFxMoviePlayer_OnTick::DeltaTime' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.ReceiveGFxCommand
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_ReceiveGFxCommand final
{
public:
	class FString                                 Command;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Arguments;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_ReceiveGFxCommand) == 0x000008, "Wrong alignment on GFxMoviePlayer_ReceiveGFxCommand");
static_assert(sizeof(GFxMoviePlayer_ReceiveGFxCommand) == 0x000020, "Wrong size on GFxMoviePlayer_ReceiveGFxCommand");
static_assert(offsetof(GFxMoviePlayer_ReceiveGFxCommand, Command) == 0x000000, "Member 'GFxMoviePlayer_ReceiveGFxCommand::Command' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_ReceiveGFxCommand, Arguments) == 0x000010, "Member 'GFxMoviePlayer_ReceiveGFxCommand::Arguments' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetAlignment
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetAlignment final
{
public:
	EGFxAlign                                     Align;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetAlignment) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetAlignment");
static_assert(sizeof(GFxMoviePlayer_SetAlignment) == 0x000001, "Wrong size on GFxMoviePlayer_SetAlignment");
static_assert(offsetof(GFxMoviePlayer_SetAlignment, Align) == 0x000000, "Member 'GFxMoviePlayer_SetAlignment::Align' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetCaptureKeys
// 0x0010 (0x0010 - 0x0000)
struct GFxMoviePlayer_SetCaptureKeys final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetCaptureKeys) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetCaptureKeys");
static_assert(sizeof(GFxMoviePlayer_SetCaptureKeys) == 0x000010, "Wrong size on GFxMoviePlayer_SetCaptureKeys");
static_assert(offsetof(GFxMoviePlayer_SetCaptureKeys, Keys) == 0x000000, "Member 'GFxMoviePlayer_SetCaptureKeys::Keys' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetColorTransform
// 0x0030 (0x0030 - 0x0000)
struct GFxMoviePlayer_SetColorTransform final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASColorTransform                      UnrealColorTransform;                              // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetColorTransform) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetColorTransform");
static_assert(sizeof(GFxMoviePlayer_SetColorTransform) == 0x000030, "Wrong size on GFxMoviePlayer_SetColorTransform");
static_assert(offsetof(GFxMoviePlayer_SetColorTransform, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetColorTransform::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetColorTransform, UnrealColorTransform) == 0x000010, "Member 'GFxMoviePlayer_SetColorTransform::UnrealColorTransform' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetDisplayInfo
// 0x0058 (0x0058 - 0x0000)
struct GFxMoviePlayer_SetDisplayInfo final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASDisplayInfo                         Info;                                              // 0x0010(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetDisplayInfo) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetDisplayInfo");
static_assert(sizeof(GFxMoviePlayer_SetDisplayInfo) == 0x000058, "Wrong size on GFxMoviePlayer_SetDisplayInfo");
static_assert(offsetof(GFxMoviePlayer_SetDisplayInfo, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetDisplayInfo::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetDisplayInfo, Info) == 0x000010, "Member 'GFxMoviePlayer_SetDisplayInfo::Info' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetDisplayTransform
// 0x0070 (0x0070 - 0x0000)
struct GFxMoviePlayer_SetDisplayTransform final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             DisplayTransform;                                  // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetDisplayTransform) == 0x000010, "Wrong alignment on GFxMoviePlayer_SetDisplayTransform");
static_assert(sizeof(GFxMoviePlayer_SetDisplayTransform) == 0x000070, "Wrong size on GFxMoviePlayer_SetDisplayTransform");
static_assert(offsetof(GFxMoviePlayer_SetDisplayTransform, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetDisplayTransform::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetDisplayTransform, DisplayTransform) == 0x000010, "Member 'GFxMoviePlayer_SetDisplayTransform::DisplayTransform' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetExternalTexture
// 0x0020 (0x0020 - 0x0000)
struct GFxMoviePlayer_SetExternalTexture final
{
public:
	class FString                                 Resource;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_SetExternalTexture) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetExternalTexture");
static_assert(sizeof(GFxMoviePlayer_SetExternalTexture) == 0x000020, "Wrong size on GFxMoviePlayer_SetExternalTexture");
static_assert(offsetof(GFxMoviePlayer_SetExternalTexture, Resource) == 0x000000, "Member 'GFxMoviePlayer_SetExternalTexture::Resource' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetExternalTexture, Texture) == 0x000010, "Member 'GFxMoviePlayer_SetExternalTexture::Texture' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetExternalTexture, ReturnValue) == 0x000018, "Member 'GFxMoviePlayer_SetExternalTexture::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetFocusIgnoreKeys
// 0x0010 (0x0010 - 0x0000)
struct GFxMoviePlayer_SetFocusIgnoreKeys final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetFocusIgnoreKeys) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetFocusIgnoreKeys");
static_assert(sizeof(GFxMoviePlayer_SetFocusIgnoreKeys) == 0x000010, "Wrong size on GFxMoviePlayer_SetFocusIgnoreKeys");
static_assert(offsetof(GFxMoviePlayer_SetFocusIgnoreKeys, Keys) == 0x000000, "Member 'GFxMoviePlayer_SetFocusIgnoreKeys::Keys' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetMovieCanReceiveFocus
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetMovieCanReceiveFocus final
{
public:
	bool                                          bCanReceiveFocus;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetMovieCanReceiveFocus) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetMovieCanReceiveFocus");
static_assert(sizeof(GFxMoviePlayer_SetMovieCanReceiveFocus) == 0x000001, "Wrong size on GFxMoviePlayer_SetMovieCanReceiveFocus");
static_assert(offsetof(GFxMoviePlayer_SetMovieCanReceiveFocus, bCanReceiveFocus) == 0x000000, "Member 'GFxMoviePlayer_SetMovieCanReceiveFocus::bCanReceiveFocus' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetMovieCanReceiveInput
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetMovieCanReceiveInput final
{
public:
	bool                                          bCanReceiveInput;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetMovieCanReceiveInput) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetMovieCanReceiveInput");
static_assert(sizeof(GFxMoviePlayer_SetMovieCanReceiveInput) == 0x000001, "Wrong size on GFxMoviePlayer_SetMovieCanReceiveInput");
static_assert(offsetof(GFxMoviePlayer_SetMovieCanReceiveInput, bCanReceiveInput) == 0x000000, "Member 'GFxMoviePlayer_SetMovieCanReceiveInput::bCanReceiveInput' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetPause
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetPause final
{
public:
	bool                                          bPausePlayback;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetPause) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetPause");
static_assert(sizeof(GFxMoviePlayer_SetPause) == 0x000001, "Wrong size on GFxMoviePlayer_SetPause");
static_assert(offsetof(GFxMoviePlayer_SetPause, bPausePlayback) == 0x000000, "Member 'GFxMoviePlayer_SetPause::bPausePlayback' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetPerspective3D
// 0x0080 (0x0080 - 0x0000)
struct GFxMoviePlayer_SetPerspective3D final
{
public:
	struct FASPerspectiveTransform                PerspectiveTransform;                              // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetPerspective3D) == 0x000010, "Wrong alignment on GFxMoviePlayer_SetPerspective3D");
static_assert(sizeof(GFxMoviePlayer_SetPerspective3D) == 0x000080, "Wrong size on GFxMoviePlayer_SetPerspective3D");
static_assert(offsetof(GFxMoviePlayer_SetPerspective3D, PerspectiveTransform) == 0x000000, "Member 'GFxMoviePlayer_SetPerspective3D::PerspectiveTransform' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetPosition
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_SetPosition final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         X;                                                 // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetPosition) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetPosition");
static_assert(sizeof(GFxMoviePlayer_SetPosition) == 0x000018, "Wrong size on GFxMoviePlayer_SetPosition");
static_assert(offsetof(GFxMoviePlayer_SetPosition, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetPosition::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetPosition, X) == 0x000010, "Member 'GFxMoviePlayer_SetPosition::X' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetPosition, Y) == 0x000014, "Member 'GFxMoviePlayer_SetPosition::Y' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetScale
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_SetScale final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         XScale;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YScale;                                            // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetScale) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetScale");
static_assert(sizeof(GFxMoviePlayer_SetScale) == 0x000018, "Wrong size on GFxMoviePlayer_SetScale");
static_assert(offsetof(GFxMoviePlayer_SetScale, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetScale::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetScale, XScale) == 0x000010, "Member 'GFxMoviePlayer_SetScale::XScale' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetScale, YScale) == 0x000014, "Member 'GFxMoviePlayer_SetScale::YScale' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetTimingMode
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetTimingMode final
{
public:
	EGFxTimingMode                                TimingMode;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetTimingMode) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetTimingMode");
static_assert(sizeof(GFxMoviePlayer_SetTimingMode) == 0x000001, "Wrong size on GFxMoviePlayer_SetTimingMode");
static_assert(offsetof(GFxMoviePlayer_SetTimingMode, TimingMode) == 0x000000, "Member 'GFxMoviePlayer_SetTimingMode::TimingMode' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetVariableValue
// 0x0058 (0x0058 - 0x0000)
struct GFxMoviePlayer_SetVariableValue final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASValue                               Value;                                             // 0x0020(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetVariableValue) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetVariableValue");
static_assert(sizeof(GFxMoviePlayer_SetVariableValue) == 0x000058, "Wrong size on GFxMoviePlayer_SetVariableValue");
static_assert(offsetof(GFxMoviePlayer_SetVariableValue, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetVariableValue::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetVariableValue, MemberName) == 0x000010, "Member 'GFxMoviePlayer_SetVariableValue::MemberName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetVariableValue, Value) == 0x000020, "Member 'GFxMoviePlayer_SetVariableValue::Value' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetVariableValueArray
// 0x0030 (0x0030 - 0x0000)
struct GFxMoviePlayer_SetVariableValueArray final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       Value;                                             // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetVariableValueArray) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetVariableValueArray");
static_assert(sizeof(GFxMoviePlayer_SetVariableValueArray) == 0x000030, "Wrong size on GFxMoviePlayer_SetVariableValueArray");
static_assert(offsetof(GFxMoviePlayer_SetVariableValueArray, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetVariableValueArray::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetVariableValueArray, MemberName) == 0x000010, "Member 'GFxMoviePlayer_SetVariableValueArray::MemberName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetVariableValueArray, Value) == 0x000020, "Member 'GFxMoviePlayer_SetVariableValueArray::Value' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetView3D
// 0x0060 (0x0060 - 0x0000)
struct GFxMoviePlayer_SetView3D final
{
public:
	struct FTransform                             ViewTransform;                                     // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetView3D) == 0x000010, "Wrong alignment on GFxMoviePlayer_SetView3D");
static_assert(sizeof(GFxMoviePlayer_SetView3D) == 0x000060, "Wrong size on GFxMoviePlayer_SetView3D");
static_assert(offsetof(GFxMoviePlayer_SetView3D, ViewTransform) == 0x000000, "Member 'GFxMoviePlayer_SetView3D::ViewTransform' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetViewport
// 0x0010 (0x0010 - 0x0000)
struct GFxMoviePlayer_SetViewport final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetViewport) == 0x000004, "Wrong alignment on GFxMoviePlayer_SetViewport");
static_assert(sizeof(GFxMoviePlayer_SetViewport) == 0x000010, "Wrong size on GFxMoviePlayer_SetViewport");
static_assert(offsetof(GFxMoviePlayer_SetViewport, X) == 0x000000, "Member 'GFxMoviePlayer_SetViewport::X' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetViewport, Y) == 0x000004, "Member 'GFxMoviePlayer_SetViewport::Y' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetViewport, Width) == 0x000008, "Member 'GFxMoviePlayer_SetViewport::Width' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetViewport, Height) == 0x00000C, "Member 'GFxMoviePlayer_SetViewport::Height' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetViewScaleMode
// 0x0001 (0x0001 - 0x0000)
struct GFxMoviePlayer_SetViewScaleMode final
{
public:
	EGFxScaleMode                                 ScaleMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_SetViewScaleMode) == 0x000001, "Wrong alignment on GFxMoviePlayer_SetViewScaleMode");
static_assert(sizeof(GFxMoviePlayer_SetViewScaleMode) == 0x000001, "Wrong size on GFxMoviePlayer_SetViewScaleMode");
static_assert(offsetof(GFxMoviePlayer_SetViewScaleMode, ScaleMode) == 0x000000, "Member 'GFxMoviePlayer_SetViewScaleMode::ScaleMode' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.SetVisibility
// 0x0018 (0x0018 - 0x0000)
struct GFxMoviePlayer_SetVisibility final
{
public:
	class FString                                 MovieClipName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisible;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxMoviePlayer_SetVisibility) == 0x000008, "Wrong alignment on GFxMoviePlayer_SetVisibility");
static_assert(sizeof(GFxMoviePlayer_SetVisibility) == 0x000018, "Wrong size on GFxMoviePlayer_SetVisibility");
static_assert(offsetof(GFxMoviePlayer_SetVisibility, MovieClipName) == 0x000000, "Member 'GFxMoviePlayer_SetVisibility::MovieClipName' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_SetVisibility, bVisible) == 0x000010, "Member 'GFxMoviePlayer_SetVisibility::bVisible' has a wrong offset!");

// Function ScaleformUI.GFxMoviePlayer.Start
// 0x0002 (0x0002 - 0x0000)
struct GFxMoviePlayer_Start final
{
public:
	bool                                          bRefresh;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxMoviePlayer_Start) == 0x000001, "Wrong alignment on GFxMoviePlayer_Start");
static_assert(sizeof(GFxMoviePlayer_Start) == 0x000002, "Wrong size on GFxMoviePlayer_Start");
static_assert(offsetof(GFxMoviePlayer_Start, bRefresh) == 0x000000, "Member 'GFxMoviePlayer_Start::bRefresh' has a wrong offset!");
static_assert(offsetof(GFxMoviePlayer_Start, ReturnValue) == 0x000001, "Member 'GFxMoviePlayer_Start::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetColorTransform
// 0x0020 (0x0020 - 0x0000)
struct GFxObject_GetColorTransform final
{
public:
	struct FASColorTransform                      ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetColorTransform) == 0x000004, "Wrong alignment on GFxObject_GetColorTransform");
static_assert(sizeof(GFxObject_GetColorTransform) == 0x000020, "Wrong size on GFxObject_GetColorTransform");
static_assert(offsetof(GFxObject_GetColorTransform, ReturnValue) == 0x000000, "Member 'GFxObject_GetColorTransform::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetDisplayInfo
// 0x0048 (0x0048 - 0x0000)
struct GFxObject_GetDisplayInfo final
{
public:
	struct FASDisplayInfo                         ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetDisplayInfo) == 0x000008, "Wrong alignment on GFxObject_GetDisplayInfo");
static_assert(sizeof(GFxObject_GetDisplayInfo) == 0x000048, "Wrong size on GFxObject_GetDisplayInfo");
static_assert(offsetof(GFxObject_GetDisplayInfo, ReturnValue) == 0x000000, "Member 'GFxObject_GetDisplayInfo::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetDisplayTransform
// 0x0060 (0x0060 - 0x0000)
struct GFxObject_GetDisplayTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetDisplayTransform) == 0x000010, "Wrong alignment on GFxObject_GetDisplayTransform");
static_assert(sizeof(GFxObject_GetDisplayTransform) == 0x000060, "Wrong size on GFxObject_GetDisplayTransform");
static_assert(offsetof(GFxObject_GetDisplayTransform, ReturnValue) == 0x000000, "Member 'GFxObject_GetDisplayTransform::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetMemberValue
// 0x0048 (0x0048 - 0x0000)
struct GFxObject_GetMemberValue final
{
public:
	class FString                                 MemberName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0010(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetMemberValue) == 0x000008, "Wrong alignment on GFxObject_GetMemberValue");
static_assert(sizeof(GFxObject_GetMemberValue) == 0x000048, "Wrong size on GFxObject_GetMemberValue");
static_assert(offsetof(GFxObject_GetMemberValue, MemberName) == 0x000000, "Member 'GFxObject_GetMemberValue::MemberName' has a wrong offset!");
static_assert(offsetof(GFxObject_GetMemberValue, ReturnValue) == 0x000010, "Member 'GFxObject_GetMemberValue::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetMemberValueArray
// 0x0020 (0x0020 - 0x0000)
struct GFxObject_GetMemberValueArray final
{
public:
	class FString                                 MemberName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetMemberValueArray) == 0x000008, "Wrong alignment on GFxObject_GetMemberValueArray");
static_assert(sizeof(GFxObject_GetMemberValueArray) == 0x000020, "Wrong size on GFxObject_GetMemberValueArray");
static_assert(offsetof(GFxObject_GetMemberValueArray, MemberName) == 0x000000, "Member 'GFxObject_GetMemberValueArray::MemberName' has a wrong offset!");
static_assert(offsetof(GFxObject_GetMemberValueArray, ReturnValue) == 0x000010, "Member 'GFxObject_GetMemberValueArray::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetPosition
// 0x000C (0x000C - 0x0000)
struct GFxObject_GetPosition final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxObject_GetPosition) == 0x000004, "Wrong alignment on GFxObject_GetPosition");
static_assert(sizeof(GFxObject_GetPosition) == 0x00000C, "Wrong size on GFxObject_GetPosition");
static_assert(offsetof(GFxObject_GetPosition, X) == 0x000000, "Member 'GFxObject_GetPosition::X' has a wrong offset!");
static_assert(offsetof(GFxObject_GetPosition, Y) == 0x000004, "Member 'GFxObject_GetPosition::Y' has a wrong offset!");
static_assert(offsetof(GFxObject_GetPosition, ReturnValue) == 0x000008, "Member 'GFxObject_GetPosition::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetScale
// 0x000C (0x000C - 0x0000)
struct GFxObject_GetScale final
{
public:
	float                                         XScale;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YScale;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GFxObject_GetScale) == 0x000004, "Wrong alignment on GFxObject_GetScale");
static_assert(sizeof(GFxObject_GetScale) == 0x00000C, "Wrong size on GFxObject_GetScale");
static_assert(offsetof(GFxObject_GetScale, XScale) == 0x000000, "Member 'GFxObject_GetScale::XScale' has a wrong offset!");
static_assert(offsetof(GFxObject_GetScale, YScale) == 0x000004, "Member 'GFxObject_GetScale::YScale' has a wrong offset!");
static_assert(offsetof(GFxObject_GetScale, ReturnValue) == 0x000008, "Member 'GFxObject_GetScale::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GetVisible
// 0x0001 (0x0001 - 0x0000)
struct GFxObject_GetVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GetVisible) == 0x000001, "Wrong alignment on GFxObject_GetVisible");
static_assert(sizeof(GFxObject_GetVisible) == 0x000001, "Wrong size on GFxObject_GetVisible");
static_assert(offsetof(GFxObject_GetVisible, ReturnValue) == 0x000000, "Member 'GFxObject_GetVisible::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.GotoAndPlay
// 0x0010 (0x0010 - 0x0000)
struct GFxObject_GotoAndPlay final
{
public:
	class FString                                 FrameString;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GotoAndPlay) == 0x000008, "Wrong alignment on GFxObject_GotoAndPlay");
static_assert(sizeof(GFxObject_GotoAndPlay) == 0x000010, "Wrong size on GFxObject_GotoAndPlay");
static_assert(offsetof(GFxObject_GotoAndPlay, FrameString) == 0x000000, "Member 'GFxObject_GotoAndPlay::FrameString' has a wrong offset!");

// Function ScaleformUI.GFxObject.GotoAndPlayI
// 0x0004 (0x0004 - 0x0000)
struct GFxObject_GotoAndPlayI final
{
public:
	int32                                         FrameNumber;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GotoAndPlayI) == 0x000004, "Wrong alignment on GFxObject_GotoAndPlayI");
static_assert(sizeof(GFxObject_GotoAndPlayI) == 0x000004, "Wrong size on GFxObject_GotoAndPlayI");
static_assert(offsetof(GFxObject_GotoAndPlayI, FrameNumber) == 0x000000, "Member 'GFxObject_GotoAndPlayI::FrameNumber' has a wrong offset!");

// Function ScaleformUI.GFxObject.GotoAndStop
// 0x0010 (0x0010 - 0x0000)
struct GFxObject_GotoAndStop final
{
public:
	class FString                                 FrameString;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GotoAndStop) == 0x000008, "Wrong alignment on GFxObject_GotoAndStop");
static_assert(sizeof(GFxObject_GotoAndStop) == 0x000010, "Wrong size on GFxObject_GotoAndStop");
static_assert(offsetof(GFxObject_GotoAndStop, FrameString) == 0x000000, "Member 'GFxObject_GotoAndStop::FrameString' has a wrong offset!");

// Function ScaleformUI.GFxObject.GotoAndStopI
// 0x0004 (0x0004 - 0x0000)
struct GFxObject_GotoAndStopI final
{
public:
	int32                                         FrameNumber;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_GotoAndStopI) == 0x000004, "Wrong alignment on GFxObject_GotoAndStopI");
static_assert(sizeof(GFxObject_GotoAndStopI) == 0x000004, "Wrong size on GFxObject_GotoAndStopI");
static_assert(offsetof(GFxObject_GotoAndStopI, FrameNumber) == 0x000000, "Member 'GFxObject_GotoAndStopI::FrameNumber' has a wrong offset!");

// Function ScaleformUI.GFxObject.Invoke
// 0x0058 (0x0058 - 0x0000)
struct GFxObject_Invoke final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       Params_0;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0020(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_Invoke) == 0x000008, "Wrong alignment on GFxObject_Invoke");
static_assert(sizeof(GFxObject_Invoke) == 0x000058, "Wrong size on GFxObject_Invoke");
static_assert(offsetof(GFxObject_Invoke, FunctionName) == 0x000000, "Member 'GFxObject_Invoke::FunctionName' has a wrong offset!");
static_assert(offsetof(GFxObject_Invoke, Params_0) == 0x000010, "Member 'GFxObject_Invoke::Params_0' has a wrong offset!");
static_assert(offsetof(GFxObject_Invoke, ReturnValue) == 0x000020, "Member 'GFxObject_Invoke::ReturnValue' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetColorTransform
// 0x0020 (0x0020 - 0x0000)
struct GFxObject_SetColorTransform final
{
public:
	struct FASColorTransform                      UnrealColorTransform;                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetColorTransform) == 0x000004, "Wrong alignment on GFxObject_SetColorTransform");
static_assert(sizeof(GFxObject_SetColorTransform) == 0x000020, "Wrong size on GFxObject_SetColorTransform");
static_assert(offsetof(GFxObject_SetColorTransform, UnrealColorTransform) == 0x000000, "Member 'GFxObject_SetColorTransform::UnrealColorTransform' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetDisplayInfo
// 0x0048 (0x0048 - 0x0000)
struct GFxObject_SetDisplayInfo final
{
public:
	struct FASDisplayInfo                         UnrealDisplayInfo;                                 // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetDisplayInfo) == 0x000008, "Wrong alignment on GFxObject_SetDisplayInfo");
static_assert(sizeof(GFxObject_SetDisplayInfo) == 0x000048, "Wrong size on GFxObject_SetDisplayInfo");
static_assert(offsetof(GFxObject_SetDisplayInfo, UnrealDisplayInfo) == 0x000000, "Member 'GFxObject_SetDisplayInfo::UnrealDisplayInfo' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetDisplayTransform
// 0x0060 (0x0060 - 0x0000)
struct GFxObject_SetDisplayTransform final
{
public:
	struct FTransform                             DisplayTransform;                                  // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetDisplayTransform) == 0x000010, "Wrong alignment on GFxObject_SetDisplayTransform");
static_assert(sizeof(GFxObject_SetDisplayTransform) == 0x000060, "Wrong size on GFxObject_SetDisplayTransform");
static_assert(offsetof(GFxObject_SetDisplayTransform, DisplayTransform) == 0x000000, "Member 'GFxObject_SetDisplayTransform::DisplayTransform' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetMemberValue
// 0x0048 (0x0048 - 0x0000)
struct GFxObject_SetMemberValue final
{
public:
	class FString                                 MemberName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASValue                               Input;                                             // 0x0010(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetMemberValue) == 0x000008, "Wrong alignment on GFxObject_SetMemberValue");
static_assert(sizeof(GFxObject_SetMemberValue) == 0x000048, "Wrong size on GFxObject_SetMemberValue");
static_assert(offsetof(GFxObject_SetMemberValue, MemberName) == 0x000000, "Member 'GFxObject_SetMemberValue::MemberName' has a wrong offset!");
static_assert(offsetof(GFxObject_SetMemberValue, Input) == 0x000010, "Member 'GFxObject_SetMemberValue::Input' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetMemberValueArray
// 0x0028 (0x0028 - 0x0000)
struct GFxObject_SetMemberValueArray final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       Input;                                             // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetMemberValueArray) == 0x000008, "Wrong alignment on GFxObject_SetMemberValueArray");
static_assert(sizeof(GFxObject_SetMemberValueArray) == 0x000028, "Wrong size on GFxObject_SetMemberValueArray");
static_assert(offsetof(GFxObject_SetMemberValueArray, MoviePlayer) == 0x000000, "Member 'GFxObject_SetMemberValueArray::MoviePlayer' has a wrong offset!");
static_assert(offsetof(GFxObject_SetMemberValueArray, MemberName) == 0x000008, "Member 'GFxObject_SetMemberValueArray::MemberName' has a wrong offset!");
static_assert(offsetof(GFxObject_SetMemberValueArray, Input) == 0x000018, "Member 'GFxObject_SetMemberValueArray::Input' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct GFxObject_SetPosition final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetPosition) == 0x000004, "Wrong alignment on GFxObject_SetPosition");
static_assert(sizeof(GFxObject_SetPosition) == 0x000008, "Wrong size on GFxObject_SetPosition");
static_assert(offsetof(GFxObject_SetPosition, X) == 0x000000, "Member 'GFxObject_SetPosition::X' has a wrong offset!");
static_assert(offsetof(GFxObject_SetPosition, Y) == 0x000004, "Member 'GFxObject_SetPosition::Y' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetScale
// 0x0008 (0x0008 - 0x0000)
struct GFxObject_SetScale final
{
public:
	float                                         XScale;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YScale;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetScale) == 0x000004, "Wrong alignment on GFxObject_SetScale");
static_assert(sizeof(GFxObject_SetScale) == 0x000008, "Wrong size on GFxObject_SetScale");
static_assert(offsetof(GFxObject_SetScale, XScale) == 0x000000, "Member 'GFxObject_SetScale::XScale' has a wrong offset!");
static_assert(offsetof(GFxObject_SetScale, YScale) == 0x000004, "Member 'GFxObject_SetScale::YScale' has a wrong offset!");

// Function ScaleformUI.GFxObject.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct GFxObject_SetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GFxObject_SetVisible) == 0x000001, "Wrong alignment on GFxObject_SetVisible");
static_assert(sizeof(GFxObject_SetVisible) == 0x000001, "Wrong size on GFxObject_SetVisible");
static_assert(offsetof(GFxObject_SetVisible, bVisible) == 0x000000, "Member 'GFxObject_SetVisible::bVisible' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.CloseMovie
// 0x0008 (0x0008 - 0x0000)
struct ScaleformBlueprintLibrary_CloseMovie final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_CloseMovie) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_CloseMovie");
static_assert(sizeof(ScaleformBlueprintLibrary_CloseMovie) == 0x000008, "Wrong size on ScaleformBlueprintLibrary_CloseMovie");
static_assert(offsetof(ScaleformBlueprintLibrary_CloseMovie, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_CloseMovie::MoviePlayer' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.GetMember
// 0x0020 (0x0020 - 0x0000)
struct ScaleformBlueprintLibrary_GetMember final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MemberName;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxObject*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_GetMember) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_GetMember");
static_assert(sizeof(ScaleformBlueprintLibrary_GetMember) == 0x000020, "Wrong size on ScaleformBlueprintLibrary_GetMember");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMember, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_GetMember::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMember, MemberName) == 0x000008, "Member 'ScaleformBlueprintLibrary_GetMember::MemberName' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMember, ReturnValue) == 0x000018, "Member 'ScaleformBlueprintLibrary_GetMember::ReturnValue' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.GetMovieClip
// 0x0020 (0x0020 - 0x0000)
struct ScaleformBlueprintLibrary_GetMovieClip final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MovieClipName;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxObject*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_GetMovieClip) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_GetMovieClip");
static_assert(sizeof(ScaleformBlueprintLibrary_GetMovieClip) == 0x000020, "Wrong size on ScaleformBlueprintLibrary_GetMovieClip");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMovieClip, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_GetMovieClip::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMovieClip, MovieClipName) == 0x000008, "Member 'ScaleformBlueprintLibrary_GetMovieClip::MovieClipName' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetMovieClip, ReturnValue) == 0x000018, "Member 'ScaleformBlueprintLibrary_GetMovieClip::ReturnValue' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.GetVariable
// 0x0020 (0x0020 - 0x0000)
struct ScaleformBlueprintLibrary_GetVariable final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VariablePath;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxObject*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_GetVariable) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_GetVariable");
static_assert(sizeof(ScaleformBlueprintLibrary_GetVariable) == 0x000020, "Wrong size on ScaleformBlueprintLibrary_GetVariable");
static_assert(offsetof(ScaleformBlueprintLibrary_GetVariable, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_GetVariable::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetVariable, VariablePath) == 0x000008, "Member 'ScaleformBlueprintLibrary_GetVariable::VariablePath' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_GetVariable, ReturnValue) == 0x000018, "Member 'ScaleformBlueprintLibrary_GetVariable::ReturnValue' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.Invoke
// 0x0060 (0x0060 - 0x0000)
struct ScaleformBlueprintLibrary_Invoke final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FunctionName;                                      // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FASValue>                       Params_0;                                          // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0028(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_Invoke) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_Invoke");
static_assert(sizeof(ScaleformBlueprintLibrary_Invoke) == 0x000060, "Wrong size on ScaleformBlueprintLibrary_Invoke");
static_assert(offsetof(ScaleformBlueprintLibrary_Invoke, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_Invoke::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_Invoke, FunctionName) == 0x000008, "Member 'ScaleformBlueprintLibrary_Invoke::FunctionName' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_Invoke, Params_0) == 0x000018, "Member 'ScaleformBlueprintLibrary_Invoke::Params_0' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_Invoke, ReturnValue) == 0x000028, "Member 'ScaleformBlueprintLibrary_Invoke::ReturnValue' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.InvokeNoParams
// 0x0050 (0x0050 - 0x0000)
struct ScaleformBlueprintLibrary_InvokeNoParams final
{
public:
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FunctionName;                                      // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FASValue                               ReturnValue;                                       // 0x0018(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_InvokeNoParams) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_InvokeNoParams");
static_assert(sizeof(ScaleformBlueprintLibrary_InvokeNoParams) == 0x000050, "Wrong size on ScaleformBlueprintLibrary_InvokeNoParams");
static_assert(offsetof(ScaleformBlueprintLibrary_InvokeNoParams, MoviePlayer) == 0x000000, "Member 'ScaleformBlueprintLibrary_InvokeNoParams::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_InvokeNoParams, FunctionName) == 0x000008, "Member 'ScaleformBlueprintLibrary_InvokeNoParams::FunctionName' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_InvokeNoParams, ReturnValue) == 0x000018, "Member 'ScaleformBlueprintLibrary_InvokeNoParams::ReturnValue' has a wrong offset!");

// Function ScaleformUI.ScaleformBlueprintLibrary.OpenMovie
// 0x0030 (0x0030 - 0x0000)
struct ScaleformBlueprintLibrary_OpenMovie final
{
public:
	class USwfMovie*                              Movie;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ExternalInterface;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 RenderTexture;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxMoviePlayer*                        MoviePlayer;                                       // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisplayWithHudOff;                                 // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StartPaused;                                       // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGFxMoviePlayer*                        ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScaleformBlueprintLibrary_OpenMovie) == 0x000008, "Wrong alignment on ScaleformBlueprintLibrary_OpenMovie");
static_assert(sizeof(ScaleformBlueprintLibrary_OpenMovie) == 0x000030, "Wrong size on ScaleformBlueprintLibrary_OpenMovie");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, Movie) == 0x000000, "Member 'ScaleformBlueprintLibrary_OpenMovie::Movie' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, ExternalInterface) == 0x000008, "Member 'ScaleformBlueprintLibrary_OpenMovie::ExternalInterface' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, RenderTexture) == 0x000010, "Member 'ScaleformBlueprintLibrary_OpenMovie::RenderTexture' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, MoviePlayer) == 0x000018, "Member 'ScaleformBlueprintLibrary_OpenMovie::MoviePlayer' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, DisplayWithHudOff) == 0x000020, "Member 'ScaleformBlueprintLibrary_OpenMovie::DisplayWithHudOff' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, StartPaused) == 0x000021, "Member 'ScaleformBlueprintLibrary_OpenMovie::StartPaused' has a wrong offset!");
static_assert(offsetof(ScaleformBlueprintLibrary_OpenMovie, ReturnValue) == 0x000028, "Member 'ScaleformBlueprintLibrary_OpenMovie::ReturnValue' has a wrong offset!");

}

