#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheTrapper

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TheTrapper.BearTrapKillerComponent.Multicast_DisarmTrap
// 0x0008 (0x0008 - 0x0000)
struct BearTrapKillerComponent_Multicast_DisarmTrap final
{
public:
	class ABearTrap*                              TrapToDisarm;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapKillerComponent_Multicast_DisarmTrap) == 0x000008, "Wrong alignment on BearTrapKillerComponent_Multicast_DisarmTrap");
static_assert(sizeof(BearTrapKillerComponent_Multicast_DisarmTrap) == 0x000008, "Wrong size on BearTrapKillerComponent_Multicast_DisarmTrap");
static_assert(offsetof(BearTrapKillerComponent_Multicast_DisarmTrap, TrapToDisarm) == 0x000000, "Member 'BearTrapKillerComponent_Multicast_DisarmTrap::TrapToDisarm' has a wrong offset!");

// Function TheTrapper.BearTrapKillerComponent.Server_TryDisarmTrap
// 0x0008 (0x0008 - 0x0000)
struct BearTrapKillerComponent_Server_TryDisarmTrap final
{
public:
	class ABearTrap*                              TrapToDisarm;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapKillerComponent_Server_TryDisarmTrap) == 0x000008, "Wrong alignment on BearTrapKillerComponent_Server_TryDisarmTrap");
static_assert(sizeof(BearTrapKillerComponent_Server_TryDisarmTrap) == 0x000008, "Wrong size on BearTrapKillerComponent_Server_TryDisarmTrap");
static_assert(offsetof(BearTrapKillerComponent_Server_TryDisarmTrap, TrapToDisarm) == 0x000000, "Member 'BearTrapKillerComponent_Server_TryDisarmTrap::TrapToDisarm' has a wrong offset!");

// Function TheTrapper.BearTrapOutlineUpdateStrategy.SetOwningBearTrapMapActorComponent
// 0x0008 (0x0008 - 0x0000)
struct BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent final
{
public:
	class UMapActorComponent*                     MapActorComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent) == 0x000008, "Wrong alignment on BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent");
static_assert(sizeof(BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent) == 0x000008, "Wrong size on BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent");
static_assert(offsetof(BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent, MapActorComponent) == 0x000000, "Member 'BearTrapOutlineUpdateStrategy_SetOwningBearTrapMapActorComponent::MapActorComponent' has a wrong offset!");

// Function TheTrapper.BearTrap.Authority_ImposeRevealAuraEffect
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_Authority_ImposeRevealAuraEffect final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_Authority_ImposeRevealAuraEffect) == 0x000008, "Wrong alignment on BearTrap_Authority_ImposeRevealAuraEffect");
static_assert(sizeof(BearTrap_Authority_ImposeRevealAuraEffect) == 0x000008, "Wrong size on BearTrap_Authority_ImposeRevealAuraEffect");
static_assert(offsetof(BearTrap_Authority_ImposeRevealAuraEffect, Survivor) == 0x000000, "Member 'BearTrap_Authority_ImposeRevealAuraEffect::Survivor' has a wrong offset!");

// Function TheTrapper.BearTrap.InitializeMainInteractor
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_InitializeMainInteractor final
{
public:
	class UInteractor*                            Interactor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_InitializeMainInteractor) == 0x000008, "Wrong alignment on BearTrap_InitializeMainInteractor");
static_assert(sizeof(BearTrap_InitializeMainInteractor) == 0x000008, "Wrong size on BearTrap_InitializeMainInteractor");
static_assert(offsetof(BearTrap_InitializeMainInteractor, Interactor) == 0x000000, "Member 'BearTrap_InitializeMainInteractor::Interactor' has a wrong offset!");

// Function TheTrapper.BearTrap.InitializeTrapKillerInteraction
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_InitializeTrapKillerInteraction final
{
public:
	class UInteractionDefinition*                 Interaction;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_InitializeTrapKillerInteraction) == 0x000008, "Wrong alignment on BearTrap_InitializeTrapKillerInteraction");
static_assert(sizeof(BearTrap_InitializeTrapKillerInteraction) == 0x000008, "Wrong size on BearTrap_InitializeTrapKillerInteraction");
static_assert(offsetof(BearTrap_InitializeTrapKillerInteraction, Interaction) == 0x000000, "Member 'BearTrap_InitializeTrapKillerInteraction::Interaction' has a wrong offset!");

// Function TheTrapper.BearTrap.InitializeTrapSurvivorInteraction
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_InitializeTrapSurvivorInteraction final
{
public:
	class UInteractionDefinition*                 Interaction;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_InitializeTrapSurvivorInteraction) == 0x000008, "Wrong alignment on BearTrap_InitializeTrapSurvivorInteraction");
static_assert(sizeof(BearTrap_InitializeTrapSurvivorInteraction) == 0x000008, "Wrong size on BearTrap_InitializeTrapSurvivorInteraction");
static_assert(offsetof(BearTrap_InitializeTrapSurvivorInteraction, Interaction) == 0x000000, "Member 'BearTrap_InitializeTrapSurvivorInteraction::Interaction' has a wrong offset!");

// Function TheTrapper.BearTrap.OnPlayerTrapped
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_OnPlayerTrapped final
{
public:
	class ADBDPlayer*                             TrappedPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_OnPlayerTrapped) == 0x000008, "Wrong alignment on BearTrap_OnPlayerTrapped");
static_assert(sizeof(BearTrap_OnPlayerTrapped) == 0x000008, "Wrong size on BearTrap_OnPlayerTrapped");
static_assert(offsetof(BearTrap_OnPlayerTrapped, TrappedPlayer) == 0x000000, "Member 'BearTrap_OnPlayerTrapped::TrappedPlayer' has a wrong offset!");

// Function TheTrapper.BearTrap.OnSafetyZoneEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BearTrap_OnSafetyZoneEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BearTrap_OnSafetyZoneEndOverlap) == 0x000008, "Wrong alignment on BearTrap_OnSafetyZoneEndOverlap");
static_assert(sizeof(BearTrap_OnSafetyZoneEndOverlap) == 0x000020, "Wrong size on BearTrap_OnSafetyZoneEndOverlap");
static_assert(offsetof(BearTrap_OnSafetyZoneEndOverlap, OverlappedComponent) == 0x000000, "Member 'BearTrap_OnSafetyZoneEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BearTrap_OnSafetyZoneEndOverlap, OtherActor) == 0x000008, "Member 'BearTrap_OnSafetyZoneEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BearTrap_OnSafetyZoneEndOverlap, OtherComp) == 0x000010, "Member 'BearTrap_OnSafetyZoneEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BearTrap_OnSafetyZoneEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BearTrap_OnSafetyZoneEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function TheTrapper.BearTrap.OnTrapDetectionZoneOverlapBegin
// 0x0110 (0x0110 - 0x0000)
struct BearTrap_OnTrapDetectionZoneOverlapBegin final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_OnTrapDetectionZoneOverlapBegin) == 0x000008, "Wrong alignment on BearTrap_OnTrapDetectionZoneOverlapBegin");
static_assert(sizeof(BearTrap_OnTrapDetectionZoneOverlapBegin) == 0x000110, "Wrong size on BearTrap_OnTrapDetectionZoneOverlapBegin");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, OverlappedComponent) == 0x000000, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, OtherActor) == 0x000008, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::OtherActor' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, OtherComp) == 0x000010, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::OtherComp' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, OtherBodyIndex) == 0x000018, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, bFromSweep) == 0x00001C, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::bFromSweep' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapBegin, SweepResult) == 0x000020, "Member 'BearTrap_OnTrapDetectionZoneOverlapBegin::SweepResult' has a wrong offset!");

// Function TheTrapper.BearTrap.OnTrapDetectionZoneOverlapEnd
// 0x0020 (0x0020 - 0x0000)
struct BearTrap_OnTrapDetectionZoneOverlapEnd final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BearTrap_OnTrapDetectionZoneOverlapEnd) == 0x000008, "Wrong alignment on BearTrap_OnTrapDetectionZoneOverlapEnd");
static_assert(sizeof(BearTrap_OnTrapDetectionZoneOverlapEnd) == 0x000020, "Wrong size on BearTrap_OnTrapDetectionZoneOverlapEnd");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapEnd, OverlappedComponent) == 0x000000, "Member 'BearTrap_OnTrapDetectionZoneOverlapEnd::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapEnd, OtherActor) == 0x000008, "Member 'BearTrap_OnTrapDetectionZoneOverlapEnd::OtherActor' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapEnd, OtherComp) == 0x000010, "Member 'BearTrap_OnTrapDetectionZoneOverlapEnd::OtherComp' has a wrong offset!");
static_assert(offsetof(BearTrap_OnTrapDetectionZoneOverlapEnd, OtherBodyIndex) == 0x000018, "Member 'BearTrap_OnTrapDetectionZoneOverlapEnd::OtherBodyIndex' has a wrong offset!");

// Function TheTrapper.BearTrap.OnTrappedPlayerPickedUp
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_OnTrappedPlayerPickedUp final
{
public:
	class ADBDPlayer*                             Picker;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_OnTrappedPlayerPickedUp) == 0x000008, "Wrong alignment on BearTrap_OnTrappedPlayerPickedUp");
static_assert(sizeof(BearTrap_OnTrappedPlayerPickedUp) == 0x000008, "Wrong size on BearTrap_OnTrappedPlayerPickedUp");
static_assert(offsetof(BearTrap_OnTrappedPlayerPickedUp, Picker) == 0x000000, "Member 'BearTrap_OnTrappedPlayerPickedUp::Picker' has a wrong offset!");

// Function TheTrapper.BearTrap.SetTrappedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_SetTrappedPlayer final
{
public:
	class ADBDPlayer*                             TrappedPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_SetTrappedPlayer) == 0x000008, "Wrong alignment on BearTrap_SetTrappedPlayer");
static_assert(sizeof(BearTrap_SetTrappedPlayer) == 0x000008, "Wrong size on BearTrap_SetTrappedPlayer");
static_assert(offsetof(BearTrap_SetTrappedPlayer, TrappedPlayer) == 0x000000, "Member 'BearTrap_SetTrappedPlayer::TrappedPlayer' has a wrong offset!");

// Function TheTrapper.BearTrap.SetTrappedPlayerSinceMoved
// 0x0001 (0x0001 - 0x0000)
struct BearTrap_SetTrappedPlayerSinceMoved final
{
public:
	bool                                          DidTrap;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_SetTrappedPlayerSinceMoved) == 0x000001, "Wrong alignment on BearTrap_SetTrappedPlayerSinceMoved");
static_assert(sizeof(BearTrap_SetTrappedPlayerSinceMoved) == 0x000001, "Wrong size on BearTrap_SetTrappedPlayerSinceMoved");
static_assert(offsetof(BearTrap_SetTrappedPlayerSinceMoved, DidTrap) == 0x000000, "Member 'BearTrap_SetTrappedPlayerSinceMoved::DidTrap' has a wrong offset!");

// Function TheTrapper.BearTrap.TrySetTrappedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_TrySetTrappedPlayer final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_TrySetTrappedPlayer) == 0x000008, "Wrong alignment on BearTrap_TrySetTrappedPlayer");
static_assert(sizeof(BearTrap_TrySetTrappedPlayer) == 0x000008, "Wrong size on BearTrap_TrySetTrappedPlayer");
static_assert(offsetof(BearTrap_TrySetTrappedPlayer, Player) == 0x000000, "Member 'BearTrap_TrySetTrappedPlayer::Player' has a wrong offset!");

// Function TheTrapper.BearTrap.GetAkAudioComponent
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_GetAkAudioComponent final
{
public:
	class UAkComponent*                           ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_GetAkAudioComponent) == 0x000008, "Wrong alignment on BearTrap_GetAkAudioComponent");
static_assert(sizeof(BearTrap_GetAkAudioComponent) == 0x000008, "Wrong size on BearTrap_GetAkAudioComponent");
static_assert(offsetof(BearTrap_GetAkAudioComponent, ReturnValue) == 0x000000, "Member 'BearTrap_GetAkAudioComponent::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.GetAnimInstance
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_GetAnimInstance final
{
public:
	class UBearTrapAnimInstance*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_GetAnimInstance) == 0x000008, "Wrong alignment on BearTrap_GetAnimInstance");
static_assert(sizeof(BearTrap_GetAnimInstance) == 0x000008, "Wrong size on BearTrap_GetAnimInstance");
static_assert(offsetof(BearTrap_GetAnimInstance, ReturnValue) == 0x000000, "Member 'BearTrap_GetAnimInstance::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.GetMaximumAttemptsForSelfUntrap
// 0x0004 (0x0004 - 0x0000)
struct BearTrap_GetMaximumAttemptsForSelfUntrap final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_GetMaximumAttemptsForSelfUntrap) == 0x000004, "Wrong alignment on BearTrap_GetMaximumAttemptsForSelfUntrap");
static_assert(sizeof(BearTrap_GetMaximumAttemptsForSelfUntrap) == 0x000004, "Wrong size on BearTrap_GetMaximumAttemptsForSelfUntrap");
static_assert(offsetof(BearTrap_GetMaximumAttemptsForSelfUntrap, ReturnValue) == 0x000000, "Member 'BearTrap_GetMaximumAttemptsForSelfUntrap::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.GetSelfUntrapAttemptsRemaining
// 0x0004 (0x0004 - 0x0000)
struct BearTrap_GetSelfUntrapAttemptsRemaining final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_GetSelfUntrapAttemptsRemaining) == 0x000004, "Wrong alignment on BearTrap_GetSelfUntrapAttemptsRemaining");
static_assert(sizeof(BearTrap_GetSelfUntrapAttemptsRemaining) == 0x000004, "Wrong size on BearTrap_GetSelfUntrapAttemptsRemaining");
static_assert(offsetof(BearTrap_GetSelfUntrapAttemptsRemaining, ReturnValue) == 0x000000, "Member 'BearTrap_GetSelfUntrapAttemptsRemaining::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.GetTrappedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_GetTrappedPlayer final
{
public:
	class ADBDPlayer*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_GetTrappedPlayer) == 0x000008, "Wrong alignment on BearTrap_GetTrappedPlayer");
static_assert(sizeof(BearTrap_GetTrappedPlayer) == 0x000008, "Wrong size on BearTrap_GetTrappedPlayer");
static_assert(offsetof(BearTrap_GetTrappedPlayer, ReturnValue) == 0x000000, "Member 'BearTrap_GetTrappedPlayer::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.HasTrappedPlayer
// 0x0001 (0x0001 - 0x0000)
struct BearTrap_HasTrappedPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_HasTrappedPlayer) == 0x000001, "Wrong alignment on BearTrap_HasTrappedPlayer");
static_assert(sizeof(BearTrap_HasTrappedPlayer) == 0x000001, "Wrong size on BearTrap_HasTrappedPlayer");
static_assert(offsetof(BearTrap_HasTrappedPlayer, ReturnValue) == 0x000000, "Member 'BearTrap_HasTrappedPlayer::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.HasTrappedPlayerSinceMoved
// 0x0001 (0x0001 - 0x0000)
struct BearTrap_HasTrappedPlayerSinceMoved final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_HasTrappedPlayerSinceMoved) == 0x000001, "Wrong alignment on BearTrap_HasTrappedPlayerSinceMoved");
static_assert(sizeof(BearTrap_HasTrappedPlayerSinceMoved) == 0x000001, "Wrong size on BearTrap_HasTrappedPlayerSinceMoved");
static_assert(offsetof(BearTrap_HasTrappedPlayerSinceMoved, ReturnValue) == 0x000000, "Member 'BearTrap_HasTrappedPlayerSinceMoved::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.IsTrapperOutOfSafetyZone
// 0x0001 (0x0001 - 0x0000)
struct BearTrap_IsTrapperOutOfSafetyZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_IsTrapperOutOfSafetyZone) == 0x000001, "Wrong alignment on BearTrap_IsTrapperOutOfSafetyZone");
static_assert(sizeof(BearTrap_IsTrapperOutOfSafetyZone) == 0x000001, "Wrong size on BearTrap_IsTrapperOutOfSafetyZone");
static_assert(offsetof(BearTrap_IsTrapperOutOfSafetyZone, ReturnValue) == 0x000000, "Member 'BearTrap_IsTrapperOutOfSafetyZone::ReturnValue' has a wrong offset!");

// Function TheTrapper.BearTrap.PlayMontage
// 0x0008 (0x0008 - 0x0000)
struct BearTrap_PlayMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrap_PlayMontage) == 0x000008, "Wrong alignment on BearTrap_PlayMontage");
static_assert(sizeof(BearTrap_PlayMontage) == 0x000008, "Wrong size on BearTrap_PlayMontage");
static_assert(offsetof(BearTrap_PlayMontage, Montage) == 0x000000, "Member 'BearTrap_PlayMontage::Montage' has a wrong offset!");

// Function TheTrapper.BearTrapAnimInstance.SetContainsSurvivor
// 0x0001 (0x0001 - 0x0000)
struct BearTrapAnimInstance_SetContainsSurvivor final
{
public:
	bool                                          ContainsSurvivor;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapAnimInstance_SetContainsSurvivor) == 0x000001, "Wrong alignment on BearTrapAnimInstance_SetContainsSurvivor");
static_assert(sizeof(BearTrapAnimInstance_SetContainsSurvivor) == 0x000001, "Wrong size on BearTrapAnimInstance_SetContainsSurvivor");
static_assert(offsetof(BearTrapAnimInstance_SetContainsSurvivor, ContainsSurvivor) == 0x000000, "Member 'BearTrapAnimInstance_SetContainsSurvivor::ContainsSurvivor' has a wrong offset!");

// Function TheTrapper.BearTrapAnimInstance.SetIsBeingCollected
// 0x0001 (0x0001 - 0x0000)
struct BearTrapAnimInstance_SetIsBeingCollected final
{
public:
	bool                                          IsBeingCollected;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapAnimInstance_SetIsBeingCollected) == 0x000001, "Wrong alignment on BearTrapAnimInstance_SetIsBeingCollected");
static_assert(sizeof(BearTrapAnimInstance_SetIsBeingCollected) == 0x000001, "Wrong size on BearTrapAnimInstance_SetIsBeingCollected");
static_assert(offsetof(BearTrapAnimInstance_SetIsBeingCollected, IsBeingCollected) == 0x000000, "Member 'BearTrapAnimInstance_SetIsBeingCollected::IsBeingCollected' has a wrong offset!");

// Function TheTrapper.BearTrapAnimInstance.SetIsTrapSet
// 0x0001 (0x0001 - 0x0000)
struct BearTrapAnimInstance_SetIsTrapSet final
{
public:
	bool                                          IsTrapSet;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapAnimInstance_SetIsTrapSet) == 0x000001, "Wrong alignment on BearTrapAnimInstance_SetIsTrapSet");
static_assert(sizeof(BearTrapAnimInstance_SetIsTrapSet) == 0x000001, "Wrong size on BearTrapAnimInstance_SetIsTrapSet");
static_assert(offsetof(BearTrapAnimInstance_SetIsTrapSet, IsTrapSet) == 0x000000, "Member 'BearTrapAnimInstance_SetIsTrapSet::IsTrapSet' has a wrong offset!");

// Function TheTrapper.BearTrapAnimInstance.SetWasJustDisarmed
// 0x0001 (0x0001 - 0x0000)
struct BearTrapAnimInstance_SetWasJustDisarmed final
{
public:
	bool                                          WasJustDisarmed;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapAnimInstance_SetWasJustDisarmed) == 0x000001, "Wrong alignment on BearTrapAnimInstance_SetWasJustDisarmed");
static_assert(sizeof(BearTrapAnimInstance_SetWasJustDisarmed) == 0x000001, "Wrong size on BearTrapAnimInstance_SetWasJustDisarmed");
static_assert(offsetof(BearTrapAnimInstance_SetWasJustDisarmed, WasJustDisarmed) == 0x000000, "Member 'BearTrapAnimInstance_SetWasJustDisarmed::WasJustDisarmed' has a wrong offset!");

// Function TheTrapper.BearTrapAnimInstance.KillerHasBearTrapNoDamageModifier
// 0x0001 (0x0001 - 0x0000)
struct BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier) == 0x000001, "Wrong alignment on BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier");
static_assert(sizeof(BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier) == 0x000001, "Wrong size on BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier");
static_assert(offsetof(BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier, ReturnValue) == 0x000000, "Member 'BearTrapAnimInstance_KillerHasBearTrapNoDamageModifier::ReturnValue' has a wrong offset!");

// Function TheTrapper.SetBearTrap.GetHasteEffectDurationSeconds
// 0x0004 (0x0004 - 0x0000)
struct SetBearTrap_GetHasteEffectDurationSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SetBearTrap_GetHasteEffectDurationSeconds) == 0x000004, "Wrong alignment on SetBearTrap_GetHasteEffectDurationSeconds");
static_assert(sizeof(SetBearTrap_GetHasteEffectDurationSeconds) == 0x000004, "Wrong size on SetBearTrap_GetHasteEffectDurationSeconds");
static_assert(offsetof(SetBearTrap_GetHasteEffectDurationSeconds, ReturnValue) == 0x000000, "Member 'SetBearTrap_GetHasteEffectDurationSeconds::ReturnValue' has a wrong offset!");

// Function TheTrapper.SetBearTrap.GetHasteEffectMovementSpeedIncrease
// 0x0004 (0x0004 - 0x0000)
struct SetBearTrap_GetHasteEffectMovementSpeedIncrease final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SetBearTrap_GetHasteEffectMovementSpeedIncrease) == 0x000004, "Wrong alignment on SetBearTrap_GetHasteEffectMovementSpeedIncrease");
static_assert(sizeof(SetBearTrap_GetHasteEffectMovementSpeedIncrease) == 0x000004, "Wrong size on SetBearTrap_GetHasteEffectMovementSpeedIncrease");
static_assert(offsetof(SetBearTrap_GetHasteEffectMovementSpeedIncrease, ReturnValue) == 0x000000, "Member 'SetBearTrap_GetHasteEffectMovementSpeedIncrease::ReturnValue' has a wrong offset!");

// Function TheTrapper.Untrap.GetTrap
// 0x0008 (0x0008 - 0x0000)
struct Untrap_GetTrap final
{
public:
	class ABearTrap*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Untrap_GetTrap) == 0x000008, "Wrong alignment on Untrap_GetTrap");
static_assert(sizeof(Untrap_GetTrap) == 0x000008, "Wrong size on Untrap_GetTrap");
static_assert(offsetof(Untrap_GetTrap, ReturnValue) == 0x000000, "Member 'Untrap_GetTrap::ReturnValue' has a wrong offset!");

}

