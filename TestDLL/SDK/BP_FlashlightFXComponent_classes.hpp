#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlashlightFXComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDGameplay_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlashlightFXComponent.BP_FlashlightFXComponent_C
// 0x0070 (0x02C8 - 0x0258)
class UBP_FlashlightFXComponent_C final : public UFlashlightFXComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Emissive_Flashlight_Intensity;                     // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightColor;                                        // 0x0268(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lenght;                                            // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Minimum_Fade;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ParticleSize;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialHelper*                        GlowMaterialHelper;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CenterGlowParticles;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_FlashlightBeamParticles;                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_IntensityByLenght;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_IntensityByBlinding;                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_IntensityByLenght_TPV;                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void VerifyInitialization();
	void UpdateCurrentBeamParticles();
	void UpdateConeEvent(float Length, float HalfAngle);
	void Update_Glow_Colour();
	void SetParticlesActive(bool Active);
	void ReceiveBeginPlay();
	void PostUpdateEvent();
	void OnStopEvent();
	void OnStartEvent();
	void OnDroppedEvent();
	void OnCollectorLocallyObservedChangedEvent(bool Param_IsLocallyObserved);
	void OnCollectedEvent(class ADBDPlayer* Collector);
	void ExecuteUbergraph_BP_FlashlightFXComponent(int32 EntryPoint);

	void IsLocallyObserved(bool* Result) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlashlightFXComponent_C">();
	}
	static class UBP_FlashlightFXComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FlashlightFXComponent_C>();
	}
};
static_assert(alignof(UBP_FlashlightFXComponent_C) == 0x000008, "Wrong alignment on UBP_FlashlightFXComponent_C");
static_assert(sizeof(UBP_FlashlightFXComponent_C) == 0x0002C8, "Wrong size on UBP_FlashlightFXComponent_C");
static_assert(offsetof(UBP_FlashlightFXComponent_C, UberGraphFrame) == 0x000258, "Member 'UBP_FlashlightFXComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Emissive_Flashlight_Intensity) == 0x000260, "Member 'UBP_FlashlightFXComponent_C::Emissive_Flashlight_Intensity' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, LightColor) == 0x000268, "Member 'UBP_FlashlightFXComponent_C::LightColor' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Lenght) == 0x000280, "Member 'UBP_FlashlightFXComponent_C::Lenght' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Minimum_Fade) == 0x000288, "Member 'UBP_FlashlightFXComponent_C::Minimum_Fade' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, ParticleSize) == 0x000290, "Member 'UBP_FlashlightFXComponent_C::ParticleSize' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, GlowMaterialHelper) == 0x000298, "Member 'UBP_FlashlightFXComponent_C::GlowMaterialHelper' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, CenterGlowParticles) == 0x0002A0, "Member 'UBP_FlashlightFXComponent_C::CenterGlowParticles' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, NS_FlashlightBeamParticles) == 0x0002A8, "Member 'UBP_FlashlightFXComponent_C::NS_FlashlightBeamParticles' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Curve_IntensityByLenght) == 0x0002B0, "Member 'UBP_FlashlightFXComponent_C::Curve_IntensityByLenght' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Curve_IntensityByBlinding) == 0x0002B8, "Member 'UBP_FlashlightFXComponent_C::Curve_IntensityByBlinding' has a wrong offset!");
static_assert(offsetof(UBP_FlashlightFXComponent_C, Curve_IntensityByLenght_TPV) == 0x0002C0, "Member 'UBP_FlashlightFXComponent_C::Curve_IntensityByLenght_TPV' has a wrong offset!");

}

