#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreHudRoot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreHudRoot.WBP_CoreHudRoot_C.SetWidgetsVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreHudRoot_C_SetWidgetsVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHudRoot_C_SetWidgetsVisibility) == 0x000001, "Wrong alignment on WBP_CoreHudRoot_C_SetWidgetsVisibility");
static_assert(sizeof(WBP_CoreHudRoot_C_SetWidgetsVisibility) == 0x000001, "Wrong size on WBP_CoreHudRoot_C_SetWidgetsVisibility");
static_assert(offsetof(WBP_CoreHudRoot_C_SetWidgetsVisibility, Visible) == 0x000000, "Member 'WBP_CoreHudRoot_C_SetWidgetsVisibility::Visible' has a wrong offset!");

// Function WBP_CoreHudRoot.WBP_CoreHudRoot_C.ScalePadding
// 0x0048 (0x0048 - 0x0000)
struct WBP_CoreHudRoot_C_ScalePadding final
{
public:
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHudRoot_C_ScalePadding) == 0x000008, "Wrong alignment on WBP_CoreHudRoot_C_ScalePadding");
static_assert(sizeof(WBP_CoreHudRoot_C_ScalePadding) == 0x000048, "Wrong size on WBP_CoreHudRoot_C_ScalePadding");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000000, "Member 'WBP_CoreHudRoot_C_ScalePadding::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_CoreHudRoot_C_ScalePadding::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'WBP_CoreHudRoot_C_ScalePadding::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'WBP_CoreHudRoot_C_ScalePadding::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, K2Node_MakeStruct_Margin) == 0x000020, "Member 'WBP_CoreHudRoot_C_ScalePadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, CallFunc_FClamp_Value_ImplicitCast) == 0x000030, "Member 'WBP_CoreHudRoot_C_ScalePadding::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, K2Node_MakeStruct_Top_ImplicitCast) == 0x000038, "Member 'WBP_CoreHudRoot_C_ScalePadding::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, K2Node_MakeStruct_Left_ImplicitCast) == 0x00003C, "Member 'WBP_CoreHudRoot_C_ScalePadding::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ScalePadding, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x000040, "Member 'WBP_CoreHudRoot_C_ScalePadding::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");

// Function WBP_CoreHudRoot.WBP_CoreHudRoot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreHudRoot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHudRoot_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreHudRoot_C_PreConstruct");
static_assert(sizeof(WBP_CoreHudRoot_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreHudRoot_C_PreConstruct");
static_assert(offsetof(WBP_CoreHudRoot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreHudRoot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreHudRoot.WBP_CoreHudRoot_C.ExecuteUbergraph_WBP_CoreHudRoot
// 0x0040 (0x0040 - 0x0000)
struct WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_visible;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isConstrained;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_aspectRatio;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot) == 0x000008, "Wrong alignment on WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot");
static_assert(sizeof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot) == 0x000040, "Wrong size on WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, EntryPoint) == 0x000000, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, K2Node_Event_visible) == 0x000018, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::K2Node_Event_visible' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, K2Node_Event_isConstrained) == 0x000038, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::K2Node_Event_isConstrained' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot, K2Node_Event_aspectRatio) == 0x00003C, "Member 'WBP_CoreHudRoot_C_ExecuteUbergraph_WBP_CoreHudRoot::K2Node_Event_aspectRatio' has a wrong offset!");

// Function WBP_CoreHudRoot.WBP_CoreHudRoot_C.ApplyConstrainedAspectRatio
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio final
{
public:
	bool                                          IsConstrained;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AspectRatio;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio) == 0x000004, "Wrong alignment on WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio");
static_assert(sizeof(WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio) == 0x000008, "Wrong size on WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio");
static_assert(offsetof(WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio, IsConstrained) == 0x000000, "Member 'WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio::IsConstrained' has a wrong offset!");
static_assert(offsetof(WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio, AspectRatio) == 0x000004, "Member 'WBP_CoreHudRoot_C_ApplyConstrainedAspectRatio::AspectRatio' has a wrong offset!");

}

