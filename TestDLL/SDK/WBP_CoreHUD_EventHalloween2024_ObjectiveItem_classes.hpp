#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreHUD_EventHalloween2024_ObjectiveItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreHUD_EventHalloween2024_ObjectiveItem.WBP_CoreHUD_EventHalloween2024_ObjectiveItem_C
// 0x00B0 (0x0418 - 0x0368)
class UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C final : public UCoreHudEventObjectiveItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       KillerFull;                                        // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SurvivorFull;                                      // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UDBDImage*                              Border;                                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          ChargeCountTB;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              ChargeGauge;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ChargesContainer;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              CooldownGauge;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Icon;                                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CoreInputPrompt_C*                 InputPrompt;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Smoke;                                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           InactiveColor;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PauseColor;                                        // 0x03D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ChargeMaterial;                                    // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ActiveColor;                                       // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Local_Killer;                                   // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ChargeGaugeFadeDuration;                           // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CooldownMaterial;                                  // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Charges;                                           // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCharges(int32 NewChargeCount);
	void ShowGauge(bool FadeIn, const struct FLinearColor& Color);
	void SetWidgetState(const EEventObjectiveItemState EventItemState);
	void SetWidgetData(const EEventObjectiveItemState EventItemState, const int32 Param_Charges, const int32 MaxCharges, const float ChargePercent);
	void SetInputKey(const struct FKey& InputKey);
	void SetCooldownPercentage(const float CooldownPercent);
	void SetChargePercentage(const float ChargePercent);
	void SetAvailableCharges(const int32 Param_Charges, const int32 MaxCharges);
	void SetActive(bool IsActive);
	void ResetAnimations(EEventObjectiveItemState NewState);
	void InitWidget(bool IsLocalKiller);
	void Finished_6F5DB940427F3007AF8ADB85827C22DF();
	void Finished_0B8D10F445646EA6CC3E2D91F05B719A();
	void ExecuteUbergraph_WBP_CoreHUD_EventHalloween2024_ObjectiveItem(int32 EntryPoint);
	void Construct();
	void ClearData();
	void ChangeInputVisibility(bool Show);
	void ChangeChargesVisibility(bool Show);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreHUD_EventHalloween2024_ObjectiveItem_C">();
	}
	static class UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C>();
	}
};
static_assert(alignof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C) == 0x000008, "Wrong alignment on UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C");
static_assert(sizeof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C) == 0x000418, "Wrong size on UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, UberGraphFrame) == 0x000368, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, KillerFull) == 0x000370, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::KillerFull' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, SurvivorFull) == 0x000378, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::SurvivorFull' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, Border) == 0x000380, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ChargeCountTB) == 0x000388, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ChargeCountTB' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ChargeGauge) == 0x000390, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ChargeGauge' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ChargesContainer) == 0x000398, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ChargesContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, CooldownGauge) == 0x0003A0, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::CooldownGauge' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, Icon) == 0x0003A8, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, InputPrompt) == 0x0003B0, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::InputPrompt' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, Smoke) == 0x0003B8, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::Smoke' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, InactiveColor) == 0x0003C0, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::InactiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, PauseColor) == 0x0003D0, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::PauseColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ChargeMaterial) == 0x0003E0, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ChargeMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ActiveColor) == 0x0003E8, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ActiveColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, Is_Local_Killer) == 0x0003F8, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::Is_Local_Killer' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, ChargeGaugeFadeDuration) == 0x000400, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::ChargeGaugeFadeDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, CooldownMaterial) == 0x000408, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::CooldownMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C, Charges) == 0x000410, "Member 'UWBP_CoreHUD_EventHalloween2024_ObjectiveItem_C::Charges' has a wrong offset!");

}

