#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreUtilities

#include "Basic.hpp"


namespace SDK::Params
{

// Function CoreUtilities.CoreUtilities.GetGameInstance
// 0x0010 (0x0010 - 0x0000)
struct CoreUtilities_GetGameInstance final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameInstance*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoreUtilities_GetGameInstance) == 0x000008, "Wrong alignment on CoreUtilities_GetGameInstance");
static_assert(sizeof(CoreUtilities_GetGameInstance) == 0x000010, "Wrong size on CoreUtilities_GetGameInstance");
static_assert(offsetof(CoreUtilities_GetGameInstance, WorldContextObject) == 0x000000, "Member 'CoreUtilities_GetGameInstance::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CoreUtilities_GetGameInstance, ReturnValue) == 0x000008, "Member 'CoreUtilities_GetGameInstance::ReturnValue' has a wrong offset!");

// Function CoreUtilities.CoreUtilities.GetGlobalWorld
// 0x0008 (0x0008 - 0x0000)
struct CoreUtilities_GetGlobalWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoreUtilities_GetGlobalWorld) == 0x000008, "Wrong alignment on CoreUtilities_GetGlobalWorld");
static_assert(sizeof(CoreUtilities_GetGlobalWorld) == 0x000008, "Wrong size on CoreUtilities_GetGlobalWorld");
static_assert(offsetof(CoreUtilities_GetGlobalWorld, ReturnValue) == 0x000000, "Member 'CoreUtilities_GetGlobalWorld::ReturnValue' has a wrong offset!");

// Function CoreUtilities.CoreUtilities.GetRandomValuesFromArray
// 0x0028 (0x0028 - 0x0000)
struct CoreUtilities_GetRandomValuesFromArray final
{
public:
	TArray<int32>                                 Values;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         NumberOfDesiredValues;                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoreUtilities_GetRandomValuesFromArray) == 0x000008, "Wrong alignment on CoreUtilities_GetRandomValuesFromArray");
static_assert(sizeof(CoreUtilities_GetRandomValuesFromArray) == 0x000028, "Wrong size on CoreUtilities_GetRandomValuesFromArray");
static_assert(offsetof(CoreUtilities_GetRandomValuesFromArray, Values) == 0x000000, "Member 'CoreUtilities_GetRandomValuesFromArray::Values' has a wrong offset!");
static_assert(offsetof(CoreUtilities_GetRandomValuesFromArray, NumberOfDesiredValues) == 0x000010, "Member 'CoreUtilities_GetRandomValuesFromArray::NumberOfDesiredValues' has a wrong offset!");
static_assert(offsetof(CoreUtilities_GetRandomValuesFromArray, ReturnValue) == 0x000018, "Member 'CoreUtilities_GetRandomValuesFromArray::ReturnValue' has a wrong offset!");

// Function CoreUtilities.CoreUtilities.GetWorldFromContext
// 0x0010 (0x0010 - 0x0000)
struct CoreUtilities_GetWorldFromContext final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoreUtilities_GetWorldFromContext) == 0x000008, "Wrong alignment on CoreUtilities_GetWorldFromContext");
static_assert(sizeof(CoreUtilities_GetWorldFromContext) == 0x000010, "Wrong size on CoreUtilities_GetWorldFromContext");
static_assert(offsetof(CoreUtilities_GetWorldFromContext, WorldContextObject) == 0x000000, "Member 'CoreUtilities_GetWorldFromContext::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CoreUtilities_GetWorldFromContext, ReturnValue) == 0x000008, "Member 'CoreUtilities_GetWorldFromContext::ReturnValue' has a wrong offset!");

// Function CoreUtilities.PropertyParser.CopyProperties
// 0x0028 (0x0028 - 0x0000)
struct PropertyParser_CopyProperties final
{
public:
	class UActorComponent*                        Dest;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UActorComponent*                  Origin;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CopyTransform;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PropertiesToExclude;                               // 0x0018(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyParser_CopyProperties) == 0x000008, "Wrong alignment on PropertyParser_CopyProperties");
static_assert(sizeof(PropertyParser_CopyProperties) == 0x000028, "Wrong size on PropertyParser_CopyProperties");
static_assert(offsetof(PropertyParser_CopyProperties, Dest) == 0x000000, "Member 'PropertyParser_CopyProperties::Dest' has a wrong offset!");
static_assert(offsetof(PropertyParser_CopyProperties, Origin) == 0x000008, "Member 'PropertyParser_CopyProperties::Origin' has a wrong offset!");
static_assert(offsetof(PropertyParser_CopyProperties, CopyTransform) == 0x000010, "Member 'PropertyParser_CopyProperties::CopyTransform' has a wrong offset!");
static_assert(offsetof(PropertyParser_CopyProperties, PropertiesToExclude) == 0x000018, "Member 'PropertyParser_CopyProperties::PropertiesToExclude' has a wrong offset!");

}

