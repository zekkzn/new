#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreHUD_EventProgression_2023

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"
#include "DBDUIViewInterfaces_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UITween_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CoreHUD_EventProgression_2023.WBP_CoreHUD_EventProgression_2023_C
// 0x0100 (0x0440 - 0x0340)
class UWBP_CoreHUD_EventProgression_2023_C final : public UCoreHudEventProgression2023Widget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              EventGauge;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              GaugeBackgroundGlow;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Icon;                                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Separator;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GaugeDynamicMaterial;                              // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHudEventProgression2023ViewData       CachedData;                                        // 0x0370(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FLinearColor                           LostColor;                                         // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GainColor;                                         // 0x0394(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HauntingColor;                                     // 0x03A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutZoneEnergyColor;                                // 0x03B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InZoneEnergyColor;                                 // 0x03C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconInZoneColor;                                   // 0x03D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconDefaultColor;                                  // 0x03E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GaugeAnimDuration;                                 // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GaugeAnimDelay;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingType                                   GaugeAnimEasingType;                               // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHudEventProgression2023ViewData       NewData;                                           // 0x040C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	double                                        ChannelingAnimDuration;                            // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingType                                   ChannelingAnimEasingType;                          // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TextOpacityAnimDuration;                           // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingType                                   TextOpacityAnimEasingType;                         // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantRefresh;                                    // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateVoidZoneState(const struct FHudEventProgression2023ViewData& HudEventProgressionViewData);
	void UpdateIconColors(const struct FLinearColor& Color);
	void UpdateHauntTarget(const struct FHudEventProgression2023ViewData& HudEventProgressionViewData);
	void UpdateEnergyProgress(const struct FHudEventProgression2023ViewData& HudEventProgressionViewData);
	void StopTweens();
	void SetHauntingTarget();
	void SetEnergyProgress();
	void Reset();
	void OnLossUpdate(class UUITweenInstance* Tween);
	void OnEnergyupdate(class UUITweenInstance* Tween);
	void InitEventProgression(const struct FHudEventProgression2023ViewData& HudEventProgressionViewData);
	void ExecuteUbergraph_WBP_CoreHUD_EventProgression_2023(int32 EntryPoint);
	void EnableEventProgression(const bool IsEnabled);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CoreHUD_EventProgression_2023_C">();
	}
	static class UWBP_CoreHUD_EventProgression_2023_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CoreHUD_EventProgression_2023_C>();
	}
};
static_assert(alignof(UWBP_CoreHUD_EventProgression_2023_C) == 0x000008, "Wrong alignment on UWBP_CoreHUD_EventProgression_2023_C");
static_assert(sizeof(UWBP_CoreHUD_EventProgression_2023_C) == 0x000440, "Wrong size on UWBP_CoreHUD_EventProgression_2023_C");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, UberGraphFrame) == 0x000340, "Member 'UWBP_CoreHUD_EventProgression_2023_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, EventGauge) == 0x000348, "Member 'UWBP_CoreHUD_EventProgression_2023_C::EventGauge' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GaugeBackgroundGlow) == 0x000350, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GaugeBackgroundGlow' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, Icon) == 0x000358, "Member 'UWBP_CoreHUD_EventProgression_2023_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, Separator) == 0x000360, "Member 'UWBP_CoreHUD_EventProgression_2023_C::Separator' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GaugeDynamicMaterial) == 0x000368, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GaugeDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, CachedData) == 0x000370, "Member 'UWBP_CoreHUD_EventProgression_2023_C::CachedData' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, LostColor) == 0x000384, "Member 'UWBP_CoreHUD_EventProgression_2023_C::LostColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GainColor) == 0x000394, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GainColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, HauntingColor) == 0x0003A4, "Member 'UWBP_CoreHUD_EventProgression_2023_C::HauntingColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, OutZoneEnergyColor) == 0x0003B4, "Member 'UWBP_CoreHUD_EventProgression_2023_C::OutZoneEnergyColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, InZoneEnergyColor) == 0x0003C4, "Member 'UWBP_CoreHUD_EventProgression_2023_C::InZoneEnergyColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, IconInZoneColor) == 0x0003D4, "Member 'UWBP_CoreHUD_EventProgression_2023_C::IconInZoneColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, IconDefaultColor) == 0x0003E4, "Member 'UWBP_CoreHUD_EventProgression_2023_C::IconDefaultColor' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GaugeAnimDuration) == 0x0003F8, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GaugeAnimDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GaugeAnimDelay) == 0x000400, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GaugeAnimDelay' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, GaugeAnimEasingType) == 0x000408, "Member 'UWBP_CoreHUD_EventProgression_2023_C::GaugeAnimEasingType' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, NewData) == 0x00040C, "Member 'UWBP_CoreHUD_EventProgression_2023_C::NewData' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, ChannelingAnimDuration) == 0x000420, "Member 'UWBP_CoreHUD_EventProgression_2023_C::ChannelingAnimDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, ChannelingAnimEasingType) == 0x000428, "Member 'UWBP_CoreHUD_EventProgression_2023_C::ChannelingAnimEasingType' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, TextOpacityAnimDuration) == 0x000430, "Member 'UWBP_CoreHUD_EventProgression_2023_C::TextOpacityAnimDuration' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, TextOpacityAnimEasingType) == 0x000438, "Member 'UWBP_CoreHUD_EventProgression_2023_C::TextOpacityAnimEasingType' has a wrong offset!");
static_assert(offsetof(UWBP_CoreHUD_EventProgression_2023_C, InstantRefresh) == 0x000439, "Member 'UWBP_CoreHUD_EventProgression_2023_C::InstantRefresh' has a wrong offset!");

}

