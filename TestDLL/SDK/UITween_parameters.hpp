#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UITween

#include "Basic.hpp"

#include "UITween_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UITween.UITween.Clear
// 0x0008 (0x0008 - 0x0000)
struct UITween_Clear final
{
public:
	class UWidget*                                TargetWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITween_Clear) == 0x000008, "Wrong alignment on UITween_Clear");
static_assert(sizeof(UITween_Clear) == 0x000008, "Wrong size on UITween_Clear");
static_assert(offsetof(UITween_Clear, TargetWidget) == 0x000000, "Member 'UITween_Clear::TargetWidget' has a wrong offset!");

// Function UITween.UITween.Create
// 0x0020 (0x0020 - 0x0000)
struct UITween_Create final
{
public:
	class UWidget*                                TargetWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEasingType                                   Easing;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITween_Create) == 0x000008, "Wrong alignment on UITween_Create");
static_assert(sizeof(UITween_Create) == 0x000020, "Wrong size on UITween_Create");
static_assert(offsetof(UITween_Create, TargetWidget) == 0x000000, "Member 'UITween_Create::TargetWidget' has a wrong offset!");
static_assert(offsetof(UITween_Create, Duration) == 0x000008, "Member 'UITween_Create::Duration' has a wrong offset!");
static_assert(offsetof(UITween_Create, Delay) == 0x00000C, "Member 'UITween_Create::Delay' has a wrong offset!");
static_assert(offsetof(UITween_Create, Easing) == 0x000010, "Member 'UITween_Create::Easing' has a wrong offset!");
static_assert(offsetof(UITween_Create, ReturnValue) == 0x000018, "Member 'UITween_Create::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.Easing
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_Easing final
{
public:
	EEasingType                                   InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_Easing) == 0x000008, "Wrong alignment on UITweenInstance_Easing");
static_assert(sizeof(UITweenInstance_Easing) == 0x000010, "Wrong size on UITweenInstance_Easing");
static_assert(offsetof(UITweenInstance_Easing, InType) == 0x000000, "Member 'UITweenInstance_Easing::InType' has a wrong offset!");
static_assert(offsetof(UITweenInstance_Easing, ReturnValue) == 0x000008, "Member 'UITweenInstance_Easing::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromColor
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_FromColor final
{
public:
	struct FLinearColor                           StartValue;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromColor) == 0x000008, "Wrong alignment on UITweenInstance_FromColor");
static_assert(sizeof(UITweenInstance_FromColor) == 0x000018, "Wrong size on UITweenInstance_FromColor");
static_assert(offsetof(UITweenInstance_FromColor, StartValue) == 0x000000, "Member 'UITweenInstance_FromColor::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromColor, ReturnValue) == 0x000010, "Member 'UITweenInstance_FromColor::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromMaterialScalarParameter
// 0x0020 (0x0020 - 0x0000)
struct UITweenInstance_FromMaterialScalarParameter final
{
public:
	class UMaterialInstanceDynamic*               TargetMaterialInstance;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetParameterName;                               // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetValue;                                       // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromMaterialScalarParameter) == 0x000008, "Wrong alignment on UITweenInstance_FromMaterialScalarParameter");
static_assert(sizeof(UITweenInstance_FromMaterialScalarParameter) == 0x000020, "Wrong size on UITweenInstance_FromMaterialScalarParameter");
static_assert(offsetof(UITweenInstance_FromMaterialScalarParameter, TargetMaterialInstance) == 0x000000, "Member 'UITweenInstance_FromMaterialScalarParameter::TargetMaterialInstance' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialScalarParameter, TargetParameterName) == 0x000008, "Member 'UITweenInstance_FromMaterialScalarParameter::TargetParameterName' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialScalarParameter, TargetValue) == 0x000014, "Member 'UITweenInstance_FromMaterialScalarParameter::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialScalarParameter, ReturnValue) == 0x000018, "Member 'UITweenInstance_FromMaterialScalarParameter::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromMaterialVectorParameter
// 0x0030 (0x0030 - 0x0000)
struct UITweenInstance_FromMaterialVectorParameter final
{
public:
	class UMaterialInstanceDynamic*               TargetMaterialInstance;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetParameterName;                               // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TargetValue;                                       // 0x0014(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromMaterialVectorParameter) == 0x000008, "Wrong alignment on UITweenInstance_FromMaterialVectorParameter");
static_assert(sizeof(UITweenInstance_FromMaterialVectorParameter) == 0x000030, "Wrong size on UITweenInstance_FromMaterialVectorParameter");
static_assert(offsetof(UITweenInstance_FromMaterialVectorParameter, TargetMaterialInstance) == 0x000000, "Member 'UITweenInstance_FromMaterialVectorParameter::TargetMaterialInstance' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialVectorParameter, TargetParameterName) == 0x000008, "Member 'UITweenInstance_FromMaterialVectorParameter::TargetParameterName' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialVectorParameter, TargetValue) == 0x000014, "Member 'UITweenInstance_FromMaterialVectorParameter::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromMaterialVectorParameter, ReturnValue) == 0x000028, "Member 'UITweenInstance_FromMaterialVectorParameter::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromOpacity
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_FromOpacity final
{
public:
	float                                         StartValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromOpacity) == 0x000008, "Wrong alignment on UITweenInstance_FromOpacity");
static_assert(sizeof(UITweenInstance_FromOpacity) == 0x000010, "Wrong size on UITweenInstance_FromOpacity");
static_assert(offsetof(UITweenInstance_FromOpacity, StartValue) == 0x000000, "Member 'UITweenInstance_FromOpacity::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromOpacity, ReturnValue) == 0x000008, "Member 'UITweenInstance_FromOpacity::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromRotation
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_FromRotation final
{
public:
	float                                         StartValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromRotation) == 0x000008, "Wrong alignment on UITweenInstance_FromRotation");
static_assert(sizeof(UITweenInstance_FromRotation) == 0x000010, "Wrong size on UITweenInstance_FromRotation");
static_assert(offsetof(UITweenInstance_FromRotation, StartValue) == 0x000000, "Member 'UITweenInstance_FromRotation::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromRotation, ReturnValue) == 0x000008, "Member 'UITweenInstance_FromRotation::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromScale
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_FromScale final
{
public:
	struct FVector2D                              StartValue;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromScale) == 0x000008, "Wrong alignment on UITweenInstance_FromScale");
static_assert(sizeof(UITweenInstance_FromScale) == 0x000018, "Wrong size on UITweenInstance_FromScale");
static_assert(offsetof(UITweenInstance_FromScale, StartValue) == 0x000000, "Member 'UITweenInstance_FromScale::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromScale, ReturnValue) == 0x000010, "Member 'UITweenInstance_FromScale::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.FromTranslation
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_FromTranslation final
{
public:
	struct FVector2D                              StartValue;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_FromTranslation) == 0x000008, "Wrong alignment on UITweenInstance_FromTranslation");
static_assert(sizeof(UITweenInstance_FromTranslation) == 0x000018, "Wrong size on UITweenInstance_FromTranslation");
static_assert(offsetof(UITweenInstance_FromTranslation, StartValue) == 0x000000, "Member 'UITweenInstance_FromTranslation::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_FromTranslation, ReturnValue) == 0x000010, "Member 'UITweenInstance_FromTranslation::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToColor
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_ToColor final
{
public:
	struct FLinearColor                           TargetValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToColor) == 0x000008, "Wrong alignment on UITweenInstance_ToColor");
static_assert(sizeof(UITweenInstance_ToColor) == 0x000018, "Wrong size on UITweenInstance_ToColor");
static_assert(offsetof(UITweenInstance_ToColor, TargetValue) == 0x000000, "Member 'UITweenInstance_ToColor::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToColor, ReturnValue) == 0x000010, "Member 'UITweenInstance_ToColor::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToMaterialScalarParameter
// 0x0020 (0x0020 - 0x0000)
struct UITweenInstance_ToMaterialScalarParameter final
{
public:
	class UMaterialInstanceDynamic*               TargetMaterialInstance;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetParameterName;                               // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetValue;                                       // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToMaterialScalarParameter) == 0x000008, "Wrong alignment on UITweenInstance_ToMaterialScalarParameter");
static_assert(sizeof(UITweenInstance_ToMaterialScalarParameter) == 0x000020, "Wrong size on UITweenInstance_ToMaterialScalarParameter");
static_assert(offsetof(UITweenInstance_ToMaterialScalarParameter, TargetMaterialInstance) == 0x000000, "Member 'UITweenInstance_ToMaterialScalarParameter::TargetMaterialInstance' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialScalarParameter, TargetParameterName) == 0x000008, "Member 'UITweenInstance_ToMaterialScalarParameter::TargetParameterName' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialScalarParameter, TargetValue) == 0x000014, "Member 'UITweenInstance_ToMaterialScalarParameter::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialScalarParameter, ReturnValue) == 0x000018, "Member 'UITweenInstance_ToMaterialScalarParameter::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToMaterialVectorParameter
// 0x0030 (0x0030 - 0x0000)
struct UITweenInstance_ToMaterialVectorParameter final
{
public:
	class UMaterialInstanceDynamic*               TargetMaterialInstance;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetParameterName;                               // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TargetValue;                                       // 0x0014(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToMaterialVectorParameter) == 0x000008, "Wrong alignment on UITweenInstance_ToMaterialVectorParameter");
static_assert(sizeof(UITweenInstance_ToMaterialVectorParameter) == 0x000030, "Wrong size on UITweenInstance_ToMaterialVectorParameter");
static_assert(offsetof(UITweenInstance_ToMaterialVectorParameter, TargetMaterialInstance) == 0x000000, "Member 'UITweenInstance_ToMaterialVectorParameter::TargetMaterialInstance' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialVectorParameter, TargetParameterName) == 0x000008, "Member 'UITweenInstance_ToMaterialVectorParameter::TargetParameterName' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialVectorParameter, TargetValue) == 0x000014, "Member 'UITweenInstance_ToMaterialVectorParameter::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToMaterialVectorParameter, ReturnValue) == 0x000028, "Member 'UITweenInstance_ToMaterialVectorParameter::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToOpacity
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_ToOpacity final
{
public:
	float                                         TargetValue;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToOpacity) == 0x000008, "Wrong alignment on UITweenInstance_ToOpacity");
static_assert(sizeof(UITweenInstance_ToOpacity) == 0x000010, "Wrong size on UITweenInstance_ToOpacity");
static_assert(offsetof(UITweenInstance_ToOpacity, TargetValue) == 0x000000, "Member 'UITweenInstance_ToOpacity::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToOpacity, ReturnValue) == 0x000008, "Member 'UITweenInstance_ToOpacity::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToReset
// 0x0008 (0x0008 - 0x0000)
struct UITweenInstance_ToReset final
{
public:
	class UUITweenInstance*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToReset) == 0x000008, "Wrong alignment on UITweenInstance_ToReset");
static_assert(sizeof(UITweenInstance_ToReset) == 0x000008, "Wrong size on UITweenInstance_ToReset");
static_assert(offsetof(UITweenInstance_ToReset, ReturnValue) == 0x000000, "Member 'UITweenInstance_ToReset::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToRotation
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_ToRotation final
{
public:
	float                                         TargetValue;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToRotation) == 0x000008, "Wrong alignment on UITweenInstance_ToRotation");
static_assert(sizeof(UITweenInstance_ToRotation) == 0x000010, "Wrong size on UITweenInstance_ToRotation");
static_assert(offsetof(UITweenInstance_ToRotation, TargetValue) == 0x000000, "Member 'UITweenInstance_ToRotation::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToRotation, ReturnValue) == 0x000008, "Member 'UITweenInstance_ToRotation::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToScale
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_ToScale final
{
public:
	struct FVector2D                              TargetValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToScale) == 0x000008, "Wrong alignment on UITweenInstance_ToScale");
static_assert(sizeof(UITweenInstance_ToScale) == 0x000018, "Wrong size on UITweenInstance_ToScale");
static_assert(offsetof(UITweenInstance_ToScale, TargetValue) == 0x000000, "Member 'UITweenInstance_ToScale::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToScale, ReturnValue) == 0x000010, "Member 'UITweenInstance_ToScale::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.ToTranslation
// 0x0018 (0x0018 - 0x0000)
struct UITweenInstance_ToTranslation final
{
public:
	struct FVector2D                              TargetValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_ToTranslation) == 0x000008, "Wrong alignment on UITweenInstance_ToTranslation");
static_assert(sizeof(UITweenInstance_ToTranslation) == 0x000018, "Wrong size on UITweenInstance_ToTranslation");
static_assert(offsetof(UITweenInstance_ToTranslation, TargetValue) == 0x000000, "Member 'UITweenInstance_ToTranslation::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_ToTranslation, ReturnValue) == 0x000010, "Member 'UITweenInstance_ToTranslation::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.TweenFloatProperty
// 0x0010 (0x0010 - 0x0000)
struct UITweenInstance_TweenFloatProperty final
{
public:
	float                                         StartValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetValue;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITweenInstance*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_TweenFloatProperty) == 0x000008, "Wrong alignment on UITweenInstance_TweenFloatProperty");
static_assert(sizeof(UITweenInstance_TweenFloatProperty) == 0x000010, "Wrong size on UITweenInstance_TweenFloatProperty");
static_assert(offsetof(UITweenInstance_TweenFloatProperty, StartValue) == 0x000000, "Member 'UITweenInstance_TweenFloatProperty::StartValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_TweenFloatProperty, TargetValue) == 0x000004, "Member 'UITweenInstance_TweenFloatProperty::TargetValue' has a wrong offset!");
static_assert(offsetof(UITweenInstance_TweenFloatProperty, ReturnValue) == 0x000008, "Member 'UITweenInstance_TweenFloatProperty::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetDelay
// 0x0004 (0x0004 - 0x0000)
struct UITweenInstance_GetDelay final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetDelay) == 0x000004, "Wrong alignment on UITweenInstance_GetDelay");
static_assert(sizeof(UITweenInstance_GetDelay) == 0x000004, "Wrong size on UITweenInstance_GetDelay");
static_assert(offsetof(UITweenInstance_GetDelay, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetDelay::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct UITweenInstance_GetDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetDuration) == 0x000004, "Wrong alignment on UITweenInstance_GetDuration");
static_assert(sizeof(UITweenInstance_GetDuration) == 0x000004, "Wrong size on UITweenInstance_GetDuration");
static_assert(offsetof(UITweenInstance_GetDuration, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetDuration::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetEasing
// 0x0001 (0x0001 - 0x0000)
struct UITweenInstance_GetEasing final
{
public:
	EEasingType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetEasing) == 0x000001, "Wrong alignment on UITweenInstance_GetEasing");
static_assert(sizeof(UITweenInstance_GetEasing) == 0x000001, "Wrong size on UITweenInstance_GetEasing");
static_assert(offsetof(UITweenInstance_GetEasing, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetEasing::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetFloatValue
// 0x0004 (0x0004 - 0x0000)
struct UITweenInstance_GetFloatValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetFloatValue) == 0x000004, "Wrong alignment on UITweenInstance_GetFloatValue");
static_assert(sizeof(UITweenInstance_GetFloatValue) == 0x000004, "Wrong size on UITweenInstance_GetFloatValue");
static_assert(offsetof(UITweenInstance_GetFloatValue, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetFloatValue::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetProgress
// 0x0004 (0x0004 - 0x0000)
struct UITweenInstance_GetProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetProgress) == 0x000004, "Wrong alignment on UITweenInstance_GetProgress");
static_assert(sizeof(UITweenInstance_GetProgress) == 0x000004, "Wrong size on UITweenInstance_GetProgress");
static_assert(offsetof(UITweenInstance_GetProgress, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetProgress::ReturnValue' has a wrong offset!");

// Function UITween.UITweenInstance.GetTargetWidget
// 0x0008 (0x0008 - 0x0000)
struct UITweenInstance_GetTargetWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UITweenInstance_GetTargetWidget) == 0x000008, "Wrong alignment on UITweenInstance_GetTargetWidget");
static_assert(sizeof(UITweenInstance_GetTargetWidget) == 0x000008, "Wrong size on UITweenInstance_GetTargetWidget");
static_assert(offsetof(UITweenInstance_GetTargetWidget, ReturnValue) == 0x000000, "Member 'UITweenInstance_GetTargetWidget::ReturnValue' has a wrong offset!");

}

