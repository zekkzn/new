#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreRewardWrapper

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreRewardWrapper.WBP_CoreRewardWrapper_C.ExecuteUbergraph_WBP_CoreRewardWrapper
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper) == 0x000004, "Wrong alignment on WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper");
static_assert(sizeof(WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper) == 0x000008, "Wrong size on WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper");
static_assert(offsetof(WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper, EntryPoint) == 0x000000, "Member 'WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_CoreRewardWrapper_C_ExecuteUbergraph_WBP_CoreRewardWrapper::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_CoreRewardWrapper.WBP_CoreRewardWrapper_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreRewardWrapper_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRewardWrapper_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreRewardWrapper_C_PreConstruct");
static_assert(sizeof(WBP_CoreRewardWrapper_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreRewardWrapper_C_PreConstruct");
static_assert(offsetof(WBP_CoreRewardWrapper_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreRewardWrapper_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreRewardWrapper.WBP_CoreRewardWrapper_C.SetPreviewType
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreRewardWrapper_C_SetPreviewType final
{
public:
	ERewardType                                   RewardType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRewardWrapper_C_SetPreviewType) == 0x000001, "Wrong alignment on WBP_CoreRewardWrapper_C_SetPreviewType");
static_assert(sizeof(WBP_CoreRewardWrapper_C_SetPreviewType) == 0x000001, "Wrong size on WBP_CoreRewardWrapper_C_SetPreviewType");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetPreviewType, RewardType) == 0x000000, "Member 'WBP_CoreRewardWrapper_C_SetPreviewType::RewardType' has a wrong offset!");

// Function WBP_CoreRewardWrapper.WBP_CoreRewardWrapper_C.SetPreviewWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_CoreRewardWrapper_C_SetPreviewWidget final
{
public:
	ERewardType                                   RewardType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCoreRewardWidget>          CallFunc_GetWidgetClassFromRewardType_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRewardWrapper_C_SetPreviewWidget) == 0x000008, "Wrong alignment on WBP_CoreRewardWrapper_C_SetPreviewWidget");
static_assert(sizeof(WBP_CoreRewardWrapper_C_SetPreviewWidget) == 0x000018, "Wrong size on WBP_CoreRewardWrapper_C_SetPreviewWidget");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetPreviewWidget, RewardType) == 0x000000, "Member 'WBP_CoreRewardWrapper_C_SetPreviewWidget::RewardType' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetPreviewWidget, CallFunc_GetWidgetClassFromRewardType_ReturnValue) == 0x000008, "Member 'WBP_CoreRewardWrapper_C_SetPreviewWidget::CallFunc_GetWidgetClassFromRewardType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetPreviewWidget, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'WBP_CoreRewardWrapper_C_SetPreviewWidget::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function WBP_CoreRewardWrapper.WBP_CoreRewardWrapper_C.SetWidgetSize
// 0x0080 (0x0080 - 0x0000)
struct WBP_CoreRewardWrapper_C_SetWidgetSize final
{
public:
	ERewardType                                   Param_ItemType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardType                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreRewardWrapper_C_SetWidgetSize) == 0x000008, "Wrong alignment on WBP_CoreRewardWrapper_C_SetWidgetSize");
static_assert(sizeof(WBP_CoreRewardWrapper_C_SetWidgetSize) == 0x000080, "Wrong size on WBP_CoreRewardWrapper_C_SetWidgetSize");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Param_ItemType) == 0x000000, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Param_ItemType' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Temp_byte_Variable) == 0x000001, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Temp_struct_Variable) == 0x000008, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, Temp_struct_Variable_3) == 0x000038, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, K2Node_Select_Default) == 0x000058, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000078, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreRewardWrapper_C_SetWidgetSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00007C, "Member 'WBP_CoreRewardWrapper_C_SetWidgetSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

}

