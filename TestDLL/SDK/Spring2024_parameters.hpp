#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spring2024

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DataTableUtilities_structs.hpp"
#include "Spring2024_structs.hpp"
#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function Spring2024.BloodChargePlayerComponent.Cosmetic_OnKillerGainCharge
// 0x0008 (0x0008 - 0x0000)
struct BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Stolen;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge) == 0x000004, "Wrong alignment on BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge");
static_assert(sizeof(BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge) == 0x000008, "Wrong size on BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge, ChargeCount) == 0x000000, "Member 'BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge::ChargeCount' has a wrong offset!");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge, Stolen) == 0x000004, "Member 'BloodChargePlayerComponent_Cosmetic_OnKillerGainCharge::Stolen' has a wrong offset!");

// Function Spring2024.BloodChargePlayerComponent.Cosmetic_OnKillerLoseCharge
// 0x0008 (0x0008 - 0x0000)
struct BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Stolen;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge) == 0x000004, "Wrong alignment on BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge");
static_assert(sizeof(BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge) == 0x000008, "Wrong size on BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge, ChargeCount) == 0x000000, "Member 'BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge::ChargeCount' has a wrong offset!");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge, Stolen) == 0x000004, "Member 'BloodChargePlayerComponent_Cosmetic_OnKillerLoseCharge::Stolen' has a wrong offset!");

// Function Spring2024.BloodChargePlayerComponent.Cosmetic_OnSurvivorGainCharge
// 0x0008 (0x0008 - 0x0000)
struct BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Stolen;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge) == 0x000004, "Wrong alignment on BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge");
static_assert(sizeof(BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge) == 0x000008, "Wrong size on BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge, ChargeCount) == 0x000000, "Member 'BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge::ChargeCount' has a wrong offset!");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge, Stolen) == 0x000004, "Member 'BloodChargePlayerComponent_Cosmetic_OnSurvivorGainCharge::Stolen' has a wrong offset!");

// Function Spring2024.BloodChargePlayerComponent.Cosmetic_OnSurvivorLoseCharge
// 0x0008 (0x0008 - 0x0000)
struct BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Stolen;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge) == 0x000004, "Wrong alignment on BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge");
static_assert(sizeof(BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge) == 0x000008, "Wrong size on BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge, ChargeCount) == 0x000000, "Member 'BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge::ChargeCount' has a wrong offset!");
static_assert(offsetof(BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge, Stolen) == 0x000004, "Member 'BloodChargePlayerComponent_Cosmetic_OnSurvivorLoseCharge::Stolen' has a wrong offset!");

// Function Spring2024.BloodChargePlayerComponent.OnRep_BloodChargeAmount
// 0x0004 (0x0004 - 0x0000)
struct BloodChargePlayerComponent_OnRep_BloodChargeAmount final
{
public:
	int32                                         OldAmount;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodChargePlayerComponent_OnRep_BloodChargeAmount) == 0x000004, "Wrong alignment on BloodChargePlayerComponent_OnRep_BloodChargeAmount");
static_assert(sizeof(BloodChargePlayerComponent_OnRep_BloodChargeAmount) == 0x000004, "Wrong size on BloodChargePlayerComponent_OnRep_BloodChargeAmount");
static_assert(offsetof(BloodChargePlayerComponent_OnRep_BloodChargeAmount, OldAmount) == 0x000000, "Member 'BloodChargePlayerComponent_OnRep_BloodChargeAmount::OldAmount' has a wrong offset!");

// Function Spring2024.BloodReceptacle.Authority_OnEnterCollectionZone
// 0x0110 (0x0110 - 0x0000)
struct BloodReceptacle_Authority_OnEnterCollectionZone final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodReceptacle_Authority_OnEnterCollectionZone) == 0x000008, "Wrong alignment on BloodReceptacle_Authority_OnEnterCollectionZone");
static_assert(sizeof(BloodReceptacle_Authority_OnEnterCollectionZone) == 0x000110, "Wrong size on BloodReceptacle_Authority_OnEnterCollectionZone");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, HitComponent) == 0x000000, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::HitComponent' has a wrong offset!");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, OtherActor) == 0x000008, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::OtherActor' has a wrong offset!");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, OtherComp) == 0x000010, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::OtherComp' has a wrong offset!");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, OtherBodyIndex) == 0x000018, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, bFromSweep) == 0x00001C, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::bFromSweep' has a wrong offset!");
static_assert(offsetof(BloodReceptacle_Authority_OnEnterCollectionZone, SweepResult) == 0x000020, "Member 'BloodReceptacle_Authority_OnEnterCollectionZone::SweepResult' has a wrong offset!");

// Function Spring2024.BloodZone.Cosmetic_IsBeingActivatedBegin
// 0x0004 (0x0004 - 0x0000)
struct BloodZone_Cosmetic_IsBeingActivatedBegin final
{
public:
	float                                         ChargeTime;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_Cosmetic_IsBeingActivatedBegin) == 0x000004, "Wrong alignment on BloodZone_Cosmetic_IsBeingActivatedBegin");
static_assert(sizeof(BloodZone_Cosmetic_IsBeingActivatedBegin) == 0x000004, "Wrong size on BloodZone_Cosmetic_IsBeingActivatedBegin");
static_assert(offsetof(BloodZone_Cosmetic_IsBeingActivatedBegin, ChargeTime) == 0x000000, "Member 'BloodZone_Cosmetic_IsBeingActivatedBegin::ChargeTime' has a wrong offset!");

// Function Spring2024.BloodZone.Cosmetic_IsBeingRemovedBegin
// 0x0008 (0x0008 - 0x0000)
struct BloodZone_Cosmetic_IsBeingRemovedBegin final
{
public:
	const class ADBDPlayer*                       InteractingPlayer;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_Cosmetic_IsBeingRemovedBegin) == 0x000008, "Wrong alignment on BloodZone_Cosmetic_IsBeingRemovedBegin");
static_assert(sizeof(BloodZone_Cosmetic_IsBeingRemovedBegin) == 0x000008, "Wrong size on BloodZone_Cosmetic_IsBeingRemovedBegin");
static_assert(offsetof(BloodZone_Cosmetic_IsBeingRemovedBegin, InteractingPlayer) == 0x000000, "Member 'BloodZone_Cosmetic_IsBeingRemovedBegin::InteractingPlayer' has a wrong offset!");

// Function Spring2024.BloodZone.OnKillerActivationInteractionEntered
// 0x0008 (0x0008 - 0x0000)
struct BloodZone_OnKillerActivationInteractionEntered final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_OnKillerActivationInteractionEntered) == 0x000008, "Wrong alignment on BloodZone_OnKillerActivationInteractionEntered");
static_assert(sizeof(BloodZone_OnKillerActivationInteractionEntered) == 0x000008, "Wrong size on BloodZone_OnKillerActivationInteractionEntered");
static_assert(offsetof(BloodZone_OnKillerActivationInteractionEntered, Player) == 0x000000, "Member 'BloodZone_OnKillerActivationInteractionEntered::Player' has a wrong offset!");

// Function Spring2024.BloodZone.OnKillerDeactivationInteractionEntered
// 0x0008 (0x0008 - 0x0000)
struct BloodZone_OnKillerDeactivationInteractionEntered final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_OnKillerDeactivationInteractionEntered) == 0x000008, "Wrong alignment on BloodZone_OnKillerDeactivationInteractionEntered");
static_assert(sizeof(BloodZone_OnKillerDeactivationInteractionEntered) == 0x000008, "Wrong size on BloodZone_OnKillerDeactivationInteractionEntered");
static_assert(offsetof(BloodZone_OnKillerDeactivationInteractionEntered, Player) == 0x000000, "Member 'BloodZone_OnKillerDeactivationInteractionEntered::Player' has a wrong offset!");

// Function Spring2024.BloodZone.OnRep_State
// 0x0004 (0x0004 - 0x0000)
struct BloodZone_OnRep_State final
{
public:
	EBloodZoneState                               OldState;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_OnRep_State) == 0x000004, "Wrong alignment on BloodZone_OnRep_State");
static_assert(sizeof(BloodZone_OnRep_State) == 0x000004, "Wrong size on BloodZone_OnRep_State");
static_assert(offsetof(BloodZone_OnRep_State, OldState) == 0x000000, "Member 'BloodZone_OnRep_State::OldState' has a wrong offset!");

// Function Spring2024.BloodZone.OnSurvivorActivationInteractionEntered
// 0x0008 (0x0008 - 0x0000)
struct BloodZone_OnSurvivorActivationInteractionEntered final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_OnSurvivorActivationInteractionEntered) == 0x000008, "Wrong alignment on BloodZone_OnSurvivorActivationInteractionEntered");
static_assert(sizeof(BloodZone_OnSurvivorActivationInteractionEntered) == 0x000008, "Wrong size on BloodZone_OnSurvivorActivationInteractionEntered");
static_assert(offsetof(BloodZone_OnSurvivorActivationInteractionEntered, Player) == 0x000000, "Member 'BloodZone_OnSurvivorActivationInteractionEntered::Player' has a wrong offset!");

// Function Spring2024.BloodZone.OnSurvivorDeactivationInteractionEntered
// 0x0008 (0x0008 - 0x0000)
struct BloodZone_OnSurvivorDeactivationInteractionEntered final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZone_OnSurvivorDeactivationInteractionEntered) == 0x000008, "Wrong alignment on BloodZone_OnSurvivorDeactivationInteractionEntered");
static_assert(sizeof(BloodZone_OnSurvivorDeactivationInteractionEntered) == 0x000008, "Wrong size on BloodZone_OnSurvivorDeactivationInteractionEntered");
static_assert(offsetof(BloodZone_OnSurvivorDeactivationInteractionEntered, Player) == 0x000000, "Member 'BloodZone_OnSurvivorDeactivationInteractionEntered::Player' has a wrong offset!");

// Function Spring2024.BloodZoneTrackerPlayerComponent.Authority_OnPlayerEnterBloodZone
// 0x0040 (0x0040 - 0x0000)
struct BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone final
{
public:
	struct FGameplayTag                           GameEventType;                                     // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone) == 0x000008, "Wrong alignment on BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone");
static_assert(sizeof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone) == 0x000040, "Wrong size on BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone");
static_assert(offsetof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone, GameEventType) == 0x000000, "Member 'BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone::GameEventType' has a wrong offset!");
static_assert(offsetof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone, GameEventData) == 0x000010, "Member 'BloodZoneTrackerPlayerComponent_Authority_OnPlayerEnterBloodZone::GameEventData' has a wrong offset!");

// Function Spring2024.BloodZoneTrackerPlayerComponent.Authority_OnPlayerExitBloodZone
// 0x0040 (0x0040 - 0x0000)
struct BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone final
{
public:
	struct FGameplayTag                           GameEventType;                                     // 0x0000(0x000C)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone) == 0x000008, "Wrong alignment on BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone");
static_assert(sizeof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone) == 0x000040, "Wrong size on BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone");
static_assert(offsetof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone, GameEventType) == 0x000000, "Member 'BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone::GameEventType' has a wrong offset!");
static_assert(offsetof(BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone, GameEventData) == 0x000010, "Member 'BloodZoneTrackerPlayerComponent_Authority_OnPlayerExitBloodZone::GameEventData' has a wrong offset!");

// Function Spring2024.BloodZoneTrackerPlayerComponent.Cosmetic_OnKillerLocallyObservedChanged
// 0x0001 (0x0001 - 0x0000)
struct BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged final
{
public:
	bool                                          LocallyObserved;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged) == 0x000001, "Wrong alignment on BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged");
static_assert(sizeof(BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged) == 0x000001, "Wrong size on BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged");
static_assert(offsetof(BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged, LocallyObserved) == 0x000000, "Member 'BloodZoneTrackerPlayerComponent_Cosmetic_OnKillerLocallyObservedChanged::LocallyObserved' has a wrong offset!");

// Function Spring2024.Spring2024EventCheatComponent.DBD_Spring2024ActivateAllBloodZone
// 0x0010 (0x0010 - 0x0000)
struct Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone final
{
public:
	class FString                                 LocalPlayerId;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone) == 0x000008, "Wrong alignment on Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone");
static_assert(sizeof(Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone) == 0x000010, "Wrong size on Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone");
static_assert(offsetof(Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone, LocalPlayerId) == 0x000000, "Member 'Spring2024EventCheatComponent_DBD_Spring2024ActivateAllBloodZone::LocalPlayerId' has a wrong offset!");

// Function Spring2024.Spring2024HuskVFXComponent.Cosmetic_SetBloodBoostVisible
// 0x0001 (0x0001 - 0x0000)
struct Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible) == 0x000001, "Wrong alignment on Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible");
static_assert(sizeof(Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible) == 0x000001, "Wrong size on Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible");
static_assert(offsetof(Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible, Visible) == 0x000000, "Member 'Spring2024HuskVFXComponent_Cosmetic_SetBloodBoostVisible::Visible' has a wrong offset!");

// Function Spring2024.Spring2024HuskVFXComponent.Cosmetic_SetChargeVisible
// 0x0008 (0x0008 - 0x0000)
struct Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible final
{
public:
	int32                                         ChargeAmount;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsVisible;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible) == 0x000004, "Wrong alignment on Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible");
static_assert(sizeof(Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible) == 0x000008, "Wrong size on Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible");
static_assert(offsetof(Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible, ChargeAmount) == 0x000000, "Member 'Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible::ChargeAmount' has a wrong offset!");
static_assert(offsetof(Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible, IsVisible) == 0x000004, "Member 'Spring2024HuskVFXComponent_Cosmetic_SetChargeVisible::IsVisible' has a wrong offset!");

// Function Spring2024.Spring2024MapBloodTrailComponent.OnCarryingPlayerHealthChange
// 0x0002 (0x0002 - 0x0000)
struct Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange final
{
public:
	ECamperDamageState                            OldDamageState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECamperDamageState                            NewDamageState;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange) == 0x000001, "Wrong alignment on Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange");
static_assert(sizeof(Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange) == 0x000002, "Wrong size on Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange");
static_assert(offsetof(Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange, OldDamageState) == 0x000000, "Member 'Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange::OldDamageState' has a wrong offset!");
static_assert(offsetof(Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange, NewDamageState) == 0x000001, "Member 'Spring2024MapBloodTrailComponent_OnCarryingPlayerHealthChange::NewDamageState' has a wrong offset!");

// Function Spring2024.Spring2024SurvivorStatusEffect.GetBloodDecalDurationModifier
// 0x0028 (0x0028 - 0x0000)
struct Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier final
{
public:
	struct FDBDTunableRowHandle                   ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier) == 0x000008, "Wrong alignment on Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier");
static_assert(sizeof(Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier) == 0x000028, "Wrong size on Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier");
static_assert(offsetof(Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier, ReturnValue) == 0x000000, "Member 'Spring2024SurvivorStatusEffect_GetBloodDecalDurationModifier::ReturnValue' has a wrong offset!");

// Function Spring2024.Spring2024SurvivorStatusEffect.GetInjuredVoiceLevelModifier
// 0x0028 (0x0028 - 0x0000)
struct Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier final
{
public:
	struct FDBDTunableRowHandle                   ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier) == 0x000008, "Wrong alignment on Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier");
static_assert(sizeof(Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier) == 0x000028, "Wrong size on Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier");
static_assert(offsetof(Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier, ReturnValue) == 0x000000, "Member 'Spring2024SurvivorStatusEffect_GetInjuredVoiceLevelModifier::ReturnValue' has a wrong offset!");

}

