#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheK37

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DBDAnimation_classes.hpp"
#include "Competence_classes.hpp"
#include "DBDGameplay_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "TheK37_structs.hpp"
#include "DBDCompetence_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "GameplayUtilities_classes.hpp"
#include "AnimationUtilities_structs.hpp"
#include "DBDCosmetic_classes.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDAttack_classes.hpp"


namespace SDK
{

// Class TheK37.K37WolfAbility
// 0x0328 (0x04D0 - 0x01A8)
class UK37WolfAbility final : public UKillerAbilityComponent
{
public:
	TSubclassOf<class UK37WolfBiteAttack>         _wolfBiteAttackClass;                              // 0x01A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37ChargeChainedPounceAttackInteraction> _chainedPounceAttackInteractionClass;              // 0x01B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37AdjustChainedPounceAttackInteraction> _adjustPounceAttackInteractionClass;               // 0x01B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37SurvivorScentTrailParticleSpawner> _survivorScentTrailParticleSpawnerClass;           // 0x01C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UK37WolfBiteAttackData*>         _chainedWolfBitesData;                             // 0x01C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UK37ChargeChainedPounceAttackInteraction* _chainedPounceAttackInteraction;                   // 0x01D8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37AdjustChainedPounceAttackInteraction* _adjustPounceAttackInteraction;                    // 0x01E0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37WolfBiteAttack*                     _wolfBiteAttack;                                   // 0x01E8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ACamperPlayer>>   _trackedSurvivors;                                 // 0x01F0(0x0010)(Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0x2B0];                                    // 0x0200(0x02B0)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _completedConsecutiveChainedBitesCount;            // 0x04B0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4B4[0x1C];                                     // 0x04B4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAttackSubstateChanged(EAttackSubstate Substate);
	void OnRep_WolfBiteAttack();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfAbility">();
	}
	static class UK37WolfAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfAbility>();
	}
};
static_assert(alignof(UK37WolfAbility) == 0x000008, "Wrong alignment on UK37WolfAbility");
static_assert(sizeof(UK37WolfAbility) == 0x0004D0, "Wrong size on UK37WolfAbility");
static_assert(offsetof(UK37WolfAbility, _wolfBiteAttackClass) == 0x0001A8, "Member 'UK37WolfAbility::_wolfBiteAttackClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _chainedPounceAttackInteractionClass) == 0x0001B0, "Member 'UK37WolfAbility::_chainedPounceAttackInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _adjustPounceAttackInteractionClass) == 0x0001B8, "Member 'UK37WolfAbility::_adjustPounceAttackInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _survivorScentTrailParticleSpawnerClass) == 0x0001C0, "Member 'UK37WolfAbility::_survivorScentTrailParticleSpawnerClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _chainedWolfBitesData) == 0x0001C8, "Member 'UK37WolfAbility::_chainedWolfBitesData' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _chainedPounceAttackInteraction) == 0x0001D8, "Member 'UK37WolfAbility::_chainedPounceAttackInteraction' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _adjustPounceAttackInteraction) == 0x0001E0, "Member 'UK37WolfAbility::_adjustPounceAttackInteraction' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _wolfBiteAttack) == 0x0001E8, "Member 'UK37WolfAbility::_wolfBiteAttack' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _trackedSurvivors) == 0x0001F0, "Member 'UK37WolfAbility::_trackedSurvivors' has a wrong offset!");
static_assert(offsetof(UK37WolfAbility, _completedConsecutiveChainedBitesCount) == 0x0004B0, "Member 'UK37WolfAbility::_completedConsecutiveChainedBitesCount' has a wrong offset!");

// Class TheK37.FlamePillarExitGateMinigame
// 0x0028 (0x02C8 - 0x02A0)
class AFlamePillarExitGateMinigame final : public AActor
{
public:
	uint8                                         Pad_2A0[0x10];                                     // 0x02A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AEscapeDoor*                            _attachedEscapeDoor;                               // 0x02B0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37VampireAbility*                     _cachedOwningAbility;                              // 0x02B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37FlamePillarData*                    _flamePillarData;                                  // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_SpawnFlamePillarAtLocation(const struct FVector& Location);
	void Authority_StartMinigame();

	class UBoxComponent* GetExitArea() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FlamePillarExitGateMinigame">();
	}
	static class AFlamePillarExitGateMinigame* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlamePillarExitGateMinigame>();
	}
};
static_assert(alignof(AFlamePillarExitGateMinigame) == 0x000008, "Wrong alignment on AFlamePillarExitGateMinigame");
static_assert(sizeof(AFlamePillarExitGateMinigame) == 0x0002C8, "Wrong size on AFlamePillarExitGateMinigame");
static_assert(offsetof(AFlamePillarExitGateMinigame, _attachedEscapeDoor) == 0x0002B0, "Member 'AFlamePillarExitGateMinigame::_attachedEscapeDoor' has a wrong offset!");
static_assert(offsetof(AFlamePillarExitGateMinigame, _cachedOwningAbility) == 0x0002B8, "Member 'AFlamePillarExitGateMinigame::_cachedOwningAbility' has a wrong offset!");
static_assert(offsetof(AFlamePillarExitGateMinigame, _flamePillarData) == 0x0002C0, "Member 'AFlamePillarExitGateMinigame::_flamePillarData' has a wrong offset!");

// Class TheK37.K37BatAbilityData
// 0x0040 (0x00A0 - 0x0060)
class UK37BatAbilityData final : public UKillerAbilityData
{
public:
	float                                         _brakingDeceleration;                              // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _friction;                                         // 0x0064(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minimumVelocityToOverrideDecelerationValues;      // 0x0068(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minRangeForTeleport;                              // 0x006C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxRangeForTeleport;                              // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _teleportSpeed;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onTeleportInteractionStartAkEvent;                // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onTeleportInteractionCancelAkEvent;               // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onTeleportNewHighlightedTargetAkEvent;            // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onTeleportStartAkEvent;                           // 0x0090(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onTeleportStopAkEvent;                            // 0x0098(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbilityData">();
	}
	static class UK37BatAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbilityData>();
	}
};
static_assert(alignof(UK37BatAbilityData) == 0x000008, "Wrong alignment on UK37BatAbilityData");
static_assert(sizeof(UK37BatAbilityData) == 0x0000A0, "Wrong size on UK37BatAbilityData");
static_assert(offsetof(UK37BatAbilityData, _brakingDeceleration) == 0x000060, "Member 'UK37BatAbilityData::_brakingDeceleration' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _friction) == 0x000064, "Member 'UK37BatAbilityData::_friction' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _minimumVelocityToOverrideDecelerationValues) == 0x000068, "Member 'UK37BatAbilityData::_minimumVelocityToOverrideDecelerationValues' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _minRangeForTeleport) == 0x00006C, "Member 'UK37BatAbilityData::_minRangeForTeleport' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _maxRangeForTeleport) == 0x000070, "Member 'UK37BatAbilityData::_maxRangeForTeleport' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _teleportSpeed) == 0x000074, "Member 'UK37BatAbilityData::_teleportSpeed' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _onTeleportInteractionStartAkEvent) == 0x000078, "Member 'UK37BatAbilityData::_onTeleportInteractionStartAkEvent' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _onTeleportInteractionCancelAkEvent) == 0x000080, "Member 'UK37BatAbilityData::_onTeleportInteractionCancelAkEvent' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _onTeleportNewHighlightedTargetAkEvent) == 0x000088, "Member 'UK37BatAbilityData::_onTeleportNewHighlightedTargetAkEvent' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _onTeleportStartAkEvent) == 0x000090, "Member 'UK37BatAbilityData::_onTeleportStartAkEvent' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityData, _onTeleportStopAkEvent) == 0x000098, "Member 'UK37BatAbilityData::_onTeleportStopAkEvent' has a wrong offset!");

// Class TheK37.K37WolfAbilityData
// 0x0060 (0x00C0 - 0x0060)
class UK37WolfAbilityData final : public UKillerAbilityData
{
public:
	int32                                         _totalAmountOfChainedPounces;                      // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chargeChainedPounceDuration;                      // 0x0064(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chainedPounceAdjustmentDuration;                  // 0x0068(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _chainedPounceAdjustmentDurationMaxSpeedCurve;     // 0x0070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailParticleLifetimeDuration;               // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailOutlineRevealDistance;                  // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailParticleCooldownReductionPercent;       // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailParticleCollectionHasteEffectDuration;  // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailParticleCollectionHasteEffectPercentIncrease; // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK37OnScentTrailParticleCollectedTimedStatusEffect> _scentTrailParticleCollectionHasteStatusEffectClass; // 0x0090(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentTrailParticleAngle;                          // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _scentParticleSpawnGenerationRate;                 // 0x009C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _maxNumSpawnableScentTrailParticlesAsWolf;         // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _maxNumSpawnableScentTrailParticlesAsNonWolf;      // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _loudNoiseKillerInstinctDuration;                  // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK37WolfFormKillerInstinctStatusEffect> _wolfKillerInstinctStatusEffectClass;              // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onScentCollectedAkEvent;                          // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfAbilityData">();
	}
	static class UK37WolfAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfAbilityData>();
	}
};
static_assert(alignof(UK37WolfAbilityData) == 0x000008, "Wrong alignment on UK37WolfAbilityData");
static_assert(sizeof(UK37WolfAbilityData) == 0x0000C0, "Wrong size on UK37WolfAbilityData");
static_assert(offsetof(UK37WolfAbilityData, _totalAmountOfChainedPounces) == 0x000060, "Member 'UK37WolfAbilityData::_totalAmountOfChainedPounces' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _chargeChainedPounceDuration) == 0x000064, "Member 'UK37WolfAbilityData::_chargeChainedPounceDuration' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _chainedPounceAdjustmentDuration) == 0x000068, "Member 'UK37WolfAbilityData::_chainedPounceAdjustmentDuration' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _chainedPounceAdjustmentDurationMaxSpeedCurve) == 0x000070, "Member 'UK37WolfAbilityData::_chainedPounceAdjustmentDurationMaxSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleLifetimeDuration) == 0x000078, "Member 'UK37WolfAbilityData::_scentTrailParticleLifetimeDuration' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailOutlineRevealDistance) == 0x00007C, "Member 'UK37WolfAbilityData::_scentTrailOutlineRevealDistance' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleCooldownReductionPercent) == 0x000080, "Member 'UK37WolfAbilityData::_scentTrailParticleCooldownReductionPercent' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleCollectionHasteEffectDuration) == 0x000084, "Member 'UK37WolfAbilityData::_scentTrailParticleCollectionHasteEffectDuration' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleCollectionHasteEffectPercentIncrease) == 0x000088, "Member 'UK37WolfAbilityData::_scentTrailParticleCollectionHasteEffectPercentIncrease' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleCollectionHasteStatusEffectClass) == 0x000090, "Member 'UK37WolfAbilityData::_scentTrailParticleCollectionHasteStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentTrailParticleAngle) == 0x000098, "Member 'UK37WolfAbilityData::_scentTrailParticleAngle' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _scentParticleSpawnGenerationRate) == 0x00009C, "Member 'UK37WolfAbilityData::_scentParticleSpawnGenerationRate' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _maxNumSpawnableScentTrailParticlesAsWolf) == 0x0000A0, "Member 'UK37WolfAbilityData::_maxNumSpawnableScentTrailParticlesAsWolf' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _maxNumSpawnableScentTrailParticlesAsNonWolf) == 0x0000A4, "Member 'UK37WolfAbilityData::_maxNumSpawnableScentTrailParticlesAsNonWolf' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _loudNoiseKillerInstinctDuration) == 0x0000A8, "Member 'UK37WolfAbilityData::_loudNoiseKillerInstinctDuration' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _wolfKillerInstinctStatusEffectClass) == 0x0000B0, "Member 'UK37WolfAbilityData::_wolfKillerInstinctStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityData, _onScentCollectedAkEvent) == 0x0000B8, "Member 'UK37WolfAbilityData::_onScentCollectedAkEvent' has a wrong offset!");

// Class TheK37.IsPlayerOpeningAlreadyOpenedChest
// 0x0008 (0x00E8 - 0x00E0)
class UIsPlayerOpeningAlreadyOpenedChest final : public UEventDrivenModifierCondition
{
public:
	bool                                          _isInteractionWithChestThatHasBeenOpened;          // 0x00E0(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_IsInteractionWithChestThatHasBeenOpened();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IsPlayerOpeningAlreadyOpenedChest">();
	}
	static class UIsPlayerOpeningAlreadyOpenedChest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIsPlayerOpeningAlreadyOpenedChest>();
	}
};
static_assert(alignof(UIsPlayerOpeningAlreadyOpenedChest) == 0x000008, "Wrong alignment on UIsPlayerOpeningAlreadyOpenedChest");
static_assert(sizeof(UIsPlayerOpeningAlreadyOpenedChest) == 0x0000E8, "Wrong size on UIsPlayerOpeningAlreadyOpenedChest");
static_assert(offsetof(UIsPlayerOpeningAlreadyOpenedChest, _isInteractionWithChestThatHasBeenOpened) == 0x0000E0, "Member 'UIsPlayerOpeningAlreadyOpenedChest::_isInteractionWithChestThatHasBeenOpened' has a wrong offset!");

// Class TheK37.K37ActivateOnTrackedSurvivorsStrategy
// 0x0008 (0x0038 - 0x0030)
class UK37ActivateOnTrackedSurvivorsStrategy final : public UActivateOnEventBaseActivationStrategy
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37ActivateOnTrackedSurvivorsStrategy">();
	}
	static class UK37ActivateOnTrackedSurvivorsStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37ActivateOnTrackedSurvivorsStrategy>();
	}
};
static_assert(alignof(UK37ActivateOnTrackedSurvivorsStrategy) == 0x000008, "Wrong alignment on UK37ActivateOnTrackedSurvivorsStrategy");
static_assert(sizeof(UK37ActivateOnTrackedSurvivorsStrategy) == 0x000038, "Wrong size on UK37ActivateOnTrackedSurvivorsStrategy");

// Class TheK37.K37AdjustChainedPounceAttackInteraction
// 0x0030 (0x07B0 - 0x0780)
class UK37AdjustChainedPounceAttackInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_778[0x38];                                     // 0x0778(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37AdjustChainedPounceAttackInteraction">();
	}
	static class UK37AdjustChainedPounceAttackInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37AdjustChainedPounceAttackInteraction>();
	}
};
static_assert(alignof(UK37AdjustChainedPounceAttackInteraction) == 0x000010, "Wrong alignment on UK37AdjustChainedPounceAttackInteraction");
static_assert(sizeof(UK37AdjustChainedPounceAttackInteraction) == 0x0007B0, "Wrong size on UK37AdjustChainedPounceAttackInteraction");

// Class TheK37.K37AnimInstance
// 0x0020 (0x0740 - 0x0720)
class UK37AnimInstance final : public UKillerAnimInstance
{
public:
	struct FVector                                _meshScale;                                        // 0x0720(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInVampireForm;                                  // 0x0738(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInBatForm;                                      // 0x0739(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isInWolfForm;                                     // 0x073A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _enableWolfIk;                                     // 0x073B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_73C[0x4];                                      // 0x073C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37AnimInstance">();
	}
	static class UK37AnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37AnimInstance>();
	}
};
static_assert(alignof(UK37AnimInstance) == 0x000010, "Wrong alignment on UK37AnimInstance");
static_assert(sizeof(UK37AnimInstance) == 0x000740, "Wrong size on UK37AnimInstance");
static_assert(offsetof(UK37AnimInstance, _meshScale) == 0x000720, "Member 'UK37AnimInstance::_meshScale' has a wrong offset!");
static_assert(offsetof(UK37AnimInstance, _isInVampireForm) == 0x000738, "Member 'UK37AnimInstance::_isInVampireForm' has a wrong offset!");
static_assert(offsetof(UK37AnimInstance, _isInBatForm) == 0x000739, "Member 'UK37AnimInstance::_isInBatForm' has a wrong offset!");
static_assert(offsetof(UK37AnimInstance, _isInWolfForm) == 0x00073A, "Member 'UK37AnimInstance::_isInWolfForm' has a wrong offset!");
static_assert(offsetof(UK37AnimInstance, _enableWolfIk) == 0x00073B, "Member 'UK37AnimInstance::_enableWolfIk' has a wrong offset!");

// Class TheK37.K37AttackPickerComponent
// 0x0000 (0x00A8 - 0x00A8)
class UK37AttackPickerComponent final : public USlasherAttackPickerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37AttackPickerComponent">();
	}
	static class UK37AttackPickerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37AttackPickerComponent>();
	}
};
static_assert(alignof(UK37AttackPickerComponent) == 0x000008, "Wrong alignment on UK37AttackPickerComponent");
static_assert(sizeof(UK37AttackPickerComponent) == 0x0000A8, "Wrong size on UK37AttackPickerComponent");

// Class TheK37.K37BatAbility
// 0x01A0 (0x0348 - 0x01A8)
class UK37BatAbility final : public UKillerAbilityComponent
{
public:
	uint8                                         Pad_1A8[0x48];                                     // 0x01A8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UK37TeleportInteraction>    _teleportInteractionClass;                         // 0x01F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37TeleportInteraction*                _teleportInteraction;                              // 0x01F8(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UIgnorePlayersCollisionsComponent*      _ignorePlayersCollisionsComponent;                 // 0x0200(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UIgnoreWindowsCollisionsComponent> _ignoreWindowsCollisionsComponentClass;            // 0x0208(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UIgnoreWindowsCollisionsComponent*      _ignoreWindowsCollisionsComponent;                 // 0x0210(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UIgnorePalletsCollisionsComponent> _ignorePalletsCollisionsComponentClass;            // 0x0218(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UIgnorePalletsCollisionsComponent*      _ignorePalletsCollisionsComponent;                 // 0x0220(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UTargetingComponent>        _teleportTargetingComponentClass;                  // 0x0228(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTargetingComponent*                    _teleportTargetingComponent;                       // 0x0230(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37TeleportPalletTarget>   _teleportPalletTargetClass;                        // 0x0238(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37TeleportWindowTarget>   _teleportWindowTargetClass;                        // 0x0240(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTargetableComponent*>           _teleportTargets;                                  // 0x0248(0x0010)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37BatAbilityFlyVelocityCalculationStrategy> _flyVelocityCalculationStrategyClass;              // 0x0258(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37BatAbilityFlyVelocityCalculationStrategy* _flyVelocityCalculationStrategy;                   // 0x0260(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _killerCapsuleHalfHeightInBatForm;                 // 0x0268(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _killerCapsuleRadiusInBatForm;                     // 0x0270(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_274[0xD4];                                     // 0x0274(0x00D4)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnTeleportFinished(class AActor* TargetActor);
	void Cosmetic_OnTeleportProgressChanged(const float ProgressPercentage, class AActor* TargetActor);
	void Cosmetic_OnTeleportStarted(class AActor* TargetActor);
	void OnLevelReadyToPlay();
	void OnRep_TeleportTargets();

	float GetMaxRangeForTeleport() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbility">();
	}
	static class UK37BatAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbility>();
	}
};
static_assert(alignof(UK37BatAbility) == 0x000008, "Wrong alignment on UK37BatAbility");
static_assert(sizeof(UK37BatAbility) == 0x000348, "Wrong size on UK37BatAbility");
static_assert(offsetof(UK37BatAbility, _teleportInteractionClass) == 0x0001F0, "Member 'UK37BatAbility::_teleportInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportInteraction) == 0x0001F8, "Member 'UK37BatAbility::_teleportInteraction' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _ignorePlayersCollisionsComponent) == 0x000200, "Member 'UK37BatAbility::_ignorePlayersCollisionsComponent' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _ignoreWindowsCollisionsComponentClass) == 0x000208, "Member 'UK37BatAbility::_ignoreWindowsCollisionsComponentClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _ignoreWindowsCollisionsComponent) == 0x000210, "Member 'UK37BatAbility::_ignoreWindowsCollisionsComponent' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _ignorePalletsCollisionsComponentClass) == 0x000218, "Member 'UK37BatAbility::_ignorePalletsCollisionsComponentClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _ignorePalletsCollisionsComponent) == 0x000220, "Member 'UK37BatAbility::_ignorePalletsCollisionsComponent' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportTargetingComponentClass) == 0x000228, "Member 'UK37BatAbility::_teleportTargetingComponentClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportTargetingComponent) == 0x000230, "Member 'UK37BatAbility::_teleportTargetingComponent' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportPalletTargetClass) == 0x000238, "Member 'UK37BatAbility::_teleportPalletTargetClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportWindowTargetClass) == 0x000240, "Member 'UK37BatAbility::_teleportWindowTargetClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _teleportTargets) == 0x000248, "Member 'UK37BatAbility::_teleportTargets' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _flyVelocityCalculationStrategyClass) == 0x000258, "Member 'UK37BatAbility::_flyVelocityCalculationStrategyClass' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _flyVelocityCalculationStrategy) == 0x000260, "Member 'UK37BatAbility::_flyVelocityCalculationStrategy' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _killerCapsuleHalfHeightInBatForm) == 0x000268, "Member 'UK37BatAbility::_killerCapsuleHalfHeightInBatForm' has a wrong offset!");
static_assert(offsetof(UK37BatAbility, _killerCapsuleRadiusInBatForm) == 0x000270, "Member 'UK37BatAbility::_killerCapsuleRadiusInBatForm' has a wrong offset!");

// Class TheK37.K37BatAbilityFlyVelocityCalculationStrategy
// 0x0030 (0x00D8 - 0x00A8)
class UK37BatAbilityFlyVelocityCalculationStrategy final : public UBaseCharacterVelocityCalculationStrategy
{
public:
	float                                         _brakingDeceleration;                              // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _friction;                                         // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _minimumVelocityToOverrideDecelerationValues;      // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  _allowedInteractionsToApply;                       // 0x00B8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbilityFlyVelocityCalculationStrategy">();
	}
	static class UK37BatAbilityFlyVelocityCalculationStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbilityFlyVelocityCalculationStrategy>();
	}
};
static_assert(alignof(UK37BatAbilityFlyVelocityCalculationStrategy) == 0x000008, "Wrong alignment on UK37BatAbilityFlyVelocityCalculationStrategy");
static_assert(sizeof(UK37BatAbilityFlyVelocityCalculationStrategy) == 0x0000D8, "Wrong size on UK37BatAbilityFlyVelocityCalculationStrategy");
static_assert(offsetof(UK37BatAbilityFlyVelocityCalculationStrategy, _brakingDeceleration) == 0x0000A8, "Member 'UK37BatAbilityFlyVelocityCalculationStrategy::_brakingDeceleration' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityFlyVelocityCalculationStrategy, _friction) == 0x0000AC, "Member 'UK37BatAbilityFlyVelocityCalculationStrategy::_friction' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityFlyVelocityCalculationStrategy, _minimumVelocityToOverrideDecelerationValues) == 0x0000B0, "Member 'UK37BatAbilityFlyVelocityCalculationStrategy::_minimumVelocityToOverrideDecelerationValues' has a wrong offset!");
static_assert(offsetof(UK37BatAbilityFlyVelocityCalculationStrategy, _allowedInteractionsToApply) == 0x0000B8, "Member 'UK37BatAbilityFlyVelocityCalculationStrategy::_allowedInteractionsToApply' has a wrong offset!");

// Class TheK37.K37PowerWidgetPresentationComponent
// 0x0008 (0x00C8 - 0x00C0)
class UK37PowerWidgetPresentationComponent : public UPowerWidgetPresentationComponent
{
public:
	bool                                          _showAsTertiaryCooldownIconWhenNotApplicableAndOnCooldown; // 0x00C0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerWidgetPresentationComponent">();
	}
	static class UK37PowerWidgetPresentationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerWidgetPresentationComponent>();
	}
};
static_assert(alignof(UK37PowerWidgetPresentationComponent) == 0x000008, "Wrong alignment on UK37PowerWidgetPresentationComponent");
static_assert(sizeof(UK37PowerWidgetPresentationComponent) == 0x0000C8, "Wrong size on UK37PowerWidgetPresentationComponent");
static_assert(offsetof(UK37PowerWidgetPresentationComponent, _showAsTertiaryCooldownIconWhenNotApplicableAndOnCooldown) == 0x0000C0, "Member 'UK37PowerWidgetPresentationComponent::_showAsTertiaryCooldownIconWhenNotApplicableAndOnCooldown' has a wrong offset!");

// Class TheK37.K37BatAbilityMainPowerWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37BatAbilityMainPowerWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbilityMainPowerWidgetComponent">();
	}
	static class UK37BatAbilityMainPowerWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbilityMainPowerWidgetComponent>();
	}
};
static_assert(alignof(UK37BatAbilityMainPowerWidgetComponent) == 0x000008, "Wrong alignment on UK37BatAbilityMainPowerWidgetComponent");
static_assert(sizeof(UK37BatAbilityMainPowerWidgetComponent) == 0x0000C8, "Wrong size on UK37BatAbilityMainPowerWidgetComponent");

// Class TheK37.K37BatAbilitySecondaryPowerWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37BatAbilitySecondaryPowerWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbilitySecondaryPowerWidgetComponent">();
	}
	static class UK37BatAbilitySecondaryPowerWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbilitySecondaryPowerWidgetComponent>();
	}
};
static_assert(alignof(UK37BatAbilitySecondaryPowerWidgetComponent) == 0x000008, "Wrong alignment on UK37BatAbilitySecondaryPowerWidgetComponent");
static_assert(sizeof(UK37BatAbilitySecondaryPowerWidgetComponent) == 0x0000C8, "Wrong size on UK37BatAbilitySecondaryPowerWidgetComponent");

// Class TheK37.K37BatAbilitySubAnimInstance
// 0x0010 (0x0600 - 0x05F0)
class UK37BatAbilitySubAnimInstance final : public UBaseKillerAnimInstance
{
public:
	bool                                          _isBatTeleporting;                                 // 0x05F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F1[0xF];                                      // 0x05F1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37BatAbilitySubAnimInstance">();
	}
	static class UK37BatAbilitySubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37BatAbilitySubAnimInstance>();
	}
};
static_assert(alignof(UK37BatAbilitySubAnimInstance) == 0x000010, "Wrong alignment on UK37BatAbilitySubAnimInstance");
static_assert(sizeof(UK37BatAbilitySubAnimInstance) == 0x000600, "Wrong size on UK37BatAbilitySubAnimInstance");
static_assert(offsetof(UK37BatAbilitySubAnimInstance, _isBatTeleporting) == 0x0005F0, "Member 'UK37BatAbilitySubAnimInstance::_isBatTeleporting' has a wrong offset!");

// Class TheK37.K37CastleSpawnerGameStateComponent
// 0x0080 (0x0128 - 0x00A8)
class UK37CastleSpawnerGameStateComponent final : public UKillerSpecificGameStateComponent
{
public:
	TSoftClassPtr<class UClass>                   _castleClass;                                      // 0x00A8(0x0038)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                FallbackSpawnLocation;                             // 0x00E0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               FallbackSpawnRotation;                             // 0x00F8(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         FallbackSpawnScale;                                // 0x0110(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _spawnedCastle;                                    // 0x0118(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                             _perMapCastlePositions;                            // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37CastleSpawnerGameStateComponent">();
	}
	static class UK37CastleSpawnerGameStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37CastleSpawnerGameStateComponent>();
	}
};
static_assert(alignof(UK37CastleSpawnerGameStateComponent) == 0x000008, "Wrong alignment on UK37CastleSpawnerGameStateComponent");
static_assert(sizeof(UK37CastleSpawnerGameStateComponent) == 0x000128, "Wrong size on UK37CastleSpawnerGameStateComponent");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, _castleClass) == 0x0000A8, "Member 'UK37CastleSpawnerGameStateComponent::_castleClass' has a wrong offset!");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, FallbackSpawnLocation) == 0x0000E0, "Member 'UK37CastleSpawnerGameStateComponent::FallbackSpawnLocation' has a wrong offset!");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, FallbackSpawnRotation) == 0x0000F8, "Member 'UK37CastleSpawnerGameStateComponent::FallbackSpawnRotation' has a wrong offset!");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, FallbackSpawnScale) == 0x000110, "Member 'UK37CastleSpawnerGameStateComponent::FallbackSpawnScale' has a wrong offset!");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, _spawnedCastle) == 0x000118, "Member 'UK37CastleSpawnerGameStateComponent::_spawnedCastle' has a wrong offset!");
static_assert(offsetof(UK37CastleSpawnerGameStateComponent, _perMapCastlePositions) == 0x000120, "Member 'UK37CastleSpawnerGameStateComponent::_perMapCastlePositions' has a wrong offset!");

// Class TheK37.K37ChargeChainedPounceAttackInteraction
// 0x0010 (0x08D0 - 0x08C0)
class UK37ChargeChainedPounceAttackInteraction final : public UChargeableInteractionDefinition
{
public:
	class UChargeableComponent*                   _replicatedChargeableComponent;                    // 0x08C0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C8[0x8];                                      // 0x08C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ReplicatedChargeableComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37ChargeChainedPounceAttackInteraction">();
	}
	static class UK37ChargeChainedPounceAttackInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37ChargeChainedPounceAttackInteraction>();
	}
};
static_assert(alignof(UK37ChargeChainedPounceAttackInteraction) == 0x000010, "Wrong alignment on UK37ChargeChainedPounceAttackInteraction");
static_assert(sizeof(UK37ChargeChainedPounceAttackInteraction) == 0x0008D0, "Wrong size on UK37ChargeChainedPounceAttackInteraction");
static_assert(offsetof(UK37ChargeChainedPounceAttackInteraction, _replicatedChargeableComponent) == 0x0008C0, "Member 'UK37ChargeChainedPounceAttackInteraction::_replicatedChargeableComponent' has a wrong offset!");

// Class TheK37.K37CheatComponent
// 0x0000 (0x00A8 - 0x00A8)
class UK37CheatComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37CheatComponent">();
	}
	static class UK37CheatComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37CheatComponent>();
	}
};
static_assert(alignof(UK37CheatComponent) == 0x000008, "Wrong alignment on UK37CheatComponent");
static_assert(sizeof(UK37CheatComponent) == 0x0000A8, "Wrong size on UK37CheatComponent");

// Class TheK37.K37FlamePillar
// 0x0198 (0x0438 - 0x02A0)
class AK37FlamePillar final : public AActor
{
public:
	class UAkComponent*                           _audioComponent;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EK37FlamePillarState                          _currentState;                                     // 0x02A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      _eruptionCapsuleHitbox;                            // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37FlamePillarData*                    _flamePillarData;                                  // 0x02B8(0x0008)(Edit, Net, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UK37VampireAbility>      _owningVampireAbility;                             // 0x02C0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x120];                                    // 0x02C8(0x0120)(Fixing Size After Last Property [ Dumper-7 ])
	class UAuthoritativePoolableActorComponent*   _authoritativePoolableActorComponent;              // 0x03E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      _canSurvivorBeAffectedQuery;                       // 0x03F0(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void Authority_Despawn();
	void Authority_OnOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Authority_SetCurrentState(EK37FlamePillarState State);
	void Authority_StartErupting();
	void Authority_StartSpawning(const struct FTransform& SpawnTransform, class UK37FlamePillarData* FlamePillarData);
	void Authority_StartVanishing();
	void Cosmetic_OnDespawned();
	void Cosmetic_OnFlamePillarHit(class ACamperPlayer* Survivor);
	void Cosmetic_OnStartErupting();
	void Cosmetic_OnStartSpawning();
	void Cosmetic_OnStartVanishing();
	float GetDurationForFlamePillarState(EK37FlamePillarState State);
	void Multicast_HitSurvivor(class ACamperPlayer* Survivor);
	void OnRep_CurrentState();

	float GetPillarHeight() const;
	float GetPillarRadius() const;
	struct FHitResult GetPillarSpawnHitResult() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FlamePillar">();
	}
	static class AK37FlamePillar* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK37FlamePillar>();
	}
};
static_assert(alignof(AK37FlamePillar) == 0x000008, "Wrong alignment on AK37FlamePillar");
static_assert(sizeof(AK37FlamePillar) == 0x000438, "Wrong size on AK37FlamePillar");
static_assert(offsetof(AK37FlamePillar, _audioComponent) == 0x0002A0, "Member 'AK37FlamePillar::_audioComponent' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _currentState) == 0x0002A8, "Member 'AK37FlamePillar::_currentState' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _eruptionCapsuleHitbox) == 0x0002B0, "Member 'AK37FlamePillar::_eruptionCapsuleHitbox' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _flamePillarData) == 0x0002B8, "Member 'AK37FlamePillar::_flamePillarData' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _owningVampireAbility) == 0x0002C0, "Member 'AK37FlamePillar::_owningVampireAbility' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _authoritativePoolableActorComponent) == 0x0003E8, "Member 'AK37FlamePillar::_authoritativePoolableActorComponent' has a wrong offset!");
static_assert(offsetof(AK37FlamePillar, _canSurvivorBeAffectedQuery) == 0x0003F0, "Member 'AK37FlamePillar::_canSurvivorBeAffectedQuery' has a wrong offset!");

// Class TheK37.K37FlamePillarAttackCancelInteraction
// 0x0000 (0x0780 - 0x0780)
class UK37FlamePillarAttackCancelInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FlamePillarAttackCancelInteraction">();
	}
	static class UK37FlamePillarAttackCancelInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FlamePillarAttackCancelInteraction>();
	}
};
static_assert(alignof(UK37FlamePillarAttackCancelInteraction) == 0x000010, "Wrong alignment on UK37FlamePillarAttackCancelInteraction");
static_assert(sizeof(UK37FlamePillarAttackCancelInteraction) == 0x000780, "Wrong size on UK37FlamePillarAttackCancelInteraction");

// Class TheK37.K37FlamePillarAttackCastInteraction
// 0x0000 (0x0780 - 0x0780)
class UK37FlamePillarAttackCastInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FlamePillarAttackCastInteraction">();
	}
	static class UK37FlamePillarAttackCastInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FlamePillarAttackCastInteraction>();
	}
};
static_assert(alignof(UK37FlamePillarAttackCastInteraction) == 0x000010, "Wrong alignment on UK37FlamePillarAttackCastInteraction");
static_assert(sizeof(UK37FlamePillarAttackCastInteraction) == 0x000780, "Wrong size on UK37FlamePillarAttackCastInteraction");

// Class TheK37.K37FlamePillarAttackInteraction
// 0x0000 (0x08C0 - 0x08C0)
class UK37FlamePillarAttackInteraction final : public UChargeableInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FlamePillarAttackInteraction">();
	}
	static class UK37FlamePillarAttackInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FlamePillarAttackInteraction>();
	}
};
static_assert(alignof(UK37FlamePillarAttackInteraction) == 0x000010, "Wrong alignment on UK37FlamePillarAttackInteraction");
static_assert(sizeof(UK37FlamePillarAttackInteraction) == 0x0008C0, "Wrong size on UK37FlamePillarAttackInteraction");

// Class TheK37.K37FlamePillarData
// 0x0030 (0x0068 - 0x0038)
class UK37FlamePillarData final : public UDataAsset
{
public:
	TArray<struct FK37FlamePillarStateData>       FlamePillarStateData;                              // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _radius;                                           // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _height;                                           // 0x004C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _verticalOffset;                                   // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          _onSpawnAkEvent;                                   // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onStartEruptingAkEvent;                           // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FlamePillarData">();
	}
	static class UK37FlamePillarData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FlamePillarData>();
	}
};
static_assert(alignof(UK37FlamePillarData) == 0x000008, "Wrong alignment on UK37FlamePillarData");
static_assert(sizeof(UK37FlamePillarData) == 0x000068, "Wrong size on UK37FlamePillarData");
static_assert(offsetof(UK37FlamePillarData, FlamePillarStateData) == 0x000038, "Member 'UK37FlamePillarData::FlamePillarStateData' has a wrong offset!");
static_assert(offsetof(UK37FlamePillarData, _radius) == 0x000048, "Member 'UK37FlamePillarData::_radius' has a wrong offset!");
static_assert(offsetof(UK37FlamePillarData, _height) == 0x00004C, "Member 'UK37FlamePillarData::_height' has a wrong offset!");
static_assert(offsetof(UK37FlamePillarData, _verticalOffset) == 0x000050, "Member 'UK37FlamePillarData::_verticalOffset' has a wrong offset!");
static_assert(offsetof(UK37FlamePillarData, _onSpawnAkEvent) == 0x000058, "Member 'UK37FlamePillarData::_onSpawnAkEvent' has a wrong offset!");
static_assert(offsetof(UK37FlamePillarData, _onStartEruptingAkEvent) == 0x000060, "Member 'UK37FlamePillarData::_onStartEruptingAkEvent' has a wrong offset!");

// Class TheK37.K37Form
// 0x0000 (0x00C8 - 0x00C8)
class UK37Form final : public UKillerForm
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37Form">();
	}
	static class UK37Form* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37Form>();
	}
};
static_assert(alignof(UK37Form) == 0x000008, "Wrong alignment on UK37Form");
static_assert(sizeof(UK37Form) == 0x0000C8, "Wrong size on UK37Form");

// Class TheK37.K37FormSwitchingAbility
// 0x0018 (0x02D0 - 0x02B8)
class UK37FormSwitchingAbility final : public UKillerFormSwitchingAbility
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _forceToVampireFormTransitionDuration;             // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FormSwitchingAbility">();
	}
	static class UK37FormSwitchingAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FormSwitchingAbility>();
	}
};
static_assert(alignof(UK37FormSwitchingAbility) == 0x000008, "Wrong alignment on UK37FormSwitchingAbility");
static_assert(sizeof(UK37FormSwitchingAbility) == 0x0002D0, "Wrong size on UK37FormSwitchingAbility");
static_assert(offsetof(UK37FormSwitchingAbility, _forceToVampireFormTransitionDuration) == 0x0002C8, "Member 'UK37FormSwitchingAbility::_forceToVampireFormTransitionDuration' has a wrong offset!");

// Class TheK37.K37FormSwitchingAbilityMainWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37FormSwitchingAbilityMainWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FormSwitchingAbilityMainWidgetComponent">();
	}
	static class UK37FormSwitchingAbilityMainWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FormSwitchingAbilityMainWidgetComponent>();
	}
};
static_assert(alignof(UK37FormSwitchingAbilityMainWidgetComponent) == 0x000008, "Wrong alignment on UK37FormSwitchingAbilityMainWidgetComponent");
static_assert(sizeof(UK37FormSwitchingAbilityMainWidgetComponent) == 0x0000C8, "Wrong size on UK37FormSwitchingAbilityMainWidgetComponent");

// Class TheK37.K37WolfBiteAttackOpenSubstate
// 0x0000 (0x0130 - 0x0130)
class UK37WolfBiteAttackOpenSubstate final : public UPounceAttackOpenSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackOpenSubstate">();
	}
	static class UK37WolfBiteAttackOpenSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackOpenSubstate>();
	}
};
static_assert(alignof(UK37WolfBiteAttackOpenSubstate) == 0x000008, "Wrong alignment on UK37WolfBiteAttackOpenSubstate");
static_assert(sizeof(UK37WolfBiteAttackOpenSubstate) == 0x000130, "Wrong size on UK37WolfBiteAttackOpenSubstate");

// Class TheK37.K37FormSwitchingAbilityNextFormWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37FormSwitchingAbilityNextFormWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FormSwitchingAbilityNextFormWidgetComponent">();
	}
	static class UK37FormSwitchingAbilityNextFormWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FormSwitchingAbilityNextFormWidgetComponent>();
	}
};
static_assert(alignof(UK37FormSwitchingAbilityNextFormWidgetComponent) == 0x000008, "Wrong alignment on UK37FormSwitchingAbilityNextFormWidgetComponent");
static_assert(sizeof(UK37FormSwitchingAbilityNextFormWidgetComponent) == 0x0000C8, "Wrong size on UK37FormSwitchingAbilityNextFormWidgetComponent");

// Class TheK37.K37WolfBiteAttack
// 0x0080 (0x04A0 - 0x0420)
class UK37WolfBiteAttack final : public UPounceAttack
{
public:
	uint8                                         Pad_420[0x80];                                     // 0x0420(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttack">();
	}
	static class UK37WolfBiteAttack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttack>();
	}
};
static_assert(alignof(UK37WolfBiteAttack) == 0x000010, "Wrong alignment on UK37WolfBiteAttack");
static_assert(sizeof(UK37WolfBiteAttack) == 0x0004A0, "Wrong size on UK37WolfBiteAttack");

// Class TheK37.K37FormSwitchingAbilityPreviousFormWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37FormSwitchingAbilityPreviousFormWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FormSwitchingAbilityPreviousFormWidgetComponent">();
	}
	static class UK37FormSwitchingAbilityPreviousFormWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FormSwitchingAbilityPreviousFormWidgetComponent>();
	}
};
static_assert(alignof(UK37FormSwitchingAbilityPreviousFormWidgetComponent) == 0x000008, "Wrong alignment on UK37FormSwitchingAbilityPreviousFormWidgetComponent");
static_assert(sizeof(UK37FormSwitchingAbilityPreviousFormWidgetComponent) == 0x0000C8, "Wrong size on UK37FormSwitchingAbilityPreviousFormWidgetComponent");

// Class TheK37.K37FormSwitchingInteraction
// 0x0000 (0x0780 - 0x0780)
class UK37FormSwitchingInteraction final : public UKillerFormSwitchingInteraction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37FormSwitchingInteraction">();
	}
	static class UK37FormSwitchingInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37FormSwitchingInteraction>();
	}
};
static_assert(alignof(UK37FormSwitchingInteraction) == 0x000010, "Wrong alignment on UK37FormSwitchingInteraction");
static_assert(sizeof(UK37FormSwitchingInteraction) == 0x000780, "Wrong size on UK37FormSwitchingInteraction");

// Class TheK37.K37OnScentTrailParticleCollectedTimedStatusEffect
// 0x0010 (0x03C0 - 0x03B0)
class UK37OnScentTrailParticleCollectedTimedStatusEffect final : public UActivateOnEventTimedStatusEffect
{
public:
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37OnScentTrailParticleCollectedTimedStatusEffect">();
	}
	static class UK37OnScentTrailParticleCollectedTimedStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37OnScentTrailParticleCollectedTimedStatusEffect>();
	}
};
static_assert(alignof(UK37OnScentTrailParticleCollectedTimedStatusEffect) == 0x000008, "Wrong alignment on UK37OnScentTrailParticleCollectedTimedStatusEffect");
static_assert(sizeof(UK37OnScentTrailParticleCollectedTimedStatusEffect) == 0x0003C0, "Wrong size on UK37OnScentTrailParticleCollectedTimedStatusEffect");

// Class TheK37.K37P01
// 0x0030 (0x04D0 - 0x04A0)
class UK37P01 final : public UHexPerk
{
public:
	TSubclassOf<class UStatusEffect>              _repairSpeedStatusEffectClass;                     // 0x04A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _repairSpeedPenalty[0x3];                          // 0x04A8(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _hexTotemAuraRevealRange[0x3];                     // 0x04B4(0x0004)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACamperPlayer*                          _currentAffectedObsession;                         // 0x04C0(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _authority_repairSpeedStatusEffect;                // 0x04C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_OnObsessionChanged(class ACamperPlayer* NewObsession, class ACamperPlayer* PreviousObsession);
	void OnRep_CurrentAffectedObsession();

	float GetHexTotemAuraRevealRangeAtLevel() const;
	float GetRepairSpeedPenaltyValueAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37P01">();
	}
	static class UK37P01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37P01>();
	}
};
static_assert(alignof(UK37P01) == 0x000008, "Wrong alignment on UK37P01");
static_assert(sizeof(UK37P01) == 0x0004D0, "Wrong size on UK37P01");
static_assert(offsetof(UK37P01, _repairSpeedStatusEffectClass) == 0x0004A0, "Member 'UK37P01::_repairSpeedStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37P01, _repairSpeedPenalty) == 0x0004A8, "Member 'UK37P01::_repairSpeedPenalty' has a wrong offset!");
static_assert(offsetof(UK37P01, _hexTotemAuraRevealRange) == 0x0004B4, "Member 'UK37P01::_hexTotemAuraRevealRange' has a wrong offset!");
static_assert(offsetof(UK37P01, _currentAffectedObsession) == 0x0004C0, "Member 'UK37P01::_currentAffectedObsession' has a wrong offset!");
static_assert(offsetof(UK37P01, _authority_repairSpeedStatusEffect) == 0x0004C8, "Member 'UK37P01::_authority_repairSpeedStatusEffect' has a wrong offset!");

// Class TheK37.K37WolfBiteAttackSuccessSubstate
// 0x0000 (0x0118 - 0x0118)
class UK37WolfBiteAttackSuccessSubstate final : public UPounceAttackSuccessSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackSuccessSubstate">();
	}
	static class UK37WolfBiteAttackSuccessSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackSuccessSubstate>();
	}
};
static_assert(alignof(UK37WolfBiteAttackSuccessSubstate) == 0x000008, "Wrong alignment on UK37WolfBiteAttackSuccessSubstate");
static_assert(sizeof(UK37WolfBiteAttackSuccessSubstate) == 0x000118, "Wrong size on UK37WolfBiteAttackSuccessSubstate");

// Class TheK37.K37P02
// 0x0140 (0x05E0 - 0x04A0)
class UK37P02 final : public USpawningEffectPerk
{
public:
	TSubclassOf<class UStatusEffect>              _survivorRevealAuraStatusEffectClass;              // 0x04A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UStatusEffect>              _enableKillerInteractionStatusEffectClass;         // 0x04A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInteractionDefinition>     _closeChestKillerInteraction;                      // 0x04B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cooldownDuration[0x3];                            // 0x04B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chestAuraRevealRange[0x3];                        // 0x04C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _chestAuraRevealDuration[0x3];                     // 0x04D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatusEffect*                          _authority_killerStatusEffect;                     // 0x04E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FChestInRangeData> _authority_chestsInRangeForPlayers;                // 0x04E8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class ASearchable>, class UInteractionDefinition*> _authority_addedInteractions;                      // 0x0538(0x0050)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_588[0x58];                                     // 0x0588(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnChestIsOpenedChanged(bool IsOpened, class ASearchable* Chest);
	void Authority_OnCloseChestInteractionFinished(class ADBDPlayer* Player, bool HasInteractionStarted);
	void Authority_OnCooldownTimerDone();
	void Authority_PlayerInRangeFromChestChanged(class AActor* Player, const bool IsInRange, class ASearchable* Chest);

	float GetChestAuraRevealDuration() const;
	float GetChestAuraRevealRange() const;
	float GetCooldownDurationAtLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37P02">();
	}
	static class UK37P02* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37P02>();
	}
};
static_assert(alignof(UK37P02) == 0x000008, "Wrong alignment on UK37P02");
static_assert(sizeof(UK37P02) == 0x0005E0, "Wrong size on UK37P02");
static_assert(offsetof(UK37P02, _survivorRevealAuraStatusEffectClass) == 0x0004A0, "Member 'UK37P02::_survivorRevealAuraStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37P02, _enableKillerInteractionStatusEffectClass) == 0x0004A8, "Member 'UK37P02::_enableKillerInteractionStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37P02, _closeChestKillerInteraction) == 0x0004B0, "Member 'UK37P02::_closeChestKillerInteraction' has a wrong offset!");
static_assert(offsetof(UK37P02, _cooldownDuration) == 0x0004B8, "Member 'UK37P02::_cooldownDuration' has a wrong offset!");
static_assert(offsetof(UK37P02, _chestAuraRevealRange) == 0x0004C4, "Member 'UK37P02::_chestAuraRevealRange' has a wrong offset!");
static_assert(offsetof(UK37P02, _chestAuraRevealDuration) == 0x0004D0, "Member 'UK37P02::_chestAuraRevealDuration' has a wrong offset!");
static_assert(offsetof(UK37P02, _authority_killerStatusEffect) == 0x0004E0, "Member 'UK37P02::_authority_killerStatusEffect' has a wrong offset!");
static_assert(offsetof(UK37P02, _authority_chestsInRangeForPlayers) == 0x0004E8, "Member 'UK37P02::_authority_chestsInRangeForPlayers' has a wrong offset!");
static_assert(offsetof(UK37P02, _authority_addedInteractions) == 0x000538, "Member 'UK37P02::_authority_addedInteractions' has a wrong offset!");

// Class TheK37.K37WolfBiteAttackHittingSubstate
// 0x0000 (0x01A0 - 0x01A0)
class UK37WolfBiteAttackHittingSubstate final : public UPounceAttackHittingSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackHittingSubstate">();
	}
	static class UK37WolfBiteAttackHittingSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackHittingSubstate>();
	}
};
static_assert(alignof(UK37WolfBiteAttackHittingSubstate) == 0x000008, "Wrong alignment on UK37WolfBiteAttackHittingSubstate");
static_assert(sizeof(UK37WolfBiteAttackHittingSubstate) == 0x0001A0, "Wrong size on UK37WolfBiteAttackHittingSubstate");

// Class TheK37.K37P02_CloseChestInteraction
// 0x0000 (0x0780 - 0x0780)
class UK37P02_CloseChestInteraction final : public UInteractionDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37P02_CloseChestInteraction">();
	}
	static class UK37P02_CloseChestInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37P02_CloseChestInteraction>();
	}
};
static_assert(alignof(UK37P02_CloseChestInteraction) == 0x000010, "Wrong alignment on UK37P02_CloseChestInteraction");
static_assert(sizeof(UK37P02_CloseChestInteraction) == 0x000780, "Wrong size on UK37P02_CloseChestInteraction");

// Class TheK37.K37P03
// 0x0058 (0x0478 - 0x0420)
class UK37P03 final : public UPerk
{
public:
	float                                         _blockDuration[0x3];                               // 0x0420(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _blockedInteractableStatusEffectClass;             // 0x0430(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor            _survivorReactionMontageDescriptor;                // 0x0438(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class AInteractable*>                  _authority_nonUsedInteractables;                   // 0x0458(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AInteractable*>                  _authority_blockedInteractables;                   // 0x0468(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void Authority_OnInteractableBlockChanged(class AInteractable* Interactable);
	void Authority_OnInteractorLockChanged(bool IsLocked, class ADBDPlayer* Player, class AInteractable* Interactable);
	void Authority_OnMontageEnded(const struct FAnimationMontageDescriptor& Montage, bool Interrupted, class ADBDPlayer* Player);
	void Multicast_OnPlayerReacting(class ADBDPlayer* Player);

	float GetBlockDuration() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37P03">();
	}
	static class UK37P03* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37P03>();
	}
};
static_assert(alignof(UK37P03) == 0x000008, "Wrong alignment on UK37P03");
static_assert(sizeof(UK37P03) == 0x000478, "Wrong size on UK37P03");
static_assert(offsetof(UK37P03, _blockDuration) == 0x000420, "Member 'UK37P03::_blockDuration' has a wrong offset!");
static_assert(offsetof(UK37P03, _blockedInteractableStatusEffectClass) == 0x000430, "Member 'UK37P03::_blockedInteractableStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37P03, _survivorReactionMontageDescriptor) == 0x000438, "Member 'UK37P03::_survivorReactionMontageDescriptor' has a wrong offset!");
static_assert(offsetof(UK37P03, _authority_nonUsedInteractables) == 0x000458, "Member 'UK37P03::_authority_nonUsedInteractables' has a wrong offset!");
static_assert(offsetof(UK37P03, _authority_blockedInteractables) == 0x000468, "Member 'UK37P03::_authority_blockedInteractables' has a wrong offset!");

// Class TheK37.K37Power
// 0x0000 (0x05F8 - 0x05F8)
class AK37Power final : public AKillerPower
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37Power">();
	}
	static class AK37Power* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK37Power>();
	}
};
static_assert(alignof(AK37Power) == 0x000008, "Wrong alignment on AK37Power");
static_assert(sizeof(AK37Power) == 0x0005F8, "Wrong size on AK37Power");

// Class TheK37.K37WolfAbilityMovementStatusEffect
// 0x0058 (0x03D8 - 0x0380)
class UK37WolfAbilityMovementStatusEffect final : public UStatusEffect
{
public:
	float                                         _backwardMovementSpeedMultiplier;                  // 0x0380(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _backwardMovementThreshold;                        // 0x0384(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x50];                                     // 0x0388(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfAbilityMovementStatusEffect">();
	}
	static class UK37WolfAbilityMovementStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfAbilityMovementStatusEffect>();
	}
};
static_assert(alignof(UK37WolfAbilityMovementStatusEffect) == 0x000008, "Wrong alignment on UK37WolfAbilityMovementStatusEffect");
static_assert(sizeof(UK37WolfAbilityMovementStatusEffect) == 0x0003D8, "Wrong size on UK37WolfAbilityMovementStatusEffect");
static_assert(offsetof(UK37WolfAbilityMovementStatusEffect, _backwardMovementSpeedMultiplier) == 0x000380, "Member 'UK37WolfAbilityMovementStatusEffect::_backwardMovementSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(UK37WolfAbilityMovementStatusEffect, _backwardMovementThreshold) == 0x000384, "Member 'UK37WolfAbilityMovementStatusEffect::_backwardMovementThreshold' has a wrong offset!");

// Class TheK37.K37PowerAddon01
// 0x0008 (0x02F0 - 0x02E8)
class UK37PowerAddon01 final : public UItemAddon
{
public:
	float                                         _bonusPercentagePerToken;                          // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerAddon01">();
	}
	static class UK37PowerAddon01* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerAddon01>();
	}
};
static_assert(alignof(UK37PowerAddon01) == 0x000008, "Wrong alignment on UK37PowerAddon01");
static_assert(sizeof(UK37PowerAddon01) == 0x0002F0, "Wrong size on UK37PowerAddon01");
static_assert(offsetof(UK37PowerAddon01, _bonusPercentagePerToken) == 0x0002E8, "Member 'UK37PowerAddon01::_bonusPercentagePerToken' has a wrong offset!");

// Class TheK37.K37WolfAbilityMainWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37WolfAbilityMainWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfAbilityMainWidgetComponent">();
	}
	static class UK37WolfAbilityMainWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfAbilityMainWidgetComponent>();
	}
};
static_assert(alignof(UK37WolfAbilityMainWidgetComponent) == 0x000008, "Wrong alignment on UK37WolfAbilityMainWidgetComponent");
static_assert(sizeof(UK37WolfAbilityMainWidgetComponent) == 0x0000C8, "Wrong size on UK37WolfAbilityMainWidgetComponent");

// Class TheK37.K37PowerAddon14
// 0x0008 (0x02F0 - 0x02E8)
class UK37PowerAddon14 final : public UItemAddon
{
public:
	float                                         _percentageToRemove;                               // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerAddon14">();
	}
	static class UK37PowerAddon14* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerAddon14>();
	}
};
static_assert(alignof(UK37PowerAddon14) == 0x000008, "Wrong alignment on UK37PowerAddon14");
static_assert(sizeof(UK37PowerAddon14) == 0x0002F0, "Wrong size on UK37PowerAddon14");
static_assert(offsetof(UK37PowerAddon14, _percentageToRemove) == 0x0002E8, "Member 'UK37PowerAddon14::_percentageToRemove' has a wrong offset!");

// Class TheK37.K37PowerAddon16
// 0x0018 (0x0300 - 0x02E8)
class UK37PowerAddon16 final : public UItemAddon
{
public:
	TSubclassOf<class UK37Power_Addon16_StatusEffect> _addonStatusEffectClass;                           // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _statusEffectLingerDuration;                       // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0xC];                                      // 0x02F4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerAddon16">();
	}
	static class UK37PowerAddon16* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerAddon16>();
	}
};
static_assert(alignof(UK37PowerAddon16) == 0x000008, "Wrong alignment on UK37PowerAddon16");
static_assert(sizeof(UK37PowerAddon16) == 0x000300, "Wrong size on UK37PowerAddon16");
static_assert(offsetof(UK37PowerAddon16, _addonStatusEffectClass) == 0x0002E8, "Member 'UK37PowerAddon16::_addonStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37PowerAddon16, _statusEffectLingerDuration) == 0x0002F0, "Member 'UK37PowerAddon16::_statusEffectLingerDuration' has a wrong offset!");

// Class TheK37.K37PowerAddon17
// 0x0078 (0x0360 - 0x02E8)
class UK37PowerAddon17 final : public UItemAddon
{
public:
	float                                         _activeDuration;                                   // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _minTimeToSpawn;                                   // 0x02EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxTimeToSpawn;                                   // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _maxDistanceFromPlayers;                           // 0x02F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x60];                                     // 0x02F8(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	class UK37FlamePillarData*                    _flamePillarData;                                  // 0x0358(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_SpawnARandomFlamePillar();
	void Authority_StopSpawningFlamePillars();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerAddon17">();
	}
	static class UK37PowerAddon17* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerAddon17>();
	}
};
static_assert(alignof(UK37PowerAddon17) == 0x000008, "Wrong alignment on UK37PowerAddon17");
static_assert(sizeof(UK37PowerAddon17) == 0x000360, "Wrong size on UK37PowerAddon17");
static_assert(offsetof(UK37PowerAddon17, _activeDuration) == 0x0002E8, "Member 'UK37PowerAddon17::_activeDuration' has a wrong offset!");
static_assert(offsetof(UK37PowerAddon17, _minTimeToSpawn) == 0x0002EC, "Member 'UK37PowerAddon17::_minTimeToSpawn' has a wrong offset!");
static_assert(offsetof(UK37PowerAddon17, _maxTimeToSpawn) == 0x0002F0, "Member 'UK37PowerAddon17::_maxTimeToSpawn' has a wrong offset!");
static_assert(offsetof(UK37PowerAddon17, _maxDistanceFromPlayers) == 0x0002F4, "Member 'UK37PowerAddon17::_maxDistanceFromPlayers' has a wrong offset!");
static_assert(offsetof(UK37PowerAddon17, _flamePillarData) == 0x000358, "Member 'UK37PowerAddon17::_flamePillarData' has a wrong offset!");

// Class TheK37.K37PowerAddon19
// 0x0008 (0x02F0 - 0x02E8)
class UK37PowerAddon19 final : public UItemAddon
{
public:
	TSubclassOf<class AFlamePillarExitGateMinigame> _flamePillarExitGateMinigameClass;                 // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerAddon19">();
	}
	static class UK37PowerAddon19* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerAddon19>();
	}
};
static_assert(alignof(UK37PowerAddon19) == 0x000008, "Wrong alignment on UK37PowerAddon19");
static_assert(sizeof(UK37PowerAddon19) == 0x0002F0, "Wrong size on UK37PowerAddon19");
static_assert(offsetof(UK37PowerAddon19, _flamePillarExitGateMinigameClass) == 0x0002E8, "Member 'UK37PowerAddon19::_flamePillarExitGateMinigameClass' has a wrong offset!");

// Class TheK37.K37PowerWidgetBundlePresentationComponent
// 0x0000 (0x0108 - 0x0108)
class UK37PowerWidgetBundlePresentationComponent final : public UPowerWidgetBundlePresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37PowerWidgetBundlePresentationComponent">();
	}
	static class UK37PowerWidgetBundlePresentationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37PowerWidgetBundlePresentationComponent>();
	}
};
static_assert(alignof(UK37PowerWidgetBundlePresentationComponent) == 0x000008, "Wrong alignment on UK37PowerWidgetBundlePresentationComponent");
static_assert(sizeof(UK37PowerWidgetBundlePresentationComponent) == 0x000108, "Wrong size on UK37PowerWidgetBundlePresentationComponent");

// Class TheK37.K37Power_Addon16_StatusEffect
// 0x0000 (0x03B0 - 0x03B0)
class UK37Power_Addon16_StatusEffect final : public UActivateOnEventTimedStatusEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37Power_Addon16_StatusEffect">();
	}
	static class UK37Power_Addon16_StatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37Power_Addon16_StatusEffect>();
	}
};
static_assert(alignof(UK37Power_Addon16_StatusEffect) == 0x000008, "Wrong alignment on UK37Power_Addon16_StatusEffect");
static_assert(sizeof(UK37Power_Addon16_StatusEffect) == 0x0003B0, "Wrong size on UK37Power_Addon16_StatusEffect");

// Class TheK37.K37ScentTrailParticle
// 0x00A8 (0x0348 - 0x02A0)
class AK37ScentTrailParticle final : public AActor
{
public:
	uint8                                         Pad_2A0[0x18];                                     // 0x02A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        _rootComponent;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                   _staticMesh;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                       _particleCollectionZone;                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x02D0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37ScentTrailParticleOutlineUpdateStrategy* _outlineUpdateStrategy;                            // 0x02D8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAuthoritativePoolableActorComponent*   _authoritativePoolableActorComponent;              // 0x02E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FK37ScentParticleSpawningData          _spawningData;                                     // 0x02E8(0x0030)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          _isCollected;                                      // 0x0318(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UK37WolfAbility>         _owningWolfAbility;                                // 0x031C(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ACamperPlayer>           _owningSurvivor;                                   // 0x0324(0x0008)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimerObject*                           _lifetimeTimer;                                    // 0x0330(0x0008)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cosmetic_OnScentTrailParticleCollected();
	void Cosmetic_OnScentTrailParticleLifetimeEnded();
	void Cosmetic_OnScentTrailParticleSpawned();
	void Cosmetic_OnVisibilityChanged(bool IsVisible);
	void Cosmetic_UpdateScentTrailParticleLifetimeState(float RemainingTimerPercent);
	float GetScentTrailAngle();
	void OnRep_LifetimeTimer();
	void OnRep_SpawningData();
	void OnScentParticleCollisionZoneOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnScentTrailParticleAcquiredChanged(const bool IsAcquired);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37ScentTrailParticle">();
	}
	static class AK37ScentTrailParticle* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK37ScentTrailParticle>();
	}
};
static_assert(alignof(AK37ScentTrailParticle) == 0x000008, "Wrong alignment on AK37ScentTrailParticle");
static_assert(sizeof(AK37ScentTrailParticle) == 0x000348, "Wrong size on AK37ScentTrailParticle");
static_assert(offsetof(AK37ScentTrailParticle, _rootComponent) == 0x0002B8, "Member 'AK37ScentTrailParticle::_rootComponent' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _staticMesh) == 0x0002C0, "Member 'AK37ScentTrailParticle::_staticMesh' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _particleCollectionZone) == 0x0002C8, "Member 'AK37ScentTrailParticle::_particleCollectionZone' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _outlineComponent) == 0x0002D0, "Member 'AK37ScentTrailParticle::_outlineComponent' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _outlineUpdateStrategy) == 0x0002D8, "Member 'AK37ScentTrailParticle::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _authoritativePoolableActorComponent) == 0x0002E0, "Member 'AK37ScentTrailParticle::_authoritativePoolableActorComponent' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _spawningData) == 0x0002E8, "Member 'AK37ScentTrailParticle::_spawningData' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _isCollected) == 0x000318, "Member 'AK37ScentTrailParticle::_isCollected' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _owningWolfAbility) == 0x00031C, "Member 'AK37ScentTrailParticle::_owningWolfAbility' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _owningSurvivor) == 0x000324, "Member 'AK37ScentTrailParticle::_owningSurvivor' has a wrong offset!");
static_assert(offsetof(AK37ScentTrailParticle, _lifetimeTimer) == 0x000330, "Member 'AK37ScentTrailParticle::_lifetimeTimer' has a wrong offset!");

// Class TheK37.K37ScentTrailParticleOutlineUpdateStrategy
// 0x0018 (0x00E8 - 0x00D0)
class UK37ScentTrailParticleOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                           _outlineColor;                                     // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37ScentTrailParticleOutlineUpdateStrategy">();
	}
	static class UK37ScentTrailParticleOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37ScentTrailParticleOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UK37ScentTrailParticleOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UK37ScentTrailParticleOutlineUpdateStrategy");
static_assert(sizeof(UK37ScentTrailParticleOutlineUpdateStrategy) == 0x0000E8, "Wrong size on UK37ScentTrailParticleOutlineUpdateStrategy");
static_assert(offsetof(UK37ScentTrailParticleOutlineUpdateStrategy, _outlineColor) == 0x0000D0, "Member 'UK37ScentTrailParticleOutlineUpdateStrategy::_outlineColor' has a wrong offset!");

// Class TheK37.K37ScoringComponent
// 0x0058 (0x0100 - 0x00A8)
class UK37ScoringComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A8[0x14];                                      // 0x00A8(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _windowToFollowUpBatFormWithSurvivorInjuryDuration; // 0x00BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x40];                                      // 0x00C0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37ScoringComponent">();
	}
	static class UK37ScoringComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37ScoringComponent>();
	}
};
static_assert(alignof(UK37ScoringComponent) == 0x000008, "Wrong alignment on UK37ScoringComponent");
static_assert(sizeof(UK37ScoringComponent) == 0x000100, "Wrong size on UK37ScoringComponent");
static_assert(offsetof(UK37ScoringComponent, _windowToFollowUpBatFormWithSurvivorInjuryDuration) == 0x0000BC, "Member 'UK37ScoringComponent::_windowToFollowUpBatFormWithSurvivorInjuryDuration' has a wrong offset!");

// Class TheK37.K37SurvivorCosmeticHelperActor
// 0x0000 (0x0308 - 0x0308)
class AK37SurvivorCosmeticHelperActor final : public ASurvivorCosmeticHelperActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37SurvivorCosmeticHelperActor">();
	}
	static class AK37SurvivorCosmeticHelperActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AK37SurvivorCosmeticHelperActor>();
	}
};
static_assert(alignof(AK37SurvivorCosmeticHelperActor) == 0x000008, "Wrong alignment on AK37SurvivorCosmeticHelperActor");
static_assert(sizeof(AK37SurvivorCosmeticHelperActor) == 0x000308, "Wrong size on AK37SurvivorCosmeticHelperActor");

// Class TheK37.K37SurvivorScentTrailParticleSpawner
// 0x0048 (0x00F0 - 0x00A8)
class UK37SurvivorScentTrailParticleSpawner final : public UActorComponent
{
public:
	class UAuthoritativeActorPoolComponent*       _authoritativeScentParticlePool;                   // 0x00A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UK37WolfAbility>         _wolfAbility;                                      // 0x00B0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x30];                                      // 0x00B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _scentParticleSpawnTimerRemainingTime;             // 0x00E8(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnIsRunningAndMovingChanged(const bool IsRunningAndMoving);

	void OnRep_ScentParticleSpawnTimerRemainingTime() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37SurvivorScentTrailParticleSpawner">();
	}
	static class UK37SurvivorScentTrailParticleSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37SurvivorScentTrailParticleSpawner>();
	}
};
static_assert(alignof(UK37SurvivorScentTrailParticleSpawner) == 0x000008, "Wrong alignment on UK37SurvivorScentTrailParticleSpawner");
static_assert(sizeof(UK37SurvivorScentTrailParticleSpawner) == 0x0000F0, "Wrong size on UK37SurvivorScentTrailParticleSpawner");
static_assert(offsetof(UK37SurvivorScentTrailParticleSpawner, _authoritativeScentParticlePool) == 0x0000A8, "Member 'UK37SurvivorScentTrailParticleSpawner::_authoritativeScentParticlePool' has a wrong offset!");
static_assert(offsetof(UK37SurvivorScentTrailParticleSpawner, _wolfAbility) == 0x0000B0, "Member 'UK37SurvivorScentTrailParticleSpawner::_wolfAbility' has a wrong offset!");
static_assert(offsetof(UK37SurvivorScentTrailParticleSpawner, _scentParticleSpawnTimerRemainingTime) == 0x0000E8, "Member 'UK37SurvivorScentTrailParticleSpawner::_scentParticleSpawnTimerRemainingTime' has a wrong offset!");

// Class TheK37.K37TeleportInteraction
// 0x0020 (0x07A0 - 0x0780)
class UK37TeleportInteraction final : public UInteractionDefinition
{
public:
	uint8                                         Pad_778[0x8];                                      // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetableComponent*                   _teleportTarget;                                   // 0x0780(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _teleportDistanceScoreThreshold;                   // 0x0788(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78C[0x14];                                     // 0x078C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Server_SetTeleportTarget(class UTargetableComponent* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportInteraction">();
	}
	static class UK37TeleportInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportInteraction>();
	}
};
static_assert(alignof(UK37TeleportInteraction) == 0x000010, "Wrong alignment on UK37TeleportInteraction");
static_assert(sizeof(UK37TeleportInteraction) == 0x0007A0, "Wrong size on UK37TeleportInteraction");
static_assert(offsetof(UK37TeleportInteraction, _teleportTarget) == 0x000780, "Member 'UK37TeleportInteraction::_teleportTarget' has a wrong offset!");
static_assert(offsetof(UK37TeleportInteraction, _teleportDistanceScoreThreshold) == 0x000788, "Member 'UK37TeleportInteraction::_teleportDistanceScoreThreshold' has a wrong offset!");

// Class TheK37.K37TeleportToPalletTargetableStrategy
// 0x0000 (0x0038 - 0x0038)
class UK37TeleportToPalletTargetableStrategy final : public UTargetableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportToPalletTargetableStrategy">();
	}
	static class UK37TeleportToPalletTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportToPalletTargetableStrategy>();
	}
};
static_assert(alignof(UK37TeleportToPalletTargetableStrategy) == 0x000008, "Wrong alignment on UK37TeleportToPalletTargetableStrategy");
static_assert(sizeof(UK37TeleportToPalletTargetableStrategy) == 0x000038, "Wrong size on UK37TeleportToPalletTargetableStrategy");

// Class TheK37.K37TeleportPalletTarget
// 0x0000 (0x0360 - 0x0360)
class UK37TeleportPalletTarget final : public UTargetableComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportPalletTarget">();
	}
	static class UK37TeleportPalletTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportPalletTarget>();
	}
};
static_assert(alignof(UK37TeleportPalletTarget) == 0x000010, "Wrong alignment on UK37TeleportPalletTarget");
static_assert(sizeof(UK37TeleportPalletTarget) == 0x000360, "Wrong size on UK37TeleportPalletTarget");

// Class TheK37.K37TeleportTargetingComponent
// 0x0000 (0x00D8 - 0x00D8)
class UK37TeleportTargetingComponent final : public UTargetingComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportTargetingComponent">();
	}
	static class UK37TeleportTargetingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportTargetingComponent>();
	}
};
static_assert(alignof(UK37TeleportTargetingComponent) == 0x000008, "Wrong alignment on UK37TeleportTargetingComponent");
static_assert(sizeof(UK37TeleportTargetingComponent) == 0x0000D8, "Wrong size on UK37TeleportTargetingComponent");

// Class TheK37.K37TeleportToVaultTargetableStrategy
// 0x0000 (0x0038 - 0x0038)
class UK37TeleportToVaultTargetableStrategy final : public UTargetableStrategy
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportToVaultTargetableStrategy">();
	}
	static class UK37TeleportToVaultTargetableStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportToVaultTargetableStrategy>();
	}
};
static_assert(alignof(UK37TeleportToVaultTargetableStrategy) == 0x000008, "Wrong alignment on UK37TeleportToVaultTargetableStrategy");
static_assert(sizeof(UK37TeleportToVaultTargetableStrategy) == 0x000038, "Wrong size on UK37TeleportToVaultTargetableStrategy");

// Class TheK37.K37TeleportWindowTarget
// 0x0000 (0x0360 - 0x0360)
class UK37TeleportWindowTarget final : public UTargetableComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37TeleportWindowTarget">();
	}
	static class UK37TeleportWindowTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37TeleportWindowTarget>();
	}
};
static_assert(alignof(UK37TeleportWindowTarget) == 0x000010, "Wrong alignment on UK37TeleportWindowTarget");
static_assert(sizeof(UK37TeleportWindowTarget) == 0x000360, "Wrong size on UK37TeleportWindowTarget");

// Class TheK37.K37VampireAbility
// 0x01B0 (0x0358 - 0x01A8)
class UK37VampireAbility final : public UKillerAbilityComponent
{
public:
	float                                         _homingForwardSurvivorPrecisionConeHalfAngleDegrees; // 0x01A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AC[0x10C];                                    // 0x01AC(0x010C)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AK37FlamePillar>            _flamePillarClass;                                 // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAuthoritativeActorPoolComponent*       _flamePillarPool;                                  // 0x02C0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UChargeableComponent*                   _chargeableComponent;                              // 0x02D0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37FlamePillarAttackInteraction> _flamePillarInteractionClass;                      // 0x02D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37FlamePillarAttackInteraction*       _flamePillarInteraction;                           // 0x02E0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37FlamePillarAttackCastInteraction> _flamePillarAttackCastInteractionClass;            // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37FlamePillarAttackCastInteraction*   _flamePillarAttackCastInteraction;                 // 0x02F0(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UK37FlamePillarAttackCancelInteraction> _flamePillarAttackCancelInteractionClass;          // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UK37FlamePillarAttackCancelInteraction* _flamePillarAttackCancelInteraction;               // 0x0300(0x0008)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x38];                                     // 0x0308(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _navmeshProjectionBoxExtentForSpawningFlamePillars; // 0x0340(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Authority_StartCastingFlamePillars();
	void Authority_TrySpawningNextFlamePillar();

	class AK37FlamePillar* Authority_TrySpawnFlamePillarNearLocation(const struct FVector& Location, class UK37FlamePillarData* FlamePillarData) const;
	void OnRep_ChargeableComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37VampireAbility">();
	}
	static class UK37VampireAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37VampireAbility>();
	}
};
static_assert(alignof(UK37VampireAbility) == 0x000008, "Wrong alignment on UK37VampireAbility");
static_assert(sizeof(UK37VampireAbility) == 0x000358, "Wrong size on UK37VampireAbility");
static_assert(offsetof(UK37VampireAbility, _homingForwardSurvivorPrecisionConeHalfAngleDegrees) == 0x0001A8, "Member 'UK37VampireAbility::_homingForwardSurvivorPrecisionConeHalfAngleDegrees' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarClass) == 0x0002B8, "Member 'UK37VampireAbility::_flamePillarClass' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarPool) == 0x0002C0, "Member 'UK37VampireAbility::_flamePillarPool' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _chargeableComponent) == 0x0002D0, "Member 'UK37VampireAbility::_chargeableComponent' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarInteractionClass) == 0x0002D8, "Member 'UK37VampireAbility::_flamePillarInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarInteraction) == 0x0002E0, "Member 'UK37VampireAbility::_flamePillarInteraction' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarAttackCastInteractionClass) == 0x0002E8, "Member 'UK37VampireAbility::_flamePillarAttackCastInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarAttackCastInteraction) == 0x0002F0, "Member 'UK37VampireAbility::_flamePillarAttackCastInteraction' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarAttackCancelInteractionClass) == 0x0002F8, "Member 'UK37VampireAbility::_flamePillarAttackCancelInteractionClass' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _flamePillarAttackCancelInteraction) == 0x000300, "Member 'UK37VampireAbility::_flamePillarAttackCancelInteraction' has a wrong offset!");
static_assert(offsetof(UK37VampireAbility, _navmeshProjectionBoxExtentForSpawningFlamePillars) == 0x000340, "Member 'UK37VampireAbility::_navmeshProjectionBoxExtentForSpawningFlamePillars' has a wrong offset!");

// Class TheK37.K37VampireAbilityData
// 0x00A8 (0x0108 - 0x0060)
class UK37VampireAbilityData final : public UKillerAbilityData
{
public:
	float                                         _flamePillarAttackChargeDuration;                  // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _flamePillarAttackChargeSpeedCurve;                // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _castDuration;                                     // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _castSpeedCurve;                                   // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _cancelDuration;                                   // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _cancelSpeedCurve;                                 // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _flamePillarsToSpawnInAttackCount;                 // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _startingDistanceBetweenCasterAndFirstPillar;      // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _distanceBetweenPillars;                           // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UK37FlamePillarData*                    _flamePillarData;                                  // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _delayBetweenFlamePillarsCurve;                    // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isHomingEnabledByDefault;                         // 0x00B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _closestSurvivorMaxDistanceForHoming;              // 0x00B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _homingPercentage;                                 // 0x00B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _flamePillarSpawningMaxStepHeightAbove;            // 0x00BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _flamePillarSpawningMaxStepHeightBelow;            // 0x00C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _flamePillarLineOfSightHeightOffset;               // 0x00C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FK37FlamePillarLineOfSightTolerance> _flamePillarLineOfSightTolerances;                 // 0x00C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                         _flamePillarLineOfSightSphereSweepRadius;          // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _survivorFlamePillarImmunityStatusEffectClass;     // 0x00E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _survivorFlamePillarImmunityDuration;              // 0x00E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          _onFlamePillarStartChargeAkEvent;                  // 0x00F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onFlamePillarCastAkEvent;                         // 0x00F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onFlamePillarChargeCancelAkEvent;                 // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37VampireAbilityData">();
	}
	static class UK37VampireAbilityData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37VampireAbilityData>();
	}
};
static_assert(alignof(UK37VampireAbilityData) == 0x000008, "Wrong alignment on UK37VampireAbilityData");
static_assert(sizeof(UK37VampireAbilityData) == 0x000108, "Wrong size on UK37VampireAbilityData");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarAttackChargeDuration) == 0x000060, "Member 'UK37VampireAbilityData::_flamePillarAttackChargeDuration' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarAttackChargeSpeedCurve) == 0x000068, "Member 'UK37VampireAbilityData::_flamePillarAttackChargeSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _castDuration) == 0x000070, "Member 'UK37VampireAbilityData::_castDuration' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _castSpeedCurve) == 0x000078, "Member 'UK37VampireAbilityData::_castSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _cancelDuration) == 0x000080, "Member 'UK37VampireAbilityData::_cancelDuration' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _cancelSpeedCurve) == 0x000088, "Member 'UK37VampireAbilityData::_cancelSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarsToSpawnInAttackCount) == 0x000090, "Member 'UK37VampireAbilityData::_flamePillarsToSpawnInAttackCount' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _startingDistanceBetweenCasterAndFirstPillar) == 0x000094, "Member 'UK37VampireAbilityData::_startingDistanceBetweenCasterAndFirstPillar' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _distanceBetweenPillars) == 0x000098, "Member 'UK37VampireAbilityData::_distanceBetweenPillars' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarData) == 0x0000A0, "Member 'UK37VampireAbilityData::_flamePillarData' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _delayBetweenFlamePillarsCurve) == 0x0000A8, "Member 'UK37VampireAbilityData::_delayBetweenFlamePillarsCurve' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _isHomingEnabledByDefault) == 0x0000B0, "Member 'UK37VampireAbilityData::_isHomingEnabledByDefault' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _closestSurvivorMaxDistanceForHoming) == 0x0000B4, "Member 'UK37VampireAbilityData::_closestSurvivorMaxDistanceForHoming' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _homingPercentage) == 0x0000B8, "Member 'UK37VampireAbilityData::_homingPercentage' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarSpawningMaxStepHeightAbove) == 0x0000BC, "Member 'UK37VampireAbilityData::_flamePillarSpawningMaxStepHeightAbove' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarSpawningMaxStepHeightBelow) == 0x0000C0, "Member 'UK37VampireAbilityData::_flamePillarSpawningMaxStepHeightBelow' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarLineOfSightHeightOffset) == 0x0000C4, "Member 'UK37VampireAbilityData::_flamePillarLineOfSightHeightOffset' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarLineOfSightTolerances) == 0x0000C8, "Member 'UK37VampireAbilityData::_flamePillarLineOfSightTolerances' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _flamePillarLineOfSightSphereSweepRadius) == 0x0000D8, "Member 'UK37VampireAbilityData::_flamePillarLineOfSightSphereSweepRadius' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _survivorFlamePillarImmunityStatusEffectClass) == 0x0000E0, "Member 'UK37VampireAbilityData::_survivorFlamePillarImmunityStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _survivorFlamePillarImmunityDuration) == 0x0000E8, "Member 'UK37VampireAbilityData::_survivorFlamePillarImmunityDuration' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _onFlamePillarStartChargeAkEvent) == 0x0000F0, "Member 'UK37VampireAbilityData::_onFlamePillarStartChargeAkEvent' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _onFlamePillarCastAkEvent) == 0x0000F8, "Member 'UK37VampireAbilityData::_onFlamePillarCastAkEvent' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilityData, _onFlamePillarChargeCancelAkEvent) == 0x000100, "Member 'UK37VampireAbilityData::_onFlamePillarChargeCancelAkEvent' has a wrong offset!");

// Class TheK37.K37VampireAbilityMainWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37VampireAbilityMainWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37VampireAbilityMainWidgetComponent">();
	}
	static class UK37VampireAbilityMainWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37VampireAbilityMainWidgetComponent>();
	}
};
static_assert(alignof(UK37VampireAbilityMainWidgetComponent) == 0x000008, "Wrong alignment on UK37VampireAbilityMainWidgetComponent");
static_assert(sizeof(UK37VampireAbilityMainWidgetComponent) == 0x0000C8, "Wrong size on UK37VampireAbilityMainWidgetComponent");

// Class TheK37.K37VampireAbilitySecondaryWidgetComponent
// 0x0000 (0x00C8 - 0x00C8)
class UK37VampireAbilitySecondaryWidgetComponent final : public UK37PowerWidgetPresentationComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37VampireAbilitySecondaryWidgetComponent">();
	}
	static class UK37VampireAbilitySecondaryWidgetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37VampireAbilitySecondaryWidgetComponent>();
	}
};
static_assert(alignof(UK37VampireAbilitySecondaryWidgetComponent) == 0x000008, "Wrong alignment on UK37VampireAbilitySecondaryWidgetComponent");
static_assert(sizeof(UK37VampireAbilitySecondaryWidgetComponent) == 0x0000C8, "Wrong size on UK37VampireAbilitySecondaryWidgetComponent");

// Class TheK37.K37VampireAbilitySubAnimInstance
// 0x0010 (0x0600 - 0x05F0)
class UK37VampireAbilitySubAnimInstance final : public UBaseKillerAnimInstance
{
public:
	bool                                          _isChargingFlamePillarAttack;                      // 0x05F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F1[0x3];                                      // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _chargingFlamePillarsPercentage;                   // 0x05F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCastingFlamePillarAttack;                       // 0x05F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isCancellingFlamePillarAttack;                    // 0x05F9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isStunned;                                        // 0x05FA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37VampireAbilitySubAnimInstance">();
	}
	static class UK37VampireAbilitySubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37VampireAbilitySubAnimInstance>();
	}
};
static_assert(alignof(UK37VampireAbilitySubAnimInstance) == 0x000010, "Wrong alignment on UK37VampireAbilitySubAnimInstance");
static_assert(sizeof(UK37VampireAbilitySubAnimInstance) == 0x000600, "Wrong size on UK37VampireAbilitySubAnimInstance");
static_assert(offsetof(UK37VampireAbilitySubAnimInstance, _isChargingFlamePillarAttack) == 0x0005F0, "Member 'UK37VampireAbilitySubAnimInstance::_isChargingFlamePillarAttack' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilitySubAnimInstance, _chargingFlamePillarsPercentage) == 0x0005F4, "Member 'UK37VampireAbilitySubAnimInstance::_chargingFlamePillarsPercentage' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilitySubAnimInstance, _isCastingFlamePillarAttack) == 0x0005F8, "Member 'UK37VampireAbilitySubAnimInstance::_isCastingFlamePillarAttack' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilitySubAnimInstance, _isCancellingFlamePillarAttack) == 0x0005F9, "Member 'UK37VampireAbilitySubAnimInstance::_isCancellingFlamePillarAttack' has a wrong offset!");
static_assert(offsetof(UK37VampireAbilitySubAnimInstance, _isStunned) == 0x0005FA, "Member 'UK37VampireAbilitySubAnimInstance::_isStunned' has a wrong offset!");

// Class TheK37.K37WolfBiteAttackMissSubstate
// 0x0000 (0x0120 - 0x0120)
class UK37WolfBiteAttackMissSubstate final : public UPounceAttackMissSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackMissSubstate">();
	}
	static class UK37WolfBiteAttackMissSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackMissSubstate>();
	}
};
static_assert(alignof(UK37WolfBiteAttackMissSubstate) == 0x000008, "Wrong alignment on UK37WolfBiteAttackMissSubstate");
static_assert(sizeof(UK37WolfBiteAttackMissSubstate) == 0x000120, "Wrong size on UK37WolfBiteAttackMissSubstate");

// Class TheK37.K37WolfBiteAttackObstructSubstate
// 0x0000 (0x0128 - 0x0128)
class UK37WolfBiteAttackObstructSubstate final : public UPounceAttackObstructSubstate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackObstructSubstate">();
	}
	static class UK37WolfBiteAttackObstructSubstate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackObstructSubstate>();
	}
};
static_assert(alignof(UK37WolfBiteAttackObstructSubstate) == 0x000008, "Wrong alignment on UK37WolfBiteAttackObstructSubstate");
static_assert(sizeof(UK37WolfBiteAttackObstructSubstate) == 0x000128, "Wrong size on UK37WolfBiteAttackObstructSubstate");

// Class TheK37.K37WolfBiteAttackData
// 0x0040 (0x0078 - 0x0038)
class UK37WolfBiteAttackData final : public UDataAsset
{
public:
	float                                         _yawSpeedSmoothingTime;                            // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _useGamepadEmulationForYaw;                        // 0x003C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _yawScale;                                         // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _attackZoneScaleFactor;                            // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _openSubstateSpeedCurve;                           // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _hittingSubstateSpeedCurve;                        // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _missSubstateSpeedCurve;                           // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _successSubstateSpeedCurve;                        // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _obstructSubstateSpeedCurve;                       // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                          _onBiteStartAkAudioEvent;                          // 0x0070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfBiteAttackData">();
	}
	static class UK37WolfBiteAttackData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfBiteAttackData>();
	}
};
static_assert(alignof(UK37WolfBiteAttackData) == 0x000008, "Wrong alignment on UK37WolfBiteAttackData");
static_assert(sizeof(UK37WolfBiteAttackData) == 0x000078, "Wrong size on UK37WolfBiteAttackData");
static_assert(offsetof(UK37WolfBiteAttackData, _yawSpeedSmoothingTime) == 0x000038, "Member 'UK37WolfBiteAttackData::_yawSpeedSmoothingTime' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _useGamepadEmulationForYaw) == 0x00003C, "Member 'UK37WolfBiteAttackData::_useGamepadEmulationForYaw' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _yawScale) == 0x000040, "Member 'UK37WolfBiteAttackData::_yawScale' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _attackZoneScaleFactor) == 0x000044, "Member 'UK37WolfBiteAttackData::_attackZoneScaleFactor' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _openSubstateSpeedCurve) == 0x000048, "Member 'UK37WolfBiteAttackData::_openSubstateSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _hittingSubstateSpeedCurve) == 0x000050, "Member 'UK37WolfBiteAttackData::_hittingSubstateSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _missSubstateSpeedCurve) == 0x000058, "Member 'UK37WolfBiteAttackData::_missSubstateSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _successSubstateSpeedCurve) == 0x000060, "Member 'UK37WolfBiteAttackData::_successSubstateSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _obstructSubstateSpeedCurve) == 0x000068, "Member 'UK37WolfBiteAttackData::_obstructSubstateSpeedCurve' has a wrong offset!");
static_assert(offsetof(UK37WolfBiteAttackData, _onBiteStartAkAudioEvent) == 0x000070, "Member 'UK37WolfBiteAttackData::_onBiteStartAkAudioEvent' has a wrong offset!");

// Class TheK37.K37WolfFormKillerInstinctStatusEffect
// 0x0000 (0x03B0 - 0x03B0)
class UK37WolfFormKillerInstinctStatusEffect final : public UActivateOnEventTimedStatusEffect
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfFormKillerInstinctStatusEffect">();
	}
	static class UK37WolfFormKillerInstinctStatusEffect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfFormKillerInstinctStatusEffect>();
	}
};
static_assert(alignof(UK37WolfFormKillerInstinctStatusEffect) == 0x000008, "Wrong alignment on UK37WolfFormKillerInstinctStatusEffect");
static_assert(sizeof(UK37WolfFormKillerInstinctStatusEffect) == 0x0003B0, "Wrong size on UK37WolfFormKillerInstinctStatusEffect");

// Class TheK37.K37WolfPounceAttackSubAnimInstance
// 0x0010 (0x06C0 - 0x06B0)
class UK37WolfPounceAttackSubAnimInstance final : public UBaseKillerAttackSubAnimInstance
{
public:
	bool                                          _isWolfBiteAttacking;                              // 0x06B0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isChargingPounce;                                 // 0x06B1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isAdjustingPounce;                                // 0x06B2(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAttackSubstate                               _attackSubstateBeforeAdjusting;                    // 0x06B3(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6B4[0xC];                                      // 0x06B4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"K37WolfPounceAttackSubAnimInstance">();
	}
	static class UK37WolfPounceAttackSubAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UK37WolfPounceAttackSubAnimInstance>();
	}
};
static_assert(alignof(UK37WolfPounceAttackSubAnimInstance) == 0x000010, "Wrong alignment on UK37WolfPounceAttackSubAnimInstance");
static_assert(sizeof(UK37WolfPounceAttackSubAnimInstance) == 0x0006C0, "Wrong size on UK37WolfPounceAttackSubAnimInstance");
static_assert(offsetof(UK37WolfPounceAttackSubAnimInstance, _isWolfBiteAttacking) == 0x0006B0, "Member 'UK37WolfPounceAttackSubAnimInstance::_isWolfBiteAttacking' has a wrong offset!");
static_assert(offsetof(UK37WolfPounceAttackSubAnimInstance, _isChargingPounce) == 0x0006B1, "Member 'UK37WolfPounceAttackSubAnimInstance::_isChargingPounce' has a wrong offset!");
static_assert(offsetof(UK37WolfPounceAttackSubAnimInstance, _isAdjustingPounce) == 0x0006B2, "Member 'UK37WolfPounceAttackSubAnimInstance::_isAdjustingPounce' has a wrong offset!");
static_assert(offsetof(UK37WolfPounceAttackSubAnimInstance, _attackSubstateBeforeAdjusting) == 0x0006B3, "Member 'UK37WolfPounceAttackSubAnimInstance::_attackSubstateBeforeAdjusting' has a wrong offset!");

}

