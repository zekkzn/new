#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreOffScreenIndicator_Item

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateTerrorRadiusIndicator
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              CallFunc_GetViewportSize_viewportSize;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_1;     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator) == 0x0000A8, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_GetViewportSize_viewportSize) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_GetViewportSize_viewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_BreakVector2D_X) == 0x000060, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000088, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x000090, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_Multiply_FloatFloat_A_ImplicitCast_1) == 0x000094, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_Multiply_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000098, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000A0, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateTerrorRadiusIndicator::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdatePosition
// 0x0090 (0x0090 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdatePosition final
{
public:
	double                                        RadAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_viewportSize;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_1;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_2;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_3;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast_1;     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_B_ImplicitCast;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_B_ImplicitCast_1;     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdatePosition");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition) == 0x000090, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdatePosition");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, RadAngle) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::RadAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_GetViewportSize_viewportSize) == 0x000008, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_GetViewportSize_viewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_BreakVector2D_Y_1) == 0x000030, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, K2Node_MathExpression_ReturnValue) == 0x000038, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x00003C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_A_ImplicitCast_1) == 0x000040, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Subtract_FloatFloat_B_ImplicitCast) == 0x000044, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Subtract_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, K2Node_MathExpression_ReturnValue_1) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_A_ImplicitCast_2) == 0x000054, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_A_ImplicitCast_3) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Subtract_FloatFloat_B_ImplicitCast_1) == 0x00005C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Subtract_FloatFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000070, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_B_ImplicitCast) == 0x000078, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000080, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdatePosition, CallFunc_Multiply_FloatFloat_B_ImplicitCast_1) == 0x000088, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdatePosition::CallFunc_Multiply_FloatFloat_B_ImplicitCast_1' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateObjectiveIndicator
// 0x0098 (0x0098 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShowIconAtLocation;                                // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Status_Changed;                                    // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugString;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObjectiveIndicatorViewData*            K2Node_DynamicCast_AsObjective_Indicator_View_Data; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateAngle_radAngle;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateDistance_distance_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator) == 0x000098, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, ShowIconAtLocation) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::ShowIconAtLocation' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, Status_Changed) == 0x000051, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::Status_Changed' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, DebugString) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::DebugString' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, Temp_byte_Variable) == 0x000068, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, K2Node_DynamicCast_AsObjective_Indicator_View_Data) == 0x000070, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::K2Node_DynamicCast_AsObjective_Indicator_View_Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, Temp_byte_Variable_1) == 0x000079, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, CallFunc_UpdateAngle_radAngle) == 0x000080, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::CallFunc_UpdateAngle_radAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, Temp_bool_Variable) == 0x000088, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, K2Node_Select_Default) == 0x000089, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator, CallFunc_UpdateDistance_distance_ImplicitCast) == 0x000090, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateObjectiveIndicator::CallFunc_UpdateDistance_distance_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateNoiseIndicator
// 0x0060 (0x0060 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        CallFunc_UpdateAngle_radAngle;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDistance_distance_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator) == 0x000060, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator::Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator, CallFunc_UpdateAngle_radAngle) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator::CallFunc_UpdateAngle_radAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator, CallFunc_UpdateDistance_distance_ImplicitCast) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateNoiseIndicator::CallFunc_UpdateDistance_distance_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateK33Noise
// 0x0068 (0x0068 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateAngle_radAngle;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDistance_distance_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise) == 0x000068, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise::Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise, CallFunc_UpdateAngle_radAngle) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise::CallFunc_UpdateAngle_radAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise, CallFunc_UpdateDistance_distance_ImplicitCast) == 0x000060, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateK33Noise::CallFunc_UpdateDistance_distance_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateInFrontPosition
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_viewportSize;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_viewportSize_1;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetFullViewportSize_viewportSize;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_Vector2DFloat_B_ImplicitCast;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition) == 0x0000B8, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, ScreenPosition) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_GetViewportSize_viewportSize) == 0x000010, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_GetViewportSize_viewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_GetViewportScale_ReturnValue) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000028, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_GetViewportSize_viewportSize_1) == 0x000048, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_GetViewportSize_viewportSize_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_GetFullViewportSize_viewportSize) == 0x000068, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_GetFullViewportSize_viewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000078, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000088, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000090, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x0000A0, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition, CallFunc_Divide_Vector2DFloat_B_ImplicitCast) == 0x0000B0, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateInFrontPosition::CallFunc_Divide_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateDistance
// 0x0068 (0x0068 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_A_ImplicitCast;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_B_ImplicitCast_1;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast_1;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_minRatio_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Less_FloatFloat_A_ImplicitCast;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Less_FloatFloat_B_ImplicitCast;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast_2;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateDistance");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance) == 0x000068, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateDistance");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, Distance) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::Distance' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, K2Node_MathExpression_ReturnValue) == 0x000018, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Add_FloatFloat_A_ImplicitCast) == 0x00001C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Add_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Subtract_FloatFloat_B_ImplicitCast) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Subtract_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Subtract_FloatFloat_B_ImplicitCast_1) == 0x000024, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Subtract_FloatFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Subtract_FloatFloat_A_ImplicitCast) == 0x000028, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Subtract_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Subtract_FloatFloat_A_ImplicitCast_1) == 0x00002C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Subtract_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, K2Node_MathExpression_minRatio_ImplicitCast) == 0x000040, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::K2Node_MathExpression_minRatio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Less_FloatFloat_A_ImplicitCast) == 0x000048, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Less_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Less_FloatFloat_B_ImplicitCast) == 0x00004C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Less_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_FClamp_Min_ImplicitCast) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_FClamp_Max_ImplicitCast) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateDistance, CallFunc_Subtract_FloatFloat_A_ImplicitCast_2) == 0x000060, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateDistance::CallFunc_Subtract_FloatFloat_A_ImplicitCast_2' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.UpdateAngle
// 0x0050 (0x0050 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_UpdateAngle final
{
public:
	class UWidget*                                RotationRoot;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RadAngle;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_HeadingAngle_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_A_ImplicitCast;       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_UpdateAngle");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle) == 0x000050, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_UpdateAngle");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, RotationRoot) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::RotationRoot' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, Position) == 0x000008, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::Position' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, RadAngle) == 0x000018, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::RadAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, CallFunc_Vector_HeadingAngle_ReturnValue) == 0x000038, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::CallFunc_Vector_HeadingAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, CallFunc_RadiansToDegrees_ReturnValue) == 0x000040, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_UpdateAngle, CallFunc_Subtract_FloatFloat_A_ImplicitCast) == 0x00004C, "Member 'WBP_CoreOffScreenIndicator_Item_C_UpdateAngle::CallFunc_Subtract_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.Update Stealth Indicator
// 0x0060 (0x0060 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        CallFunc_UpdateAngle_radAngle;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateDistance_distance_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator) == 0x000060, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator::Data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator, CallFunc_UpdateAngle_radAngle) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator::CallFunc_UpdateAngle_radAngle' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator, CallFunc_UpdateDistance_distance_ImplicitCast) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_Update_Stealth_Indicator::CallFunc_UpdateDistance_distance_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.SetData
// 0x0050 (0x0050 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_SetData final
{
public:
	struct FScreenIndicatorViewData               Data;                                              // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_SetData) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_SetData");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_SetData) == 0x000050, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_SetData");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_SetData, Data) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_SetData::Data' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.playIdleObjectiveAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation) == 0x000008, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_PlayIdleObjectiveAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.PlayIdleAnimation
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation) == 0x000008, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_PlayIdleAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.GetViewportSize
// 0x0058 (0x0058 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_GetViewportSize final
{
public:
	struct FVector2D                              ViewportSize;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDGameUserSettings*                   CallFunc_GetDBDGameUserSettings_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHudScaleFactor_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_Vector2DFloat_B_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_GetViewportSize");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize) == 0x000058, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_GetViewportSize");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, ViewportSize) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::ViewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_GetViewportScale_ReturnValue) == 0x000010, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_GetDBDGameUserSettings_ReturnValue) == 0x000018, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_GetDBDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_GetHudScaleFactor_ReturnValue) == 0x000030, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_GetHudScaleFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000038, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000040, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetViewportSize, CallFunc_Divide_Vector2DFloat_B_ImplicitCast) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetViewportSize::CallFunc_Divide_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.GetFullViewportSize
// 0x0068 (0x0068 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize final
{
public:
	struct FVector2D                              ViewportSize;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDGameUserSettings*                   CallFunc_GetDBDGameUserSettings_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHudScaleFactor_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_Vector2DFloat_B_ImplicitCast;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize) == 0x000068, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, ViewportSize) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::ViewportSize' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_GetViewportSize_ReturnValue) == 0x000010, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_GetViewportScale_ReturnValue) == 0x000020, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_GetDBDGameUserSettings_ReturnValue) == 0x000028, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_GetDBDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000030, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_GetHudScaleFactor_ReturnValue) == 0x000040, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_GetHudScaleFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000048, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000050, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize, CallFunc_Divide_Vector2DFloat_B_ImplicitCast) == 0x000060, "Member 'WBP_CoreOffScreenIndicator_Item_C_GetFullViewportSize::CallFunc_Divide_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function WBP_CoreOffScreenIndicator_Item.WBP_CoreOffScreenIndicator_Item_C.ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item
// 0x0060 (0x0060 - 0x0000)
struct WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenIndicatorViewData               K2Node_Event_data;                                 // 0x0008(0x0050)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item) == 0x000008, "Wrong alignment on WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item");
static_assert(sizeof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item) == 0x000060, "Wrong size on WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item, EntryPoint) == 0x000000, "Member 'WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item, K2Node_Event_data) == 0x000008, "Member 'WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'WBP_CoreOffScreenIndicator_Item_C_ExecuteUbergraph_WBP_CoreOffScreenIndicator_Item::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

