#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MendOther

#include "Basic.hpp"


namespace SDK::Params
{

// Function MendOther.MendOther_C.ExecuteUbergraph_MendOther
// 0x0038 (0x0038 - 0x0000)
struct MendOther_C_ExecuteUbergraph_MendOther final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          CallFunc_GetMendTargetCamper_Camper;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_player;                               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_hasInteractionStarted;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamperPlayer*                          CallFunc_GetMendTargetCamper_Camper_1;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADBDPlayer*                             K2Node_Event_player_1;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_actualSnapTime;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MendOther_C_ExecuteUbergraph_MendOther) == 0x000008, "Wrong alignment on MendOther_C_ExecuteUbergraph_MendOther");
static_assert(sizeof(MendOther_C_ExecuteUbergraph_MendOther) == 0x000038, "Wrong size on MendOther_C_ExecuteUbergraph_MendOther");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, EntryPoint) == 0x000000, "Member 'MendOther_C_ExecuteUbergraph_MendOther::EntryPoint' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, CallFunc_GetMendTargetCamper_Camper) == 0x000008, "Member 'MendOther_C_ExecuteUbergraph_MendOther::CallFunc_GetMendTargetCamper_Camper' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, K2Node_Event_player) == 0x000010, "Member 'MendOther_C_ExecuteUbergraph_MendOther::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, K2Node_Event_hasInteractionStarted) == 0x000018, "Member 'MendOther_C_ExecuteUbergraph_MendOther::K2Node_Event_hasInteractionStarted' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'MendOther_C_ExecuteUbergraph_MendOther::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, CallFunc_GetMendTargetCamper_Camper_1) == 0x000020, "Member 'MendOther_C_ExecuteUbergraph_MendOther::CallFunc_GetMendTargetCamper_Camper_1' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, K2Node_Event_player_1) == 0x000028, "Member 'MendOther_C_ExecuteUbergraph_MendOther::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(MendOther_C_ExecuteUbergraph_MendOther, K2Node_Event_actualSnapTime) == 0x000030, "Member 'MendOther_C_ExecuteUbergraph_MendOther::K2Node_Event_actualSnapTime' has a wrong offset!");

// Function MendOther.MendOther_C.OnInteractionEnterStart
// 0x0010 (0x0010 - 0x0000)
struct MendOther_C_OnInteractionEnterStart final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ActualSnapTime;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MendOther_C_OnInteractionEnterStart) == 0x000008, "Wrong alignment on MendOther_C_OnInteractionEnterStart");
static_assert(sizeof(MendOther_C_OnInteractionEnterStart) == 0x000010, "Wrong size on MendOther_C_OnInteractionEnterStart");
static_assert(offsetof(MendOther_C_OnInteractionEnterStart, Player) == 0x000000, "Member 'MendOther_C_OnInteractionEnterStart::Player' has a wrong offset!");
static_assert(offsetof(MendOther_C_OnInteractionEnterStart, ActualSnapTime) == 0x000008, "Member 'MendOther_C_OnInteractionEnterStart::ActualSnapTime' has a wrong offset!");

// Function MendOther.MendOther_C.OnInteractionFinished
// 0x0010 (0x0010 - 0x0000)
struct MendOther_C_OnInteractionFinished final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInteractionStarted;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MendOther_C_OnInteractionFinished) == 0x000008, "Wrong alignment on MendOther_C_OnInteractionFinished");
static_assert(sizeof(MendOther_C_OnInteractionFinished) == 0x000010, "Wrong size on MendOther_C_OnInteractionFinished");
static_assert(offsetof(MendOther_C_OnInteractionFinished, Player) == 0x000000, "Member 'MendOther_C_OnInteractionFinished::Player' has a wrong offset!");
static_assert(offsetof(MendOther_C_OnInteractionFinished, HasInteractionStarted) == 0x000008, "Member 'MendOther_C_OnInteractionFinished::HasInteractionStarted' has a wrong offset!");

// Function MendOther.MendOther_C.GetActorsToIgnoreOverlap
// 0x0038 (0x0038 - 0x0000)
struct MendOther_C_GetActorsToIgnoreOverlap final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class AActor*                                 ActorsToIgnore;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACamperPlayer*                          CallFunc_GetCamperOwner_Camper;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MendOther_C_GetActorsToIgnoreOverlap) == 0x000008, "Wrong alignment on MendOther_C_GetActorsToIgnoreOverlap");
static_assert(sizeof(MendOther_C_GetActorsToIgnoreOverlap) == 0x000038, "Wrong size on MendOther_C_GetActorsToIgnoreOverlap");
static_assert(offsetof(MendOther_C_GetActorsToIgnoreOverlap, ReturnValue) == 0x000000, "Member 'MendOther_C_GetActorsToIgnoreOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(MendOther_C_GetActorsToIgnoreOverlap, ActorsToIgnore) == 0x000010, "Member 'MendOther_C_GetActorsToIgnoreOverlap::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(MendOther_C_GetActorsToIgnoreOverlap, CallFunc_GetCamperOwner_Camper) == 0x000018, "Member 'MendOther_C_GetActorsToIgnoreOverlap::CallFunc_GetCamperOwner_Camper' has a wrong offset!");
static_assert(offsetof(MendOther_C_GetActorsToIgnoreOverlap, K2Node_MakeArray_Array) == 0x000020, "Member 'MendOther_C_GetActorsToIgnoreOverlap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MendOther_C_GetActorsToIgnoreOverlap, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MendOther_C_GetActorsToIgnoreOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

