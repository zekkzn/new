#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_K23_ShowKnife_OnSurvivor_01

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_K23_ShowKnife_OnSurvivor_01.BP_K23_ShowKnife_OnSurvivor_01_C
// 0x0030 (0x02D0 - 0x02A0)
class ABP_K23_ShowKnife_OnSurvivor_01_C final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh_02;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh_03;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh_01;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh_04;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh_00;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_K23_ShowKnife_OnSurvivor_01_C">();
	}
	static class ABP_K23_ShowKnife_OnSurvivor_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_K23_ShowKnife_OnSurvivor_01_C>();
	}
};
static_assert(alignof(ABP_K23_ShowKnife_OnSurvivor_01_C) == 0x000008, "Wrong alignment on ABP_K23_ShowKnife_OnSurvivor_01_C");
static_assert(sizeof(ABP_K23_ShowKnife_OnSurvivor_01_C) == 0x0002D0, "Wrong size on ABP_K23_ShowKnife_OnSurvivor_01_C");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, SkeletalMesh_02) == 0x0002A0, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::SkeletalMesh_02' has a wrong offset!");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, SkeletalMesh_03) == 0x0002A8, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::SkeletalMesh_03' has a wrong offset!");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, SkeletalMesh_01) == 0x0002B0, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::SkeletalMesh_01' has a wrong offset!");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, SkeletalMesh_04) == 0x0002B8, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::SkeletalMesh_04' has a wrong offset!");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, SkeletalMesh_00) == 0x0002C0, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::SkeletalMesh_00' has a wrong offset!");
static_assert(offsetof(ABP_K23_ShowKnife_OnSurvivor_01_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_K23_ShowKnife_OnSurvivor_01_C::DefaultSceneRoot' has a wrong offset!");

}

