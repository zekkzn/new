#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheS13

#include "Basic.hpp"

#include "DBDCompetence_structs.hpp"
#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class TheS13.BoilOverPerk
// 0x0080 (0x04A0 - 0x0420)
class UBoilOverPerk final : public UPerk
{
public:
	TArray<struct FStatusEffectSpawnData>         _effectsToSpawn;                                   // 0x0420(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FPlayerStatusEffectSpawnerHelper       _spawnerHelper;                                    // 0x0430(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                         _additionnalWigglingProgressWhenFalling[0x3];      // 0x0480(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _greatHeightsValue;                                // 0x048C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_490[0x10];                                     // 0x0490(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnPlayerPickedUpEnd(class ADBDPlayer* Picker);
	void Authority_OnWiggleEnd();

	float GetAdditionnalWigglingProgressAtLevel() const;
	float GetGreatHeightsValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BoilOverPerk">();
	}
	static class UBoilOverPerk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBoilOverPerk>();
	}
};
static_assert(alignof(UBoilOverPerk) == 0x000008, "Wrong alignment on UBoilOverPerk");
static_assert(sizeof(UBoilOverPerk) == 0x0004A0, "Wrong size on UBoilOverPerk");
static_assert(offsetof(UBoilOverPerk, _effectsToSpawn) == 0x000420, "Member 'UBoilOverPerk::_effectsToSpawn' has a wrong offset!");
static_assert(offsetof(UBoilOverPerk, _spawnerHelper) == 0x000430, "Member 'UBoilOverPerk::_spawnerHelper' has a wrong offset!");
static_assert(offsetof(UBoilOverPerk, _additionnalWigglingProgressWhenFalling) == 0x000480, "Member 'UBoilOverPerk::_additionnalWigglingProgressWhenFalling' has a wrong offset!");
static_assert(offsetof(UBoilOverPerk, _greatHeightsValue) == 0x00048C, "Member 'UBoilOverPerk::_greatHeightsValue' has a wrong offset!");

// Class TheS13.DanceWithMePerk
// 0x0010 (0x0430 - 0x0420)
class UDanceWithMePerk final : public UPerk
{
public:
	uint8                                         Pad_420[0x10];                                     // 0x0420(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_OnPerkActivate(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DanceWithMePerk">();
	}
	static class UDanceWithMePerk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDanceWithMePerk>();
	}
};
static_assert(alignof(UDanceWithMePerk) == 0x000008, "Wrong alignment on UDanceWithMePerk");
static_assert(sizeof(UDanceWithMePerk) == 0x000430, "Wrong size on UDanceWithMePerk");

}

