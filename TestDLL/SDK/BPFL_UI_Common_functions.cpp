#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_UI_Common

#include "Basic.hpp"

#include "BPFL_UI_Common_classes.hpp"
#include "BPFL_UI_Common_parameters.hpp"


namespace SDK
{

// Function BPFL_UI_Common.BPFL_UI_Common_C.RemapValueRange
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InputLow                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InputHigh                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TargetLow                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TargetHigh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_UI_Common_C::RemapValueRange(double Value, double InputLow, double InputHigh, double TargetLow, double TargetHigh, class UObject* __WorldContext, double* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UI_Common_C", "RemapValueRange");

	Params::BPFL_UI_Common_C_RemapValueRange Parms{};

	Parms.Value = Value;
	Parms.InputLow = InputLow;
	Parms.InputHigh = InputHigh;
	Parms.TargetLow = TargetLow;
	Parms.TargetHigh = TargetHigh;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPFL_UI_Common.BPFL_UI_Common_C.SetConditionalButtonVisibility
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCoreButtonWidget*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EButtonWidgetVisibility                 TrueVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EButtonWidgetVisibility                 FalseVisibility                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UI_Common_C::SetConditionalButtonVisibility(class UCoreButtonWidget* Button, bool Condition, EButtonWidgetVisibility TrueVisibility, EButtonWidgetVisibility FalseVisibility, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UI_Common_C", "SetConditionalButtonVisibility");

	Params::BPFL_UI_Common_C_SetConditionalButtonVisibility Parms{};

	Parms.Button = Button;
	Parms.Condition = Condition;
	Parms.TrueVisibility = TrueVisibility;
	Parms.FalseVisibility = FalseVisibility;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_UI_Common.BPFL_UI_Common_C.SetImageSize
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDBDImage*                        Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_UI_Common_C::SetImageSize(class UDBDImage* Image, const struct FVector2D& Size, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UI_Common_C", "SetImageSize");

	Params::BPFL_UI_Common_C_SetImageSize Parms{};

	Parms.Image = Image;
	Parms.Size = std::move(Size);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

