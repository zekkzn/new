#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheGhostface

#include "Basic.hpp"

#include "TheGhostface_classes.hpp"
#include "TheGhostface_parameters.hpp"


namespace SDK
{

// Function TheGhostface.GhostStalkedComponent.Authority_OnStalkedChargeFull
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    COMPLETED                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InstigatorsForCompletion                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::Authority_OnStalkedChargeFull(bool COMPLETED, const TArray<class AActor*>& InstigatorsForCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "Authority_OnStalkedChargeFull");

	Params::GhostStalkedComponent_Authority_OnStalkedChargeFull Parms{};

	Parms.COMPLETED = COMPLETED;
	Parms.InstigatorsForCompletion = std::move(InstigatorsForCompletion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkedComponent.Client_OnSpotKiller
// (Net, Native, Event, Public, NetClient)

void UGhostStalkedComponent::Client_OnSpotKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "Client_OnSpotKiller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkedComponent.DBD_DebugGhost
// (Final, Exec, Native, Private)
// Parameters:
// bool                                    Debug                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::DBD_DebugGhost(bool Debug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "DBD_DebugGhost");

	Params::GhostStalkedComponent_DBD_DebugGhost Parms{};

	Parms.Debug = Debug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkedComponent.Initialize
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ASlasherPlayer*                   Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::Initialize(class ASlasherPlayer* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "Initialize");

	Params::GhostStalkedComponent_Initialize Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkedComponent.Local_OnSpotKiller
// (Event, Protected, BlueprintEvent)

void UGhostStalkedComponent::Local_OnSpotKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "Local_OnSpotKiller");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction TheGhostface.GhostStalkedComponent.OnIsMarkedChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsMarked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::OnIsMarkedChanged__DelegateSignature(bool IsMarked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "OnIsMarkedChanged__DelegateSignature");

	Params::GhostStalkedComponent_OnIsMarkedChanged__DelegateSignature Parms{};

	Parms.IsMarked = IsMarked;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TheGhostface.GhostStalkedComponent.OnIsSpottingKiller__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsSpotting                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::OnIsSpottingKiller__DelegateSignature(bool IsSpotting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "OnIsSpottingKiller__DelegateSignature");

	Params::GhostStalkedComponent_OnIsSpottingKiller__DelegateSignature Parms{};

	Parms.IsSpotting = IsSpotting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheGhostface.GhostStalkedComponent.OnKillerSpottedChanged
// (Final, Native, Private)
// Parameters:
// class ADBDPlayer*                       Spotter                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Spotted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::OnKillerSpottedChanged(class ADBDPlayer* Spotter, bool Spotted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "OnKillerSpottedChanged");

	Params::GhostStalkedComponent_OnKillerSpottedChanged Parms{};

	Parms.Spotter = Spotter;
	Parms.Spotted = Spotted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkedComponent.OnLocallyObservedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkedComponent::OnLocallyObservedChanged(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "OnLocallyObservedChanged");

	Params::GhostStalkedComponent_OnLocallyObservedChanged Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheGhostface.GhostStalkedComponent.GetMeterPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGhostStalkedComponent::GetMeterPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "GetMeterPercentage");

	Params::GhostStalkedComponent_GetMeterPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostStalkedComponent.IsMarked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostStalkedComponent::IsMarked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkedComponent", "IsMarked");

	Params::GhostStalkedComponent_IsMarked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostChargeStalkModeInteraction.GetStealthComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGhostStealthComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGhostStealthComponent* UGhostChargeStalkModeInteraction::GetStealthComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostChargeStalkModeInteraction", "GetStealthComponent");

	Params::GhostChargeStalkModeInteraction_GetStealthComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostKillerAnalyticsComponent.Authority_OnPreAttackSuccess
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameEventData                   GameEventData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UGhostKillerAnalyticsComponent::Authority_OnPreAttackSuccess(const struct FGameplayTag& GameplayTag, const struct FGameEventData& GameEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostKillerAnalyticsComponent", "Authority_OnPreAttackSuccess");

	Params::GhostKillerAnalyticsComponent_Authority_OnPreAttackSuccess Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.GameEventData = std::move(GameEventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostKillerAnalyticsComponent.Authority_OnStalkChargePercentChanged
// (Final, Native, Private)
// Parameters:
// class UChargeableComponent*             ChargeableComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PercentCompletionChange                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalPercentComplete                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostKillerAnalyticsComponent::Authority_OnStalkChargePercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostKillerAnalyticsComponent", "Authority_OnStalkChargePercentChanged");

	Params::GhostKillerAnalyticsComponent_Authority_OnStalkChargePercentChanged Parms{};

	Parms.ChargeableComponent = ChargeableComponent;
	Parms.PercentCompletionChange = PercentCompletionChange;
	Parms.TotalPercentComplete = TotalPercentComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostKillerAnalyticsComponent.Local_OnIsStealthChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsStealth                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostKillerAnalyticsComponent::Local_OnIsStealthChanged(bool IsStealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostKillerAnalyticsComponent", "Local_OnIsStealthChanged");

	Params::GhostKillerAnalyticsComponent_Local_OnIsStealthChanged Parms{};

	Parms.IsStealth = IsStealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostKillerAnalyticsComponent.Local_OnLeanStateChanged
// (Final, Native, Private)
// Parameters:
// ELeanState                              LeanState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostKillerAnalyticsComponent::Local_OnLeanStateChanged(ELeanState LeanState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostKillerAnalyticsComponent", "Local_OnLeanStateChanged");

	Params::GhostKillerAnalyticsComponent_Local_OnLeanStateChanged Parms{};

	Parms.LeanState = LeanState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostKillerAnalyticsComponent.Local_OnStalkModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsInStalkMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostKillerAnalyticsComponent::Local_OnStalkModeChanged(bool IsInStalkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostKillerAnalyticsComponent", "Local_OnStalkModeChanged");

	Params::GhostKillerAnalyticsComponent_Local_OnStalkModeChanged Parms{};

	Parms.IsInStalkMode = IsInStalkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkPowerComponent.Authority_OnIsCrouchedChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsCrouched                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkPowerComponent::Authority_OnIsCrouchedChanged(bool IsCrouched)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkPowerComponent", "Authority_OnIsCrouchedChanged");

	Params::GhostStalkPowerComponent_Authority_OnIsCrouchedChanged Parms{};

	Parms.IsCrouched = IsCrouched;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkPowerComponent.Authority_OnStalkModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    IsInStalkMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkPowerComponent::Authority_OnStalkModeChanged(bool IsInStalkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkPowerComponent", "Authority_OnStalkModeChanged");

	Params::GhostStalkPowerComponent_Authority_OnStalkModeChanged Parms{};

	Parms.IsInStalkMode = IsInStalkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkPowerComponent.OnLeanStateChanged
// (Final, Native, Private)
// Parameters:
// ELeanState                              LeanState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStalkPowerComponent::OnLeanStateChanged(ELeanState LeanState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkPowerComponent", "OnLeanStateChanged");

	Params::GhostStalkPowerComponent_OnLeanStateChanged Parms{};

	Parms.LeanState = LeanState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStalkPowerComponent.RefreshSurvivorMaximumSightDistance
// (Final, Native, Public, BlueprintCallable, Const)

void UGhostStalkPowerComponent::RefreshSurvivorMaximumSightDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStalkPowerComponent", "RefreshSurvivorMaximumSightDistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Authority_ResetGhostStealth
// (Final, Native, Public, BlueprintCallable)

void UGhostStealthComponent::Authority_ResetGhostStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Authority_ResetGhostStealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Authority_TryActivateStealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UGhostStealthComponent::Authority_TryActivateStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Authority_TryActivateStealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Client_SpawnMarkerOnCharacter
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class ACharacter*                       Revealer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::Client_SpawnMarkerOnCharacter(class ACharacter* Revealer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Client_SpawnMarkerOnCharacter");

	Params::GhostStealthComponent_Client_SpawnMarkerOnCharacter Parms{};

	Parms.Revealer = Revealer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.DBD_ResetGhostStealth
// (Final, Exec, Native, Public)

void UGhostStealthComponent::DBD_ResetGhostStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "DBD_ResetGhostStealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Multicast_BroadcastOnSuccessfulAttackInStealth
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::Multicast_BroadcastOnSuccessfulAttackInStealth(class ADBDPlayer* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Multicast_BroadcastOnSuccessfulAttackInStealth");

	Params::GhostStealthComponent_Multicast_BroadcastOnSuccessfulAttackInStealth Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Multicast_OnIsBeingSpottedChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Spotter                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBeingSpotted                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnlyUpdateSurvivor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::Multicast_OnIsBeingSpottedChanged(class ADBDPlayer* Spotter, bool IsBeingSpotted, bool OnlyUpdateSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Multicast_OnIsBeingSpottedChanged");

	Params::GhostStealthComponent_Multicast_OnIsBeingSpottedChanged Parms{};

	Parms.Spotter = Spotter;
	Parms.IsBeingSpotted = IsBeingSpotted;
	Parms.OnlyUpdateSurvivor = OnlyUpdateSurvivor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.GhostStealthComponent.Multicast_OnPlayerSpottedKiller
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class ADBDPlayer*                       Spotter                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::Multicast_OnPlayerSpottedKiller(class ADBDPlayer* Spotter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "Multicast_OnPlayerSpottedKiller");

	Params::GhostStealthComponent_Multicast_OnPlayerSpottedKiller Parms{};

	Parms.Spotter = Spotter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TheGhostface.GhostStealthComponent.OnIsBeingSpotChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ADBDPlayer*                       Spotter                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBeingSpot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnIsBeingSpotChanged__DelegateSignature(class ADBDPlayer* Spotter, bool IsBeingSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnIsBeingSpotChanged__DelegateSignature");

	Params::GhostStealthComponent_OnIsBeingSpotChanged__DelegateSignature Parms{};

	Parms.Spotter = Spotter;
	Parms.IsBeingSpot = IsBeingSpot;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TheGhostface.GhostStealthComponent.OnIsStealthChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsStealth                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnIsStealthChanged__DelegateSignature(bool IsStealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnIsStealthChanged__DelegateSignature");

	Params::GhostStealthComponent_OnIsStealthChanged__DelegateSignature Parms{};

	Parms.IsStealth = IsStealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheGhostface.GhostStealthComponent.OnRep_StealthState
// (Final, Native, Private)
// Parameters:
// EGhostStealthState                      PreviousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnRep_StealthState(EGhostStealthState PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnRep_StealthState");

	Params::GhostStealthComponent_OnRep_StealthState Parms{};

	Parms.PreviousState = PreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TheGhostface.GhostStealthComponent.OnStealthCancelledByPlayer__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ADBDPlayer*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnStealthCancelledByPlayer__DelegateSignature(class ADBDPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnStealthCancelledByPlayer__DelegateSignature");

	Params::GhostStealthComponent_OnStealthCancelledByPlayer__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TheGhostface.GhostStealthComponent.OnStealthStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EGhostStealthState                      StealthState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnStealthStateChanged__DelegateSignature(EGhostStealthState StealthState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnStealthStateChanged__DelegateSignature");

	Params::GhostStealthComponent_OnStealthStateChanged__DelegateSignature Parms{};

	Parms.StealthState = StealthState;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TheGhostface.GhostStealthComponent.OnSuccessfulAttackInStealth__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ADBDPlayer*                       Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::OnSuccessfulAttackInStealth__DelegateSignature(class ADBDPlayer* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "OnSuccessfulAttackInStealth__DelegateSignature");

	Params::GhostStealthComponent_OnSuccessfulAttackInStealth__DelegateSignature Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TheGhostface.GhostStealthComponent.GetStealthChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGhostStealthComponent::GetStealthChargePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "GetStealthChargePercent");

	Params::GhostStealthComponent_GetStealthChargePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostStealthComponent.GetStealthState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGhostStealthState                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGhostStealthState UGhostStealthComponent::GetStealthState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "GetStealthState");

	Params::GhostStealthComponent_GetStealthState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostStealthComponent.IsStealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostStealthComponent::IsStealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "IsStealth");

	Params::GhostStealthComponent_IsStealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostStealthComponent.IsStealthReadyToActivate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGhostStealthComponent::IsStealthReadyToActivate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "IsStealthReadyToActivate");

	Params::GhostStealthComponent_IsStealthReadyToActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TheGhostface.GhostStealthComponent.SetRedStainVisibility
// (Final, Native, Private, Const)
// Parameters:
// bool                                    Visible                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGhostStealthComponent::SetRedStainVisibility(const bool Visible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GhostStealthComponent", "SetRedStainVisibility");

	Params::GhostStealthComponent_SetRedStainVisibility Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TheGhostface.TheGhostUtilities.IsKillerStealth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTheGhostUtilities::IsKillerStealth(class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TheGhostUtilities", "IsKillerStealth");

	Params::TheGhostUtilities_IsKillerStealth Parms{};

	Parms.Killer = Killer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

