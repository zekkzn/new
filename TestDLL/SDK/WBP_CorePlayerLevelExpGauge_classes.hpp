#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePlayerLevelExpGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DBDUIViewsCore_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CorePlayerLevelExpGauge.WBP_CorePlayerLevelExpGauge_C
// 0x0040 (0x03A8 - 0x0368)
class UWBP_CorePlayerLevelExpGauge_C final : public UCorePlayerExpGaugeWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDBDImage*                              Background;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDImage*                              Gauge;                                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          Progress;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          XpTotalTB;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDBDTextBlock*                          XpValueTB;                                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GaugeMaterial;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXP;                                         // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxXp;                                             // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add(const int32 bonusXp);
	void Construct();
	void ExecuteUbergraph_WBP_CorePlayerLevelExpGauge(int32 EntryPoint);
	void OnPlayMaxValueAnimation();
	void OnUpdateComplete(class UUITweenInstance* Tween);
	void OnUpdateProgress(class UUITweenInstance* Tween);
	void PreConstruct(bool IsDesignTime);
	void SetViewData(const struct FPlayerLevelViewData& PlayerViewData);
	void UpdateGauge(double PlayerExp, double NextLevelExp);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CorePlayerLevelExpGauge_C">();
	}
	static class UWBP_CorePlayerLevelExpGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CorePlayerLevelExpGauge_C>();
	}
};
static_assert(alignof(UWBP_CorePlayerLevelExpGauge_C) == 0x000008, "Wrong alignment on UWBP_CorePlayerLevelExpGauge_C");
static_assert(sizeof(UWBP_CorePlayerLevelExpGauge_C) == 0x0003A8, "Wrong size on UWBP_CorePlayerLevelExpGauge_C");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, UberGraphFrame) == 0x000368, "Member 'UWBP_CorePlayerLevelExpGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, Background) == 0x000370, "Member 'UWBP_CorePlayerLevelExpGauge_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, Gauge) == 0x000378, "Member 'UWBP_CorePlayerLevelExpGauge_C::Gauge' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, Progress) == 0x000380, "Member 'UWBP_CorePlayerLevelExpGauge_C::Progress' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, XpTotalTB) == 0x000388, "Member 'UWBP_CorePlayerLevelExpGauge_C::XpTotalTB' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, XpValueTB) == 0x000390, "Member 'UWBP_CorePlayerLevelExpGauge_C::XpValueTB' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, GaugeMaterial) == 0x000398, "Member 'UWBP_CorePlayerLevelExpGauge_C::GaugeMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, CurrentXP) == 0x0003A0, "Member 'UWBP_CorePlayerLevelExpGauge_C::CurrentXP' has a wrong offset!");
static_assert(offsetof(UWBP_CorePlayerLevelExpGauge_C, MaxXp) == 0x0003A4, "Member 'UWBP_CorePlayerLevelExpGauge_C::MaxXp' has a wrong offset!");

}

