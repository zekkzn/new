#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SabotageMeathook

#include "Basic.hpp"

#include "SabotageMeathook_classes.hpp"
#include "SabotageMeathook_parameters.hpp"


namespace SDK
{

// Function SabotageMeathook.SabotageMeathook_C.OnInteractionFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ADBDPlayer*                       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HasInteractionStarted                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USabotageMeathook_C::OnInteractionFinished(class ADBDPlayer* Player, bool HasInteractionStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "OnInteractionFinished");

	Params::SabotageMeathook_C_OnInteractionFinished Parms{};

	Parms.Player = Player;
	Parms.HasInteractionStarted = HasInteractionStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SabotageMeathook.SabotageMeathook_C.ExecuteUbergraph_SabotageMeathook
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USabotageMeathook_C::ExecuteUbergraph_SabotageMeathook(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "ExecuteUbergraph_SabotageMeathook");

	Params::SabotageMeathook_C_ExecuteUbergraph_SabotageMeathook Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SabotageMeathook.SabotageMeathook_C.CanCharge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Can_Charge                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USabotageMeathook_C::CanCharge(bool* Can_Charge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "CanCharge");

	Params::SabotageMeathook_C_CanCharge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Charge != nullptr)
		*Can_Charge = Parms.Can_Charge;
}


// Function SabotageMeathook.SabotageMeathook_C.ApplyCharge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USabotageMeathook_C::ApplyCharge(double DeltaTime, class ADBDPlayer* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "ApplyCharge");

	Params::SabotageMeathook_C_ApplyCharge Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SabotageMeathook.SabotageMeathook_C.GetScoreEventForSabotage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void USabotageMeathook_C::GetScoreEventForSabotage(struct FGameplayTag* GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "GetScoreEventForSabotage");

	Params::SabotageMeathook_C_GetScoreEventForSabotage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameplayTag != nullptr)
		*GameplayTag = std::move(Parms.GameplayTag);
}


// Function SabotageMeathook.SabotageMeathook_C.IsInteractionPossibleBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputInteractionType                   InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USabotageMeathook_C::IsInteractionPossibleBP(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "IsInteractionPossibleBP");

	Params::SabotageMeathook_C_IsInteractionPossibleBP Parms{};

	Parms.Player = Player;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SabotageMeathook.SabotageMeathook_C.GetInteractionText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Player                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString USabotageMeathook_C::GetInteractionText(const class ADBDPlayer* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SabotageMeathook_C", "GetInteractionText");

	Params::SabotageMeathook_C_GetInteractionText Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

