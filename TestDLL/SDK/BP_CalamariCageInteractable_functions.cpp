#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CalamariCageInteractable

#include "Basic.hpp"

#include "BP_CalamariCageInteractable_classes.hpp"
#include "BP_CalamariCageInteractable_parameters.hpp"


namespace SDK
{

// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_DissolveOut__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_DissolveOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_DissolveOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_DissolveOut__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_DissolveOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_DissolveOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_Decal__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_Decal__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_Decal__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_Decal__SpawnBlood__EventFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_Decal__SpawnBlood__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_Decal__SpawnBlood__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_Decal__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_Decal__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_Decal__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_CameraFade__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_CameraFade__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_CameraFade__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.TML_CameraFade__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::TML_CameraFade__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "TML_CameraFade__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Timeline__Hide Attached VFX__EventFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::Timeline__Hide_Attached_VFX__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Timeline__Hide Attached VFX__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Switch Oni Weapons To Normal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Switch_Oni_Weapons_To_Normal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Switch Oni Weapons To Normal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Switch Kanobo to Normal Mode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Switch_Kanobo_to_Normal_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Switch Kanobo to Normal Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Switch Kanobo To Demon Mode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Switch_Kanobo_To_Demon_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Switch Kanobo To Demon Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Survivor_BoonRadius_Exit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Survivor_BoonRadius_Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Survivor_BoonRadius_Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Survivor_BoonRadius_Enter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Survivor_BoonRadius_Enter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Survivor_BoonRadius_Enter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Stop Travelling PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Stop_Travelling_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Stop Travelling PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Stop Travelling Dissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Stop_Travelling_Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Stop Travelling Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Stop Saliva VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Stop_Saliva_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Stop Saliva VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Stop Pounce VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Stop_Pounce_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Stop Pounce VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.StartDeathBedRelocateVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::StartDeathBedRelocateVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "StartDeathBedRelocateVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.StartDeathBedDissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::StartDeathBedDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "StartDeathBedDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Start Travelling PP
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Start_Travelling_PP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Start Travelling PP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Start Travelling Dissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Start_Travelling_Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Start Travelling Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Start Saliva VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Start_Saliva_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Start Saliva VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Start Pounce VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Start_Pounce_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Start Pounce VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.SpawnMissSkillcheckVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::SpawnMissSkillcheckVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "SpawnMissSkillcheckVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.SpawnFullScreenBlood
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::SpawnFullScreenBlood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "SpawnFullScreenBlood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.SpawnFakeBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::SpawnFakeBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "SpawnFakeBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ShowSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ShowSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ShowSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ShowGunBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ShowGunBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ShowGunBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ShowDemonCosmetic
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ShowDemonCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ShowDemonCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Show Oni Katana
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Show_Oni_Katana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Show Oni Katana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.SetPlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::SetPlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "SetPlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.SetHighlightedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::SetHighlightedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "SetHighlightedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ReturnToDemonMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ReturnToDemonMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ReturnToDemonMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ReturnOniToNormal
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ReturnOniToNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ReturnOniToNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.RemoveBloodParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::RemoveBloodParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "RemoveBloodParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.OnSurvivorDeath
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACamperPlayer*                    CagedSurvivor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::OnSurvivorDeath(const class ACamperPlayer* CagedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "OnSurvivorDeath");

	Params::BP_CalamariCageInteractable_C_OnSurvivorDeath Parms{};

	Parms.CagedSurvivor = CagedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.OnSkillCheckFailed_Cosmetic
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABP_CalamariCageInteractable_C::OnSkillCheckFailed_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "OnSkillCheckFailed_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.OnRescueCancelled
// (Event, Protected, BlueprintEvent)

void ABP_CalamariCageInteractable_C::OnRescueCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "OnRescueCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.On Execution
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::On_Execution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "On Execution");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.MoveRescuerSocketPositionIfCollisionDetected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::MoveRescuerSocketPositionIfCollisionDetected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "MoveRescuerSocketPositionIfCollisionDetected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Killer_LungeAttack_Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Killer_LungeAttack_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Killer_LungeAttack_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Killer_LungeAttack_End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Killer_LungeAttack_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Killer_LungeAttack_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_WrongLandingVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WrongLanding                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K22_WrongLandingVignette(bool WrongLanding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_WrongLandingVignette");

	Params::BP_CalamariCageInteractable_C_K22_WrongLandingVignette Parms{};

	Parms.WrongLanding = WrongLanding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_WrongLanding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Wrong_Landing                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K22_WrongLanding(bool Wrong_Landing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_WrongLanding");

	Params::BP_CalamariCageInteractable_C_K22_WrongLanding Parms{};

	Parms.Wrong_Landing = Wrong_Landing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_SpawnWipeVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_SpawnWipeVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_SpawnWipeVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_ReleaseBrother
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_ReleaseBrother()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_ReleaseBrother");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_QuickDissolveBrother
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_QuickDissolveBrother()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_QuickDissolveBrother");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_MembraneRecovery
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_MembraneRecovery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_MembraneRecovery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_MembraneDelete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_MembraneDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_MembraneDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_JumpTrail_Deactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_JumpTrail_Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_JumpTrail_Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_JumpTrail_Activate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_JumpTrail_Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_JumpTrail_Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_Jump_Inactive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_Jump_Inactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_Jump_Inactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_Jump_Active
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_Jump_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_Jump_Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_IsAttachedLocker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttachedLocker                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K22_IsAttachedLocker(bool IsAttachedLocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_IsAttachedLocker");

	Params::BP_CalamariCageInteractable_C_K22_IsAttachedLocker Parms{};

	Parms.IsAttachedLocker = IsAttachedLocker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightSuccessfulAttackStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_HighlightSuccessfulAttackStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightSuccessfulAttackStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightSuccessfulAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_HighlightSuccessfulAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightSuccessfulAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightMissJump_Stop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_HighlightMissJump_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightMissJump_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightMissJump
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_HighlightMissJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightMissJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightDormantMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDormantMain_                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K22_HighlightDormantMain(bool IsDormantMain_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightDormantMain");

	Params::BP_CalamariCageInteractable_C_K22_HighlightDormantMain Parms{};

	Parms.IsDormantMain_ = IsDormantMain_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_HighlightDormant
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDormant_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K22_HighlightDormant(bool IsDormant_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_HighlightDormant");

	Params::BP_CalamariCageInteractable_C_K22_HighlightDormant Parms{};

	Parms.IsDormant_ = IsDormant_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_DormantAttachedSlasher
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_DormantAttachedSlasher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_DormantAttachedSlasher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_DetachedFromSurvivor_VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_DetachedFromSurvivor_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_DetachedFromSurvivor_VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_BrotherDissolveLocker
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_BrotherDissolveLocker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_BrotherDissolveLocker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_BabyRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_BabyRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_BabyRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_BabyBloodDissolve
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_BabyBloodDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_BabyBloodDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K22_AttachedToSurvivor_VFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K22_AttachedToSurvivor_VFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K22_AttachedToSurvivor_VFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_Killer_RemoveVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_Killer_RemoveVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_Killer_RemoveVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_Killer_PlaceVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_Killer_PlaceVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_Killer_PlaceVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_Killer_BombSmokeColor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_Killer_BombSmokeColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_Killer_BombSmokeColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_Killer_AntidoteEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_Killer_AntidoteEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_Killer_AntidoteEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_Killer_AntidoteBegin
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_Killer_AntidoteBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_Killer_AntidoteBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_GetToxinVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBombType                               Bomb_Type                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::K12_GetToxinVignette(EBombType Bomb_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_GetToxinVignette");

	Params::BP_CalamariCageInteractable_C_K12_GetToxinVignette Parms{};

	Parms.Bomb_Type = Bomb_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K12_GetAntidoteVignette
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K12_GetAntidoteVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K12_GetAntidoteVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K05_TrapImpactOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K05_TrapImpactOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K05_TrapImpactOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K05_TrapImpact
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K05_TrapImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K05_TrapImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K05_SetTrap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K05_SetTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K05_SetTrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K05_BloodDrops
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K05_BloodDrops()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K05_BloodDrops");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K04_TelekinesisOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K04_TelekinesisOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K04_TelekinesisOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K04_TelekinesisOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K04_TelekinesisOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K04_TelekinesisOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K04_InvisibleOn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K04_InvisibleOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K04_InvisibleOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.K04_InvisibleOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::K04_InvisibleOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "K04_InvisibleOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.InitialiseInteractors
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::InitialiseInteractors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "InitialiseInteractors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.HideSyringeOnStun
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::HideSyringeOnStun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "HideSyringeOnStun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.HideSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::HideSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "HideSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.HideGunBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::HideGunBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "HideGunBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.HideDemonCosmetic
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::HideDemonCosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "HideDemonCosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Hide Oni Katana_TPV
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Hide_Oni_Katana_TPV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Hide Oni Katana_TPV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Hide Oni Katana
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Hide_Oni_Katana()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Hide Oni Katana");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.FX_SurvivorSavedFromCage
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABP_CalamariCageInteractable_C::FX_SurvivorSavedFromCage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "FX_SurvivorSavedFromCage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.FX_GoingUnder
// (BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::FX_GoingUnder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "FX_GoingUnder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ExecuteUbergraph_BP_CalamariCageInteractable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::ExecuteUbergraph_BP_CalamariCageInteractable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ExecuteUbergraph_BP_CalamariCageInteractable");

	Params::BP_CalamariCageInteractable_C_ExecuteUbergraph_BP_CalamariCageInteractable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveDecal_Relocation__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveDecal_Relocation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveDecal_Relocation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveDecal_Relocation__SpawnBlood__EventFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveDecal_Relocation__SpawnBlood__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveDecal_Relocation__SpawnBlood__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveDecal_Relocation__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveDecal_Relocation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveDecal_Relocation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveCamperDeath__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveCamperDeath__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveCamperDeath__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveCamperDeath__Hide Attached VFX__EventFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveCamperDeath__Hide_Attached_VFX__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveCamperDeath__Hide Attached VFX__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveCamperDeath__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveCamperDeath__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveCamperDeath__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveAbsorbPlayer__UpdateFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveAbsorbPlayer__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveAbsorbPlayer__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DissolveAbsorbPlayer__FinishedFunc
// (BlueprintEvent)

void ABP_CalamariCageInteractable_C::DissolveAbsorbPlayer__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DissolveAbsorbPlayer__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DisableDemonMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::DisableDemonMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DisableDemonMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Destroy Blood Orb
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Destroy_Blood_Orb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Destroy Blood Orb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.DeactivateKnockoutVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::DeactivateKnockoutVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "DeactivateKnockoutVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Cosmetic_OnRelocateStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Cosmetic_OnRelocateStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Cosmetic_OnRelocateStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Cosmetic_OnPlayerAbsorbedByGround
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Cosmetic_OnPlayerAbsorbedByGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Cosmetic_OnPlayerAbsorbedByGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Cosmetic_OnGoingUpFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsAnticampRelocation                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACamperPlayer*                    CagedSurvivor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::Cosmetic_OnGoingUpFinished(const bool IsAnticampRelocation, const class ACamperPlayer* CagedSurvivor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Cosmetic_OnGoingUpFinished");

	Params::BP_CalamariCageInteractable_C_Cosmetic_OnGoingUpFinished Parms{};

	Parms.IsAnticampRelocation = IsAnticampRelocation;
	Parms.CagedSurvivor = CagedSurvivor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Cosmetic_DisplayCage
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Display                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::Cosmetic_DisplayCage(const bool Display)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Cosmetic_DisplayCage");

	Params::BP_CalamariCageInteractable_C_Cosmetic_DisplayCage Parms{};

	Parms.Display = Display;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.CheckRescuerSocketPosition
// (Event, Protected, BlueprintEvent)

void ABP_CalamariCageInteractable_C::CheckRescuerSocketPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "CheckRescuerSocketPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Camper_AntidoteBoostVignette_Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Camper_AntidoteBoostVignette_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Camper_AntidoteBoostVignette_Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Camper_AntidoteBoostVignette_End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Camper_AntidoteBoostVignette_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Camper_AntidoteBoostVignette_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.CageAppearSFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::CageAppearSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "CageAppearSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.Boon_Unbound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::Boon_Unbound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "Boon_Unbound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.BankLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkResult                               Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::BankLoaded(EAkResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "BankLoaded");

	Params::BP_CalamariCageInteractable_C_BankLoaded Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.AttachBloodParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::AttachBloodParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "AttachBloodParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.AnimateLiquidSyringe
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::AnimateLiquidSyringe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "AnimateLiquidSyringe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.AddBloodDrippingGKMoriMale
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::AddBloodDrippingGKMoriMale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "AddBloodDrippingGKMoriMale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateVignetteOnWallCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivateVignetteOnWallCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateVignetteOnWallCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateSacrificeCamBlood
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivateSacrificeCamBlood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateSacrificeCamBlood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivatePounceStateVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivatePounceStateVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivatePounceStateVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivatePlayerLightningVFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         LightningFX                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Intense                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::ActivatePlayerLightningVFX(const class UMaterialInstanceDynamic*& LightningFX, bool Intense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivatePlayerLightningVFX");

	Params::BP_CalamariCageInteractable_C_ActivatePlayerLightningVFX Parms{};

	Parms.LightningFX = LightningFX;
	Parms.Intense = Intense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivatePlayerGlitchVFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         GlitchFX                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Face                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Madness                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::ActivatePlayerGlitchVFX(const class UMaterialInstanceDynamic*& GlitchFX, const bool Face, bool Madness, bool Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivatePlayerGlitchVFX");

	Params::BP_CalamariCageInteractable_C_ActivatePlayerGlitchVFX Parms{};

	Parms.GlitchFX = GlitchFX;
	Parms.Face = Face;
	Parms.Madness = Madness;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivatePlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivatePlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivatePlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateLocalPlayerExposedVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivateLocalPlayerExposedVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateLocalPlayerExposedVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateKnockoutVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivateKnockoutVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateKnockoutVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateEndGameVignette
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CalamariCageInteractable_C::ActivateEndGameVignette(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateEndGameVignette");

	Params::BP_CalamariCageInteractable_C_ActivateEndGameVignette Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.ActivateAttemptEscapeVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CalamariCageInteractable_C::ActivateAttemptEscapeVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "ActivateAttemptEscapeVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CalamariCageInteractable.BP_CalamariCageInteractable_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UInteractor*                      Param_Interactor                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInteractionDefinition*           Definition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UInterruptionDefinition*          Interruption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_CalamariCageInteractable_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee, const class UInteractor* Param_Interactor, const class UInteractionDefinition* Definition, const class UInterruptionDefinition* Interruption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalamariCageInteractable_C", "IsInterruptionPossible");

	Params::BP_CalamariCageInteractable_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;
	Parms.Param_Interactor = Param_Interactor;
	Parms.Definition = Definition;
	Parms.Interruption = Interruption;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

