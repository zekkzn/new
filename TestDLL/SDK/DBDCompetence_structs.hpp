#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDCompetence

#include "Basic.hpp"

#include "DataTableUtilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// Enum DBDCompetence.EGameEventObjectType
// NumValues: 0x0003
enum class EGameEventObjectType : uint8
{
	Instigator                               = 0,
	Target                                   = 1,
	EGameEventObjectType_MAX                 = 2,
};

// Enum DBDCompetence.EDispatchType
// NumValues: 0x0004
enum class EDispatchType : uint8
{
	None                                     = 0,
	Locally                                  = 1,
	Remotely                                 = 2,
	EDispatchType_MAX                        = 3,
};

// Enum DBDCompetence.EImposeEffectTo
// NumValues: 0x0006
enum class EImposeEffectTo : uint8
{
	EventInstigator                          = 0,
	EventTarget                              = 1,
	EventCustomObject                        = 2,
	AddonOwner                               = 3,
	AllSurvivors                             = 4,
	EImposeEffectTo_MAX                      = 5,
};

// Enum DBDCompetence.EMultiImposeEffectTo
// NumValues: 0x0005
enum class EMultiImposeEffectTo : uint8
{
	EventInstigator                          = 0,
	EventTarget                              = 1,
	AddonOwner                               = 2,
	AllSurvivors                             = 3,
	EMultiImposeEffectTo_MAX                 = 4,
};

// Enum DBDCompetence.EMultiLingeringStateTagStrategy
// NumValues: 0x0003
enum class EMultiLingeringStateTagStrategy : uint8
{
	And                                      = 0,
	Or                                       = 1,
	EMultiLingeringStateTagStrategy_MAX      = 2,
};

// Enum DBDCompetence.EStatusEffectSpawnerReceiverStrategy
// NumValues: 0x0004
enum class EStatusEffectSpawnerReceiverStrategy : uint32
{
	AllCharacter                             = 0,
	PawnType                                 = 1,
	OriginatingPlayer                        = 2,
	EStatusEffectSpawnerReceiverStrategy_MAX = 3,
};

// Enum DBDCompetence.ESecondWindState
// NumValues: 0x0005
enum class ESecondWindState : uint8
{
	Loading                                  = 0,
	Locked                                   = 1,
	Available                                = 2,
	InUse                                    = 3,
	ESecondWindState_MAX                     = 4,
};

// Enum DBDCompetence.ESpawningEffectGameEventSubject
// NumValues: 0x0003
enum class ESpawningEffectGameEventSubject : uint8
{
	Instigator                               = 0,
	Target                                   = 1,
	ESpawningEffectGameEventSubject_MAX      = 2,
};

// Enum DBDCompetence.ETheMettleOfManPhase
// NumValues: 0x0006
enum class ETheMettleOfManPhase : uint8
{
	Uninitialized                            = 0,
	GainingTokens                            = 1,
	CancelNextAttack                         = 2,
	RevealWhenHealthy                        = 3,
	RevealedToKiller                         = 4,
	ETheMettleOfManPhase_MAX                 = 5,
};

// ScriptStruct DBDCompetence.DataDrivenStatusEffectInfo
// 0x00A8 (0x00A8 - 0x0000)
struct FDataDrivenStatusEffectInfo final
{
public:
	struct FDBDTunableRowHandle                   StatusEffectLifetime;                              // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDBDTunableRowHandle                   CustomParamValue;                                  // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EImposeEffectTo                               ImposeEffectTo;                                    // 0x0050(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TagQueryThatEffectTargetMustMatch;                 // 0x0058(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UStatusEffect>              StatusEffect;                                      // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataDrivenStatusEffectInfo) == 0x000008, "Wrong alignment on FDataDrivenStatusEffectInfo");
static_assert(sizeof(FDataDrivenStatusEffectInfo) == 0x0000A8, "Wrong size on FDataDrivenStatusEffectInfo");
static_assert(offsetof(FDataDrivenStatusEffectInfo, StatusEffectLifetime) == 0x000000, "Member 'FDataDrivenStatusEffectInfo::StatusEffectLifetime' has a wrong offset!");
static_assert(offsetof(FDataDrivenStatusEffectInfo, CustomParamValue) == 0x000028, "Member 'FDataDrivenStatusEffectInfo::CustomParamValue' has a wrong offset!");
static_assert(offsetof(FDataDrivenStatusEffectInfo, ImposeEffectTo) == 0x000050, "Member 'FDataDrivenStatusEffectInfo::ImposeEffectTo' has a wrong offset!");
static_assert(offsetof(FDataDrivenStatusEffectInfo, TagQueryThatEffectTargetMustMatch) == 0x000058, "Member 'FDataDrivenStatusEffectInfo::TagQueryThatEffectTargetMustMatch' has a wrong offset!");
static_assert(offsetof(FDataDrivenStatusEffectInfo, StatusEffect) == 0x0000A0, "Member 'FDataDrivenStatusEffectInfo::StatusEffect' has a wrong offset!");

// ScriptStruct DBDCompetence.MultiStatusEffectInfo
// 0x0028 (0x0028 - 0x0000)
struct FMultiStatusEffectInfo final
{
public:
	struct FGameplayTag                           EventTrigger;                                      // 0x0000(0x000C)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireEventInstigatorToMatchAddonOwnerToImposeStatusEffects; // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequireEventTargetToMatchAddonOwnerToImposeStatusEffects; // 0x000D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StatusEffectLifetime;                              // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomParamValue;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMultiImposeEffectTo                          ImposeEffectTo;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              StatusEffect;                                      // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMultiStatusEffectInfo) == 0x000008, "Wrong alignment on FMultiStatusEffectInfo");
static_assert(sizeof(FMultiStatusEffectInfo) == 0x000028, "Wrong size on FMultiStatusEffectInfo");
static_assert(offsetof(FMultiStatusEffectInfo, EventTrigger) == 0x000000, "Member 'FMultiStatusEffectInfo::EventTrigger' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, RequireEventInstigatorToMatchAddonOwnerToImposeStatusEffects) == 0x00000C, "Member 'FMultiStatusEffectInfo::RequireEventInstigatorToMatchAddonOwnerToImposeStatusEffects' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, RequireEventTargetToMatchAddonOwnerToImposeStatusEffects) == 0x00000D, "Member 'FMultiStatusEffectInfo::RequireEventTargetToMatchAddonOwnerToImposeStatusEffects' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, StatusEffectLifetime) == 0x000010, "Member 'FMultiStatusEffectInfo::StatusEffectLifetime' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, CustomParamValue) == 0x000014, "Member 'FMultiStatusEffectInfo::CustomParamValue' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, ImposeEffectTo) == 0x000018, "Member 'FMultiStatusEffectInfo::ImposeEffectTo' has a wrong offset!");
static_assert(offsetof(FMultiStatusEffectInfo, StatusEffect) == 0x000020, "Member 'FMultiStatusEffectInfo::StatusEffect' has a wrong offset!");

// ScriptStruct DBDCompetence.StatusEffectSpawnData
// 0x0018 (0x0018 - 0x0000)
struct FStatusEffectSpawnData final
{
public:
	TSubclassOf<class UStatusEffect>              EffectClass;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomParam;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldDisplay;                                     // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EStatusEffectSpawnerReceiverStrategy          ReceiverStrategy;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPawnType                                     PawnType;                                          // 0x0014(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SkipOriginatingPlayer;                             // 0x0015(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStatusEffectSpawnData) == 0x000008, "Wrong alignment on FStatusEffectSpawnData");
static_assert(sizeof(FStatusEffectSpawnData) == 0x000018, "Wrong size on FStatusEffectSpawnData");
static_assert(offsetof(FStatusEffectSpawnData, EffectClass) == 0x000000, "Member 'FStatusEffectSpawnData::EffectClass' has a wrong offset!");
static_assert(offsetof(FStatusEffectSpawnData, CustomParam) == 0x000008, "Member 'FStatusEffectSpawnData::CustomParam' has a wrong offset!");
static_assert(offsetof(FStatusEffectSpawnData, ShouldDisplay) == 0x00000C, "Member 'FStatusEffectSpawnData::ShouldDisplay' has a wrong offset!");
static_assert(offsetof(FStatusEffectSpawnData, ReceiverStrategy) == 0x000010, "Member 'FStatusEffectSpawnData::ReceiverStrategy' has a wrong offset!");
static_assert(offsetof(FStatusEffectSpawnData, PawnType) == 0x000014, "Member 'FStatusEffectSpawnData::PawnType' has a wrong offset!");
static_assert(offsetof(FStatusEffectSpawnData, SkipOriginatingPlayer) == 0x000015, "Member 'FStatusEffectSpawnData::SkipOriginatingPlayer' has a wrong offset!");

// ScriptStruct DBDCompetence.PlayerStatusEffectSpawnerHelperInitParams
// 0x0030 (0x0030 - 0x0000)
struct FPlayerStatusEffectSpawnerHelperInitParams final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADBDPlayer*                             OriginatingPlayer;                                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayModifierContainer*             OriginatingEffect;                                 // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStatusEffectSpawnData>         EffectsToSpawn;                                    // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPlayerStatusEffectSpawnerHelperInitParams) == 0x000008, "Wrong alignment on FPlayerStatusEffectSpawnerHelperInitParams");
static_assert(sizeof(FPlayerStatusEffectSpawnerHelperInitParams) == 0x000030, "Wrong size on FPlayerStatusEffectSpawnerHelperInitParams");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelperInitParams, WorldContextObject) == 0x000000, "Member 'FPlayerStatusEffectSpawnerHelperInitParams::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelperInitParams, OriginatingPlayer) == 0x000008, "Member 'FPlayerStatusEffectSpawnerHelperInitParams::OriginatingPlayer' has a wrong offset!");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelperInitParams, OriginatingEffect) == 0x000010, "Member 'FPlayerStatusEffectSpawnerHelperInitParams::OriginatingEffect' has a wrong offset!");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelperInitParams, EffectsToSpawn) == 0x000018, "Member 'FPlayerStatusEffectSpawnerHelperInitParams::EffectsToSpawn' has a wrong offset!");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelperInitParams, Lifetime) == 0x000028, "Member 'FPlayerStatusEffectSpawnerHelperInitParams::Lifetime' has a wrong offset!");

// ScriptStruct DBDCompetence.PlayerStatusEffectSpawnerHelper
// 0x0050 (0x0050 - 0x0000)
struct FPlayerStatusEffectSpawnerHelper final
{
public:
	struct FPlayerStatusEffectSpawnerHelperInitParams _initParams;                                       // 0x0000(0x0030)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPlayerStatusEffectSpawnerHelper) == 0x000008, "Wrong alignment on FPlayerStatusEffectSpawnerHelper");
static_assert(sizeof(FPlayerStatusEffectSpawnerHelper) == 0x000050, "Wrong size on FPlayerStatusEffectSpawnerHelper");
static_assert(offsetof(FPlayerStatusEffectSpawnerHelper, _initParams) == 0x000000, "Member 'FPlayerStatusEffectSpawnerHelper::_initParams' has a wrong offset!");

// ScriptStruct DBDCompetence.SimpleSpawnEffectsOnAllSurvivorsAddonParams
// 0x0010 (0x0010 - 0x0000)
struct FSimpleSpawnEffectsOnAllSurvivorsAddonParams final
{
public:
	TSubclassOf<class UStatusEffect>              _effectClass;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         _customParam;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSimpleSpawnEffectsOnAllSurvivorsAddonParams) == 0x000008, "Wrong alignment on FSimpleSpawnEffectsOnAllSurvivorsAddonParams");
static_assert(sizeof(FSimpleSpawnEffectsOnAllSurvivorsAddonParams) == 0x000010, "Wrong size on FSimpleSpawnEffectsOnAllSurvivorsAddonParams");
static_assert(offsetof(FSimpleSpawnEffectsOnAllSurvivorsAddonParams, _effectClass) == 0x000000, "Member 'FSimpleSpawnEffectsOnAllSurvivorsAddonParams::_effectClass' has a wrong offset!");
static_assert(offsetof(FSimpleSpawnEffectsOnAllSurvivorsAddonParams, _customParam) == 0x000008, "Member 'FSimpleSpawnEffectsOnAllSurvivorsAddonParams::_customParam' has a wrong offset!");

// ScriptStruct DBDCompetence.SpawningEffectOnGameEventData
// 0x0010 (0x0010 - 0x0000)
struct FSpawningEffectOnGameEventData final
{
public:
	TSubclassOf<class UStatusEffect>              StatusEffect;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomParameter;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSpawningEffectOnGameEventData) == 0x000008, "Wrong alignment on FSpawningEffectOnGameEventData");
static_assert(sizeof(FSpawningEffectOnGameEventData) == 0x000010, "Wrong size on FSpawningEffectOnGameEventData");
static_assert(offsetof(FSpawningEffectOnGameEventData, StatusEffect) == 0x000000, "Member 'FSpawningEffectOnGameEventData::StatusEffect' has a wrong offset!");
static_assert(offsetof(FSpawningEffectOnGameEventData, CustomParameter) == 0x000008, "Member 'FSpawningEffectOnGameEventData::CustomParameter' has a wrong offset!");
static_assert(offsetof(FSpawningEffectOnGameEventData, Lifetime) == 0x00000C, "Member 'FSpawningEffectOnGameEventData::Lifetime' has a wrong offset!");

// ScriptStruct DBDCompetence.PerkLevelEffectArray
// 0x0010 (0x0010 - 0x0000)
struct FPerkLevelEffectArray final
{
public:
	TArray<struct FStatusEffectSpawnData>         EffectsToSpawn;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPerkLevelEffectArray) == 0x000008, "Wrong alignment on FPerkLevelEffectArray");
static_assert(sizeof(FPerkLevelEffectArray) == 0x000010, "Wrong size on FPerkLevelEffectArray");
static_assert(offsetof(FPerkLevelEffectArray, EffectsToSpawn) == 0x000000, "Member 'FPerkLevelEffectArray::EffectsToSpawn' has a wrong offset!");

// ScriptStruct DBDCompetence.StatusEffectsProperties
// 0x0010 (0x0010 - 0x0000)
struct FStatusEffectsProperties final
{
public:
	TSubclassOf<class UStatusEffect>              StatusEffectClass;                                 // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomParam;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStatusEffectsProperties) == 0x000008, "Wrong alignment on FStatusEffectsProperties");
static_assert(sizeof(FStatusEffectsProperties) == 0x000010, "Wrong size on FStatusEffectsProperties");
static_assert(offsetof(FStatusEffectsProperties, StatusEffectClass) == 0x000000, "Member 'FStatusEffectsProperties::StatusEffectClass' has a wrong offset!");
static_assert(offsetof(FStatusEffectsProperties, CustomParam) == 0x000008, "Member 'FStatusEffectsProperties::CustomParam' has a wrong offset!");

}

