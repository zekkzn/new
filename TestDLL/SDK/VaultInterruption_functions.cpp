#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultInterruption

#include "Basic.hpp"

#include "VaultInterruption_classes.hpp"
#include "VaultInterruption_parameters.hpp"


namespace SDK
{

// Function VaultInterruption.VaultInterruption_C.IsInterruptionPossible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ADBDPlayer*                       Interruptor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ADBDPlayer*                       Interruptee                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UVaultInterruption_C::IsInterruptionPossible(const class ADBDPlayer* Interruptor, const class ADBDPlayer* Interruptee) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultInterruption_C", "IsInterruptionPossible");

	Params::VaultInterruption_C_IsInterruptionPossible Parms{};

	Parms.Interruptor = Interruptor;
	Parms.Interruptee = Interruptee;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VaultInterruption.VaultInterruption_C.GetVaultingObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Window                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVaultInterruption_C::GetVaultingObject(class UObject** Window) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultInterruption_C", "GetVaultingObject");

	Params::VaultInterruption_C_GetVaultingObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Window != nullptr)
		*Window = Parms.Window;
}

}

