#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheTrapper

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"
#include "StatSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimationUtilities_structs.hpp"
#include "AnimationUtilities_classes.hpp"
#include "Engine_classes.hpp"
#include "DBDInteraction_classes.hpp"
#include "DataTableUtilities_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "DBDAnimation_classes.hpp"


namespace SDK
{

// Class TheTrapper.BearTrapKillerComponent
// 0x0000 (0x00A8 - 0x00A8)
class UBearTrapKillerComponent final : public UActorComponent
{
public:
	void Multicast_DisarmTrap(class ABearTrap* TrapToDisarm);
	void Server_TryDisarmTrap(class ABearTrap* TrapToDisarm);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrapKillerComponent">();
	}
	static class UBearTrapKillerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBearTrapKillerComponent>();
	}
};
static_assert(alignof(UBearTrapKillerComponent) == 0x000008, "Wrong alignment on UBearTrapKillerComponent");
static_assert(sizeof(UBearTrapKillerComponent) == 0x0000A8, "Wrong size on UBearTrapKillerComponent");

// Class TheTrapper.Addon_Beartrap_05
// 0x0000 (0x02E8 - 0x02E8)
class UAddon_Beartrap_05 final : public UItemAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_Beartrap_05">();
	}
	static class UAddon_Beartrap_05* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_Beartrap_05>();
	}
};
static_assert(alignof(UAddon_Beartrap_05) == 0x000008, "Wrong alignment on UAddon_Beartrap_05");
static_assert(sizeof(UAddon_Beartrap_05) == 0x0002E8, "Wrong size on UAddon_Beartrap_05");

// Class TheTrapper.Addon_Beartrap_DisarmRevealer
// 0x0060 (0x0348 - 0x02E8)
class UAddon_Beartrap_DisarmRevealer final : public UItemAddon
{
public:
	float                                         _auraRevealDuration;                               // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UStatusEffect>              _timedRevealToKillerStatusEffect;                  // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ABearTrap*, class ACamperPlayer*>  _disarmedTrapMap;                                  // 0x02F8(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_Beartrap_DisarmRevealer">();
	}
	static class UAddon_Beartrap_DisarmRevealer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_Beartrap_DisarmRevealer>();
	}
};
static_assert(alignof(UAddon_Beartrap_DisarmRevealer) == 0x000008, "Wrong alignment on UAddon_Beartrap_DisarmRevealer");
static_assert(sizeof(UAddon_Beartrap_DisarmRevealer) == 0x000348, "Wrong size on UAddon_Beartrap_DisarmRevealer");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _auraRevealDuration) == 0x0002E8, "Member 'UAddon_Beartrap_DisarmRevealer::_auraRevealDuration' has a wrong offset!");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _timedRevealToKillerStatusEffect) == 0x0002F0, "Member 'UAddon_Beartrap_DisarmRevealer::_timedRevealToKillerStatusEffect' has a wrong offset!");
static_assert(offsetof(UAddon_Beartrap_DisarmRevealer, _disarmedTrapMap) == 0x0002F8, "Member 'UAddon_Beartrap_DisarmRevealer::_disarmedTrapMap' has a wrong offset!");

// Class TheTrapper.BearTrapOutlineUpdateStrategy
// 0x0038 (0x0108 - 0x00D0)
class UBearTrapOutlineUpdateStrategy final : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                           UnrevealedColor;                                   // 0x00D0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           RevealedColorToSurvivor;                           // 0x00E0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                      KillerOutlineFadeCurve;                            // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapActorComponent*                     _owningBearTrapMapActorComponent;                  // 0x0100(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetOwningBearTrapMapActorComponent(class UMapActorComponent* MapActorComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrapOutlineUpdateStrategy">();
	}
	static class UBearTrapOutlineUpdateStrategy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBearTrapOutlineUpdateStrategy>();
	}
};
static_assert(alignof(UBearTrapOutlineUpdateStrategy) == 0x000008, "Wrong alignment on UBearTrapOutlineUpdateStrategy");
static_assert(sizeof(UBearTrapOutlineUpdateStrategy) == 0x000108, "Wrong size on UBearTrapOutlineUpdateStrategy");
static_assert(offsetof(UBearTrapOutlineUpdateStrategy, UnrevealedColor) == 0x0000D0, "Member 'UBearTrapOutlineUpdateStrategy::UnrevealedColor' has a wrong offset!");
static_assert(offsetof(UBearTrapOutlineUpdateStrategy, RevealedColorToSurvivor) == 0x0000E0, "Member 'UBearTrapOutlineUpdateStrategy::RevealedColorToSurvivor' has a wrong offset!");
static_assert(offsetof(UBearTrapOutlineUpdateStrategy, KillerOutlineFadeCurve) == 0x0000F0, "Member 'UBearTrapOutlineUpdateStrategy::KillerOutlineFadeCurve' has a wrong offset!");
static_assert(offsetof(UBearTrapOutlineUpdateStrategy, _owningBearTrapMapActorComponent) == 0x000100, "Member 'UBearTrapOutlineUpdateStrategy::_owningBearTrapMapActorComponent' has a wrong offset!");

// Class TheTrapper.Addon_Beartrap_RustedJaws
// 0x0010 (0x02F8 - 0x02E8)
class UAddon_Beartrap_RustedJaws final : public UItemAddon
{
public:
	TSubclassOf<class UStatusEffect>              _mangledEffectClass;                               // 0x02E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         _mangledEffectLifetime;                            // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Addon_Beartrap_RustedJaws">();
	}
	static class UAddon_Beartrap_RustedJaws* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddon_Beartrap_RustedJaws>();
	}
};
static_assert(alignof(UAddon_Beartrap_RustedJaws) == 0x000008, "Wrong alignment on UAddon_Beartrap_RustedJaws");
static_assert(sizeof(UAddon_Beartrap_RustedJaws) == 0x0002F8, "Wrong size on UAddon_Beartrap_RustedJaws");
static_assert(offsetof(UAddon_Beartrap_RustedJaws, _mangledEffectClass) == 0x0002E8, "Member 'UAddon_Beartrap_RustedJaws::_mangledEffectClass' has a wrong offset!");
static_assert(offsetof(UAddon_Beartrap_RustedJaws, _mangledEffectLifetime) == 0x0002F0, "Member 'UAddon_Beartrap_RustedJaws::_mangledEffectLifetime' has a wrong offset!");

// Class TheTrapper.BearTrap
// 0x0218 (0x0770 - 0x0558)
class alignas(0x10) ABearTrap : public ABaseTrap
{
public:
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxPlayerOverlapComponent*             _interactionVolume;                                // 0x0560(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsulePlayerOverlapComponent*         _trapPlayerDetectionZone;                          // 0x0568(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          _killerSafetyZoneComponent;                        // 0x0570(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDOutlineComponent*                   _outlineComponent;                                 // 0x0578(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBearTrapOutlineUpdateStrategy*         _outlineUpdateStrategy;                            // 0x0580(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMapActorComponent*                     _mapActorComponent;                                // 0x0588(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       _mapActorCollision;                                // 0x0590(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                       _trapBlocker;                                      // 0x0598(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                         _montagePlayer;                                    // 0x05A0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_             _onIsTrapSetChanged;                               // 0x05A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ADBDPlayer*                             _ownerPlayer;                                      // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _revealWhileTrappedStatusEffectClass;              // 0x05C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C8[0x8];                                      // 0x05C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDBDNavModifierComponent*               _dangerNavModifierComponent;                       // 0x05D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          _isTrapperOutOfSafetyZone;                         // 0x05D8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5D9[0x3];                                      // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _maximumAttemptsForSelfUntrap;                     // 0x05DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         _selfUntrapAttemptsRemaining;                      // 0x05E0(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractor*                            _mainInteractor;                                   // 0x05E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                 _trapSurvivor;                                     // 0x05F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                 _trapKiller;                                       // 0x05F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                             _trappedPlayer;                                    // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_608[0x98];                                     // 0x0608(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationMontageSlave*                 _animationMontageSlave;                            // 0x06A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A8[0x10];                                     // 0x06A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTunableStat                           _baseBearTrapCarryCapacity;                        // 0x06B8(0x0080)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UStatusEffect*                          _honingStoneStatusEffect;                          // 0x0738(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_740[0x20];                                     // 0x0740(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADBDPlayerState>         _owningPlayerState;                                // 0x0760(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_768[0x8];                                      // 0x0768(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Authority_ImposeRevealAuraEffect(class ACamperPlayer* Survivor);
	void InitializeMainInteractor(class UInteractor* Interactor);
	void InitializeTrapKillerInteraction(class UInteractionDefinition* Interaction);
	void InitializeTrapSurvivorInteraction(class UInteractionDefinition* Interaction);
	void OnCollectUpdateEnd();
	void OnCollectUpdateStart();
	void OnLevelReadyToPlay_Implementation();
	void OnPlayerTrapped(class ADBDPlayer* TrappedPlayer);
	void OnRep_OwningPlayerState();
	void OnSafetyZoneEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTrapDetectionZoneOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnTrapDetectionZoneOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTrappedPlayerPickedUp(class ADBDPlayer* Picker);
	void SetTrappedPlayer(class ADBDPlayer* TrappedPlayer);
	void SetTrappedPlayerSinceMoved(bool DidTrap);
	void TrySetTrappedPlayer(class ADBDPlayer* Player);

	class UAkComponent* GetAkAudioComponent() const;
	class UBearTrapAnimInstance* GetAnimInstance() const;
	int32 GetMaximumAttemptsForSelfUntrap() const;
	int32 GetSelfUntrapAttemptsRemaining() const;
	class ADBDPlayer* GetTrappedPlayer() const;
	bool HasTrappedPlayer() const;
	bool HasTrappedPlayerSinceMoved() const;
	bool IsTrapperOutOfSafetyZone() const;
	void PlayMontage(class UAnimMontage* Montage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrap">();
	}
	static class ABearTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABearTrap>();
	}
};
static_assert(alignof(ABearTrap) == 0x000010, "Wrong alignment on ABearTrap");
static_assert(sizeof(ABearTrap) == 0x000770, "Wrong size on ABearTrap");
static_assert(offsetof(ABearTrap, _interactionVolume) == 0x000560, "Member 'ABearTrap::_interactionVolume' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapPlayerDetectionZone) == 0x000568, "Member 'ABearTrap::_trapPlayerDetectionZone' has a wrong offset!");
static_assert(offsetof(ABearTrap, _killerSafetyZoneComponent) == 0x000570, "Member 'ABearTrap::_killerSafetyZoneComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _outlineComponent) == 0x000578, "Member 'ABearTrap::_outlineComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _outlineUpdateStrategy) == 0x000580, "Member 'ABearTrap::_outlineUpdateStrategy' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mapActorComponent) == 0x000588, "Member 'ABearTrap::_mapActorComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mapActorCollision) == 0x000590, "Member 'ABearTrap::_mapActorCollision' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapBlocker) == 0x000598, "Member 'ABearTrap::_trapBlocker' has a wrong offset!");
static_assert(offsetof(ABearTrap, _montagePlayer) == 0x0005A0, "Member 'ABearTrap::_montagePlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _onIsTrapSetChanged) == 0x0005A8, "Member 'ABearTrap::_onIsTrapSetChanged' has a wrong offset!");
static_assert(offsetof(ABearTrap, _ownerPlayer) == 0x0005B8, "Member 'ABearTrap::_ownerPlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _revealWhileTrappedStatusEffectClass) == 0x0005C0, "Member 'ABearTrap::_revealWhileTrappedStatusEffectClass' has a wrong offset!");
static_assert(offsetof(ABearTrap, _dangerNavModifierComponent) == 0x0005D0, "Member 'ABearTrap::_dangerNavModifierComponent' has a wrong offset!");
static_assert(offsetof(ABearTrap, _isTrapperOutOfSafetyZone) == 0x0005D8, "Member 'ABearTrap::_isTrapperOutOfSafetyZone' has a wrong offset!");
static_assert(offsetof(ABearTrap, _maximumAttemptsForSelfUntrap) == 0x0005DC, "Member 'ABearTrap::_maximumAttemptsForSelfUntrap' has a wrong offset!");
static_assert(offsetof(ABearTrap, _selfUntrapAttemptsRemaining) == 0x0005E0, "Member 'ABearTrap::_selfUntrapAttemptsRemaining' has a wrong offset!");
static_assert(offsetof(ABearTrap, _mainInteractor) == 0x0005E8, "Member 'ABearTrap::_mainInteractor' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapSurvivor) == 0x0005F0, "Member 'ABearTrap::_trapSurvivor' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trapKiller) == 0x0005F8, "Member 'ABearTrap::_trapKiller' has a wrong offset!");
static_assert(offsetof(ABearTrap, _trappedPlayer) == 0x000600, "Member 'ABearTrap::_trappedPlayer' has a wrong offset!");
static_assert(offsetof(ABearTrap, _animationMontageSlave) == 0x0006A0, "Member 'ABearTrap::_animationMontageSlave' has a wrong offset!");
static_assert(offsetof(ABearTrap, _baseBearTrapCarryCapacity) == 0x0006B8, "Member 'ABearTrap::_baseBearTrapCarryCapacity' has a wrong offset!");
static_assert(offsetof(ABearTrap, _honingStoneStatusEffect) == 0x000738, "Member 'ABearTrap::_honingStoneStatusEffect' has a wrong offset!");
static_assert(offsetof(ABearTrap, _owningPlayerState) == 0x000760, "Member 'ABearTrap::_owningPlayerState' has a wrong offset!");

// Class TheTrapper.BearTrapAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UBearTrapAnimInstance : public USleepingAnimInstance
{
public:
	bool                                          _isBeingCollected;                                 // 0x0360(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _containsSurvivor;                                 // 0x0361(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _isTrapSet;                                        // 0x0362(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _wasJustDisarmed;                                  // 0x0363(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_364[0xC];                                      // 0x0364(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetContainsSurvivor(bool ContainsSurvivor);
	void SetIsBeingCollected(bool IsBeingCollected);
	void SetIsTrapSet(bool IsTrapSet);
	void SetWasJustDisarmed(bool WasJustDisarmed);

	bool KillerHasBearTrapNoDamageModifier() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BearTrapAnimInstance">();
	}
	static class UBearTrapAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBearTrapAnimInstance>();
	}
};
static_assert(alignof(UBearTrapAnimInstance) == 0x000010, "Wrong alignment on UBearTrapAnimInstance");
static_assert(sizeof(UBearTrapAnimInstance) == 0x000370, "Wrong size on UBearTrapAnimInstance");
static_assert(offsetof(UBearTrapAnimInstance, _isBeingCollected) == 0x000360, "Member 'UBearTrapAnimInstance::_isBeingCollected' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _containsSurvivor) == 0x000361, "Member 'UBearTrapAnimInstance::_containsSurvivor' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _isTrapSet) == 0x000362, "Member 'UBearTrapAnimInstance::_isTrapSet' has a wrong offset!");
static_assert(offsetof(UBearTrapAnimInstance, _wasJustDisarmed) == 0x000363, "Member 'UBearTrapAnimInstance::_wasJustDisarmed' has a wrong offset!");

// Class TheTrapper.DisarmBearTrapInteraction
// 0x0020 (0x08E0 - 0x08C0)
class UDisarmBearTrapInteraction : public UChargeableInteractionDefinition
{
public:
	float                                         _averageMaxVelocity;                               // 0x08C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _averageMaxVelocitySquared;                        // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateMontageID;                                  // 0x08C8(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _loudNoiseAudibleRangeTunable;                     // 0x08D4(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisarmBearTrapInteraction">();
	}
	static class UDisarmBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisarmBearTrapInteraction>();
	}
};
static_assert(alignof(UDisarmBearTrapInteraction) == 0x000010, "Wrong alignment on UDisarmBearTrapInteraction");
static_assert(sizeof(UDisarmBearTrapInteraction) == 0x0008E0, "Wrong size on UDisarmBearTrapInteraction");
static_assert(offsetof(UDisarmBearTrapInteraction, _averageMaxVelocity) == 0x0008C0, "Member 'UDisarmBearTrapInteraction::_averageMaxVelocity' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _averageMaxVelocitySquared) == 0x0008C4, "Member 'UDisarmBearTrapInteraction::_averageMaxVelocitySquared' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _updateMontageID) == 0x0008C8, "Member 'UDisarmBearTrapInteraction::_updateMontageID' has a wrong offset!");
static_assert(offsetof(UDisarmBearTrapInteraction, _loudNoiseAudibleRangeTunable) == 0x0008D4, "Member 'UDisarmBearTrapInteraction::_loudNoiseAudibleRangeTunable' has a wrong offset!");

// Class TheTrapper.IridescentStone
// 0x0000 (0x02E8 - 0x02E8)
class UIridescentStone final : public UItemAddon
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IridescentStone">();
	}
	static class UIridescentStone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIridescentStone>();
	}
};
static_assert(alignof(UIridescentStone) == 0x000008, "Wrong alignment on UIridescentStone");
static_assert(sizeof(UIridescentStone) == 0x0002E8, "Wrong size on UIridescentStone");

// Class TheTrapper.ResetBearTrapInteraction
// 0x00B0 (0x0970 - 0x08C0)
class UResetBearTrapInteraction : public UChargeableInteractionDefinition
{
public:
	class FName                                   _enterMontageIDForBeartrap;                        // 0x08C0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _udpateMontageIDForBeartrap;                       // 0x08CC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          _updateSequenceForBeartrap;                        // 0x08D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _exitMontageForIDBeartrap;                         // 0x08E0(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _cancelExitMontage;                                // 0x08EC(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _hasteStatusEffectClass;                           // 0x08F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hasteEffectMovementSpeedIncrease;                 // 0x0900(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hasteEffectDurationSeconds;                       // 0x0904(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_908[0x68];                                     // 0x0908(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResetBearTrapInteraction">();
	}
	static class UResetBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResetBearTrapInteraction>();
	}
};
static_assert(alignof(UResetBearTrapInteraction) == 0x000010, "Wrong alignment on UResetBearTrapInteraction");
static_assert(sizeof(UResetBearTrapInteraction) == 0x000970, "Wrong size on UResetBearTrapInteraction");
static_assert(offsetof(UResetBearTrapInteraction, _enterMontageIDForBeartrap) == 0x0008C0, "Member 'UResetBearTrapInteraction::_enterMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _udpateMontageIDForBeartrap) == 0x0008CC, "Member 'UResetBearTrapInteraction::_udpateMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _updateSequenceForBeartrap) == 0x0008D8, "Member 'UResetBearTrapInteraction::_updateSequenceForBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _exitMontageForIDBeartrap) == 0x0008E0, "Member 'UResetBearTrapInteraction::_exitMontageForIDBeartrap' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _cancelExitMontage) == 0x0008EC, "Member 'UResetBearTrapInteraction::_cancelExitMontage' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _hasteStatusEffectClass) == 0x0008F8, "Member 'UResetBearTrapInteraction::_hasteStatusEffectClass' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _hasteEffectMovementSpeedIncrease) == 0x000900, "Member 'UResetBearTrapInteraction::_hasteEffectMovementSpeedIncrease' has a wrong offset!");
static_assert(offsetof(UResetBearTrapInteraction, _hasteEffectDurationSeconds) == 0x000904, "Member 'UResetBearTrapInteraction::_hasteEffectDurationSeconds' has a wrong offset!");

// Class TheTrapper.SelfUntrap
// 0x00B0 (0x0970 - 0x08C0)
class USelfUntrap : public UChargeableInteractionDefinition
{
public:
	struct FDBDTunableRowHandle                   _trapImmunityDuration;                             // 0x08C0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeHealthy;                          // 0x08E8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeInjured;                          // 0x0908(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _successfulEscapeCrawling;                         // 0x0928(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor            _failedEscape;                                     // 0x0948(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          _canEscape;                                        // 0x0968(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SelfUntrap">();
	}
	static class USelfUntrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<USelfUntrap>();
	}
};
static_assert(alignof(USelfUntrap) == 0x000010, "Wrong alignment on USelfUntrap");
static_assert(sizeof(USelfUntrap) == 0x000970, "Wrong size on USelfUntrap");
static_assert(offsetof(USelfUntrap, _trapImmunityDuration) == 0x0008C0, "Member 'USelfUntrap::_trapImmunityDuration' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeHealthy) == 0x0008E8, "Member 'USelfUntrap::_successfulEscapeHealthy' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeInjured) == 0x000908, "Member 'USelfUntrap::_successfulEscapeInjured' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _successfulEscapeCrawling) == 0x000928, "Member 'USelfUntrap::_successfulEscapeCrawling' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _failedEscape) == 0x000948, "Member 'USelfUntrap::_failedEscape' has a wrong offset!");
static_assert(offsetof(USelfUntrap, _canEscape) == 0x000968, "Member 'USelfUntrap::_canEscape' has a wrong offset!");

// Class TheTrapper.SetBearTrap
// 0x0080 (0x09C0 - 0x0940)
class USetBearTrap : public USetTrapInteraction
{
public:
	class FName                                   _enterMontageIDForBeartrap;                        // 0x0940(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _udpateMontageIDForBeartrap;                       // 0x094C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                          _updateSequenceForBeartrap;                        // 0x0958(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _exitMontageForIDBeartrap;                         // 0x0960(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _cancelExitMontage;                                // 0x096C(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _hasteStatusEffectClass;                           // 0x0978(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hasteEffectMovementSpeedIncrease;                 // 0x0980(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         _hasteEffectDurationSeconds;                       // 0x0984(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_988[0x38];                                     // 0x0988(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetHasteEffectDurationSeconds() const;
	float GetHasteEffectMovementSpeedIncrease() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetBearTrap">();
	}
	static class USetBearTrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetBearTrap>();
	}
};
static_assert(alignof(USetBearTrap) == 0x000010, "Wrong alignment on USetBearTrap");
static_assert(sizeof(USetBearTrap) == 0x0009C0, "Wrong size on USetBearTrap");
static_assert(offsetof(USetBearTrap, _enterMontageIDForBeartrap) == 0x000940, "Member 'USetBearTrap::_enterMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _udpateMontageIDForBeartrap) == 0x00094C, "Member 'USetBearTrap::_udpateMontageIDForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _updateSequenceForBeartrap) == 0x000958, "Member 'USetBearTrap::_updateSequenceForBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _exitMontageForIDBeartrap) == 0x000960, "Member 'USetBearTrap::_exitMontageForIDBeartrap' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _cancelExitMontage) == 0x00096C, "Member 'USetBearTrap::_cancelExitMontage' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _hasteStatusEffectClass) == 0x000978, "Member 'USetBearTrap::_hasteStatusEffectClass' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _hasteEffectMovementSpeedIncrease) == 0x000980, "Member 'USetBearTrap::_hasteEffectMovementSpeedIncrease' has a wrong offset!");
static_assert(offsetof(USetBearTrap, _hasteEffectDurationSeconds) == 0x000984, "Member 'USetBearTrap::_hasteEffectDurationSeconds' has a wrong offset!");

// Class TheTrapper.SlashedOutOfBearTrapInteraction
// 0x0010 (0x0790 - 0x0780)
class USlashedOutOfBearTrapInteraction : public UInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x0778(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAnimMontage*                           _updateMontage;                                    // 0x0788(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SlashedOutOfBearTrapInteraction">();
	}
	static class USlashedOutOfBearTrapInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlashedOutOfBearTrapInteraction>();
	}
};
static_assert(alignof(USlashedOutOfBearTrapInteraction) == 0x000010, "Wrong alignment on USlashedOutOfBearTrapInteraction");
static_assert(sizeof(USlashedOutOfBearTrapInteraction) == 0x000790, "Wrong size on USlashedOutOfBearTrapInteraction");
static_assert(offsetof(USlashedOutOfBearTrapInteraction, _overridableInteractions) == 0x000778, "Member 'USlashedOutOfBearTrapInteraction::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(USlashedOutOfBearTrapInteraction, _updateMontage) == 0x000788, "Member 'USlashedOutOfBearTrapInteraction::_updateMontage' has a wrong offset!");

// Class TheTrapper.SurvivorBearTrapAnimInstance
// 0x0010 (0x05F0 - 0x05E0)
class USurvivorBearTrapAnimInstance final : public UBaseSurvivorAnimInstance
{
public:
	uint8                                         Pad_5E0[0x8];                                      // 0x05E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          _isTrapped;                                        // 0x05E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInteractionAnimation                         _interactionType;                                  // 0x05E9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SurvivorBearTrapAnimInstance">();
	}
	static class USurvivorBearTrapAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvivorBearTrapAnimInstance>();
	}
};
static_assert(alignof(USurvivorBearTrapAnimInstance) == 0x000010, "Wrong alignment on USurvivorBearTrapAnimInstance");
static_assert(sizeof(USurvivorBearTrapAnimInstance) == 0x0005F0, "Wrong size on USurvivorBearTrapAnimInstance");
static_assert(offsetof(USurvivorBearTrapAnimInstance, _isTrapped) == 0x0005E8, "Member 'USurvivorBearTrapAnimInstance::_isTrapped' has a wrong offset!");
static_assert(offsetof(USurvivorBearTrapAnimInstance, _interactionType) == 0x0005E9, "Member 'USurvivorBearTrapAnimInstance::_interactionType' has a wrong offset!");

// Class TheTrapper.TrapCamperInteraction
// 0x00A0 (0x0820 - 0x0780)
class UTrapCamperInteraction : public UInteractionDefinition
{
public:
	TArray<class FString>                         _nonOverridableInteractions;                       // 0x0778(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _trapAttachSocket;                                 // 0x0788(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateMontageID;                                  // 0x0794(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _updateNoScreamMontageID;                          // 0x07A0(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDBDTunableRowHandle                   _loudNoiseRangeTunable;                            // 0x07B0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDBDTunableRowHandle                   _hemorrhageEffectDurationTunable;                  // 0x07D8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _hemorrhageStatusEffect;                           // 0x0800(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _mangledStatusEffect;                              // 0x0808(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UStatusEffect>              _honingStoneWarningStatusEffect;                   // 0x0810(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_818[0x8];                                      // 0x0818(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapCamperInteraction">();
	}
	static class UTrapCamperInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapCamperInteraction>();
	}
};
static_assert(alignof(UTrapCamperInteraction) == 0x000010, "Wrong alignment on UTrapCamperInteraction");
static_assert(sizeof(UTrapCamperInteraction) == 0x000820, "Wrong size on UTrapCamperInteraction");
static_assert(offsetof(UTrapCamperInteraction, _nonOverridableInteractions) == 0x000778, "Member 'UTrapCamperInteraction::_nonOverridableInteractions' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _trapAttachSocket) == 0x000788, "Member 'UTrapCamperInteraction::_trapAttachSocket' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _updateMontageID) == 0x000794, "Member 'UTrapCamperInteraction::_updateMontageID' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _updateNoScreamMontageID) == 0x0007A0, "Member 'UTrapCamperInteraction::_updateNoScreamMontageID' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _loudNoiseRangeTunable) == 0x0007B0, "Member 'UTrapCamperInteraction::_loudNoiseRangeTunable' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _hemorrhageEffectDurationTunable) == 0x0007D8, "Member 'UTrapCamperInteraction::_hemorrhageEffectDurationTunable' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _hemorrhageStatusEffect) == 0x000800, "Member 'UTrapCamperInteraction::_hemorrhageStatusEffect' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _mangledStatusEffect) == 0x000808, "Member 'UTrapCamperInteraction::_mangledStatusEffect' has a wrong offset!");
static_assert(offsetof(UTrapCamperInteraction, _honingStoneWarningStatusEffect) == 0x000810, "Member 'UTrapCamperInteraction::_honingStoneWarningStatusEffect' has a wrong offset!");

// Class TheTrapper.TrapKillerInteraction
// 0x00A0 (0x0820 - 0x0780)
class UTrapKillerInteraction : public UInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x0778(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               _caughtFootRotationOffset;                         // 0x0788(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _openNotifyID;                                     // 0x07A0(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _footSocketName;                                   // 0x07AC(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7B8[0x68];                                     // 0x07B8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapKillerInteraction">();
	}
	static class UTrapKillerInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapKillerInteraction>();
	}
};
static_assert(alignof(UTrapKillerInteraction) == 0x000010, "Wrong alignment on UTrapKillerInteraction");
static_assert(sizeof(UTrapKillerInteraction) == 0x000820, "Wrong size on UTrapKillerInteraction");
static_assert(offsetof(UTrapKillerInteraction, _overridableInteractions) == 0x000778, "Member 'UTrapKillerInteraction::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _caughtFootRotationOffset) == 0x000788, "Member 'UTrapKillerInteraction::_caughtFootRotationOffset' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _openNotifyID) == 0x0007A0, "Member 'UTrapKillerInteraction::_openNotifyID' has a wrong offset!");
static_assert(offsetof(UTrapKillerInteraction, _footSocketName) == 0x0007AC, "Member 'UTrapKillerInteraction::_footSocketName' has a wrong offset!");

// Class TheTrapper.TrapperAnimInstance
// 0x0000 (0x0720 - 0x0720)
class UTrapperAnimInstance : public UKillerAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrapperAnimInstance">();
	}
	static class UTrapperAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrapperAnimInstance>();
	}
};
static_assert(alignof(UTrapperAnimInstance) == 0x000010, "Wrong alignment on UTrapperAnimInstance");
static_assert(sizeof(UTrapperAnimInstance) == 0x000720, "Wrong size on UTrapperAnimInstance");

// Class TheTrapper.Untrap
// 0x0030 (0x08F0 - 0x08C0)
class UUntrap : public UChargeableInteractionDefinition
{
public:
	TArray<class FString>                         _overridableInteractions;                          // 0x08C0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   _bearTrapUpdateMontageID;                          // 0x08D0(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   _bearTrapFinishMontageID;                          // 0x08DC(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8E8[0x8];                                      // 0x08E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ABearTrap* GetTrap() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Untrap">();
	}
	static class UUntrap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUntrap>();
	}
};
static_assert(alignof(UUntrap) == 0x000010, "Wrong alignment on UUntrap");
static_assert(sizeof(UUntrap) == 0x0008F0, "Wrong size on UUntrap");
static_assert(offsetof(UUntrap, _overridableInteractions) == 0x0008C0, "Member 'UUntrap::_overridableInteractions' has a wrong offset!");
static_assert(offsetof(UUntrap, _bearTrapUpdateMontageID) == 0x0008D0, "Member 'UUntrap::_bearTrapUpdateMontageID' has a wrong offset!");
static_assert(offsetof(UUntrap, _bearTrapFinishMontageID) == 0x0008DC, "Member 'UUntrap::_bearTrapFinishMontageID' has a wrong offset!");

}

