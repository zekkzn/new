#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDMetaGameplay

#include "Basic.hpp"

#include "DeadByDaylight_classes.hpp"


namespace SDK
{

// Class DBDMetaGameplay.DBDEmblem_KillerChaser
// 0x00B8 (0x01A8 - 0x00F0)
class UDBDEmblem_KillerChaser final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x40];                                      // 0x00F0(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _chasePointsByDurationCurve;                       // 0x0130(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_138[0x18];                                     // 0x0138(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ACamperPlayer*, float>             _hookedPlayersPenaltyDelay;                        // 0x0150(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDBDRankDesignTunables>     _rankTunablesClass;                                // 0x01A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnChaseStart(class ADBDPlayer* ChasedPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_KillerChaser">();
	}
	static class UDBDEmblem_KillerChaser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_KillerChaser>();
	}
};
static_assert(alignof(UDBDEmblem_KillerChaser) == 0x000008, "Wrong alignment on UDBDEmblem_KillerChaser");
static_assert(sizeof(UDBDEmblem_KillerChaser) == 0x0001A8, "Wrong size on UDBDEmblem_KillerChaser");
static_assert(offsetof(UDBDEmblem_KillerChaser, _chasePointsByDurationCurve) == 0x000130, "Member 'UDBDEmblem_KillerChaser::_chasePointsByDurationCurve' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_KillerChaser, _hookedPlayersPenaltyDelay) == 0x000150, "Member 'UDBDEmblem_KillerChaser::_hookedPlayersPenaltyDelay' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_KillerChaser, _rankTunablesClass) == 0x0001A0, "Member 'UDBDEmblem_KillerChaser::_rankTunablesClass' has a wrong offset!");

// Class DBDMetaGameplay.DBDEmblem_KillerDevout
// 0x0038 (0x0128 - 0x00F0)
class UDBDEmblem_KillerDevout final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x20];                                      // 0x00F0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACamperPlayer*>                  _playersToHook;                                    // 0x0110(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_KillerDevout">();
	}
	static class UDBDEmblem_KillerDevout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_KillerDevout>();
	}
};
static_assert(alignof(UDBDEmblem_KillerDevout) == 0x000008, "Wrong alignment on UDBDEmblem_KillerDevout");
static_assert(sizeof(UDBDEmblem_KillerDevout) == 0x000128, "Wrong size on UDBDEmblem_KillerDevout");
static_assert(offsetof(UDBDEmblem_KillerDevout, _playersToHook) == 0x000110, "Member 'UDBDEmblem_KillerDevout::_playersToHook' has a wrong offset!");

// Class DBDMetaGameplay.DBDEmblem_KillerGatekeeper
// 0x0038 (0x0128 - 0x00F0)
class UDBDEmblem_KillerGatekeeper final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x38];                                      // 0x00F0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_KillerGatekeeper">();
	}
	static class UDBDEmblem_KillerGatekeeper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_KillerGatekeeper>();
	}
};
static_assert(alignof(UDBDEmblem_KillerGatekeeper) == 0x000008, "Wrong alignment on UDBDEmblem_KillerGatekeeper");
static_assert(sizeof(UDBDEmblem_KillerGatekeeper) == 0x000128, "Wrong size on UDBDEmblem_KillerGatekeeper");

// Class DBDMetaGameplay.DBDEmblem_KillerMalicious
// 0x0068 (0x0158 - 0x00F0)
class UDBDEmblem_KillerMalicious final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ACamperPlayer*, int32>             _remainingSurvivorHookStates;                      // 0x0100(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_150[0x8];                                      // 0x0150(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLevelReadyToPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_KillerMalicious">();
	}
	static class UDBDEmblem_KillerMalicious* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_KillerMalicious>();
	}
};
static_assert(alignof(UDBDEmblem_KillerMalicious) == 0x000008, "Wrong alignment on UDBDEmblem_KillerMalicious");
static_assert(sizeof(UDBDEmblem_KillerMalicious) == 0x000158, "Wrong size on UDBDEmblem_KillerMalicious");
static_assert(offsetof(UDBDEmblem_KillerMalicious, _remainingSurvivorHookStates) == 0x000100, "Member 'UDBDEmblem_KillerMalicious::_remainingSurvivorHookStates' has a wrong offset!");

// Class DBDMetaGameplay.DBDEmblem_SurvivorBenevolent
// 0x0060 (0x0150 - 0x00F0)
class UDBDEmblem_SurvivorBenevolent final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x60];                                      // 0x00F0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_SurvivorBenevolent">();
	}
	static class UDBDEmblem_SurvivorBenevolent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_SurvivorBenevolent>();
	}
};
static_assert(alignof(UDBDEmblem_SurvivorBenevolent) == 0x000008, "Wrong alignment on UDBDEmblem_SurvivorBenevolent");
static_assert(sizeof(UDBDEmblem_SurvivorBenevolent) == 0x000150, "Wrong size on UDBDEmblem_SurvivorBenevolent");

// Class DBDMetaGameplay.DBDEmblem_SurvivorEvader
// 0x0078 (0x0168 - 0x00F0)
class UDBDEmblem_SurvivorEvader final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _killerDistanceStealthPointCurve;                  // 0x0140(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _killerDistanceStealthPointCurveChasing;           // 0x0148(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _chaseDurationPointCurve;                          // 0x0150(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            _ZAxisDistanceScalingCurve;                        // 0x0158(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UDBDRankDesignTunables>     _rankTunablesClass;                                // 0x0160(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnChaseStartEvent(class ADBDPlayer* ChasedPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_SurvivorEvader">();
	}
	static class UDBDEmblem_SurvivorEvader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_SurvivorEvader>();
	}
};
static_assert(alignof(UDBDEmblem_SurvivorEvader) == 0x000008, "Wrong alignment on UDBDEmblem_SurvivorEvader");
static_assert(sizeof(UDBDEmblem_SurvivorEvader) == 0x000168, "Wrong size on UDBDEmblem_SurvivorEvader");
static_assert(offsetof(UDBDEmblem_SurvivorEvader, _killerDistanceStealthPointCurve) == 0x000140, "Member 'UDBDEmblem_SurvivorEvader::_killerDistanceStealthPointCurve' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_SurvivorEvader, _killerDistanceStealthPointCurveChasing) == 0x000148, "Member 'UDBDEmblem_SurvivorEvader::_killerDistanceStealthPointCurveChasing' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_SurvivorEvader, _chaseDurationPointCurve) == 0x000150, "Member 'UDBDEmblem_SurvivorEvader::_chaseDurationPointCurve' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_SurvivorEvader, _ZAxisDistanceScalingCurve) == 0x000158, "Member 'UDBDEmblem_SurvivorEvader::_ZAxisDistanceScalingCurve' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_SurvivorEvader, _rankTunablesClass) == 0x000160, "Member 'UDBDEmblem_SurvivorEvader::_rankTunablesClass' has a wrong offset!");

// Class DBDMetaGameplay.DBDEmblem_SurvivorLightbringer
// 0x0088 (0x0178 - 0x00F0)
class UDBDEmblem_SurvivorLightbringer final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x88];                                      // 0x00F0(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_SurvivorLightbringer">();
	}
	static class UDBDEmblem_SurvivorLightbringer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_SurvivorLightbringer>();
	}
};
static_assert(alignof(UDBDEmblem_SurvivorLightbringer) == 0x000008, "Wrong alignment on UDBDEmblem_SurvivorLightbringer");
static_assert(sizeof(UDBDEmblem_SurvivorLightbringer) == 0x000178, "Wrong size on UDBDEmblem_SurvivorLightbringer");

// Class DBDMetaGameplay.DBDEmblem_SurvivorUnbroken
// 0x0030 (0x0120 - 0x00F0)
class UDBDEmblem_SurvivorUnbroken final : public UDBDEmblem
{
public:
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            _pointsForTimeAlive;                               // 0x0100(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDBDRankDesignTunables>     _rankTunablesClass;                                // 0x0118(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnIntroCompleted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DBDEmblem_SurvivorUnbroken">();
	}
	static class UDBDEmblem_SurvivorUnbroken* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBDEmblem_SurvivorUnbroken>();
	}
};
static_assert(alignof(UDBDEmblem_SurvivorUnbroken) == 0x000008, "Wrong alignment on UDBDEmblem_SurvivorUnbroken");
static_assert(sizeof(UDBDEmblem_SurvivorUnbroken) == 0x000120, "Wrong size on UDBDEmblem_SurvivorUnbroken");
static_assert(offsetof(UDBDEmblem_SurvivorUnbroken, _pointsForTimeAlive) == 0x000100, "Member 'UDBDEmblem_SurvivorUnbroken::_pointsForTimeAlive' has a wrong offset!");
static_assert(offsetof(UDBDEmblem_SurvivorUnbroken, _rankTunablesClass) == 0x000118, "Member 'UDBDEmblem_SurvivorUnbroken::_rankTunablesClass' has a wrong offset!");

}

