#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreEquippedPower

#include "Basic.hpp"

#include "WBP_CoreEquippedPower_classes.hpp"
#include "WBP_CoreEquippedPower_parameters.hpp"


namespace SDK
{

// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.UpdateControlMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EControlMode                            ControlMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreEquippedPower_C::UpdateControlMode(EControlMode ControlMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "UpdateControlMode");

	Params::WBP_CoreEquippedPower_C_UpdateControlMode Parms{};

	Parms.ControlMode = ControlMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPowerBundleViewData             PowerBundleData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CoreEquippedPower_C::SetData(const struct FPowerBundleViewData& PowerBundleData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "SetData");

	Params::WBP_CoreEquippedPower_C_SetData Parms{};

	Parms.PowerBundleData = std::move(PowerBundleData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetCarryingVisualFeedback
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsCarrying                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreEquippedPower_C::SetCarryingVisualFeedback(bool Param_IsCarrying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "SetCarryingVisualFeedback");

	Params::WBP_CoreEquippedPower_C_SetCarryingVisualFeedback Parms{};

	Parms.Param_IsCarrying = Param_IsCarrying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetCarryingMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsCarrying                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPowerViewData                   CarryingViewData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CoreEquippedPower_C::SetCarryingMode(const bool Param_IsCarrying, const struct FPowerViewData& CarryingViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "SetCarryingMode");

	Params::WBP_CoreEquippedPower_C_SetCarryingMode Parms{};

	Parms.Param_IsCarrying = Param_IsCarrying;
	Parms.CarryingViewData = std::move(CarryingViewData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.SetActiveState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreEquippedPower_C::SetActiveState(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "SetActiveState");

	Params::WBP_CoreEquippedPower_C_SetActiveState Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.OnControlModeChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EControlMode                            ControlMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreEquippedPower_C::OnControlModeChangedBP(EControlMode ControlMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "OnControlModeChangedBP");

	Params::WBP_CoreEquippedPower_C_OnControlModeChangedBP Parms{};

	Parms.ControlMode = ControlMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.ExecuteUbergraph_WBP_CoreEquippedPower
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CoreEquippedPower_C::ExecuteUbergraph_WBP_CoreEquippedPower(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "ExecuteUbergraph_WBP_CoreEquippedPower");

	Params::WBP_CoreEquippedPower_C_ExecuteUbergraph_WBP_CoreEquippedPower Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_CoreEquippedPower_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CoreEquippedPower.WBP_CoreEquippedPower_C.ClearData
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CoreEquippedPower_C::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CoreEquippedPower_C", "ClearData");

	UObject::ProcessEvent(Func, nullptr);
}

}

