#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreCharacterReward

#include "Basic.hpp"

#include "DBDSharedTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreCharacterReward.WBP_CoreCharacterReward_C.ExecuteUbergraph_WBP_CoreCharacterReward
// 0x0118 (0x0118 - 0x0000)
struct WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterRewardViewData               K2Node_Event_characterRewardViewData;              // 0x0008(0x0110)(ConstParm)
};
static_assert(alignof(WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward) == 0x000008, "Wrong alignment on WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward");
static_assert(sizeof(WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward) == 0x000118, "Wrong size on WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward");
static_assert(offsetof(WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward, EntryPoint) == 0x000000, "Member 'WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward, K2Node_Event_characterRewardViewData) == 0x000008, "Member 'WBP_CoreCharacterReward_C_ExecuteUbergraph_WBP_CoreCharacterReward::K2Node_Event_characterRewardViewData' has a wrong offset!");

// Function WBP_CoreCharacterReward.WBP_CoreCharacterReward_C.SetCharacterRewardData
// 0x0110 (0x0110 - 0x0000)
struct WBP_CoreCharacterReward_C_SetCharacterRewardData final
{
public:
	struct FCharacterRewardViewData               CharacterRewardViewData;                           // 0x0000(0x0110)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreCharacterReward_C_SetCharacterRewardData) == 0x000008, "Wrong alignment on WBP_CoreCharacterReward_C_SetCharacterRewardData");
static_assert(sizeof(WBP_CoreCharacterReward_C_SetCharacterRewardData) == 0x000110, "Wrong size on WBP_CoreCharacterReward_C_SetCharacterRewardData");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetCharacterRewardData, CharacterRewardViewData) == 0x000000, "Member 'WBP_CoreCharacterReward_C_SetCharacterRewardData::CharacterRewardViewData' has a wrong offset!");

// Function WBP_CoreCharacterReward.WBP_CoreCharacterReward_C.SetKillSwitchOverlay
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreCharacterReward_C_SetKillSwitchOverlay final
{
public:
	bool                                          Param_IsEnabled;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreCharacterReward_C_SetKillSwitchOverlay) == 0x000001, "Wrong alignment on WBP_CoreCharacterReward_C_SetKillSwitchOverlay");
static_assert(sizeof(WBP_CoreCharacterReward_C_SetKillSwitchOverlay) == 0x000001, "Wrong size on WBP_CoreCharacterReward_C_SetKillSwitchOverlay");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetKillSwitchOverlay, Param_IsEnabled) == 0x000000, "Member 'WBP_CoreCharacterReward_C_SetKillSwitchOverlay::Param_IsEnabled' has a wrong offset!");

// Function WBP_CoreCharacterReward.WBP_CoreCharacterReward_C.SetLegacyPrestigePortrait
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait final
{
public:
	bool                                          IsLegacyPrestigePortraitEnabled;                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait) == 0x000001, "Wrong alignment on WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait");
static_assert(sizeof(WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait) == 0x000001, "Wrong size on WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait, IsLegacyPrestigePortraitEnabled) == 0x000000, "Member 'WBP_CoreCharacterReward_C_SetLegacyPrestigePortrait::IsLegacyPrestigePortraitEnabled' has a wrong offset!");

// Function WBP_CoreCharacterReward.WBP_CoreCharacterReward_C.SetRole
// 0x0014 (0x0014 - 0x0000)
struct WBP_CoreCharacterReward_C_SetRole final
{
public:
	EPlayerRole                                   PlayerRole;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreCharacterReward_C_SetRole) == 0x000004, "Wrong alignment on WBP_CoreCharacterReward_C_SetRole");
static_assert(sizeof(WBP_CoreCharacterReward_C_SetRole) == 0x000014, "Wrong size on WBP_CoreCharacterReward_C_SetRole");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetRole, PlayerRole) == 0x000000, "Member 'WBP_CoreCharacterReward_C_SetRole::PlayerRole' has a wrong offset!");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetRole, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_CoreCharacterReward_C_SetRole::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreCharacterReward_C_SetRole, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_CoreCharacterReward_C_SetRole::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

}

