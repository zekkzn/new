#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheExecutioner

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TheExecutioner_structs.hpp"


namespace SDK::Params
{

// Function TheExecutioner.ActivateTormentModeInteraction.SetTormentMode
// 0x0008 (0x0008 - 0x0000)
struct ActivateTormentModeInteraction_SetTormentMode final
{
public:
	class ATormentMode*                           TormentModeComponent;                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActivateTormentModeInteraction_SetTormentMode) == 0x000008, "Wrong alignment on ActivateTormentModeInteraction_SetTormentMode");
static_assert(sizeof(ActivateTormentModeInteraction_SetTormentMode) == 0x000008, "Wrong size on ActivateTormentModeInteraction_SetTormentMode");
static_assert(offsetof(ActivateTormentModeInteraction_SetTormentMode, TormentModeComponent) == 0x000000, "Member 'ActivateTormentModeInteraction_SetTormentMode::TormentModeComponent' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.Authority_OnDrainStageChanged
// 0x0010 (0x0010 - 0x0000)
struct AgonyComponent_Authority_OnDrainStageChanged final
{
public:
	int32                                         DrainStage;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_Authority_OnDrainStageChanged) == 0x000008, "Wrong alignment on AgonyComponent_Authority_OnDrainStageChanged");
static_assert(sizeof(AgonyComponent_Authority_OnDrainStageChanged) == 0x000010, "Wrong size on AgonyComponent_Authority_OnDrainStageChanged");
static_assert(offsetof(AgonyComponent_Authority_OnDrainStageChanged, DrainStage) == 0x000000, "Member 'AgonyComponent_Authority_OnDrainStageChanged::DrainStage' has a wrong offset!");
static_assert(offsetof(AgonyComponent_Authority_OnDrainStageChanged, Target) == 0x000008, "Member 'AgonyComponent_Authority_OnDrainStageChanged::Target' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.OnAgonyChanged_Cosmetic
// 0x0001 (0x0001 - 0x0000)
struct AgonyComponent_OnAgonyChanged_Cosmetic final
{
public:
	bool                                          IsInAgony;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_OnAgonyChanged_Cosmetic) == 0x000001, "Wrong alignment on AgonyComponent_OnAgonyChanged_Cosmetic");
static_assert(sizeof(AgonyComponent_OnAgonyChanged_Cosmetic) == 0x000001, "Wrong size on AgonyComponent_OnAgonyChanged_Cosmetic");
static_assert(offsetof(AgonyComponent_OnAgonyChanged_Cosmetic, IsInAgony) == 0x000000, "Member 'AgonyComponent_OnAgonyChanged_Cosmetic::IsInAgony' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.OnHideBarbWireFXOnGameEvent
// 0x0040 (0x0040 - 0x0000)
struct AgonyComponent_OnHideBarbWireFXOnGameEvent final
{
public:
	struct FGameplayTag                           GameEventType;                                     // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_OnHideBarbWireFXOnGameEvent) == 0x000008, "Wrong alignment on AgonyComponent_OnHideBarbWireFXOnGameEvent");
static_assert(sizeof(AgonyComponent_OnHideBarbWireFXOnGameEvent) == 0x000040, "Wrong size on AgonyComponent_OnHideBarbWireFXOnGameEvent");
static_assert(offsetof(AgonyComponent_OnHideBarbWireFXOnGameEvent, GameEventType) == 0x000000, "Member 'AgonyComponent_OnHideBarbWireFXOnGameEvent::GameEventType' has a wrong offset!");
static_assert(offsetof(AgonyComponent_OnHideBarbWireFXOnGameEvent, GameEventData) == 0x000010, "Member 'AgonyComponent_OnHideBarbWireFXOnGameEvent::GameEventData' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.OnLocallyObservedChanged
// 0x0001 (0x0001 - 0x0000)
struct AgonyComponent_OnLocallyObservedChanged final
{
public:
	bool                                          IsLocallyObserved;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_OnLocallyObservedChanged) == 0x000001, "Wrong alignment on AgonyComponent_OnLocallyObservedChanged");
static_assert(sizeof(AgonyComponent_OnLocallyObservedChanged) == 0x000001, "Wrong size on AgonyComponent_OnLocallyObservedChanged");
static_assert(offsetof(AgonyComponent_OnLocallyObservedChanged, IsLocallyObserved) == 0x000000, "Member 'AgonyComponent_OnLocallyObservedChanged::IsLocallyObserved' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.OnShowBarbWireFXOnGameEvent
// 0x0040 (0x0040 - 0x0000)
struct AgonyComponent_OnShowBarbWireFXOnGameEvent final
{
public:
	struct FGameplayTag                           GameEventType;                                     // 0x0000(0x000C)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameEventData                         GameEventData;                                     // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_OnShowBarbWireFXOnGameEvent) == 0x000008, "Wrong alignment on AgonyComponent_OnShowBarbWireFXOnGameEvent");
static_assert(sizeof(AgonyComponent_OnShowBarbWireFXOnGameEvent) == 0x000040, "Wrong size on AgonyComponent_OnShowBarbWireFXOnGameEvent");
static_assert(offsetof(AgonyComponent_OnShowBarbWireFXOnGameEvent, GameEventType) == 0x000000, "Member 'AgonyComponent_OnShowBarbWireFXOnGameEvent::GameEventType' has a wrong offset!");
static_assert(offsetof(AgonyComponent_OnShowBarbWireFXOnGameEvent, GameEventData) == 0x000010, "Member 'AgonyComponent_OnShowBarbWireFXOnGameEvent::GameEventData' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.IsAgonyMoriable
// 0x0001 (0x0001 - 0x0000)
struct AgonyComponent_IsAgonyMoriable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_IsAgonyMoriable) == 0x000001, "Wrong alignment on AgonyComponent_IsAgonyMoriable");
static_assert(sizeof(AgonyComponent_IsAgonyMoriable) == 0x000001, "Wrong size on AgonyComponent_IsAgonyMoriable");
static_assert(offsetof(AgonyComponent_IsAgonyMoriable, ReturnValue) == 0x000000, "Member 'AgonyComponent_IsAgonyMoriable::ReturnValue' has a wrong offset!");

// Function TheExecutioner.AgonyComponent.IsInAgony
// 0x0001 (0x0001 - 0x0000)
struct AgonyComponent_IsInAgony final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AgonyComponent_IsInAgony) == 0x000001, "Wrong alignment on AgonyComponent_IsInAgony");
static_assert(sizeof(AgonyComponent_IsInAgony) == 0x000001, "Wrong size on AgonyComponent_IsInAgony");
static_assert(offsetof(AgonyComponent_IsInAgony, ReturnValue) == 0x000000, "Member 'AgonyComponent_IsInAgony::ReturnValue' has a wrong offset!");

// Function TheExecutioner.ExecutionerTormentAttack.Multicast_TormentHitTarget
// 0x0010 (0x0010 - 0x0000)
struct ExecutionerTormentAttack_Multicast_TormentHitTarget final
{
public:
	class ADBDPlayer*                             Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HitCosmeticOnly;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ExecutionerTormentAttack_Multicast_TormentHitTarget) == 0x000008, "Wrong alignment on ExecutionerTormentAttack_Multicast_TormentHitTarget");
static_assert(sizeof(ExecutionerTormentAttack_Multicast_TormentHitTarget) == 0x000010, "Wrong size on ExecutionerTormentAttack_Multicast_TormentHitTarget");
static_assert(offsetof(ExecutionerTormentAttack_Multicast_TormentHitTarget, Target) == 0x000000, "Member 'ExecutionerTormentAttack_Multicast_TormentHitTarget::Target' has a wrong offset!");
static_assert(offsetof(ExecutionerTormentAttack_Multicast_TormentHitTarget, HitCosmeticOnly) == 0x000008, "Member 'ExecutionerTormentAttack_Multicast_TormentHitTarget::HitCosmeticOnly' has a wrong offset!");

// Function TheExecutioner.ExecutionerTormentAttack.Server_TormentTryHitTargetNotInCoolDown
// 0x0008 (0x0008 - 0x0000)
struct ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown final
{
public:
	class ADBDPlayer*                             Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown) == 0x000008, "Wrong alignment on ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown");
static_assert(sizeof(ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown) == 0x000008, "Wrong size on ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown");
static_assert(offsetof(ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown, Target) == 0x000000, "Member 'ExecutionerTormentAttack_Server_TormentTryHitTargetNotInCoolDown::Target' has a wrong offset!");

// Function TheExecutioner.TrailControllerBase.ActivateCosmetic
// 0x0001 (0x0001 - 0x0000)
struct TrailControllerBase_ActivateCosmetic final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrailControllerBase_ActivateCosmetic) == 0x000001, "Wrong alignment on TrailControllerBase_ActivateCosmetic");
static_assert(sizeof(TrailControllerBase_ActivateCosmetic) == 0x000001, "Wrong size on TrailControllerBase_ActivateCosmetic");
static_assert(offsetof(TrailControllerBase_ActivateCosmetic, Value) == 0x000000, "Member 'TrailControllerBase_ActivateCosmetic::Value' has a wrong offset!");

// Function TheExecutioner.TrailControllerBase.OnAcquireChanged
// 0x0001 (0x0001 - 0x0000)
struct TrailControllerBase_OnAcquireChanged final
{
public:
	bool                                          Acquired;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrailControllerBase_OnAcquireChanged) == 0x000001, "Wrong alignment on TrailControllerBase_OnAcquireChanged");
static_assert(sizeof(TrailControllerBase_OnAcquireChanged) == 0x000001, "Wrong size on TrailControllerBase_OnAcquireChanged");
static_assert(offsetof(TrailControllerBase_OnAcquireChanged, Acquired) == 0x000000, "Member 'TrailControllerBase_OnAcquireChanged::Acquired' has a wrong offset!");

// Function TheExecutioner.TrailControllerBase.OnTrailPointDeath
// 0x0008 (0x0008 - 0x0000)
struct TrailControllerBase_OnTrailPointDeath final
{
public:
	class ABaseTormentTrailPoint*                 baseTrailPoint;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrailControllerBase_OnTrailPointDeath) == 0x000008, "Wrong alignment on TrailControllerBase_OnTrailPointDeath");
static_assert(sizeof(TrailControllerBase_OnTrailPointDeath) == 0x000008, "Wrong size on TrailControllerBase_OnTrailPointDeath");
static_assert(offsetof(TrailControllerBase_OnTrailPointDeath, baseTrailPoint) == 0x000000, "Member 'TrailControllerBase_OnTrailPointDeath::baseTrailPoint' has a wrong offset!");

// Function TheExecutioner.MobileTormentTrailRenderer.Multicast_AddInstance
// 0x0010 (0x0010 - 0x0000)
struct MobileTormentTrailRenderer_Multicast_AddInstance final
{
public:
	class ABaseTormentTrailPoint*                 TrailPoint;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAttackTrailPoint;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MobileTormentTrailRenderer_Multicast_AddInstance) == 0x000008, "Wrong alignment on MobileTormentTrailRenderer_Multicast_AddInstance");
static_assert(sizeof(MobileTormentTrailRenderer_Multicast_AddInstance) == 0x000010, "Wrong size on MobileTormentTrailRenderer_Multicast_AddInstance");
static_assert(offsetof(MobileTormentTrailRenderer_Multicast_AddInstance, TrailPoint) == 0x000000, "Member 'MobileTormentTrailRenderer_Multicast_AddInstance::TrailPoint' has a wrong offset!");
static_assert(offsetof(MobileTormentTrailRenderer_Multicast_AddInstance, IsAttackTrailPoint) == 0x000008, "Member 'MobileTormentTrailRenderer_Multicast_AddInstance::IsAttackTrailPoint' has a wrong offset!");

// Function TheExecutioner.MobileTormentTrailRenderer.Multicast_RemoveInstance
// 0x0008 (0x0008 - 0x0000)
struct MobileTormentTrailRenderer_Multicast_RemoveInstance final
{
public:
	class ABaseTormentTrailPoint*                 TrailPoint;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MobileTormentTrailRenderer_Multicast_RemoveInstance) == 0x000008, "Wrong alignment on MobileTormentTrailRenderer_Multicast_RemoveInstance");
static_assert(sizeof(MobileTormentTrailRenderer_Multicast_RemoveInstance) == 0x000008, "Wrong size on MobileTormentTrailRenderer_Multicast_RemoveInstance");
static_assert(offsetof(MobileTormentTrailRenderer_Multicast_RemoveInstance, TrailPoint) == 0x000000, "Member 'MobileTormentTrailRenderer_Multicast_RemoveInstance::TrailPoint' has a wrong offset!");

// Function TheExecutioner.TheExecutionerCheatComponent.DBD_SetAgonyOnLocallyControlledPlayer
// 0x0018 (0x0018 - 0x0000)
struct TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalPlayerId;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer) == 0x000008, "Wrong alignment on TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer");
static_assert(sizeof(TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer) == 0x000018, "Wrong size on TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer");
static_assert(offsetof(TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer, Value) == 0x000000, "Member 'TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer::Value' has a wrong offset!");
static_assert(offsetof(TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer, LocalPlayerId) == 0x000008, "Member 'TheExecutionerCheatComponent_DBD_SetAgonyOnLocallyControlledPlayer::LocalPlayerId' has a wrong offset!");

// Function TheExecutioner.TheExecutionerCheatComponent.DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer
// 0x0018 (0x0018 - 0x0000)
struct TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalPlayerId;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer) == 0x000008, "Wrong alignment on TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer");
static_assert(sizeof(TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer) == 0x000018, "Wrong size on TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer");
static_assert(offsetof(TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer, Value) == 0x000000, "Member 'TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer::Value' has a wrong offset!");
static_assert(offsetof(TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer, LocalPlayerId) == 0x000008, "Member 'TheExecutionerCheatComponent_DBD_SetCanBeAgonyMoriedOnLocallyControlledPlayer::LocalPlayerId' has a wrong offset!");

// Function TheExecutioner.TormentAttackTrailController.Multicast_StartAttackTrail
// 0x0038 (0x0038 - 0x0000)
struct TormentAttackTrailController_Multicast_StartAttackTrail final
{
public:
	float                                         ServerTimeSpawn;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize10                  Location;                                          // 0x0008(0x0018)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentAttackTrailController_Multicast_StartAttackTrail) == 0x000008, "Wrong alignment on TormentAttackTrailController_Multicast_StartAttackTrail");
static_assert(sizeof(TormentAttackTrailController_Multicast_StartAttackTrail) == 0x000038, "Wrong size on TormentAttackTrailController_Multicast_StartAttackTrail");
static_assert(offsetof(TormentAttackTrailController_Multicast_StartAttackTrail, ServerTimeSpawn) == 0x000000, "Member 'TormentAttackTrailController_Multicast_StartAttackTrail::ServerTimeSpawn' has a wrong offset!");
static_assert(offsetof(TormentAttackTrailController_Multicast_StartAttackTrail, Location) == 0x000008, "Member 'TormentAttackTrailController_Multicast_StartAttackTrail::Location' has a wrong offset!");
static_assert(offsetof(TormentAttackTrailController_Multicast_StartAttackTrail, Rotation) == 0x000020, "Member 'TormentAttackTrailController_Multicast_StartAttackTrail::Rotation' has a wrong offset!");

// Function TheExecutioner.TormentAttackTrailController.OnTrailPointRemovedCosmetic
// 0x0004 (0x0004 - 0x0000)
struct TormentAttackTrailController_OnTrailPointRemovedCosmetic final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentAttackTrailController_OnTrailPointRemovedCosmetic) == 0x000004, "Wrong alignment on TormentAttackTrailController_OnTrailPointRemovedCosmetic");
static_assert(sizeof(TormentAttackTrailController_OnTrailPointRemovedCosmetic) == 0x000004, "Wrong size on TormentAttackTrailController_OnTrailPointRemovedCosmetic");
static_assert(offsetof(TormentAttackTrailController_OnTrailPointRemovedCosmetic, Param_Index) == 0x000000, "Member 'TormentAttackTrailController_OnTrailPointRemovedCosmetic::Param_Index' has a wrong offset!");

// Function TheExecutioner.TormentAttackTrailPoint.DisplayTrailSplineMesh
// 0x0010 (0x0010 - 0x0000)
struct TormentAttackTrailPoint_DisplayTrailSplineMesh final
{
public:
	const class USplineComponent*                 Splinemesh;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IndexInTrail;                                      // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TormentAttackTrailPoint_DisplayTrailSplineMesh) == 0x000008, "Wrong alignment on TormentAttackTrailPoint_DisplayTrailSplineMesh");
static_assert(sizeof(TormentAttackTrailPoint_DisplayTrailSplineMesh) == 0x000010, "Wrong size on TormentAttackTrailPoint_DisplayTrailSplineMesh");
static_assert(offsetof(TormentAttackTrailPoint_DisplayTrailSplineMesh, Splinemesh) == 0x000000, "Member 'TormentAttackTrailPoint_DisplayTrailSplineMesh::Splinemesh' has a wrong offset!");
static_assert(offsetof(TormentAttackTrailPoint_DisplayTrailSplineMesh, IndexInTrail) == 0x000008, "Member 'TormentAttackTrailPoint_DisplayTrailSplineMesh::IndexInTrail' has a wrong offset!");

// Function TheExecutioner.TormentMode.IsInTormentMode
// 0x0001 (0x0001 - 0x0000)
struct TormentMode_IsInTormentMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentMode_IsInTormentMode) == 0x000001, "Wrong alignment on TormentMode_IsInTormentMode");
static_assert(sizeof(TormentMode_IsInTormentMode) == 0x000001, "Wrong size on TormentMode_IsInTormentMode");
static_assert(offsetof(TormentMode_IsInTormentMode, ReturnValue) == 0x000000, "Member 'TormentMode_IsInTormentMode::ReturnValue' has a wrong offset!");

// Function TheExecutioner.Tormentor.GetTormentTrailAttackSpawnPoint
// 0x0018 (0x0018 - 0x0000)
struct Tormentor_GetTormentTrailAttackSpawnPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Tormentor_GetTormentTrailAttackSpawnPoint) == 0x000008, "Wrong alignment on Tormentor_GetTormentTrailAttackSpawnPoint");
static_assert(sizeof(Tormentor_GetTormentTrailAttackSpawnPoint) == 0x000018, "Wrong size on Tormentor_GetTormentTrailAttackSpawnPoint");
static_assert(offsetof(Tormentor_GetTormentTrailAttackSpawnPoint, ReturnValue) == 0x000000, "Member 'Tormentor_GetTormentTrailAttackSpawnPoint::ReturnValue' has a wrong offset!");

// Function TheExecutioner.Tormentor.GetTormentTrailSpawnPoint
// 0x0018 (0x0018 - 0x0000)
struct Tormentor_GetTormentTrailSpawnPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Tormentor_GetTormentTrailSpawnPoint) == 0x000008, "Wrong alignment on Tormentor_GetTormentTrailSpawnPoint");
static_assert(sizeof(Tormentor_GetTormentTrailSpawnPoint) == 0x000018, "Wrong size on Tormentor_GetTormentTrailSpawnPoint");
static_assert(offsetof(Tormentor_GetTormentTrailSpawnPoint, ReturnValue) == 0x000000, "Member 'Tormentor_GetTormentTrailSpawnPoint::ReturnValue' has a wrong offset!");

// Function TheExecutioner.TormentTrailController.Server_SpawnTormentTrailPoint
// 0x0038 (0x0038 - 0x0000)
struct TormentTrailController_Server_SpawnTormentTrailPoint final
{
public:
	class ATormentTrailPoint*                     TrailPoint;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                  Location;                                          // 0x0008(0x0018)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailController_Server_SpawnTormentTrailPoint) == 0x000008, "Wrong alignment on TormentTrailController_Server_SpawnTormentTrailPoint");
static_assert(sizeof(TormentTrailController_Server_SpawnTormentTrailPoint) == 0x000038, "Wrong size on TormentTrailController_Server_SpawnTormentTrailPoint");
static_assert(offsetof(TormentTrailController_Server_SpawnTormentTrailPoint, TrailPoint) == 0x000000, "Member 'TormentTrailController_Server_SpawnTormentTrailPoint::TrailPoint' has a wrong offset!");
static_assert(offsetof(TormentTrailController_Server_SpawnTormentTrailPoint, Location) == 0x000008, "Member 'TormentTrailController_Server_SpawnTormentTrailPoint::Location' has a wrong offset!");
static_assert(offsetof(TormentTrailController_Server_SpawnTormentTrailPoint, Rotation) == 0x000020, "Member 'TormentTrailController_Server_SpawnTormentTrailPoint::Rotation' has a wrong offset!");

// Function TheExecutioner.TormentTrailPoint.ActivateCosmetic
// 0x0001 (0x0001 - 0x0000)
struct TormentTrailPoint_ActivateCosmetic final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailPoint_ActivateCosmetic) == 0x000001, "Wrong alignment on TormentTrailPoint_ActivateCosmetic");
static_assert(sizeof(TormentTrailPoint_ActivateCosmetic) == 0x000001, "Wrong size on TormentTrailPoint_ActivateCosmetic");
static_assert(offsetof(TormentTrailPoint_ActivateCosmetic, Value) == 0x000000, "Member 'TormentTrailPoint_ActivateCosmetic::Value' has a wrong offset!");

// Function TheExecutioner.TormentTrailPoint.AddTrailCosmetic
// 0x0010 (0x0010 - 0x0000)
struct TormentTrailPoint_AddTrailCosmetic final
{
public:
	const class USplineComponent*                 SplineComponent;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         IndexInTrail;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TormentTrailPoint_AddTrailCosmetic) == 0x000008, "Wrong alignment on TormentTrailPoint_AddTrailCosmetic");
static_assert(sizeof(TormentTrailPoint_AddTrailCosmetic) == 0x000010, "Wrong size on TormentTrailPoint_AddTrailCosmetic");
static_assert(offsetof(TormentTrailPoint_AddTrailCosmetic, SplineComponent) == 0x000000, "Member 'TormentTrailPoint_AddTrailCosmetic::SplineComponent' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_AddTrailCosmetic, IndexInTrail) == 0x000008, "Member 'TormentTrailPoint_AddTrailCosmetic::IndexInTrail' has a wrong offset!");

// Function TheExecutioner.TormentTrailPoint.OnAcquireChanged
// 0x0001 (0x0001 - 0x0000)
struct TormentTrailPoint_OnAcquireChanged final
{
public:
	bool                                          Acquired;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailPoint_OnAcquireChanged) == 0x000001, "Wrong alignment on TormentTrailPoint_OnAcquireChanged");
static_assert(sizeof(TormentTrailPoint_OnAcquireChanged) == 0x000001, "Wrong size on TormentTrailPoint_OnAcquireChanged");
static_assert(offsetof(TormentTrailPoint_OnAcquireChanged, Acquired) == 0x000000, "Member 'TormentTrailPoint_OnAcquireChanged::Acquired' has a wrong offset!");

// Function TheExecutioner.TormentTrailPoint.RefreshTrailPointCosmetic
// 0x0001 (0x0001 - 0x0000)
struct TormentTrailPoint_RefreshTrailPointCosmetic final
{
public:
	ETrailPointRefreshReason                      TrailPointRefreshReason;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailPoint_RefreshTrailPointCosmetic) == 0x000001, "Wrong alignment on TormentTrailPoint_RefreshTrailPointCosmetic");
static_assert(sizeof(TormentTrailPoint_RefreshTrailPointCosmetic) == 0x000001, "Wrong size on TormentTrailPoint_RefreshTrailPointCosmetic");
static_assert(offsetof(TormentTrailPoint_RefreshTrailPointCosmetic, TrailPointRefreshReason) == 0x000000, "Member 'TormentTrailPoint_RefreshTrailPointCosmetic::TrailPointRefreshReason' has a wrong offset!");

// Function TheExecutioner.TormentTrailPoint.GetTrailLocationAndTangeant
// 0x0070 (0x0070 - 0x0000)
struct TormentTrailPoint_GetTrailLocationAndTangeant final
{
public:
	int32                                         IndexInTrail;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USplineComponent*                 SplineComponent;                                   // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutStartLocation;                                  // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutStartTangent;                                   // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutEndLocation;                                    // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutEndTangent;                                     // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailPoint_GetTrailLocationAndTangeant) == 0x000008, "Wrong alignment on TormentTrailPoint_GetTrailLocationAndTangeant");
static_assert(sizeof(TormentTrailPoint_GetTrailLocationAndTangeant) == 0x000070, "Wrong size on TormentTrailPoint_GetTrailLocationAndTangeant");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, IndexInTrail) == 0x000000, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::IndexInTrail' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, SplineComponent) == 0x000008, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::SplineComponent' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, OutStartLocation) == 0x000010, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::OutStartLocation' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, OutStartTangent) == 0x000028, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::OutStartTangent' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, OutEndLocation) == 0x000040, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::OutEndLocation' has a wrong offset!");
static_assert(offsetof(TormentTrailPoint_GetTrailLocationAndTangeant, OutEndTangent) == 0x000058, "Member 'TormentTrailPoint_GetTrailLocationAndTangeant::OutEndTangent' has a wrong offset!");

// Function TheExecutioner.TormentTrailPointCollectionComponent.OnTrailAcquireChanged
// 0x0010 (0x0010 - 0x0000)
struct TormentTrailPointCollectionComponent_OnTrailAcquireChanged final
{
public:
	class ATormentTrailPoint*                     TrailPoint;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TormentTrailPointCollectionComponent_OnTrailAcquireChanged) == 0x000008, "Wrong alignment on TormentTrailPointCollectionComponent_OnTrailAcquireChanged");
static_assert(sizeof(TormentTrailPointCollectionComponent_OnTrailAcquireChanged) == 0x000010, "Wrong size on TormentTrailPointCollectionComponent_OnTrailAcquireChanged");
static_assert(offsetof(TormentTrailPointCollectionComponent_OnTrailAcquireChanged, TrailPoint) == 0x000000, "Member 'TormentTrailPointCollectionComponent_OnTrailAcquireChanged::TrailPoint' has a wrong offset!");
static_assert(offsetof(TormentTrailPointCollectionComponent_OnTrailAcquireChanged, Value) == 0x000008, "Member 'TormentTrailPointCollectionComponent_OnTrailAcquireChanged::Value' has a wrong offset!");

// Function TheExecutioner.TormentTrailSpawnerComponent.OnInRangeChanged
// 0x0010 (0x0010 - 0x0000)
struct TormentTrailSpawnerComponent_OnInRangeChanged final
{
public:
	bool                                          InRange;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Actor;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailSpawnerComponent_OnInRangeChanged) == 0x000008, "Wrong alignment on TormentTrailSpawnerComponent_OnInRangeChanged");
static_assert(sizeof(TormentTrailSpawnerComponent_OnInRangeChanged) == 0x000010, "Wrong size on TormentTrailSpawnerComponent_OnInRangeChanged");
static_assert(offsetof(TormentTrailSpawnerComponent_OnInRangeChanged, InRange) == 0x000000, "Member 'TormentTrailSpawnerComponent_OnInRangeChanged::InRange' has a wrong offset!");
static_assert(offsetof(TormentTrailSpawnerComponent_OnInRangeChanged, Actor) == 0x000008, "Member 'TormentTrailSpawnerComponent_OnInRangeChanged::Actor' has a wrong offset!");

// Function TheExecutioner.TormentTrailSpawnerComponent.Server_RequestMoreActorInPool
// 0x0001 (0x0001 - 0x0000)
struct TormentTrailSpawnerComponent_Server_RequestMoreActorInPool final
{
public:
	ETrailType                                    TrailType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailSpawnerComponent_Server_RequestMoreActorInPool) == 0x000001, "Wrong alignment on TormentTrailSpawnerComponent_Server_RequestMoreActorInPool");
static_assert(sizeof(TormentTrailSpawnerComponent_Server_RequestMoreActorInPool) == 0x000001, "Wrong size on TormentTrailSpawnerComponent_Server_RequestMoreActorInPool");
static_assert(offsetof(TormentTrailSpawnerComponent_Server_RequestMoreActorInPool, TrailType) == 0x000000, "Member 'TormentTrailSpawnerComponent_Server_RequestMoreActorInPool::TrailType' has a wrong offset!");

// Function TheExecutioner.TormentTrailSpawnerComponent.Server_StopTrailController
// 0x0008 (0x0008 - 0x0000)
struct TormentTrailSpawnerComponent_Server_StopTrailController final
{
public:
	class ATormentTrailController*                TrailController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailSpawnerComponent_Server_StopTrailController) == 0x000008, "Wrong alignment on TormentTrailSpawnerComponent_Server_StopTrailController");
static_assert(sizeof(TormentTrailSpawnerComponent_Server_StopTrailController) == 0x000008, "Wrong size on TormentTrailSpawnerComponent_Server_StopTrailController");
static_assert(offsetof(TormentTrailSpawnerComponent_Server_StopTrailController, TrailController) == 0x000000, "Member 'TormentTrailSpawnerComponent_Server_StopTrailController::TrailController' has a wrong offset!");

// Function TheExecutioner.TormentTrailSpawnerComponent.Sever_SpawnTrailController
// 0x0038 (0x0038 - 0x0000)
struct TormentTrailSpawnerComponent_Sever_SpawnTrailController final
{
public:
	class ATormentTrailController*                TrailController;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                  Location;                                          // 0x0008(0x0018)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(TormentTrailSpawnerComponent_Sever_SpawnTrailController) == 0x000008, "Wrong alignment on TormentTrailSpawnerComponent_Sever_SpawnTrailController");
static_assert(sizeof(TormentTrailSpawnerComponent_Sever_SpawnTrailController) == 0x000038, "Wrong size on TormentTrailSpawnerComponent_Sever_SpawnTrailController");
static_assert(offsetof(TormentTrailSpawnerComponent_Sever_SpawnTrailController, TrailController) == 0x000000, "Member 'TormentTrailSpawnerComponent_Sever_SpawnTrailController::TrailController' has a wrong offset!");
static_assert(offsetof(TormentTrailSpawnerComponent_Sever_SpawnTrailController, Location) == 0x000008, "Member 'TormentTrailSpawnerComponent_Sever_SpawnTrailController::Location' has a wrong offset!");
static_assert(offsetof(TormentTrailSpawnerComponent_Sever_SpawnTrailController, Rotation) == 0x000020, "Member 'TormentTrailSpawnerComponent_Sever_SpawnTrailController::Rotation' has a wrong offset!");

// Function TheExecutioner.TrailOfTorment.GetCooldownDurationAtLevel
// 0x0004 (0x0004 - 0x0000)
struct TrailOfTorment_GetCooldownDurationAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrailOfTorment_GetCooldownDurationAtLevel) == 0x000004, "Wrong alignment on TrailOfTorment_GetCooldownDurationAtLevel");
static_assert(sizeof(TrailOfTorment_GetCooldownDurationAtLevel) == 0x000004, "Wrong size on TrailOfTorment_GetCooldownDurationAtLevel");
static_assert(offsetof(TrailOfTorment_GetCooldownDurationAtLevel, ReturnValue) == 0x000000, "Member 'TrailOfTorment_GetCooldownDurationAtLevel::ReturnValue' has a wrong offset!");

// Function TheExecutioner.TrailOfTorment.OnRep_HighlightGenerator
// 0x0008 (0x0008 - 0x0000)
struct TrailOfTorment_OnRep_HighlightGenerator final
{
public:
	const class AGenerator*                       OldHighlightedGenerator;                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TrailOfTorment_OnRep_HighlightGenerator) == 0x000008, "Wrong alignment on TrailOfTorment_OnRep_HighlightGenerator");
static_assert(sizeof(TrailOfTorment_OnRep_HighlightGenerator) == 0x000008, "Wrong size on TrailOfTorment_OnRep_HighlightGenerator");
static_assert(offsetof(TrailOfTorment_OnRep_HighlightGenerator, OldHighlightedGenerator) == 0x000000, "Member 'TrailOfTorment_OnRep_HighlightGenerator::OldHighlightedGenerator' has a wrong offset!");

}

