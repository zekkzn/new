#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AuraReading

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "DeadByDaylight_classes.hpp"
#include "DBDSharedTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AuraReading.AuraReading_C
// 0x0010 (0x08D0 - 0x08C0)
class UAuraReading_C final : public UChargeableInteractionDefinition
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsCharged;                                         // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PostAkEventOnPlayer(class ADBDPlayer* Player, class UAkAudioEvent* AkEvent);
	void OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime);
	void OnInteractionFinished(class ADBDPlayer* Player, bool HasInteractionStarted);
	void OnInteractionEnterStart(class ADBDPlayer* Player, float ActualSnapTime);
	void OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool Complete);
	void GetIsCharged(bool* Param_IsCharged);
	void ExecuteUbergraph_AuraReading(int32 EntryPoint);

	bool IsInteractionPossibleBP(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const;
	bool IsInteractionDone(const class ADBDPlayer* Player, EInputInteractionType InteractionType) const;
	bool HasUsableAddon() const;
	class ABP_Key_C* GetKey() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AuraReading_C">();
	}
	static class UAuraReading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAuraReading_C>();
	}
};
static_assert(alignof(UAuraReading_C) == 0x000010, "Wrong alignment on UAuraReading_C");
static_assert(sizeof(UAuraReading_C) == 0x0008D0, "Wrong size on UAuraReading_C");
static_assert(offsetof(UAuraReading_C, UberGraphFrame) == 0x0008C0, "Member 'UAuraReading_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAuraReading_C, IsCharged) == 0x0008C8, "Member 'UAuraReading_C::IsCharged' has a wrong offset!");

}

