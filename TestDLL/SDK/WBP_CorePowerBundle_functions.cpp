#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CorePowerBundle

#include "Basic.hpp"

#include "WBP_CorePowerBundle_classes.hpp"
#include "WBP_CorePowerBundle_parameters.hpp"


namespace SDK
{

// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.SetActiveState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePowerBundle_C::SetActiveState(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "SetActiveState");

	Params::WBP_CorePowerBundle_C_SetActiveState Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.Set Dynamic Power Data List
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FPowerViewData>           PowerViewDataList                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UHorizontalBox*                   WidgetContainer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePowerBundle_C::Set_Dynamic_Power_Data_List(TArray<struct FPowerViewData>& PowerViewDataList, class UHorizontalBox* WidgetContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "Set Dynamic Power Data List");

	Params::WBP_CorePowerBundle_C_Set_Dynamic_Power_Data_List Parms{};

	Parms.PowerViewDataList = std::move(PowerViewDataList);
	Parms.WidgetContainer = WidgetContainer;

	UObject::ProcessEvent(Func, &Parms);

	PowerViewDataList = std::move(Parms.PowerViewDataList);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePowerBundle_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "PreConstruct");

	Params::WBP_CorePowerBundle_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.OnLongPressEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_CorePowerBundle_C::OnLongPressEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "OnLongPressEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.HidePowersCarry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCarrying                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePowerBundle_C::HidePowersCarry(bool IsCarrying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "HidePowersCarry");

	Params::WBP_CorePowerBundle_C_HidePowersCarry Parms{};

	Parms.IsCarrying = IsCarrying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.ExecuteUbergraph_WBP_CorePowerBundle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_CorePowerBundle_C::ExecuteUbergraph_WBP_CorePowerBundle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "ExecuteUbergraph_WBP_CorePowerBundle");

	Params::WBP_CorePowerBundle_C_ExecuteUbergraph_WBP_CorePowerBundle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.ClearData
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_CorePowerBundle_C::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "ClearData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.SetMainPowerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPowerViewData                   MainPowerViewData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePowerBundle_C::SetMainPowerData(const struct FPowerViewData& MainPowerViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "SetMainPowerData");

	Params::WBP_CorePowerBundle_C_SetMainPowerData Parms{};

	Parms.MainPowerViewData = std::move(MainPowerViewData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.SetData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPowerBundleViewData             PowerBundleViewData                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePowerBundle_C::SetData(const struct FPowerBundleViewData& PowerBundleViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "SetData");

	Params::WBP_CorePowerBundle_C_SetData Parms{};

	Parms.PowerBundleViewData = std::move(PowerBundleViewData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_CorePowerBundle.WBP_CorePowerBundle_C.SetAddonData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAddonViewData                   AddonOneData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAddonViewData                   AddonTwoData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_CorePowerBundle_C::SetAddonData(struct FAddonViewData& AddonOneData, struct FAddonViewData& AddonTwoData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_CorePowerBundle_C", "SetAddonData");

	Params::WBP_CorePowerBundle_C_SetAddonData Parms{};

	Parms.AddonOneData = std::move(AddonOneData);
	Parms.AddonTwoData = std::move(AddonTwoData);

	UObject::ProcessEvent(Func, &Parms);

	AddonOneData = std::move(Parms.AddonOneData);
	AddonTwoData = std::move(Parms.AddonTwoData);
}

}

