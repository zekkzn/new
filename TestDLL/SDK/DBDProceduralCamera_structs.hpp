#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDProceduralCamera

#include "Basic.hpp"


namespace SDK
{

// Enum DBDProceduralCamera.MotionType
// NumValues: 0x0008
enum class EMotionType : uint8
{
	Static                                   = 0,
	FreeCamera                               = 1,
	Pan                                      = 2,
	Tilt                                     = 3,
	Orbital                                  = 4,
	Crab                                     = 5,
	Boom                                     = 6,
	MotionType_MAX                           = 7,
};

// ScriptStruct DBDProceduralCamera.CameraShot
// 0x0018 (0x0018 - 0x0000)
struct FCameraShot final
{
public:
	class ACameraShotType*                        CameraShotType;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShotDuration;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PriorityWeight;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackSamplingNumberForObstructionComputation;      // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ObstructionScore;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCameraShot) == 0x000008, "Wrong alignment on FCameraShot");
static_assert(sizeof(FCameraShot) == 0x000018, "Wrong size on FCameraShot");
static_assert(offsetof(FCameraShot, CameraShotType) == 0x000000, "Member 'FCameraShot::CameraShotType' has a wrong offset!");
static_assert(offsetof(FCameraShot, ShotDuration) == 0x000008, "Member 'FCameraShot::ShotDuration' has a wrong offset!");
static_assert(offsetof(FCameraShot, PriorityWeight) == 0x00000C, "Member 'FCameraShot::PriorityWeight' has a wrong offset!");
static_assert(offsetof(FCameraShot, TrackSamplingNumberForObstructionComputation) == 0x000010, "Member 'FCameraShot::TrackSamplingNumberForObstructionComputation' has a wrong offset!");
static_assert(offsetof(FCameraShot, ObstructionScore) == 0x000014, "Member 'FCameraShot::ObstructionScore' has a wrong offset!");

}

