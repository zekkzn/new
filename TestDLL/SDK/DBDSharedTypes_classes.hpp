#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBDSharedTypes

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class DBDSharedTypes.AlertDelegates
// 0x0000 (0x0030 - 0x0030)
class UAlertDelegates final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AlertDelegates">();
	}
	static class UAlertDelegates* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlertDelegates>();
	}
};
static_assert(alignof(UAlertDelegates) == 0x000008, "Wrong alignment on UAlertDelegates");
static_assert(sizeof(UAlertDelegates) == 0x000030, "Wrong size on UAlertDelegates");

// Class DBDSharedTypes.ColorTripleDataAsset
// 0x0030 (0x0068 - 0x0038)
class UColorTripleDataAsset final : public UDataAsset
{
public:
	struct FLinearColor                           PrimaryColor;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SecondaryColor;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TertiaryColor;                                     // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ColorTripleDataAsset">();
	}
	static class UColorTripleDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColorTripleDataAsset>();
	}
};
static_assert(alignof(UColorTripleDataAsset) == 0x000008, "Wrong alignment on UColorTripleDataAsset");
static_assert(sizeof(UColorTripleDataAsset) == 0x000068, "Wrong size on UColorTripleDataAsset");
static_assert(offsetof(UColorTripleDataAsset, PrimaryColor) == 0x000038, "Member 'UColorTripleDataAsset::PrimaryColor' has a wrong offset!");
static_assert(offsetof(UColorTripleDataAsset, SecondaryColor) == 0x000048, "Member 'UColorTripleDataAsset::SecondaryColor' has a wrong offset!");
static_assert(offsetof(UColorTripleDataAsset, TertiaryColor) == 0x000058, "Member 'UColorTripleDataAsset::TertiaryColor' has a wrong offset!");

// Class DBDSharedTypes.ObjectiveIndicatorViewData
// 0x0008 (0x0038 - 0x0030)
class UObjectiveIndicatorViewData final : public UObject
{
public:
	class UTexture2D*                             IndicatorIcon;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectiveIndicatorViewData">();
	}
	static class UObjectiveIndicatorViewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectiveIndicatorViewData>();
	}
};
static_assert(alignof(UObjectiveIndicatorViewData) == 0x000008, "Wrong alignment on UObjectiveIndicatorViewData");
static_assert(sizeof(UObjectiveIndicatorViewData) == 0x000038, "Wrong size on UObjectiveIndicatorViewData");
static_assert(offsetof(UObjectiveIndicatorViewData, IndicatorIcon) == 0x000030, "Member 'UObjectiveIndicatorViewData::IndicatorIcon' has a wrong offset!");

// Class DBDSharedTypes.TerrorRadiusIndicatorViewData
// 0x0010 (0x0040 - 0x0030)
class UTerrorRadiusIndicatorViewData final : public UObject
{
public:
	struct FGameplayTag                           TerrorRadiusHeartState;                            // 0x0030(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TerrorRadiusIndicatorViewData">();
	}
	static class UTerrorRadiusIndicatorViewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTerrorRadiusIndicatorViewData>();
	}
};
static_assert(alignof(UTerrorRadiusIndicatorViewData) == 0x000008, "Wrong alignment on UTerrorRadiusIndicatorViewData");
static_assert(sizeof(UTerrorRadiusIndicatorViewData) == 0x000040, "Wrong size on UTerrorRadiusIndicatorViewData");
static_assert(offsetof(UTerrorRadiusIndicatorViewData, TerrorRadiusHeartState) == 0x000030, "Member 'UTerrorRadiusIndicatorViewData::TerrorRadiusHeartState' has a wrong offset!");

}

