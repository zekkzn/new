#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CoreSkillCheck

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.UpdateProgress
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreSkillCheck_C_UpdateProgress final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_UpdateProgress) == 0x000004, "Wrong alignment on WBP_CoreSkillCheck_C_UpdateProgress");
static_assert(sizeof(WBP_CoreSkillCheck_C_UpdateProgress) == 0x000004, "Wrong size on WBP_CoreSkillCheck_C_UpdateProgress");
static_assert(offsetof(WBP_CoreSkillCheck_C_UpdateProgress, Value) == 0x000000, "Member 'WBP_CoreSkillCheck_C_UpdateProgress::Value' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.UpdatePositionOffset
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreSkillCheck_C_UpdatePositionOffset final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_UpdatePositionOffset) == 0x000004, "Wrong alignment on WBP_CoreSkillCheck_C_UpdatePositionOffset");
static_assert(sizeof(WBP_CoreSkillCheck_C_UpdatePositionOffset) == 0x000008, "Wrong size on WBP_CoreSkillCheck_C_UpdatePositionOffset");
static_assert(offsetof(WBP_CoreSkillCheck_C_UpdatePositionOffset, X) == 0x000000, "Member 'WBP_CoreSkillCheck_C_UpdatePositionOffset::X' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_UpdatePositionOffset, Y) == 0x000004, "Member 'WBP_CoreSkillCheck_C_UpdatePositionOffset::Y' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ShowSkillCheckSuccess
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreSkillCheck_C_ShowSkillCheckSuccess final
{
public:
	bool                                          IsBonus;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ShowSkillCheckSuccess) == 0x000001, "Wrong alignment on WBP_CoreSkillCheck_C_ShowSkillCheckSuccess");
static_assert(sizeof(WBP_CoreSkillCheck_C_ShowSkillCheckSuccess) == 0x000001, "Wrong size on WBP_CoreSkillCheck_C_ShowSkillCheckSuccess");
static_assert(offsetof(WBP_CoreSkillCheck_C_ShowSkillCheckSuccess, IsBonus) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ShowSkillCheckSuccess::IsBonus' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ShowSkillCheck
// 0x0058 (0x0058 - 0x0000)
struct WBP_CoreSkillCheck_C_ShowSkillCheck final
{
public:
	struct FSkillCheckViewData                    SkillCheckData;                                    // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ShowSkillCheck) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_ShowSkillCheck");
static_assert(sizeof(WBP_CoreSkillCheck_C_ShowSkillCheck) == 0x000058, "Wrong size on WBP_CoreSkillCheck_C_ShowSkillCheck");
static_assert(offsetof(WBP_CoreSkillCheck_C_ShowSkillCheck, SkillCheckData) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ShowSkillCheck::SkillCheckData' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetWiggleSuccess
// 0x0010 (0x0010 - 0x0000)
struct WBP_CoreSkillCheck_C_SetWiggleSuccess final
{
public:
	bool                                          IsGreatZone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetWiggleSuccess) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetWiggleSuccess");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetWiggleSuccess) == 0x000010, "Wrong size on WBP_CoreSkillCheck_C_SetWiggleSuccess");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetWiggleSuccess, IsGreatZone) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetWiggleSuccess::IsGreatZone' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetWiggleSuccess, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_CoreSkillCheck_C_SetWiggleSuccess::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetWiggleFail
// 0x0008 (0x0008 - 0x0000)
struct WBP_CoreSkillCheck_C_SetWiggleFail final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetWiggleFail) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetWiggleFail");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetWiggleFail) == 0x000008, "Wrong size on WBP_CoreSkillCheck_C_SetWiggleFail");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetWiggleFail, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetWiggleFail::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetSkillCheckMaterialData
// 0x0048 (0x0048 - 0x0000)
struct WBP_CoreSkillCheck_C_SetSkillCheckMaterialData final
{
public:
	double                                        Success_Start_Area;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Success_Length;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bonus_Start_Area;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bonus_Length;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Mirroed;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetSkillCheckMaterialData");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData) == 0x000048, "Wrong size on WBP_CoreSkillCheck_C_SetSkillCheckMaterialData");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Success_Start_Area) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Success_Start_Area' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Success_Length) == 0x000008, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Success_Length' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Bonus_Start_Area) == 0x000010, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Bonus_Start_Area' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Bonus_Length) == 0x000018, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Bonus_Length' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Is_Mirroed) == 0x000020, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Is_Mirroed' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Temp_real_Variable) == 0x000028, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Temp_real_Variable_1) == 0x000030, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, Temp_bool_Variable) == 0x000038, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckMaterialData, K2Node_Select_Default) == 0x000040, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckMaterialData::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetSkillCheckData
// 0x0088 (0x0088 - 0x0000)
struct WBP_CoreSkillCheck_C_SetSkillCheckData final
{
public:
	struct FSkillCheckViewData                    SkillCheckViewData;                                // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetSkillCheckMaterialData_Success_Start_Area_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetSkillCheckMaterialData_Success_Length_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetSkillCheckMaterialData_Bonus_Start_Area_ImplicitCast; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetSkillCheckMaterialData_Bonus_Length_ImplicitCast; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetSkillCheckData) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetSkillCheckData");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetSkillCheckData) == 0x000088, "Wrong size on WBP_CoreSkillCheck_C_SetSkillCheckData");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, SkillCheckViewData) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::SkillCheckViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_Key_IsValid_ReturnValue) == 0x000058, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000060, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_SetSkillCheckMaterialData_Success_Start_Area_ImplicitCast) == 0x000068, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_SetSkillCheckMaterialData_Success_Start_Area_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_SetSkillCheckMaterialData_Success_Length_ImplicitCast) == 0x000070, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_SetSkillCheckMaterialData_Success_Length_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_SetSkillCheckMaterialData_Bonus_Start_Area_ImplicitCast) == 0x000078, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_SetSkillCheckMaterialData_Bonus_Start_Area_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetSkillCheckData, CallFunc_SetSkillCheckMaterialData_Bonus_Length_ImplicitCast) == 0x000080, "Member 'WBP_CoreSkillCheck_C_SetSkillCheckData::CallFunc_SetSkillCheckMaterialData_Bonus_Length_ImplicitCast' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetPosFromAngle
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CoreSkillCheck_C_SetPosFromAngle final
{
public:
	class UImage*                                 ImageWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0040(0x0038)(NoDestructor)
	float                                         CallFunc_Add_FloatFloat_A_ImplicitCast;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Angle_ImplicitCast;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_A_ImplicitCast_1;     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_A_ImplicitCast;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_A_ImplicitCast;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_B_ImplicitCast;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_B_ImplicitCast_1;     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetPosFromAngle) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetPosFromAngle");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetPosFromAngle) == 0x0000B0, "Wrong size on WBP_CoreSkillCheck_C_SetPosFromAngle");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, ImageWidget) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::ImageWidget' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, Angle) == 0x000008, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::Angle' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_DegCos_ReturnValue) == 0x000018, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_DegSin_ReturnValue) == 0x000020, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, K2Node_MakeStruct_WidgetTransform) == 0x000040, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Add_FloatFloat_A_ImplicitCast) == 0x000078, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Add_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, K2Node_MakeStruct_Angle_ImplicitCast) == 0x00007C, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::K2Node_MakeStruct_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_A_ImplicitCast) == 0x000080, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_A_ImplicitCast_1) == 0x000084, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_DegCos_A_ImplicitCast) == 0x000088, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_DegCos_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_DegSin_A_ImplicitCast) == 0x000090, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_DegSin_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_B_ImplicitCast) == 0x000098, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_Multiply_FloatFloat_B_ImplicitCast_1) == 0x00009C, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_Multiply_FloatFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000A0, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetPosFromAngle, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000A8, "Member 'WBP_CoreSkillCheck_C_SetPosFromAngle::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.SetMaterialData
// 0x0040 (0x0040 - 0x0000)
struct WBP_CoreSkillCheck_C_SetMaterialData final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        StartArea;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MirrorOpacity;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_SetMaterialData) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_SetMaterialData");
static_assert(sizeof(WBP_CoreSkillCheck_C_SetMaterialData) == 0x000040, "Wrong size on WBP_CoreSkillCheck_C_SetMaterialData");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, Image) == 0x000000, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::Image' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, StartArea) == 0x000008, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::StartArea' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, Length) == 0x000010, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::Length' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, MirrorOpacity) == 0x000018, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::MirrorOpacity' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, NewLocalVar_0) == 0x000020, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000034, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_SetMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000038, "Member 'WBP_CoreSkillCheck_C_SetMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ResetAnimationStates
// 0x0010 (0x0010 - 0x0000)
struct WBP_CoreSkillCheck_C_ResetAnimationStates final
{
public:
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ResetAnimationStates) == 0x000004, "Wrong alignment on WBP_CoreSkillCheck_C_ResetAnimationStates");
static_assert(sizeof(WBP_CoreSkillCheck_C_ResetAnimationStates) == 0x000010, "Wrong size on WBP_CoreSkillCheck_C_ResetAnimationStates");
static_assert(offsetof(WBP_CoreSkillCheck_C_ResetAnimationStates, CallFunc_MakeColor_ReturnValue) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ResetAnimationStates::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CoreSkillCheck_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CoreSkillCheck_C_PreConstruct");
static_assert(sizeof(WBP_CoreSkillCheck_C_PreConstruct) == 0x000001, "Wrong size on WBP_CoreSkillCheck_C_PreConstruct");
static_assert(offsetof(WBP_CoreSkillCheck_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CoreSkillCheck_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ExecuteUbergraph_WBP_CoreSkillCheck
// 0x0108 (0x0108 - 0x0000)
struct WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillCheckViewData                    K2Node_MakeStruct_SkillCheckViewData;              // 0x0008(0x0058)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_x;                                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_y;                                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_value;                                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillCheckViewData                    K2Node_Event_skillCheckData;                       // 0x0098(0x0058)(ConstParm)
	float                                         K2Node_Event_scale;                                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isBonus;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetPosFromAngle_angle_ImplicitCast;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck");
static_assert(sizeof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck) == 0x000108, "Wrong size on WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, EntryPoint) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_MakeStruct_SkillCheckViewData) == 0x000008, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_MakeStruct_SkillCheckViewData' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_IsDesignTime) == 0x000060, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_x) == 0x000064, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_x' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_y) == 0x000068, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_y' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_value) == 0x00006C, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_value' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000080, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_skillCheckData) == 0x000098, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_skillCheckData' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_scale) == 0x0000F0, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_scale' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, K2Node_Event_isBonus) == 0x0000F4, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::K2Node_Event_isBonus' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_SetPosFromAngle_angle_ImplicitCast) == 0x0000F8, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_SetPosFromAngle_angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck, CallFunc_Delay_Duration_ImplicitCast) == 0x000100, "Member 'WBP_CoreSkillCheck_C_ExecuteUbergraph_WBP_CoreSkillCheck::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ApplyScaleFactor
// 0x0004 (0x0004 - 0x0000)
struct WBP_CoreSkillCheck_C_ApplyScaleFactor final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ApplyScaleFactor) == 0x000004, "Wrong alignment on WBP_CoreSkillCheck_C_ApplyScaleFactor");
static_assert(sizeof(WBP_CoreSkillCheck_C_ApplyScaleFactor) == 0x000004, "Wrong size on WBP_CoreSkillCheck_C_ApplyScaleFactor");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyScaleFactor, Scale) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ApplyScaleFactor::Scale' has a wrong offset!");

// Function WBP_CoreSkillCheck.WBP_CoreSkillCheck_C.ApplyHexStatus
// 0x0070 (0x0070 - 0x0000)
struct WBP_CoreSkillCheck_C_ApplyHexStatus final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default_2;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x004C(0x0014)()
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_4;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CoreSkillCheck_C_ApplyHexStatus) == 0x000008, "Wrong alignment on WBP_CoreSkillCheck_C_ApplyHexStatus");
static_assert(sizeof(WBP_CoreSkillCheck_C_ApplyHexStatus) == 0x000070, "Wrong size on WBP_CoreSkillCheck_C_ApplyHexStatus");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, Temp_bool_Variable) == 0x000000, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, Temp_bool_Variable_1) == 0x000001, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, Temp_bool_Variable_2) == 0x000002, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, Temp_bool_Variable_3) == 0x000003, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, Temp_bool_Variable_4) == 0x000004, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_Select_Default) == 0x000008, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_Select_Default_1) == 0x000030, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_Select_Default_2) == 0x000038, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x00003C, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_MakeStruct_SlateColor) == 0x00004C, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_Select_Default_3) == 0x000060, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CoreSkillCheck_C_ApplyHexStatus, K2Node_Select_Default_4) == 0x000068, "Member 'WBP_CoreSkillCheck_C_ApplyHexStatus::K2Node_Select_Default_4' has a wrong offset!");

}

