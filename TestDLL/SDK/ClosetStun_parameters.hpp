#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClosetStun

#include "Basic.hpp"

#include "DeadByDaylight_structs.hpp"


namespace SDK::Params
{

// Function ClosetStun.ClosetStun_C.OnInteractionEnterStart
// 0x0010 (0x0010 - 0x0000)
struct ClosetStun_C_OnInteractionEnterStart final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         ActualSnapTime;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetStun_C_OnInteractionEnterStart) == 0x000008, "Wrong alignment on ClosetStun_C_OnInteractionEnterStart");
static_assert(sizeof(ClosetStun_C_OnInteractionEnterStart) == 0x000010, "Wrong size on ClosetStun_C_OnInteractionEnterStart");
static_assert(offsetof(ClosetStun_C_OnInteractionEnterStart, Player) == 0x000000, "Member 'ClosetStun_C_OnInteractionEnterStart::Player' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_OnInteractionEnterStart, ActualSnapTime) == 0x000008, "Member 'ClosetStun_C_OnInteractionEnterStart::ActualSnapTime' has a wrong offset!");

// Function ClosetStun.ClosetStun_C.GetCamper
// 0x0001 (0x0001 - 0x0000)
struct ClosetStun_C_GetCamper final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetStun_C_GetCamper) == 0x000001, "Wrong alignment on ClosetStun_C_GetCamper");
static_assert(sizeof(ClosetStun_C_GetCamper) == 0x000001, "Wrong size on ClosetStun_C_GetCamper");
static_assert(offsetof(ClosetStun_C_GetCamper, NewParam) == 0x000000, "Member 'ClosetStun_C_GetCamper::NewParam' has a wrong offset!");

// Function ClosetStun.ClosetStun_C.ExecuteUbergraph_ClosetStun
// 0x00B0 (0x00B0 - 0x0000)
struct ClosetStun_C_ExecuteUbergraph_ClosetStun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_actualSnapTime;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionPlayerProperties           CallFunc_GetInteractionPlayerProperties_ReturnValue; // 0x0018(0x0078)(ConstParm, NoDestructor)
	class ACamperPlayer*                          K2Node_DynamicCast_AsCamper_Player;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkManager*                           CallFunc_GetPerkManager_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerkModifier_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClosetStun_C_ExecuteUbergraph_ClosetStun) == 0x000008, "Wrong alignment on ClosetStun_C_ExecuteUbergraph_ClosetStun");
static_assert(sizeof(ClosetStun_C_ExecuteUbergraph_ClosetStun) == 0x0000B0, "Wrong size on ClosetStun_C_ExecuteUbergraph_ClosetStun");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, EntryPoint) == 0x000000, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::EntryPoint' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, K2Node_Event_player) == 0x000008, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, K2Node_Event_actualSnapTime) == 0x000010, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::K2Node_Event_actualSnapTime' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, CallFunc_GetInteractionPlayerProperties_ReturnValue) == 0x000018, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::CallFunc_GetInteractionPlayerProperties_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, K2Node_DynamicCast_AsCamper_Player) == 0x000090, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::K2Node_DynamicCast_AsCamper_Player' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, CallFunc_GetPerkManager_ReturnValue) == 0x0000A0, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::CallFunc_GetPerkManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClosetStun_C_ExecuteUbergraph_ClosetStun, CallFunc_GetPerkModifier_ReturnValue) == 0x0000A8, "Member 'ClosetStun_C_ExecuteUbergraph_ClosetStun::CallFunc_GetPerkModifier_ReturnValue' has a wrong offset!");

}

