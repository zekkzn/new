#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheDoctor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DBDSharedTypes_structs.hpp"
#include "TheDoctor_structs.hpp"


namespace SDK::Params
{

// Function TheDoctor.CartersSpark.Authority_StartShockAttackComboTimer
// 0x0008 (0x0008 - 0x0000)
struct CartersSpark_Authority_StartShockAttackComboTimer final
{
public:
	class ACamperPlayer*                          ShockedSurvivor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CartersSpark_Authority_StartShockAttackComboTimer) == 0x000008, "Wrong alignment on CartersSpark_Authority_StartShockAttackComboTimer");
static_assert(sizeof(CartersSpark_Authority_StartShockAttackComboTimer) == 0x000008, "Wrong size on CartersSpark_Authority_StartShockAttackComboTimer");
static_assert(offsetof(CartersSpark_Authority_StartShockAttackComboTimer, ShockedSurvivor) == 0x000000, "Member 'CartersSpark_Authority_StartShockAttackComboTimer::ShockedSurvivor' has a wrong offset!");

// Function TheDoctor.CartersSpark.CancelSurvivorInteraction
// 0x0008 (0x0008 - 0x0000)
struct CartersSpark_CancelSurvivorInteraction final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CartersSpark_CancelSurvivorInteraction) == 0x000008, "Wrong alignment on CartersSpark_CancelSurvivorInteraction");
static_assert(sizeof(CartersSpark_CancelSurvivorInteraction) == 0x000008, "Wrong size on CartersSpark_CancelSurvivorInteraction");
static_assert(offsetof(CartersSpark_CancelSurvivorInteraction, Survivor) == 0x000000, "Member 'CartersSpark_CancelSurvivorInteraction::Survivor' has a wrong offset!");

// Function TheDoctor.CartersSpark.Cosmetic_OnShockTherapyZoneDetonated
// 0x0010 (0x0010 - 0x0000)
struct CartersSpark_Cosmetic_OnShockTherapyZoneDetonated final
{
public:
	class ADBDPlayer*                             Killer;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SurvivorsHitCount;                                 // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CartersSpark_Cosmetic_OnShockTherapyZoneDetonated) == 0x000008, "Wrong alignment on CartersSpark_Cosmetic_OnShockTherapyZoneDetonated");
static_assert(sizeof(CartersSpark_Cosmetic_OnShockTherapyZoneDetonated) == 0x000010, "Wrong size on CartersSpark_Cosmetic_OnShockTherapyZoneDetonated");
static_assert(offsetof(CartersSpark_Cosmetic_OnShockTherapyZoneDetonated, Killer) == 0x000000, "Member 'CartersSpark_Cosmetic_OnShockTherapyZoneDetonated::Killer' has a wrong offset!");
static_assert(offsetof(CartersSpark_Cosmetic_OnShockTherapyZoneDetonated, SurvivorsHitCount) == 0x000008, "Member 'CartersSpark_Cosmetic_OnShockTherapyZoneDetonated::SurvivorsHitCount' has a wrong offset!");

// Function TheDoctor.DisciplineEffect.Cosmetic_ActivateKillerRedStain
// 0x0001 (0x0001 - 0x0000)
struct DisciplineEffect_Cosmetic_ActivateKillerRedStain final
{
public:
	bool                                          Param_Activate;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisciplineEffect_Cosmetic_ActivateKillerRedStain) == 0x000001, "Wrong alignment on DisciplineEffect_Cosmetic_ActivateKillerRedStain");
static_assert(sizeof(DisciplineEffect_Cosmetic_ActivateKillerRedStain) == 0x000001, "Wrong size on DisciplineEffect_Cosmetic_ActivateKillerRedStain");
static_assert(offsetof(DisciplineEffect_Cosmetic_ActivateKillerRedStain, Param_Activate) == 0x000000, "Member 'DisciplineEffect_Cosmetic_ActivateKillerRedStain::Param_Activate' has a wrong offset!");

// Function TheDoctor.DisciplineEffect.Cosmetic_ActivateSurvivorRedStain
// 0x0001 (0x0001 - 0x0000)
struct DisciplineEffect_Cosmetic_ActivateSurvivorRedStain final
{
public:
	bool                                          Param_Activate;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisciplineEffect_Cosmetic_ActivateSurvivorRedStain) == 0x000001, "Wrong alignment on DisciplineEffect_Cosmetic_ActivateSurvivorRedStain");
static_assert(sizeof(DisciplineEffect_Cosmetic_ActivateSurvivorRedStain) == 0x000001, "Wrong size on DisciplineEffect_Cosmetic_ActivateSurvivorRedStain");
static_assert(offsetof(DisciplineEffect_Cosmetic_ActivateSurvivorRedStain, Param_Activate) == 0x000000, "Member 'DisciplineEffect_Cosmetic_ActivateSurvivorRedStain::Param_Activate' has a wrong offset!");

// Function TheDoctor.DisciplineEffect.Cosmetic_UpdateKillerRedStain
// 0x0008 (0x0008 - 0x0000)
struct DisciplineEffect_Cosmetic_UpdateKillerRedStain final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisciplineEffect_Cosmetic_UpdateKillerRedStain) == 0x000004, "Wrong alignment on DisciplineEffect_Cosmetic_UpdateKillerRedStain");
static_assert(sizeof(DisciplineEffect_Cosmetic_UpdateKillerRedStain) == 0x000008, "Wrong size on DisciplineEffect_Cosmetic_UpdateKillerRedStain");
static_assert(offsetof(DisciplineEffect_Cosmetic_UpdateKillerRedStain, Visible) == 0x000000, "Member 'DisciplineEffect_Cosmetic_UpdateKillerRedStain::Visible' has a wrong offset!");
static_assert(offsetof(DisciplineEffect_Cosmetic_UpdateKillerRedStain, DeltaTime) == 0x000004, "Member 'DisciplineEffect_Cosmetic_UpdateKillerRedStain::DeltaTime' has a wrong offset!");

// Function TheDoctor.DisciplineEffect.Cosmetic_UpdateSurvivorRedStain
// 0x0008 (0x0008 - 0x0000)
struct DisciplineEffect_Cosmetic_UpdateSurvivorRedStain final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisciplineEffect_Cosmetic_UpdateSurvivorRedStain) == 0x000004, "Wrong alignment on DisciplineEffect_Cosmetic_UpdateSurvivorRedStain");
static_assert(sizeof(DisciplineEffect_Cosmetic_UpdateSurvivorRedStain) == 0x000008, "Wrong size on DisciplineEffect_Cosmetic_UpdateSurvivorRedStain");
static_assert(offsetof(DisciplineEffect_Cosmetic_UpdateSurvivorRedStain, Visible) == 0x000000, "Member 'DisciplineEffect_Cosmetic_UpdateSurvivorRedStain::Visible' has a wrong offset!");
static_assert(offsetof(DisciplineEffect_Cosmetic_UpdateSurvivorRedStain, DeltaTime) == 0x000004, "Member 'DisciplineEffect_Cosmetic_UpdateSurvivorRedStain::DeltaTime' has a wrong offset!");

// Function TheDoctor.DisciplineEffect.SetRedStainInterpolating
// 0x0001 (0x0001 - 0x0000)
struct DisciplineEffect_SetRedStainInterpolating final
{
public:
	bool                                          IsInterpolating;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DisciplineEffect_SetRedStainInterpolating) == 0x000001, "Wrong alignment on DisciplineEffect_SetRedStainInterpolating");
static_assert(sizeof(DisciplineEffect_SetRedStainInterpolating) == 0x000001, "Wrong size on DisciplineEffect_SetRedStainInterpolating");
static_assert(offsetof(DisciplineEffect_SetRedStainInterpolating, IsInterpolating) == 0x000000, "Member 'DisciplineEffect_SetRedStainInterpolating::IsInterpolating' has a wrong offset!");

// Function TheDoctor.DoctorCheatComponent.DBD_AddMadness
// 0x0018 (0x0018 - 0x0000)
struct DoctorCheatComponent_DBD_AddMadness final
{
public:
	float                                         MadnessToAdd;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalPlayerId;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorCheatComponent_DBD_AddMadness) == 0x000008, "Wrong alignment on DoctorCheatComponent_DBD_AddMadness");
static_assert(sizeof(DoctorCheatComponent_DBD_AddMadness) == 0x000018, "Wrong size on DoctorCheatComponent_DBD_AddMadness");
static_assert(offsetof(DoctorCheatComponent_DBD_AddMadness, MadnessToAdd) == 0x000000, "Member 'DoctorCheatComponent_DBD_AddMadness::MadnessToAdd' has a wrong offset!");
static_assert(offsetof(DoctorCheatComponent_DBD_AddMadness, LocalPlayerId) == 0x000008, "Member 'DoctorCheatComponent_DBD_AddMadness::LocalPlayerId' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryDoctorApparitionSequenceStart
// 0x0070 (0x0070 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart final
{
public:
	struct FTransform                             IllusionaryDoctorTransform;                        // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ApparitionDuration;                                // 0x0060(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart) == 0x000010, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart) == 0x000070, "Wrong size on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart, IllusionaryDoctorTransform) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart::IllusionaryDoctorTransform' has a wrong offset!");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart, ApparitionDuration) == 0x000060, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryDoctorApparitionSequenceStart::ApparitionDuration' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryPalletActivated
// 0x0008 (0x0008 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated final
{
public:
	const class APallet*                          Pallet;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated) == 0x000008, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated) == 0x000008, "Wrong size on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated, Pallet) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletActivated::Pallet' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnIllusionaryPalletDeactivated
// 0x0008 (0x0008 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated final
{
public:
	const class APallet*                          Pallet;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated) == 0x000008, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated) == 0x000008, "Wrong size on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated, Pallet) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnIllusionaryPalletDeactivated::Pallet' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.Cosmetic_OnMadnessChanged
// 0x0008 (0x0008 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged final
{
public:
	int32                                         NewTier;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Increased;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged) == 0x000004, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged) == 0x000008, "Wrong size on DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged, NewTier) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged::NewTier' has a wrong offset!");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged, Increased) == 0x000004, "Member 'DoctorSurvivorCosmeticHelperActor_Cosmetic_OnMadnessChanged::Increased' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayerSeeIllusionaryPalletGlitch
// 0x0010 (0x0010 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch final
{
public:
	class APallet*                                Pallet;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch) == 0x000008, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch) == 0x000010, "Wrong size on DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch, Pallet) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch::Pallet' has a wrong offset!");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch, ReturnValue) == 0x000008, "Member 'DoctorSurvivorCosmeticHelperActor_CanPlayerSeeIllusionaryPalletGlitch::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayOverwhelmingMadnessAnimation
// 0x0001 (0x0001 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation) == 0x000001, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation) == 0x000001, "Wrong size on DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAnimation::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayOverwhelmingMadnessAudio
// 0x0001 (0x0001 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio) == 0x000001, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio) == 0x000001, "Wrong size on DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_CanPlayOverwhelmingMadnessAudio::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.CanPlayShockedAnimation
// 0x0001 (0x0001 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation) == 0x000001, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation) == 0x000001, "Wrong size on DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_CanPlayShockedAnimation::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.GetIllusionaryDoctor
// 0x0008 (0x0008 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor final
{
public:
	class AIllusionaryDoctor*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor) == 0x000008, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor) == 0x000008, "Wrong size on DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_GetIllusionaryDoctor::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.GetSurvivorMadnessEffect
// 0x0008 (0x0008 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect final
{
public:
	class USurvivorMadnessEffect*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect) == 0x000008, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect) == 0x000008, "Wrong size on DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_GetSurvivorMadnessEffect::ReturnValue' has a wrong offset!");

// Function TheDoctor.DoctorSurvivorCosmeticHelperActor.IsSurvivorOperatingLocker
// 0x0001 (0x0001 - 0x0000)
struct DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker) == 0x000001, "Wrong alignment on DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker");
static_assert(sizeof(DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker) == 0x000001, "Wrong size on DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker");
static_assert(offsetof(DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker, ReturnValue) == 0x000000, "Member 'DoctorSurvivorCosmeticHelperActor_IsSurvivorOperatingLocker::ReturnValue' has a wrong offset!");

// Function TheDoctor.IllusionaryDoctor.ActivateIllusion
// 0x0060 (0x0060 - 0x0000)
struct IllusionaryDoctor_ActivateIllusion final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryDoctor_ActivateIllusion) == 0x000010, "Wrong alignment on IllusionaryDoctor_ActivateIllusion");
static_assert(sizeof(IllusionaryDoctor_ActivateIllusion) == 0x000060, "Wrong size on IllusionaryDoctor_ActivateIllusion");
static_assert(offsetof(IllusionaryDoctor_ActivateIllusion, Transform) == 0x000000, "Member 'IllusionaryDoctor_ActivateIllusion::Transform' has a wrong offset!");

// Function TheDoctor.IllusionaryDoctorEffect.Multicast_DebugDisplayInfo
// 0x0008 (0x0008 - 0x0000)
struct IllusionaryDoctorEffect_Multicast_DebugDisplayInfo final
{
public:
	float                                         TimeRemainingBeforeActivation;                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 MessageColor;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryDoctorEffect_Multicast_DebugDisplayInfo) == 0x000004, "Wrong alignment on IllusionaryDoctorEffect_Multicast_DebugDisplayInfo");
static_assert(sizeof(IllusionaryDoctorEffect_Multicast_DebugDisplayInfo) == 0x000008, "Wrong size on IllusionaryDoctorEffect_Multicast_DebugDisplayInfo");
static_assert(offsetof(IllusionaryDoctorEffect_Multicast_DebugDisplayInfo, TimeRemainingBeforeActivation) == 0x000000, "Member 'IllusionaryDoctorEffect_Multicast_DebugDisplayInfo::TimeRemainingBeforeActivation' has a wrong offset!");
static_assert(offsetof(IllusionaryDoctorEffect_Multicast_DebugDisplayInfo, MessageColor) == 0x000004, "Member 'IllusionaryDoctorEffect_Multicast_DebugDisplayInfo::MessageColor' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletBaseAddon.Authority_OnIllusionaryPalletActorOverlapped
// 0x0110 (0x0110 - 0x0000)
struct IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped) == 0x000008, "Wrong alignment on IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped");
static_assert(sizeof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped) == 0x000110, "Wrong size on IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, OverlappedComponent) == 0x000000, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, OtherActor) == 0x000008, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::OtherActor' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, OtherComp) == 0x000010, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::OtherComp' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, OtherBodyIndex) == 0x000018, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, bFromSweep) == 0x00001C, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::bFromSweep' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped, SweepResult) == 0x000020, "Member 'IllusionaryPalletBaseAddon_Authority_OnIllusionaryPalletActorOverlapped::SweepResult' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletBaseAddon.Multicast_ActivateIllusionaryPallet
// 0x0010 (0x0010 - 0x0000)
struct IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet final
{
public:
	class APallet*                                Pallet;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPalletDown;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet) == 0x000008, "Wrong alignment on IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet");
static_assert(sizeof(IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet) == 0x000010, "Wrong size on IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet");
static_assert(offsetof(IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet, Pallet) == 0x000000, "Member 'IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet::Pallet' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet, IsPalletDown) == 0x000008, "Member 'IllusionaryPalletBaseAddon_Multicast_ActivateIllusionaryPallet::IsPalletDown' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletBaseAddon.Multicast_DeactivateIllusionaryPallet
// 0x0010 (0x0010 - 0x0000)
struct IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet final
{
public:
	class APallet*                                Pallet;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADBDPlayer*                             TriggeringPlayer;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet) == 0x000008, "Wrong alignment on IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet");
static_assert(sizeof(IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet) == 0x000010, "Wrong size on IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet");
static_assert(offsetof(IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet, Pallet) == 0x000000, "Member 'IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet::Pallet' has a wrong offset!");
static_assert(offsetof(IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet, TriggeringPlayer) == 0x000008, "Member 'IllusionaryPalletBaseAddon_Multicast_DeactivateIllusionaryPallet::TriggeringPlayer' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletComponent.ActivateIllusionaryPallet
// 0x0001 (0x0001 - 0x0000)
struct IllusionaryPalletComponent_ActivateIllusionaryPallet final
{
public:
	bool                                          IsPalletDown;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletComponent_ActivateIllusionaryPallet) == 0x000001, "Wrong alignment on IllusionaryPalletComponent_ActivateIllusionaryPallet");
static_assert(sizeof(IllusionaryPalletComponent_ActivateIllusionaryPallet) == 0x000001, "Wrong size on IllusionaryPalletComponent_ActivateIllusionaryPallet");
static_assert(offsetof(IllusionaryPalletComponent_ActivateIllusionaryPallet, IsPalletDown) == 0x000000, "Member 'IllusionaryPalletComponent_ActivateIllusionaryPallet::IsPalletDown' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletComponent.OnStartIllusionaryPalletActivation
// 0x0001 (0x0001 - 0x0000)
struct IllusionaryPalletComponent_OnStartIllusionaryPalletActivation final
{
public:
	bool                                          IsPalletDown;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletComponent_OnStartIllusionaryPalletActivation) == 0x000001, "Wrong alignment on IllusionaryPalletComponent_OnStartIllusionaryPalletActivation");
static_assert(sizeof(IllusionaryPalletComponent_OnStartIllusionaryPalletActivation) == 0x000001, "Wrong size on IllusionaryPalletComponent_OnStartIllusionaryPalletActivation");
static_assert(offsetof(IllusionaryPalletComponent_OnStartIllusionaryPalletActivation, IsPalletDown) == 0x000000, "Member 'IllusionaryPalletComponent_OnStartIllusionaryPalletActivation::IsPalletDown' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletComponent.OnStartIllusionaryPalletDeactivation
// 0x0008 (0x0008 - 0x0000)
struct IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation final
{
public:
	class ADBDPlayer*                             TriggeringPlayer;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation) == 0x000008, "Wrong alignment on IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation");
static_assert(sizeof(IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation) == 0x000008, "Wrong size on IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation");
static_assert(offsetof(IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation, TriggeringPlayer) == 0x000000, "Member 'IllusionaryPalletComponent_OnStartIllusionaryPalletDeactivation::TriggeringPlayer' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletComponent.CanLocallyObservedPlayerSeeIllusionaryPallet
// 0x0001 (0x0001 - 0x0000)
struct IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet) == 0x000001, "Wrong alignment on IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet");
static_assert(sizeof(IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet) == 0x000001, "Wrong size on IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet");
static_assert(offsetof(IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet, ReturnValue) == 0x000000, "Member 'IllusionaryPalletComponent_CanLocallyObservedPlayerSeeIllusionaryPallet::ReturnValue' has a wrong offset!");

// Function TheDoctor.IllusionaryPalletComponent.GetGlitchEffectRange
// 0x0004 (0x0004 - 0x0000)
struct IllusionaryPalletComponent_GetGlitchEffectRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IllusionaryPalletComponent_GetGlitchEffectRange) == 0x000004, "Wrong alignment on IllusionaryPalletComponent_GetGlitchEffectRange");
static_assert(sizeof(IllusionaryPalletComponent_GetGlitchEffectRange) == 0x000004, "Wrong size on IllusionaryPalletComponent_GetGlitchEffectRange");
static_assert(offsetof(IllusionaryPalletComponent_GetGlitchEffectRange, ReturnValue) == 0x000000, "Member 'IllusionaryPalletComponent_GetGlitchEffectRange::ReturnValue' has a wrong offset!");

// Function TheDoctor.IridescentQueenEffect.Authority_OnSurvivorOverlappedDischargeZone
// 0x0110 (0x0110 - 0x0000)
struct IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone) == 0x000008, "Wrong alignment on IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone");
static_assert(sizeof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone) == 0x000110, "Wrong size on IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, OverlappedComponent) == 0x000000, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, OtherActor) == 0x000008, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::OtherActor' has a wrong offset!");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, OtherComp) == 0x000010, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::OtherComp' has a wrong offset!");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, OtherBodyIndex) == 0x000018, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, bFromSweep) == 0x00001C, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::bFromSweep' has a wrong offset!");
static_assert(offsetof(IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone, SweepResult) == 0x000020, "Member 'IridescentQueenEffect_Authority_OnSurvivorOverlappedDischargeZone::SweepResult' has a wrong offset!");

// Function TheDoctor.IridescentQueenEffect.Cosmetic_OnDischargeOnSurvivor
// 0x0008 (0x0008 - 0x0000)
struct IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor final
{
public:
	class ADBDPlayer*                             SurvivorToShock;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor) == 0x000008, "Wrong alignment on IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor");
static_assert(sizeof(IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor) == 0x000008, "Wrong size on IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor");
static_assert(offsetof(IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor, SurvivorToShock) == 0x000000, "Member 'IridescentQueenEffect_Cosmetic_OnDischargeOnSurvivor::SurvivorToShock' has a wrong offset!");

// Function TheDoctor.IridescentQueenEffect.Multicast_DischargeOnSurvivor
// 0x0008 (0x0008 - 0x0000)
struct IridescentQueenEffect_Multicast_DischargeOnSurvivor final
{
public:
	class ACamperPlayer*                          Survivor;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IridescentQueenEffect_Multicast_DischargeOnSurvivor) == 0x000008, "Wrong alignment on IridescentQueenEffect_Multicast_DischargeOnSurvivor");
static_assert(sizeof(IridescentQueenEffect_Multicast_DischargeOnSurvivor) == 0x000008, "Wrong size on IridescentQueenEffect_Multicast_DischargeOnSurvivor");
static_assert(offsetof(IridescentQueenEffect_Multicast_DischargeOnSurvivor, Survivor) == 0x000000, "Member 'IridescentQueenEffect_Multicast_DischargeOnSurvivor::Survivor' has a wrong offset!");

// Function TheDoctor.IridescentQueenEffect.GetStaticFieldMovementSpeed
// 0x0001 (0x0001 - 0x0000)
struct IridescentQueenEffect_GetStaticFieldMovementSpeed final
{
public:
	EStaticFieldMovementSpeed                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IridescentQueenEffect_GetStaticFieldMovementSpeed) == 0x000001, "Wrong alignment on IridescentQueenEffect_GetStaticFieldMovementSpeed");
static_assert(sizeof(IridescentQueenEffect_GetStaticFieldMovementSpeed) == 0x000001, "Wrong size on IridescentQueenEffect_GetStaticFieldMovementSpeed");
static_assert(offsetof(IridescentQueenEffect_GetStaticFieldMovementSpeed, ReturnValue) == 0x000000, "Member 'IridescentQueenEffect_GetStaticFieldMovementSpeed::ReturnValue' has a wrong offset!");

// Function TheDoctor.Overcharge.GetRegressionRateMultiplierCurve
// 0x0008 (0x0008 - 0x0000)
struct Overcharge_GetRegressionRateMultiplierCurve final
{
public:
	const class UCurveFloat*                      ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Overcharge_GetRegressionRateMultiplierCurve) == 0x000008, "Wrong alignment on Overcharge_GetRegressionRateMultiplierCurve");
static_assert(sizeof(Overcharge_GetRegressionRateMultiplierCurve) == 0x000008, "Wrong size on Overcharge_GetRegressionRateMultiplierCurve");
static_assert(offsetof(Overcharge_GetRegressionRateMultiplierCurve, ReturnValue) == 0x000000, "Member 'Overcharge_GetRegressionRateMultiplierCurve::ReturnValue' has a wrong offset!");

// Function TheDoctor.Overcharge.GetSkillCheckFailurePenaltyAtLevel
// 0x0004 (0x0004 - 0x0000)
struct Overcharge_GetSkillCheckFailurePenaltyAtLevel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Overcharge_GetSkillCheckFailurePenaltyAtLevel) == 0x000004, "Wrong alignment on Overcharge_GetSkillCheckFailurePenaltyAtLevel");
static_assert(sizeof(Overcharge_GetSkillCheckFailurePenaltyAtLevel) == 0x000004, "Wrong size on Overcharge_GetSkillCheckFailurePenaltyAtLevel");
static_assert(offsetof(Overcharge_GetSkillCheckFailurePenaltyAtLevel, ReturnValue) == 0x000000, "Member 'Overcharge_GetSkillCheckFailurePenaltyAtLevel::ReturnValue' has a wrong offset!");

// Function TheDoctor.ShockTherapy.Cosmetic_OnShockTherapyChargeEnd
// 0x0010 (0x0010 - 0x0000)
struct ShockTherapy_Cosmetic_OnShockTherapyChargeEnd final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Charged;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ShockTherapy_Cosmetic_OnShockTherapyChargeEnd) == 0x000008, "Wrong alignment on ShockTherapy_Cosmetic_OnShockTherapyChargeEnd");
static_assert(sizeof(ShockTherapy_Cosmetic_OnShockTherapyChargeEnd) == 0x000010, "Wrong size on ShockTherapy_Cosmetic_OnShockTherapyChargeEnd");
static_assert(offsetof(ShockTherapy_Cosmetic_OnShockTherapyChargeEnd, Player) == 0x000000, "Member 'ShockTherapy_Cosmetic_OnShockTherapyChargeEnd::Player' has a wrong offset!");
static_assert(offsetof(ShockTherapy_Cosmetic_OnShockTherapyChargeEnd, Charged) == 0x000008, "Member 'ShockTherapy_Cosmetic_OnShockTherapyChargeEnd::Charged' has a wrong offset!");

// Function TheDoctor.ShockTherapy.Multicast_ActivateShockTherapyAOE
// 0x0060 (0x0060 - 0x0000)
struct ShockTherapy_Multicast_ActivateShockTherapyAOE final
{
public:
	struct FTransform                             ShockTherapyZoneTransform;                         // 0x0000(0x0060)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShockTherapy_Multicast_ActivateShockTherapyAOE) == 0x000010, "Wrong alignment on ShockTherapy_Multicast_ActivateShockTherapyAOE");
static_assert(sizeof(ShockTherapy_Multicast_ActivateShockTherapyAOE) == 0x000060, "Wrong size on ShockTherapy_Multicast_ActivateShockTherapyAOE");
static_assert(offsetof(ShockTherapy_Multicast_ActivateShockTherapyAOE, ShockTherapyZoneTransform) == 0x000000, "Member 'ShockTherapy_Multicast_ActivateShockTherapyAOE::ShockTherapyZoneTransform' has a wrong offset!");

// Function TheDoctor.ShockTherapy.Multicast_DetonateShockTherapy
// 0x0018 (0x0018 - 0x0000)
struct ShockTherapy_Multicast_DetonateShockTherapy final
{
public:
	TArray<class ACamperPlayer*>                  ShockedSurvivors;                                  // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         MadnessToAdd;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ShockTherapy_Multicast_DetonateShockTherapy) == 0x000008, "Wrong alignment on ShockTherapy_Multicast_DetonateShockTherapy");
static_assert(sizeof(ShockTherapy_Multicast_DetonateShockTherapy) == 0x000018, "Wrong size on ShockTherapy_Multicast_DetonateShockTherapy");
static_assert(offsetof(ShockTherapy_Multicast_DetonateShockTherapy, ShockedSurvivors) == 0x000000, "Member 'ShockTherapy_Multicast_DetonateShockTherapy::ShockedSurvivors' has a wrong offset!");
static_assert(offsetof(ShockTherapy_Multicast_DetonateShockTherapy, MadnessToAdd) == 0x000010, "Member 'ShockTherapy_Multicast_DetonateShockTherapy::MadnessToAdd' has a wrong offset!");

// Function TheDoctor.ShockTherapyAOEPreview.SetAttackZonePreviewScale
// 0x0018 (0x0018 - 0x0000)
struct ShockTherapyAOEPreview_SetAttackZonePreviewScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ShockTherapyAOEPreview_SetAttackZonePreviewScale) == 0x000008, "Wrong alignment on ShockTherapyAOEPreview_SetAttackZonePreviewScale");
static_assert(sizeof(ShockTherapyAOEPreview_SetAttackZonePreviewScale) == 0x000018, "Wrong size on ShockTherapyAOEPreview_SetAttackZonePreviewScale");
static_assert(offsetof(ShockTherapyAOEPreview_SetAttackZonePreviewScale, Scale) == 0x000000, "Member 'ShockTherapyAOEPreview_SetAttackZonePreviewScale::Scale' has a wrong offset!");

// Function TheDoctor.SnapOutOfIt.Authority_OnSkillCheckResponseAuthority
// 0x0018 (0x0018 - 0x0000)
struct SnapOutOfIt_Authority_OnSkillCheckResponseAuthority final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Bonus;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADBDPlayer*                             Player;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerLoudNoise;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillCheckCustomType                         Type;                                              // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority) == 0x000008, "Wrong alignment on SnapOutOfIt_Authority_OnSkillCheckResponseAuthority");
static_assert(sizeof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority) == 0x000018, "Wrong size on SnapOutOfIt_Authority_OnSkillCheckResponseAuthority");
static_assert(offsetof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority, Success) == 0x000000, "Member 'SnapOutOfIt_Authority_OnSkillCheckResponseAuthority::Success' has a wrong offset!");
static_assert(offsetof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority, Bonus) == 0x000001, "Member 'SnapOutOfIt_Authority_OnSkillCheckResponseAuthority::Bonus' has a wrong offset!");
static_assert(offsetof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority, Player) == 0x000008, "Member 'SnapOutOfIt_Authority_OnSkillCheckResponseAuthority::Player' has a wrong offset!");
static_assert(offsetof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority, TriggerLoudNoise) == 0x000010, "Member 'SnapOutOfIt_Authority_OnSkillCheckResponseAuthority::TriggerLoudNoise' has a wrong offset!");
static_assert(offsetof(SnapOutOfIt_Authority_OnSkillCheckResponseAuthority, Type) == 0x000011, "Member 'SnapOutOfIt_Authority_OnSkillCheckResponseAuthority::Type' has a wrong offset!");

// Function TheDoctor.StaticBlast.Cosmetic_OnStaticBlastChargeEnd
// 0x0010 (0x0010 - 0x0000)
struct StaticBlast_Cosmetic_OnStaticBlastChargeEnd final
{
public:
	class ADBDPlayer*                             Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Charged;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StaticBlast_Cosmetic_OnStaticBlastChargeEnd) == 0x000008, "Wrong alignment on StaticBlast_Cosmetic_OnStaticBlastChargeEnd");
static_assert(sizeof(StaticBlast_Cosmetic_OnStaticBlastChargeEnd) == 0x000010, "Wrong size on StaticBlast_Cosmetic_OnStaticBlastChargeEnd");
static_assert(offsetof(StaticBlast_Cosmetic_OnStaticBlastChargeEnd, Player) == 0x000000, "Member 'StaticBlast_Cosmetic_OnStaticBlastChargeEnd::Player' has a wrong offset!");
static_assert(offsetof(StaticBlast_Cosmetic_OnStaticBlastChargeEnd, Charged) == 0x000008, "Member 'StaticBlast_Cosmetic_OnStaticBlastChargeEnd::Charged' has a wrong offset!");

// Function TheDoctor.StaticBlast.Multicast_StaticBlastShockSurvivors
// 0x0010 (0x0010 - 0x0000)
struct StaticBlast_Multicast_StaticBlastShockSurvivors final
{
public:
	TArray<class ACamperPlayer*>                  SurvivorsToShock;                                  // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StaticBlast_Multicast_StaticBlastShockSurvivors) == 0x000008, "Wrong alignment on StaticBlast_Multicast_StaticBlastShockSurvivors");
static_assert(sizeof(StaticBlast_Multicast_StaticBlastShockSurvivors) == 0x000010, "Wrong size on StaticBlast_Multicast_StaticBlastShockSurvivors");
static_assert(offsetof(StaticBlast_Multicast_StaticBlastShockSurvivors, SurvivorsToShock) == 0x000000, "Member 'StaticBlast_Multicast_StaticBlastShockSurvivors::SurvivorsToShock' has a wrong offset!");

// Function TheDoctor.SurvivorMadnessEffect.Authority_AddMadness
// 0x0004 (0x0004 - 0x0000)
struct SurvivorMadnessEffect_Authority_AddMadness final
{
public:
	float                                         AmountToAdd;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorMadnessEffect_Authority_AddMadness) == 0x000004, "Wrong alignment on SurvivorMadnessEffect_Authority_AddMadness");
static_assert(sizeof(SurvivorMadnessEffect_Authority_AddMadness) == 0x000004, "Wrong size on SurvivorMadnessEffect_Authority_AddMadness");
static_assert(offsetof(SurvivorMadnessEffect_Authority_AddMadness, AmountToAdd) == 0x000000, "Member 'SurvivorMadnessEffect_Authority_AddMadness::AmountToAdd' has a wrong offset!");

// Function TheDoctor.SurvivorMadnessEffect.Multicast_OnMadnessTierChanged
// 0x0008 (0x0008 - 0x0000)
struct SurvivorMadnessEffect_Multicast_OnMadnessTierChanged final
{
public:
	int32                                         NewMadnessTier;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldMadnessTier;                                    // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorMadnessEffect_Multicast_OnMadnessTierChanged) == 0x000004, "Wrong alignment on SurvivorMadnessEffect_Multicast_OnMadnessTierChanged");
static_assert(sizeof(SurvivorMadnessEffect_Multicast_OnMadnessTierChanged) == 0x000008, "Wrong size on SurvivorMadnessEffect_Multicast_OnMadnessTierChanged");
static_assert(offsetof(SurvivorMadnessEffect_Multicast_OnMadnessTierChanged, NewMadnessTier) == 0x000000, "Member 'SurvivorMadnessEffect_Multicast_OnMadnessTierChanged::NewMadnessTier' has a wrong offset!");
static_assert(offsetof(SurvivorMadnessEffect_Multicast_OnMadnessTierChanged, OldMadnessTier) == 0x000004, "Member 'SurvivorMadnessEffect_Multicast_OnMadnessTierChanged::OldMadnessTier' has a wrong offset!");

// Function TheDoctor.SurvivorMadnessEffect.GetMadnessTier
// 0x0004 (0x0004 - 0x0000)
struct SurvivorMadnessEffect_GetMadnessTier final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SurvivorMadnessEffect_GetMadnessTier) == 0x000004, "Wrong alignment on SurvivorMadnessEffect_GetMadnessTier");
static_assert(sizeof(SurvivorMadnessEffect_GetMadnessTier) == 0x000004, "Wrong size on SurvivorMadnessEffect_GetMadnessTier");
static_assert(offsetof(SurvivorMadnessEffect_GetMadnessTier, ReturnValue) == 0x000000, "Member 'SurvivorMadnessEffect_GetMadnessTier::ReturnValue' has a wrong offset!");

// Function TheDoctor.TheDoctorUtilities.CanGainInsanity
// 0x0010 (0x0010 - 0x0000)
struct TheDoctorUtilities_CanGainInsanity final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheDoctorUtilities_CanGainInsanity) == 0x000008, "Wrong alignment on TheDoctorUtilities_CanGainInsanity");
static_assert(sizeof(TheDoctorUtilities_CanGainInsanity) == 0x000010, "Wrong size on TheDoctorUtilities_CanGainInsanity");
static_assert(offsetof(TheDoctorUtilities_CanGainInsanity, Player) == 0x000000, "Member 'TheDoctorUtilities_CanGainInsanity::Player' has a wrong offset!");
static_assert(offsetof(TheDoctorUtilities_CanGainInsanity, ReturnValue) == 0x000008, "Member 'TheDoctorUtilities_CanGainInsanity::ReturnValue' has a wrong offset!");

// Function TheDoctor.TheDoctorUtilities.GetMadnessTier
// 0x0010 (0x0010 - 0x0000)
struct TheDoctorUtilities_GetMadnessTier final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheDoctorUtilities_GetMadnessTier) == 0x000008, "Wrong alignment on TheDoctorUtilities_GetMadnessTier");
static_assert(sizeof(TheDoctorUtilities_GetMadnessTier) == 0x000010, "Wrong size on TheDoctorUtilities_GetMadnessTier");
static_assert(offsetof(TheDoctorUtilities_GetMadnessTier, Player) == 0x000000, "Member 'TheDoctorUtilities_GetMadnessTier::Player' has a wrong offset!");
static_assert(offsetof(TheDoctorUtilities_GetMadnessTier, ReturnValue) == 0x000008, "Member 'TheDoctorUtilities_GetMadnessTier::ReturnValue' has a wrong offset!");

// Function TheDoctor.TheDoctorUtilities.GetSurvivorMadnessEffect
// 0x0010 (0x0010 - 0x0000)
struct TheDoctorUtilities_GetSurvivorMadnessEffect final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USurvivorMadnessEffect*                 ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TheDoctorUtilities_GetSurvivorMadnessEffect) == 0x000008, "Wrong alignment on TheDoctorUtilities_GetSurvivorMadnessEffect");
static_assert(sizeof(TheDoctorUtilities_GetSurvivorMadnessEffect) == 0x000010, "Wrong size on TheDoctorUtilities_GetSurvivorMadnessEffect");
static_assert(offsetof(TheDoctorUtilities_GetSurvivorMadnessEffect, Player) == 0x000000, "Member 'TheDoctorUtilities_GetSurvivorMadnessEffect::Player' has a wrong offset!");
static_assert(offsetof(TheDoctorUtilities_GetSurvivorMadnessEffect, ReturnValue) == 0x000008, "Member 'TheDoctorUtilities_GetSurvivorMadnessEffect::ReturnValue' has a wrong offset!");

// Function TheDoctor.TheDoctorUtilities.IsTotallyInsane
// 0x0010 (0x0010 - 0x0000)
struct TheDoctorUtilities_IsTotallyInsane final
{
public:
	const class ADBDPlayer*                       Player;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TheDoctorUtilities_IsTotallyInsane) == 0x000008, "Wrong alignment on TheDoctorUtilities_IsTotallyInsane");
static_assert(sizeof(TheDoctorUtilities_IsTotallyInsane) == 0x000010, "Wrong size on TheDoctorUtilities_IsTotallyInsane");
static_assert(offsetof(TheDoctorUtilities_IsTotallyInsane, Player) == 0x000000, "Member 'TheDoctorUtilities_IsTotallyInsane::Player' has a wrong offset!");
static_assert(offsetof(TheDoctorUtilities_IsTotallyInsane, ReturnValue) == 0x000008, "Member 'TheDoctorUtilities_IsTotallyInsane::ReturnValue' has a wrong offset!");

}

