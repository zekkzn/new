#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_K20

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "DBDUIViewInterfaces_structs.hpp"


namespace SDK::Params
{

// Function WBP_K20.WBP_K20_C.SetKillerData
// 0x0098 (0x0098 - 0x0000)
struct WBP_K20_C_SetKillerData final
{
public:
	struct FPlayerStatusViewData                  Data;                                              // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_K20_C_SetKillerData) == 0x000008, "Wrong alignment on WBP_K20_C_SetKillerData");
static_assert(sizeof(WBP_K20_C_SetKillerData) == 0x000098, "Wrong size on WBP_K20_C_SetKillerData");
static_assert(offsetof(WBP_K20_C_SetKillerData, Data) == 0x000000, "Member 'WBP_K20_C_SetKillerData::Data' has a wrong offset!");

// Function WBP_K20.WBP_K20_C.SetExecutionerVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_K20_C_SetExecutionerVisibility final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K20_C_SetExecutionerVisibility) == 0x000001, "Wrong alignment on WBP_K20_C_SetExecutionerVisibility");
static_assert(sizeof(WBP_K20_C_SetExecutionerVisibility) == 0x000005, "Wrong size on WBP_K20_C_SetExecutionerVisibility");
static_assert(offsetof(WBP_K20_C_SetExecutionerVisibility, Param_IsVisible) == 0x000000, "Member 'WBP_K20_C_SetExecutionerVisibility::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_K20_C_SetExecutionerVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_K20_C_SetExecutionerVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_K20_C_SetExecutionerVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_K20_C_SetExecutionerVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_K20.WBP_K20_C.SetExecutionerData
// 0x0018 (0x0018 - 0x0000)
struct WBP_K20_C_SetExecutionerData final
{
public:
	class UExecutionerStatusData*                 KillerData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          StateChange;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K20_C_SetExecutionerData) == 0x000008, "Wrong alignment on WBP_K20_C_SetExecutionerData");
static_assert(sizeof(WBP_K20_C_SetExecutionerData) == 0x000018, "Wrong size on WBP_K20_C_SetExecutionerData");
static_assert(offsetof(WBP_K20_C_SetExecutionerData, KillerData) == 0x000000, "Member 'WBP_K20_C_SetExecutionerData::KillerData' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerData, StateChange) == 0x000008, "Member 'WBP_K20_C_SetExecutionerData::StateChange' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerData, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'WBP_K20_C_SetExecutionerData::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerData, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'WBP_K20_C_SetExecutionerData::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_SetExecutionerData, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_K20_C_SetExecutionerData::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_K20.WBP_K20_C.ExecuteUbergraph_WBP_K20
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_K20_C_ExecuteUbergraph_WBP_K20 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerStatusViewData                  K2Node_Event_data;                                 // 0x0008(0x0098)(ConstParm)
	class UExecutionerStatusData*                 K2Node_DynamicCast_AsExecutioner_Status_Data;      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UExecutionerStatusData*                 CallFunc_SpawnObject_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_K20_C_ExecuteUbergraph_WBP_K20) == 0x000008, "Wrong alignment on WBP_K20_C_ExecuteUbergraph_WBP_K20");
static_assert(sizeof(WBP_K20_C_ExecuteUbergraph_WBP_K20) == 0x0000B8, "Wrong size on WBP_K20_C_ExecuteUbergraph_WBP_K20");
static_assert(offsetof(WBP_K20_C_ExecuteUbergraph_WBP_K20, EntryPoint) == 0x000000, "Member 'WBP_K20_C_ExecuteUbergraph_WBP_K20::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_ExecuteUbergraph_WBP_K20, K2Node_Event_data) == 0x000008, "Member 'WBP_K20_C_ExecuteUbergraph_WBP_K20::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_ExecuteUbergraph_WBP_K20, K2Node_DynamicCast_AsExecutioner_Status_Data) == 0x0000A0, "Member 'WBP_K20_C_ExecuteUbergraph_WBP_K20::K2Node_DynamicCast_AsExecutioner_Status_Data' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_ExecuteUbergraph_WBP_K20, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_K20_C_ExecuteUbergraph_WBP_K20::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_K20_C_ExecuteUbergraph_WBP_K20, CallFunc_SpawnObject_ReturnValue) == 0x0000B0, "Member 'WBP_K20_C_ExecuteUbergraph_WBP_K20::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

}

